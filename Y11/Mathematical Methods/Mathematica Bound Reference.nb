(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    929244,      19537]
NotebookOptionsPosition[    867611,      18515]
NotebookOutlinePosition[    868153,      18534]
CellTagsIndexPosition[    868110,      18531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[" Methods Bound Reference", "Title",
 CellChangeTimes->{{3.8847977592265573`*^9, 3.8847977677066784`*^9}, {
   3.8847984187094736`*^9, 3.8847984268047614`*^9}, {3.884983706303461*^9, 
   3.8849837118116508`*^9}, {3.8890353227209015`*^9, 
   3.8890353707541656`*^9}, {3.8890354704355745`*^9, 3.8890354742349534`*^9}, 
   3.892098560195339*^9},ExpressionUUID->"bf3f62ff-071c-40e8-957e-\
6654073ad6aa"],

Cell[CellGroupData[{

Cell["Usage Guide and Syntax", "Section",
 CellChangeTimes->{{3.889035502367718*^9, 
  3.8890355086527047`*^9}},ExpressionUUID->"b65f5c97-4158-416a-a0be-\
4bce61759dcf"],

Cell[CellGroupData[{

Cell["Syntax", "Subsection",
 CellChangeTimes->{{3.8847979820868607`*^9, 3.8847979834397078`*^9}, 
   3.884798105088069*^9},ExpressionUUID->"53799b5a-5086-4e9c-8cc4-\
79e82b55cf3e"],

Cell[TextData[{
 "Basic Operations + - * /\nShift+Enter to execute\nCtrl+/ for fraction - ",
 Cell[BoxData[
  FormBox[
   FractionBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "de7a9d0e-f84a-4701-9da1-a16d26dbd079"],
 "\na^b for exponents or ctrl+6 - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "83db3e23-918d-45fb-a265-fcb8971b719d"],
 "\nCapital letters for first letter of each word in a command\nSquare \
brackets surrounding the contents of a command\nDouble == for solving\nSingle \
= for defining variables\nSquare Root - crtl+2\nEscape -> deg -> Escape gives \
degree \[Degree]\nEscape then other things such as pi then escape for \
symbols. "
}], "Text",
 CellChangeTimes->{{3.8847979950628357`*^9, 3.8847979972583065`*^9}, 
   3.884798103422901*^9, {3.8849826488891783`*^9, 3.884982806640939*^9}, {
   3.8849841109010878`*^9, 3.884984129576795*^9}, {3.8852489194735637`*^9, 
   3.885248930221566*^9}, {3.886698466294701*^9, 
   3.8866985181604896`*^9}},ExpressionUUID->"f502a67b-09c5-40b6-b62c-\
5ca89b4a9932"]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebraic Commands", "Subsection",
 CellChangeTimes->{{3.8847978885005646`*^9, 3.8847979148039207`*^9}, {
  3.884797973526967*^9, 3.8847979758828115`*^9}, {3.8849815995225563`*^9, 
  3.884981604534984*^9}, {3.886721778026148*^9, 
  3.886721781132621*^9}},ExpressionUUID->"a2fb99b7-2871-4af1-905d-\
59cbf9324dc4"],

Cell[CellGroupData[{

Cell["Solve/SolveAlways / FindRoot / FindInstance", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849817311818748`*^9, {3.8849825850543766`*^9, 3.884982641818141*^9}, {
   3.8849828236560698`*^9, 3.8849828338954062`*^9}, {3.8849828785365567`*^9, 
   3.8849828958996663`*^9}, 3.8853368801552067`*^9, {3.887068772281933*^9, 
   3.887068778214839*^9}, {3.9011301980995393`*^9, 3.901130207096084*^9}, {
   3.9319368829504185`*^9, 
   3.9319368905040207`*^9}},ExpressionUUID->"6bd20e71-e811-4f4f-a3d1-\
0f88562c974f"],

Cell["\<\
Solves an equation or system of equations for it/s variable/s. \
Solve[LHS==RHS, variable]
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849817311818748`*^9, {3.8849825850543766`*^9, 3.884982641818141*^9}, {
   3.8849828236560698`*^9, 3.8849828338954062`*^9}, {3.8849828785365567`*^9, 
   3.8849828958996663`*^9}, 3.8853368801552067`*^9, {3.887068772281933*^9, 
   3.887068774475274*^9}},ExpressionUUID->"a2148367-7004-4ddb-a93c-\
63ab6250b961"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", "x"}], "+", "10"}], "==", "40"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8849829108110805`*^9, 3.884982928084865*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4889bbe2-b297-4470-8dad-60ff90f99d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "10"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849829311205654`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"36badadc-bed7-4cc0-8aee-652d8770812c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "==", 
      RowBox[{"15", "-", "x"}]}], ",", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "10"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852325369138126`*^9, 3.885232537710123*^9}, {
   3.8852329766978045`*^9, 3.885232988179308*^9}, {3.885233305536162*^9, 
   3.8852333195068083`*^9}, 3.8852334717648134`*^9, {3.886179853952256*^9, 
   3.8861798890451884`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"37b13f3b-2653-4c76-9c9f-3aba21db1958"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["5", "3"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["40", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886179889730319*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"865ac248-26ec-4628-b5c7-f9cf88d62516"]
}, Open  ]],

Cell["SolveAlways finds values of parameters so that lhs = rhs", "Text",
 CellChangeTimes->{{3.9011302400394197`*^9, 
  3.901130253081301*^9}},ExpressionUUID->"26d10100-bf78-485f-9034-\
26ef4efc0488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveAlways", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", 
     SuperscriptBox["x", "2"]}], "==", 
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9011302282880673`*^9, 3.90113023382498*^9}, {
  3.901130451139427*^9, 3.9011304902269773`*^9}, {3.931936958077336*^9, 
  3.9319369900558963`*^9}, {3.9319370225889945`*^9, 3.9319370226736217`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2f31cd20-6c76-4230-9a2d-a8250cec8cca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.931936969150485*^9, 3.931936990420435*^9}, 
   3.9319370229685493`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"c14848d3-7a4d-41f6-a3d9-51d026ba36b9"]
}, Open  ]],

Cell["When solve doesn\[CloseCurlyQuote]t work, use findinstance", "Text",
 CellChangeTimes->{{3.9265484985104437`*^9, 
  3.9265485073434706`*^9}},ExpressionUUID->"5a213a4d-44bf-42b4-a039-\
4480750c67ac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", "0.1"}], " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "4"}]]}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", "0.1"}], " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "4"}]]}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.926548512717564*^9, 3.9265485535759974`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"bfad1bc8-c4b5-42f5-a4a2-103bd048e31d"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.9265485310886335`*^9, {3.926548568489662*^9, 3.9265485994426327`*^9}, 
   3.926548630296968*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"49c18b8c-c8e7-4643-a679-25e9b9e81b98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "0.0004578908921716661`"}], "-", 
     RowBox[{"1.3944496615494408`*^-17", " ", "\[ImaginaryI]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9265485310886335`*^9, {3.926548568489662*^9, 3.9265485994426327`*^9}, 
   3.92654863045321*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"b96b8e7c-e603-47db-a1fd-0bddcc14eb07"]
}, Open  ]],

Cell["FindRoot good if you have an initial estimate", "Text",
 CellChangeTimes->{{3.9319369441711664`*^9, 
  3.931936953103883*^9}},ExpressionUUID->"e272b757-66fc-4767-81b0-\
1efdaeaa5be2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "5"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", "3"}], ")"}], 
     RowBox[{"Cos", "[", "x", "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}], 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931936907848033*^9, 3.931936936228437*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"755ab690-15de-49a6-80fd-0c85408e4bf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "3.4886109309384037`"}], "}"}]], "Output",
 CellChangeTimes->{3.9319369378049283`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"bfbf2cc0-ffed-43bd-a188-43d50a11ab50"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reals", "Subsubsection",
 CellChangeTimes->{{3.8849936950767026`*^9, 3.8849937310074053`*^9}, {
  3.8870687949518986`*^9, 
  3.887068805077388*^9}},ExpressionUUID->"88419862-3a76-4db8-aa92-\
3bb964f892bc"],

Cell["\<\
Add on to solve to limits solutions to real numbers only.
e.g.
Without Reals\
\>", "Text",
 CellChangeTimes->{{3.8849936950767026`*^9, 3.8849937310074053`*^9}, {
  3.8870687949518986`*^9, 
  3.8870688003505707`*^9}},ExpressionUUID->"69eb115a-9b3c-44ea-b9d5-\
4c2f66b7971f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", "x"], "==", "4"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.884993741160771*^9, 3.884993766010277*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"de99d67a-5bb7-44e6-8ffc-6d4e2b91aef0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    TemplateBox[{
      RowBox[{
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], 
         RowBox[{"Log", "[", "2", "]"}]], "+", 
        FractionBox[
         RowBox[{"Log", "[", "4", "]"}], 
         RowBox[{"Log", "[", "2", "]"}]]}], 
      RowBox[{
        TemplateBox[{"1"}, "C"], "\[Element]", 
        TemplateBox[{}, "Integers"]}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849937665598803`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a1f6f2d0-9339-41e7-94ac-90afd091a514"]
}, Open  ]],

Cell["With Reals", "Text",
 CellChangeTimes->{{3.884993790213231*^9, 
  3.8849937917806*^9}},ExpressionUUID->"03deee98-44fb-421f-a03c-ab313fc20c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", "x"], "==", "4"}], ",", "x", ",", " ", "Reals"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884993800818676*^9, 3.8849938228663545`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6e4ebbdd-ce4d-43bb-a9d5-94b5f41f758d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849938239281387`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"7503754f-df29-42b0-96a5-c0fd48ea2f2f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simplify  / Full Simplify", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884981736298419*^9, {3.8849837289659624`*^9, 3.8849837420028*^9}, {
   3.8849839825790777`*^9, 3.884984015929104*^9}, {3.8870688273726273`*^9, 
   3.887068849265868*^9}, {3.9319368786549487`*^9, 
   3.9319368814591813`*^9}},ExpressionUUID->"a92087f8-8549-4e46-8947-\
7fc7a07013de"],

Cell["\<\
Changes an expression to a more simple form, usually collecting like terms \
and taking out common factors
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884981736298419*^9, {3.8849837289659624`*^9, 3.8849837420028*^9}, {
   3.8849839825790777`*^9, 3.884984015929104*^9}, {3.8870688273726273`*^9, 
   3.887068828725691*^9}},ExpressionUUID->"2f5d9e8b-893e-49ff-97ee-\
ca7ed0b2a54c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884983816330469*^9, 3.884983830787821*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"10332cf6-3a8b-4cda-b639-da409c53aca9"],

Cell[BoxData[
 RowBox[{
  FractionBox["7", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8849839673250656`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5bedd143-b18c-4423-98f1-6401c708e7a0"]
}, Open  ]],

Cell["\<\
FullSimplify - Similar to simplify but sometimes goes further to make it \
possible more simple.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825671844263`*^9, {3.884984020586495*^9, 3.884984073871112*^9}, {
   3.8849926716945252`*^9, 
   3.884992673074299*^9}},ExpressionUUID->"db944fb9-dddd-496a-b1b0-\
4de89267cabc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884984048859175*^9, 3.8849840529397106`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0c7dc6b5-9d73-4a11-bcb5-22daf5530082"],

Cell[BoxData[
 RowBox[{
  FractionBox["7", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "x"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8849840535417986`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a19541b3-8fdd-4544-bd7c-b1a57a8ff17e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expand  ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825696977453`*^9, {3.884992697880679*^9, 3.884992724566984*^9}, {
   3.887068859230013*^9, 
   3.8870688652695484`*^9}},ExpressionUUID->"824687f3-d4db-4b68-b5bb-\
0b83850c9393"],

Cell["\<\
Expands out any brackets then collects like terms.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825696977453`*^9, {3.884992697880679*^9, 3.884992724566984*^9}, {
   3.887068859230013*^9, 
   3.887068860315713*^9}},ExpressionUUID->"25286814-ef1c-4e33-ab2b-\
fb2f8a328ac5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884992726769435*^9, 3.8849927328048744`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5624c4f0-4e2c-44a6-afe8-b8a68cb5ca68"],

Cell[BoxData[
 RowBox[{"14", "-", 
  RowBox[{"7", " ", "x"}], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["x", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.884992734525873*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ce094a95-aa6c-4d9e-aa15-6fb982f04088"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reduce ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884982571337373*^9, {3.88499282614894*^9, 3.8849928510652795`*^9}, {
   3.88706888247943*^9, 
   3.8870688869930286`*^9}},ExpressionUUID->"0e49ae3f-5e45-4d5e-9f34-\
b731761f05c8"],

Cell["\<\
Reduces the statement to solve inequalities and find domains.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884982571337373*^9, {3.88499282614894*^9, 3.8849928510652795`*^9}, {
   3.88706888247943*^9, 
   3.887068883994392*^9}},ExpressionUUID->"0c5023ed-bb40-45ba-a874-\
a65ebca74bf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", "x"}], "-", "1"}], ">", "11"}], "]"}]], "Input",
 CellChangeTimes->{{3.884992853288394*^9, 3.8849928740957756`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a7897161-4516-4a38-a5a0-5c0d4bce2f61"],

Cell[BoxData[
 RowBox[{"x", ">", "3"}]], "Output",
 CellChangeTimes->{{3.8849928653319693`*^9, 3.884992874798915*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"11fa8841-4a1c-47c6-9468-b8b853f21b53"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Clear ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, {3.884992899120445*^9, 3.884992943520293*^9}, {
   3.887068891742505*^9, 
   3.887068896913669*^9}},ExpressionUUID->"40213687-5c14-43f3-817c-\
c950d1f9a08a"],

Cell["\<\
Clears the variable within the square brackets if that variable has been \
defined
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, {3.884992899120445*^9, 3.884992943520293*^9}, {
   3.887068891742505*^9, 
   3.887068893317236*^9}},ExpressionUUID->"33a18c5d-3fff-4ca1-b23a-\
8676ef2dde51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "2"}]], "Input",
 CellChangeTimes->{{3.8849929546344748`*^9, 3.884992959664875*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"48d69986-423e-4fdc-ae07-23b17f15d569"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.884992960437477*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7a97b750-116d-4e59-8490-9543fac89884"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.8849929629150686`*^9, 3.8849929759902945`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"56feb70d-e61a-47fa-9a0a-6a1f0ff0046c"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8849929764940815`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5ade36a2-ab30-4f64-9f78-fce3a001e9c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.8849929794449368`*^9, 3.884992988763646*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1d546958-3bac-4ab0-8319-ed33b1d0b798"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.884993000261648*^9, 3.8849930013775167`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a22fd709-0172-40e4-a082-626a6c55c1b5"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.8849930034215155`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6afbd1bb-8df3-47ad-aba2-7ed52526b117"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clears", " ", "All"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.892098592714657*^9, 3.8920986000997243`*^9}, {
  3.892139948724556*^9, 3.8921399578642707`*^9}, {3.899939032703908*^9, 
  3.8999390344431763`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"10cdaa4a-18fc-46fd-8ee5-d50954965471"]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining a function", "Subsubsection",
 CellChangeTimes->{{3.8861800794145107`*^9, 3.8861800951598825`*^9}, {
  3.886180148754488*^9, 3.886180171555252*^9}, {3.886180459253895*^9, 
  3.88618045976757*^9}, {3.8870689200975227`*^9, 
  3.887068934350787*^9}},ExpressionUUID->"3ace38f1-632a-4bb1-a979-\
63fa05e24636"],

Cell["\<\
Defines the function, in this case f. Can be used for plotting, solving or \
other things. \
\>", "Text",
 CellChangeTimes->{{3.8861800794145107`*^9, 3.8861800951598825`*^9}, {
  3.886180148754488*^9, 3.886180171555252*^9}, {3.886180459253895*^9, 
  3.88618045976757*^9}, {3.8870689200975227`*^9, 
  3.8870689254126296`*^9}},ExpressionUUID->"1bd66e65-8316-4f18-8efd-\
19572abb2a26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "x"}], "-", "3"}]}]], "Input",
 CellChangeTimes->{{3.8854852947135296`*^9, 3.8854852994700003`*^9}, {
  3.8854856045101275`*^9, 3.885485607090886*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"ea648de7-ff3f-439c-b3f3-609c88547246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8854856222803326`*^9, 3.8854856230653744`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"e5c97a6e-ed33-461b-80c1-95f906c94e9b"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.8861801072493315`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"9a5cea25-75b4-4a70-ac18-08406512e16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8854856265647287`*^9, 3.8854856312129936`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"fa8f79e6-3878-4182-b1d2-22a781b033f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "+", 
  RowBox[{"4", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.8861801103939533`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b0b9f00f-2eaa-452d-8301-1241391b32f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.885485754218193*^9, 3.8854857582039995`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"4b38ca4d-a1a1-4d47-860e-48f7ceb15401"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["3", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886180198251274*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"d18eca52-30fc-4fb3-9f5a-5a8531882087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8854857601018715`*^9, 3.8854857702515535`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f6e672a8-d56f-41a6-b3e4-122243c55d8c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf9kNokQO7pmq4vgh7uz9P1UtwV6jwAYOXN7/o
z32236fK7K/3csEDLrtuc/4Ne7B/4rsyp/2iAgcKVq7/ISh8eX/MK+26I0d4
DoSlKS+8VLNzf6qZkNbZ6ZwHjp+52WUcvMPeJDno+JkqtgNWugc3BUy/bL9p
i/9lbSnmA0xlondSJB/Y/+t8pTz72f/97DwBjUnvntn//Ly+bq7gz/3ND645
Fy1+a18rr7mnN+bT/g2z2wLqPn20d5j4dC+b2Yv9+YtSBJ6EfbXveHOr5r7H
1f1xWbNk2xt/2B/w9t382GCDfWdgmaXxnN/2Hj2bTs98eMeeRWTqs/pf/+wF
AkJm/X/52v766dYPLfyMDjH64oeE7b7Yh1Ynmc06zOQQ8rbzZgbfb/sc7tdK
56JYHG6IXXOds5XBQX71sWlsr1gd7MJ6dXmvMDtU73AO5p/N7vCtoH2ZnBm7
Q8GynG1m+pwOD3xu5uTGcTnwMJkn6T3lcpBgyTsSc4rXwTU3ZKrWZB4oLeAg
sVM231WFD0oLOUwq6phocJ0fSgs7QOJFAEqLOAAAA0W/vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$12306#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.9999997959183675`, 4.9999997959183675`}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8861801999109926`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"b1bd3338-3365-40ad-9ab6-88cb53864be2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.8861804808492193`*^9, 3.886180482700224*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"3aa05163-c967-4bba-8114-fc1f9960c711"]
}, Closed]],

Cell[CellGroupData[{

Cell["Breaking fractions apart", "Subsubsection",
 CellChangeTimes->{{3.8945645773428288`*^9, 3.8945645820119133`*^9}, {
  3.894564621352712*^9, 
  3.894564625784216*^9}},ExpressionUUID->"3e592ed0-8933-42e6-8b7b-\
818ce0ee30a8"],

Cell["Separating and simplifying fractions", "Text",
 CellChangeTimes->{{3.894564682635897*^9, 
  3.8945647008343296`*^9}},ExpressionUUID->"c1c74f16-947f-4a84-bbaa-\
eb57942cbb53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"3", "y"}], "-", "1"}]]}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.8945646431293745`*^9, 3.8945646633354063`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d4850ffb-3487-4009-8302-5de59e8c45b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{"2", "+", "x"}], 
     RowBox[{"3", " ", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.894564671261834*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"da963a4b-df03-482f-8e9a-0a1f630b0a0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     FractionBox["2", 
      RowBox[{
       RowBox[{"3", "y"}], "-", "1"}]]}], ",", "y"}], "]"}], "//", 
  "Apart"}]], "Input",
 CellChangeTimes->{{3.894564706070572*^9, 3.8945647084424706`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"24d28d5e-cc5b-4f27-84f6-b0551c910e84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["1", "3"], "+", 
     FractionBox["2", 
      RowBox[{"3", " ", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8945647088192186`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7cf97288-86fd-4af1-8ec9-7fd3a06bb66a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphing Commands", "Subsection",
 CellChangeTimes->{{3.8867216039247627`*^9, 
  3.886721606614643*^9}},ExpressionUUID->"be3916cd-60b3-424f-9ddd-\
f0a839a00bc8"],

Cell[CellGroupData[{

Cell["Plot ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, 3.884992899120445*^9, {3.8849930624146185`*^9, 
   3.8849930903807917`*^9}, {3.8849931236425223`*^9, 3.884993127339635*^9}, {
   3.8849932032973523`*^9, 3.8849932823239884`*^9}, {3.8870689819819536`*^9, 
   3.887069008684623*^9}},ExpressionUUID->"f082f1de-2211-4269-a373-\
96d3154c4b8a"],

Cell[TextData[{
 "Plots the graph of y=__: Plot[RHS, {variable (x), lowest value to display, \
highest value to display}]\ne.g. To plot the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "e8e0f7b1-752a-4bf6-97ea-c3f58828b104"]
}], "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, 3.884992899120445*^9, {3.8849930624146185`*^9, 
   3.8849930903807917`*^9}, {3.8849931236425223`*^9, 3.884993127339635*^9}, {
   3.8849932032973523`*^9, 3.8849932823239884`*^9}, {3.8870689819819536`*^9, 
   3.887068983446745*^9}},ExpressionUUID->"f0076813-9c3c-409d-ae1b-\
5439806662c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8849934347638335`*^9, 3.8849934496787443`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e015b7d4-e35a-4bf0-912a-c8f83ee9b290"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
f/UFhZxXp5HR//Uh6P/7kP8BcSByBQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$10614#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 99.99999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8849934520735273`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9e6a867e-7d9b-4e8d-8764-fdda61edc0e5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotRange ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, {
   3.884993464326903*^9, 3.8849935136511073`*^9}, {3.8849935641016645`*^9, 
   3.8849935707618637`*^9}, {3.887068986188518*^9, 3.88706898703603*^9}, 
   3.887069018861909*^9},ExpressionUUID->"33b6dd24-a380-4a4d-b60b-\
073cb04e4c68"],

Cell["\<\
Add on to Plot to choose what y-values to display
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, {
  3.884993464326903*^9, 3.8849935136511073`*^9}, {3.8849935641016645`*^9, 
  3.8849935707618637`*^9}, {3.887068986188518*^9, 
  3.88706898703603*^9}},ExpressionUUID->"4208e532-b513-4856-b2a4-\
d3fd21af3913"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "30"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8849934210670257`*^9, 3.884993421563891*^9}, {
  3.8849935202679214`*^9, 3.884993555321372*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cc4e39f5-ac22-4c51-8b59-eaa67dc6e1ed"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
emEe98+DaJrC3JEyuhn9///7HzpOAbw=
       "]]},
     Annotation[#, "Charting`Private`Tag$11114#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-30., 30.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.884993557640934*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c35695ff-1957-44fb-bcba-f051745e2c43"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ContourPlot ", "Subsubsection",
 CellChangeTimes->{{3.885248373693714*^9, 3.885248381138712*^9}, {
   3.885248412230218*^9, 3.8852484239579506`*^9}, {3.885248517259935*^9, 
   3.8852485256379175`*^9}, {3.8870689917387094`*^9, 3.8870689926211834`*^9}, 
   3.8870690267620564`*^9},ExpressionUUID->"731c5577-0794-4eea-a005-\
f0567f83b0c8"],

Cell["\<\
Can plot any relation \
ContourPlot[LHS==RHS,{x,xmin,xmax},{y,ymin,ymax},Axes->True, Frame->False]
e.g.\
\>", "Text",
 CellChangeTimes->{{3.885248373693714*^9, 3.885248381138712*^9}, {
  3.885248412230218*^9, 3.8852484239579506`*^9}, {3.885248517259935*^9, 
  3.8852485256379175`*^9}, {3.8870689917387094`*^9, 
  3.8870689926211834`*^9}},ExpressionUUID->"da041977-6295-4580-86cf-\
26767c222327"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852484201082544`*^9, 3.885248507551423*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a259022c-bf2b-4a21-9ba2-be047eb4f99b"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885248513997242*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fad4144e-167c-433b-9565-c24e352c2ade"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AspectRatio ", "Subsubsection",
 CellChangeTimes->{{3.8852491359726567`*^9, 3.885249164580577*^9}, {
   3.887068995400653*^9, 3.8870689963736305`*^9}, 
   3.8870712385979867`*^9},ExpressionUUID->"c45b2c15-3604-43c5-80d4-\
24219fb41269"],

Cell["\<\
Use to chose the aspect ratio of a graph.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.8852491359726567`*^9, 3.885249164580577*^9}, {
  3.887068995400653*^9, 
  3.8870689963736305`*^9}},ExpressionUUID->"ac3802b5-0d8a-4cdf-b870-\
62cd46e7ef37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    SqrtBox[
     RowBox[{"8", "-", 
      SuperscriptBox["x", "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"14343b19-e5ff-43bd-9dbb-0977a19ece4d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/wFhsD9e
       "]]},
     Annotation[#, "Charting`Private`Tag$22015#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.828334362058351, 2.8283074717772876`}, {-1., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885249168169199*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1744e616-12aa-4121-976b-c0d6fface474"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate ", "Subsubsection",
 CellChangeTimes->{{3.885249416482438*^9, 3.8852494256880083`*^9}, {
   3.885249905343692*^9, 3.8852499128948283`*^9}, 3.8852500098533244`*^9, {
   3.885258407250436*^9, 3.88525841966006*^9}, {3.8870689987584352`*^9, 
   3.887068999561429*^9}, 
   3.8870712466086283`*^9},ExpressionUUID->"0274ff43-971c-4222-bd4a-\
b7569051ee4c"],

Cell["\<\
Goes around another function to add a slider for a variable.
e.g. in a graph\
\>", "Text",
 CellChangeTimes->{{3.885249416482438*^9, 3.8852494256880083`*^9}, {
   3.885249905343692*^9, 3.8852499128948283`*^9}, 3.8852500098533244`*^9, {
   3.885258407250436*^9, 3.88525841966006*^9}, {3.8870689987584352`*^9, 
   3.887068999561429*^9}},ExpressionUUID->"1a9a9b75-1ca8-45e2-94e2-\
f71b75f0e1ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SqrtBox["x"], "-", 
        FractionBox["1", "4"]}], ",", 
       RowBox[{"x", "+", "k"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"c60aeda9-75aa-4b75-b45a-887e329afcdd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -1.04, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -5, 5}}, Typeset`size$$ = {
    360., {114., 119.04607696121224`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{Sqrt[$CellContext`x] - 1/
         4, $CellContext`x + $CellContext`k$$}, {$CellContext`x, -5, 5}, 
        PlotRange -> {-4, 4}], 
      "Specifications" :> {{$CellContext`k$$, -5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{802., {145.134033203125, 150.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8852584263871837`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"578c8b16-8314-4c17-9c4b-59b280d6a3f9"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trigonometric Commands", "Subsection",
 CellChangeTimes->{{3.8867218034896755`*^9, 
  3.8867218076929855`*^9}},ExpressionUUID->"78b28e05-6202-44bc-9fa4-\
e5a70079d865"],

Cell[CellGroupData[{

Cell["Trig Ratios ", "Subsubsection",
 CellChangeTimes->{{3.8866987139889483`*^9, 3.886698765942551*^9}, {
  3.8866988688795166`*^9, 3.886698876396013*^9}, {3.8866990176580715`*^9, 
  3.8866990178194685`*^9}, {3.887071282904318*^9, 
  3.8870712889616365`*^9}},ExpressionUUID->"8c072f80-99a9-47a7-b07f-\
2fa2f6022b80"],

Cell["Sin Cos Tan (Radians is default) Arc is the inverse.", "Text",
 CellChangeTimes->{{3.8866987139889483`*^9, 3.886698765942551*^9}, {
  3.8866988688795166`*^9, 3.886698876396013*^9}, {3.8866990176580715`*^9, 
  3.8866990178194685`*^9}, {3.887071282904318*^9, 
  3.887071284107184*^9}},ExpressionUUID->"21bb1156-2598-471e-8361-\
bbca3e711cdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"30", "Degree"}], "]"}]], "Input",
 CellChangeTimes->{{3.8866987452377863`*^9, 3.8866987579331675`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e7c11274-f3a5-49e2-9e5a-66dd80e63495"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.886698749365651*^9, 3.8866987582975483`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"132ce75c-070e-4fa9-ad6a-fb1c18578201"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"ArcCos", "[", 
   FractionBox["1", "2"], "]"}], 
  RowBox[{"\[Pi]", "/", "180"}]]], "Input",
 CellChangeTimes->{{3.88669887843623*^9, 3.8866990043249135`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1046680b-8400-4e9f-a316-ee8c84030f0d"],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{{3.886698885623428*^9, 3.8866989313482676`*^9}, {
  3.8866989789472113`*^9, 3.8866990061397552`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"408f08c3-1c66-48dc-82ed-1039a92ec0f7"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["Quadratic Commands", "Subsection",
 CellChangeTimes->{{3.8892148714979796`*^9, 
  3.889214875082842*^9}},ExpressionUUID->"64a937f6-8431-4960-8c80-\
9a19af657591"],

Cell[CellGroupData[{

Cell["Other Commands", "Subsection",
 CellChangeTimes->{{3.8888770987184596`*^9, 
  3.8888771006208773`*^9}},ExpressionUUID->"61b7a619-1e40-4df3-acdf-\
2c4d9242cd1e"],

Cell[CellGroupData[{

Cell["Binomial", "Subsubsection",
 CellChangeTimes->{{3.88887711454767*^9, 
  3.888877117099816*^9}},ExpressionUUID->"235f15b5-c5e7-4460-ae6b-\
55f7faa66de2"],

Cell["\<\
Binomial Finds the amount of combinations for Vlaues n and r Binomial[n,r]
Below shows the possible combinations of lottery numbers. (1-45, 6 numbers)\
\>", "Text",
 CellChangeTimes->{{3.8888771278829174`*^9, 3.888877134494507*^9}, {
  3.8888772358818684`*^9, 
  3.888877300468035*^9}},ExpressionUUID->"d2e69137-55d4-4899-a47f-\
b862978af3cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"45", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8888770482126083`*^9, 3.888877057503593*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1e1920bd-c1ca-44e1-9160-eb247deced1b"],

Cell[BoxData["8145060"], "Output",
 CellChangeTimes->{3.888877058093738*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4db37fb0-8c76-4472-b864-5b189ade26ec"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Common Errors", "Subsection",
 CellChangeTimes->{{3.884981610859003*^9, 
  3.8849816142552137`*^9}},ExpressionUUID->"bce946fc-9e9b-4bbb-ad61-\
b48654ec5d15"],

Cell["\<\
Within the solve function you must use == instead of =.
Variables already defined when trying to solve.
Mistyping an equation.
Put a space or * between variables to avoid creating a new variable. \
\>", "Text",
 CellChangeTimes->{{3.8849816235493603`*^9, 3.884981640079008*^9}, 
   3.884993857076682*^9, {3.8849938887318363`*^9, 3.8849939274526253`*^9}, {
   3.886611360703947*^9, 
   3.8866113758745017`*^9}},ExpressionUUID->"6ac6ea03-81f2-4271-a813-\
6b6f7d1deddc"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions, Relations and Transformations", "Section",
 CellChangeTimes->{{3.8890355275572987`*^9, 3.8890355385720854`*^9}, {
   3.8894132370367746`*^9, 3.8894132374171934`*^9}, 3.889464447896866*^9, 
   3.889464515278248*^9},ExpressionUUID->"66755660-2680-40cb-8735-\
685f87c94546"],

Cell[CellGroupData[{

Cell["Even/Odd", "Subsection",
 CellChangeTimes->{{3.927090513169834*^9, 
  3.9270905164122143`*^9}},ExpressionUUID->"4a45307d-a464-44ca-b439-\
fe348bd84060"],

Cell["\<\
Even: f(x) = f(-x)
symmetrical in y axis\
\>", "Text",
 CellChangeTimes->{{3.9270905243764267`*^9, 3.9270905340111847`*^9}, {
  3.927090585825656*^9, 
  3.927090594449214*^9}},ExpressionUUID->"b0423dbd-323c-4c67-a870-\
7cd356f32425"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "==", 
  RowBox[{"Cos", "[", 
   RowBox[{"-", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9270905388965*^9, 3.9270905556407185`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b74af34b-684d-4875-8cdc-2370649d6834"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.927090547802125*^9, 3.92709055589188*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"a1ed4c63-7bb1-4cf2-9490-515811293428"]
}, Open  ]],

Cell["\<\
Odd: f(-x) = -f(x)
ref in x and y same thing\
\>", "Text",
 CellChangeTimes->{{3.927090567163663*^9, 
  3.927090584485341*^9}},ExpressionUUID->"4ba5075f-9310-4fee-8998-\
2c8db7ab7da8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"-", "x"}], "]"}], "==", 
  RowBox[{"-", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9270905972189794`*^9, 3.927090605030827*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"89114db3-ab92-4dd2-9ceb-785313363a8d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.927090602620698*^9, 3.9270906052994637`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"84a57820-70f0-46b1-aaa8-289cfb077d8b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Domain, Range and Notation", "Subsection",
 CellChangeTimes->{{3.8851628099903407`*^9, 3.8851628131477594`*^9}, {
  3.885319672730954*^9, 
  3.8853196840033035`*^9}},ExpressionUUID->"eece97fb-0070-4a2d-8f6c-\
a2bed64fba53"],

Cell[TextData[{
 "Domain - The domain is all the possible values shown on the x-axis.\nRange \
- The Range is all the possible values shown on the y-axis.\nSet Notation - A \
notation that includes a collection of elements. \ne.g. If x was any of the \
integers from 1-5 it would be notated as x \[Element] {1,2,3,4,5}.\nOther \
Terminology - R is a term meaning all real numbers, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["R", "+"], "means", " ", "all", " "}], TraditionalForm]],
  ExpressionUUID->"9f123ea0-37f7-45f8-8128-2ad50a7aceb6"],
 "positive real numbers not including zero, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "-"], TraditionalForm]],ExpressionUUID->
  "55cd995d-e118-494f-9742-8bb92c1f95c8"],
 " means all negative real numbers not including zero. You can use this to \
notate domain and range. \[Intersection] - Means intersect/and. \[Union] - \
Union/or. \[Element] - Means element. \\ - Means without.\nR Notation - If \
there was a graph of a truncus with no transformations, the Domain would be x \
\[Element] R \\ {0}, the Range would be y \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "+"], TraditionalForm]],ExpressionUUID->
  "44f138ae-445a-406d-a97c-2b195b1727fc"],
 "\nInterval Notation - Pronumeral \[Element] [ or ( Lower Bound, Upper Bound \
) or ]\ne.g. x is larger than -2 but less than or equal to 5. x \[Element] \
(-2,5]\nFunction Notation - {Pronumeral: Lower Bount < or \[VectorLessEqual] \
Pronumeral > or \[VectorGreaterEqual] Upper Bound} \ne.g. x is larger than -2 \
but less than or equal to 5. {x: -2 < x \[VectorGreaterEqual] 5}\nFunction \
notation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", ":", "D"}], "->", 
     TemplateBox[{},
      "Reals"]}], ",", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{"(", 
      RowBox[{"insert", " ", "rule", " ", "here"}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"7d2435c3-7948-41bf-b41e-57c8ba658ca7"],
 ", Where:\nD = the domain for which the function works\n",
 Cell[BoxData[
  TemplateBox[{},
   "Reals"]],ExpressionUUID->"ac57ad3b-aca7-4b21-9f14-d5c7bc39ecdd"],
 " = the co-domain, the set of all possible outcomes of the function."
}], "Text",
 CellChangeTimes->{{3.8851628176218405`*^9, 3.8851628180716114`*^9}, {
   3.8853196882647543`*^9, 3.885319784727414*^9}, {3.88531983430651*^9, 
   3.885319847127679*^9}, {3.885320029702746*^9, 3.8853203570182505`*^9}, {
   3.8853203931700144`*^9, 3.8853204036507974`*^9}, {3.885322028919468*^9, 
   3.8853220306044636`*^9}, 3.8853229602648363`*^9, {3.885322996150053*^9, 
   3.8853231208292456`*^9}, {3.885335537046091*^9, 3.885335733678158*^9}, {
   3.8853357697799253`*^9, 3.88533577646941*^9}, {3.885335810832468*^9, 
   3.8853358723448153`*^9}, {3.885335992717436*^9, 3.8853360077626743`*^9}, {
   3.885336049422246*^9, 3.8853360499892535`*^9}, 3.8880072020370407`*^9, 
   3.8880072454690576`*^9},ExpressionUUID->"e29f4661-1986-4439-ba6e-\
9500ec383bd2"],

Cell["Finding the domain of a function", "Text",
 CellChangeTimes->{{3.9065686880440445`*^9, 
  3.9065686923916287`*^9}},ExpressionUUID->"01f4f8cb-5c7e-48e0-bb19-\
1e39fc43f63e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.906568671418163*^9, 3.9065686802683516`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ed9d4dbb-361d-482d-8e19-7bdc9a20cdbc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9065686818261347`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c22bfb9c-3a5d-4dfd-8bd3-72a9098f5b6a"]
}, Open  ]],

Cell["Finding the range of a function", "Text",
 CellChangeTimes->{{3.9065687648725624`*^9, 
  3.9065687719330444`*^9}},ExpressionUUID->"1ee71ace-9bb3-4b6e-9eed-\
92090307e5cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.9065686990415244`*^9, 3.9065687148683057`*^9}, {
  3.906568756759185*^9, 3.9065687577846*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"57fac4c7-8fd7-40d7-8f89-471917092b79"],

Cell[BoxData[
 RowBox[{"y", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{{3.906568707054757*^9, 3.9065687126965475`*^9}, 
   3.9065687582663813`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4e583664-f571-45da-bcdb-394a8f7eb691"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Types of Relations", "Subsection",
 CellChangeTimes->{{3.8851641565692053`*^9, 3.885164166264103*^9}, {
  3.8853366837196226`*^9, 
  3.885336685003051*^9}},ExpressionUUID->"6cc06257-d0ae-477c-b086-\
df13d9e0c766"],

Cell[CellGroupData[{

Cell["Functions: ", "Subsubsection",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
  3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
  3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
  3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
  3.8874086387177896`*^9}, {3.8874088191608734`*^9, 
  3.8874088233795195`*^9}},ExpressionUUID->"06bca0f8-7530-4121-9f50-\
46d7f15f3c5d"],

Cell["\<\
Functions are a type of relation that are either one-to-one or many-to-one. \
The vertical line test can be used to determine if a relation is a function. \
\>", "Text",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
   3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
   3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
   3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
   3.8874086387177896`*^9}, 
   3.8874088191608734`*^9},ExpressionUUID->"5d1e7c3a-4bad-4dec-a644-\
1bd76a962015"]
}, Closed]],

Cell[CellGroupData[{

Cell["One-to-One (Function): ", "Subsubsection",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
  3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
  3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
  3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
  3.887408626704818*^9}, {3.8874087976320953`*^9, 
  3.8874088002719812`*^9}},ExpressionUUID->"b20b7adc-068e-47d0-9037-\
a70e73666d55"],

Cell["\<\
Each x-value maps onto a unique y-value. Passes the vertical and horizontal \
line test. \
\>", "Text",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
   3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
   3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
   3.8853367945514097`*^9, 3.885336837936643*^9}, 3.887408623286769*^9, {
   3.8874086561744757`*^9, 3.88740865661462*^9}, {3.8874088045508223`*^9, 
   3.8874088069368477`*^9}},ExpressionUUID->"73b765d6-ca05-4f0b-ad05-\
1e043facd2ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "+", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8851642578631315`*^9, 3.8851642834500866`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2833080d-8509-4e62-864e-ddf5145c89f7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H9QE3QYx/GxWG0OQX4zmmzsa4jLAX5ZcAy6PYa7cRZIENjppTTBI4Ig
4QwPtUh+iHalwOAEdgUSwe2SrjuRuGpPgaJixFWOCCxtCiJe8RvyWEQ9/fG5
17/vvz7BpvyULKFAIEhc278em0icXV1lSGphvMRvYXSFIamFpA2/LV36iyGp
BWVMgTN/jiGphW9PVYtvjzMktSAOGw7C7xiSWqgtynj+nUaGpBasLoWtgmiG
pBZEWUYue0WFZCR4/3w5t+VsMJIcUnobDmy5rkRyG5T8+WzuGYcCv14Kiro6
EwHdbzXkdO4KwrHYxIvDmyMgqTpN+fc5OZJhYLR8lZTwMBDJrdDWf8ReuFeG
5NOwr6zW9/t2fyS3wPGMxy5Ivf2QDAWBRmGLL/dBMgR+OX2u0nrTC8lNIF+X
3TH/nCeSDF5/Ri0alXtgV6D53bz3g+FA9K/tvb1SJBWgLtatvtEqRlIOzbdS
+45sFyEpg4lS3zhjgBBJP+gxhxrupzttt3bWqoqsXhAxOTIfblm0ke6wo2dU
4kyftpFiKOjoXPb0dti6f9q9crLKBdIPsuYfjl6z1Y0ktGv3L+r7b4yciky9
qm+S1egO2h16neabz5PrHfqh1yR15T03bMLDvmOZsmm960N19zU+bXvCLbnU
9Mei3j3gI+HlMaftxG17/KHzTj0pws8aK5KPz7pARvT65pW7UsxvydxwN10E
pCfuy2nYWFkqBtIHq148HBPZJAXSH119zONvP3IHMhCHB8qnyzw84UK99I5E
EYRpJaaohl4vIJWYK51SDe7xAVKFCuuVuscf+ALJsKQ7PtWj0R/Ip7CgLbcr
KlwG5GZ0E0abwu4FAhmKhryXzOoaOZBqDPhiY75hUxCQW7H60MmzEcMKIDWY
UrFLY+lSQqvbh3t0eeGo3luW1nosGMgItI9LWmrSVEBuw0HTve1eCgYkxzuu
nyybVQxIjvNt2Z2yEAYkR9nUlDxYw4DkmFk4uxQey4Dk+OjE6qeJuxmQHEM+
lgVWfcCA5BhjHB1yq2FAcnxhsqnyTB0DkuObGuVCvYUByfHLiyFDbVYGJMeU
K5EVff0MSI5Z2QtxCQMMSI7F6y7NDQwyIDlaknSv/niTAcnxvh3ifncwINd6
i4VzWRNrvf/Jcf2TfR2TDxiQHPl+o//MDAOSo8FFMli0wIDk+PL562XLywxI
jjmG92KPrjAg+f+/xYDk+A9Hvj2Q
       "]]},
     Annotation[#, "Charting`Private`Tag$7373#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-18.99999918367347, 20.99999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8851642844163437`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c32e1f6e-2482-40fc-aec7-c041eb0bf627"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Many-to-One (Function): ", "Subsubsection",
 CellChangeTimes->{{3.8851642977487392`*^9, 3.885164303168159*^9}, {
  3.8853361523696027`*^9, 3.885336160242159*^9}, {3.8853363010916157`*^9, 
  3.885336326814618*^9}, {3.8853364663009033`*^9, 3.885336466826342*^9}, {
  3.8853366286565323`*^9, 3.8853366287997465`*^9}, {3.885336840369223*^9, 
  3.8853368527514105`*^9}, {3.887408653561244*^9, 3.887408665224209*^9}, {
  3.887408838246831*^9, 
  3.8874088416537447`*^9}},ExpressionUUID->"36f8d0d5-c046-4d76-8894-\
7c4d765f4976"],

Cell["\<\
More than one x-value maps onto the same y-value. Passes the vertical line \
test.\
\>", "Text",
 CellChangeTimes->{{3.8851642977487392`*^9, 3.885164303168159*^9}, {
  3.8853361523696027`*^9, 3.885336160242159*^9}, {3.8853363010916157`*^9, 
  3.885336326814618*^9}, {3.8853364663009033`*^9, 3.885336466826342*^9}, {
  3.8853366286565323`*^9, 3.8853366287997465`*^9}, {3.885336840369223*^9, 
  3.8853368527514105`*^9}, {3.887408653561244*^9, 
  3.887408663424346*^9}},ExpressionUUID->"ff193de8-1dc0-422f-89b6-\
a91f742ece4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853363341034517`*^9, 3.885336417687493*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a97971ce-5b37-4b0f-95a6-80002c828f25"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9H9lRqEg
       "]]},
     Annotation[#, "Charting`Private`Tag$4631#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8853363733892994`*^9, 3.885336419322116*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"d11bcead-f4b1-4de0-aced-582953f43cea"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relation:", "Subsubsection",
 CellChangeTimes->{{3.887408858058188*^9, 
  3.88740886237766*^9}},ExpressionUUID->"96951eb2-8c78-424a-83d5-\
03d3d9c57901"],

Cell["\<\
A relation is any link between x and why values. Functions are all relations, \
but not all relation are functions. \
\>", "Text",
 CellChangeTimes->{{3.887408866445883*^9, 
  3.8874089056077256`*^9}},ExpressionUUID->"7df5b235-5861-496c-b4b6-\
ad0d932f58ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["One-to-Many (Relation): ", "Subsubsection",
 CellChangeTimes->{{3.885336451793765*^9, 3.8853364980493746`*^9}, {
  3.8853366249459963`*^9, 3.88533662607271*^9}, {3.887408679668807*^9, 
  3.8874086855742445`*^9}, {3.887408908107992*^9, 
  3.8874089103321314`*^9}},ExpressionUUID->"f55870cc-0aef-4d26-b654-\
a092b7313e54"],

Cell["An x-value maps onto more than one y-values. ", "Text",
 CellChangeTimes->{{3.885336451793765*^9, 3.8853364980493746`*^9}, {
  3.8853366249459963`*^9, 3.88533662607271*^9}, {3.887408679668807*^9, 
  3.8874086819509845`*^9}},ExpressionUUID->"c7aa27af-36c4-4b73-b99b-\
db0d58b76091"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853365006189275`*^9, 3.8853365791162353`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d99b4ba3-67db-489f-803e-1ab15f5b1a90"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxdVglQk1cQ/iNYiaVyeqDWq1UZqgiOFRF0nxYsXvWgojKjIhVFq9J6VwTx
wFqxttoqYCng0RpUcCJoEYGNpUWCqCDWgyhEQDklEI4chFDy3v9nRh5kNvmP
t293v93vGx0ctjSkD8dxST0fk2XLkcR6zHErqRAR2cF0PJjuQAqP58iP54jI
8YiBr1adsydOnS5/354tImPnnvp47il70ppvNU7vJSKRt47uu3XUnpyVesRL
PUTkN//mbf1X25P5psc+FhGx53dTW9fakSKf8K3FKRyZR6/bEY3vlw2NMRy5
Erph3jW0JQPg8vyiQI4Eq+KGPvOyJes2BfV840j5zS2Km1tsyLaAyNkJp7vh
wOePH+e6DiDK8f+6e9p2w2+v0HL2tQ+I7d631dOLjDCens+anGg/J505xQhf
V+32Wfj2fXLO8W41edEF3fNHtZXJxWSOS4i7X6YBvlGYHIjJsXS1Q+VVA/jv
H5ahuCImwSJ5rJ/EADWvHbMTDoqJM93XAL+ajj/XisTPCOqIet4JNfXqYf13
9SNFX3wVaLuqE26Zjqt4j4xyC5c1ijohcGPe5FjsSzaS4OEJgXp4+uP+sA9n
9SVRE3/xHWCrB1YDSz4vOniYeWi/fpAFGWko/WtPqhbGUb99SJ11QK11gBZ2
pXA7Urg+ZGiqcXCqUQPdcc6vVT+JyJjwqibn6xoQ8q4bFqLp+Yf3E1VWiSqO
eAb4egT4asCpJ5pYf45k0XN2QAXNbzeErjetDohvqW8LyTbCDsmK4uEuHdB9
dends5e6oEo8zHF4fjsIeVi+zLTaQZb186B7H+lhacVziWpzGxQllXeNjdaB
xOtZ2A33NrCi8enAgto2EPx6Sx28pA6tkK7MHFmyux38R36udD2qBpXxdOxU
/3bwPJmlLNitNr8XR/HZArtu9Jdfi2yFshdOUZV/tEAixZsaFtC4WyAz7kHw
9JgWUMbsnVSf02y+rqV4a4Z8Fw+HgR0qs1Vvv/wwZaYKinVuNXkJKnCh8TUC
Fz3tExjdBC7+iaMzDjSACxwZX37+LdRTPNSZn5uzKilt0dMaOLfywYQNZxog
h8b3BjCtISutoR66NNaFYZ9VQ0RVyoWvt9dB7jQnnxGZlTDBsViq21oLi+j5
XkEnrVcN4BqxhUOxEhYmdxgaJ9XACFovpXlfN+r3BQTS/L+GO1mjzjy1UMDM
u9N6/qrBhubrObxHbTXk0feeAKH5rgLdh/4W4Xcfw5Ss2vMxrpVwkebvkfkc
y6gtAa2pGw4rofTleJu/FfchoXHMen1BOTyk++XDXMmh6ZJDZVCRL/bY450H
XrP+2VV7+RmMo+eVmf02lUarhg/JgFKtbu/6/0pASv1dN/tRaXcapkemgrrB
9OUBeND3k81+lqvcpM534sGw6Eay34U8CKT3o6CG3r8JXf3WvFHe2wexETsl
1wbcADbPCrypWdxnBvsdxX5HPfXm3ln8c8J9s+WvJxuzR/H7+7L9seQ28/89
84/9uNzsJMtoWDFxe5po3y1cR+M7Be40vjs4MCe04o0yDhwDmsoWYx623mbx
JbH40HpT1LfhI8/DedfJfpv6F+Dgrabrf4KW4qcQx1YcGdyCEpBv3rDA2akI
Q2URlhq7q5D8Ur+7oeI+RvD5nMHyiYctUipHW2bAkwnuM0PKSlDI00OT2+ZH
aMnX5wqrDxby9ZvI6odC3u9R/2VYSPEuhyEMd6iIU1y6eOc+cDZyJ/GTchTq
qGN4wWM8nj5jeMJGHm+TGN5QwMUshkds6TatZ6CntgrTeTx7MjyjgPeVDO/4
Ad8PUtYPeDLvWMypEiWEee/cscW1Bnv1E1by/ebD+g07+H7cw/oRe/Ur/sf3
9wjW36hOstPW/dAAy9X2SyRn36LQ992H6XxAK0OuqjNXBYZOalGYN200H824
yjumbcmJFvi0Nuf3R1nNeJKfV3PYc3iw76AVQQfaIVJfdykpUo3CfMyh9VJj
AT9P/2TzFL+l5dSBr49ptaGcn7/L2PxFYT4HsPmMosTSxmVpXaAYcrYpCNux
17xHO54PMphfrEtMb5U3c2TPlzlrjbM1KPCJlvEJsvkqIj+ZxqtEg/d5vhrB
+Ap78Rk+5vkukvEdrub5cDPjQxT4MpvmX4/VPJ/eY3yKvfgWX/B8PIbFiUt4
vg5ifI0Cn//A+BwtFjC+92N8j6G8HkhmegAFvWCk9TRiEq8nHJiewP283qhg
egN76RFc+65ekaXyesaG6RmZoHdaKR44mdW7ekiWSeO3IxHbMq211ZzsNK+f
/FjeZft4fRXP9JWsl/6SneD12VCmz2T4rn6T9dJ3sv8B5wPh/A==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159}],
         FontFamily->"Arial"]},
       RowBox[{
         TagBox["x", HoldForm], "\[Equal]", 
         SuperscriptBox[
          TagBox["y", HoldForm], "2"]}]],
      Annotation[#, HoldForm[$CellContext`x] == HoldForm[$CellContext`y]^2, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885336580602683*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"845c5391-75cd-480f-8c3d-37e77998e68b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Many-Many: (Relation) ", "Subsubsection",
 CellChangeTimes->{{3.8853365915215273`*^9, 3.885336622519339*^9}, {
  3.887408696091364*^9, 3.8874086985938516`*^9}, {3.8874089122609687`*^9, 
  3.8874089150418463`*^9}},ExpressionUUID->"12863c79-7a0b-4ec9-89af-\
592ca358a9b9"],

Cell["More than one x-value maps onto more than one y-value. ", "Text",
 CellChangeTimes->{{3.8853365915215273`*^9, 3.885336622519339*^9}, {
  3.887408696091364*^9, 
  3.887408709360359*^9}},ExpressionUUID->"6adf873b-faec-49b9-bac6-\
42e1d04676af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853366390363417`*^9, 3.8853366413151045`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f8baf995-aba7-4fbd-b52f-559798bebf2e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8853366420869727`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a2cfce26-8963-4de3-86c5-f08335f40f98"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Function Transformation Summary", "Subsection",
 CellChangeTimes->{{3.8849941057959833`*^9, 3.8849941166599584`*^9}, {
   3.884994151486394*^9, 3.884994152835699*^9}, 3.8851627715022783`*^9, {
   3.885249303399956*^9, 
   3.885249304384212*^9}},ExpressionUUID->"d10c7423-4f56-4bab-b175-\
d85da7be5e01"],

Cell[TextData[{
 "a, n, h and k are used for transformations.\na : af(x) : dilation by a \
factor of a from the x axis\nn : f(nx) : dilation by a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "n"], "from", " ", "the", " ", "y", " ", "axis"}], 
   TraditionalForm]],ExpressionUUID->"c53973fc-b206-44bc-9e38-9607e42f875b"],
 "\nif a is negative : -f(x) : reflection in the x axis\nif n is negative : \
f(-x) : reflection in the y axis\nh : f(x-h) :  translation h units in the \
positive x direction\nk : f(x) + k : translated k units in the positive y \
direction"
}], "Text",
 CellChangeTimes->{{3.885163753642596*^9, 3.885163773658988*^9}, {
  3.885163954955003*^9, 3.885164000004383*^9}, {3.8851640374968443`*^9, 
  3.885164056238515*^9}, {3.8851649232796297`*^9, 3.885164926363267*^9}, {
  3.885250404730568*^9, 3.8852504074566307`*^9}, {3.88525046055737*^9, 
  3.885250477328845*^9}, {3.8852505788784885`*^9, 3.8852507881090364`*^9}, {
  3.885319492147496*^9, 3.8853195634464064`*^9}, {3.885400435802524*^9, 
  3.8854004524518776`*^9}, {3.8854034686501374`*^9, 
  3.885403550369244*^9}},ExpressionUUID->"393e8fef-36ba-4ecb-bd1d-\
130c2f7c1868"],

Cell[CellGroupData[{

Cell["Hyperbola ", "Subsubsection",
 CellChangeTimes->{{3.8849941751315207`*^9, 3.8849942697055674`*^9}, {
  3.885162844192851*^9, 3.885162891661003*^9}, {3.8851631702053814`*^9, 
  3.885163171098216*^9}, {3.885163313895297*^9, 3.8851633258556776`*^9}, {
  3.885163712100057*^9, 3.885163742002314*^9}, {3.8851649282350807`*^9, 
  3.8851649343043175`*^9}, {3.8852504886006203`*^9, 3.8852505017662125`*^9}, {
  3.8874089376550303`*^9, 
  3.8874089516796913`*^9}},ExpressionUUID->"a6f37ad9-217f-44a5-95be-\
553c7602378c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["a", 
     RowBox[{"x", "-", "h"}]]}], TraditionalForm]],ExpressionUUID->
  "8ba322e5-a66a-42c4-9f29-86183dce2da4"],
 "+k - asymptotes occur at x=h and y=k"
}], "Text",
 CellChangeTimes->{{3.8849941751315207`*^9, 3.8849942697055674`*^9}, {
  3.885162844192851*^9, 3.885162891661003*^9}, {3.8851631702053814`*^9, 
  3.885163171098216*^9}, {3.885163313895297*^9, 3.8851633258556776`*^9}, {
  3.885163712100057*^9, 3.885163742002314*^9}, {3.8851649282350807`*^9, 
  3.8851649343043175`*^9}, {3.8852504886006203`*^9, 3.8852505017662125`*^9}, {
  3.8874089376550303`*^9, 
  3.887408939299449*^9}},ExpressionUUID->"6da22638-d303-4c1d-9421-\
7b3a9c01090a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885163211324757*^9, 3.885163295439809*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"da923616-9138-4519-a5a2-128c9b4e324d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7318#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.885163237817893*^9, {3.8851632688624697`*^9, 3.885163296529621*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"116362e5-3fbb-420d-8622-b6989cc76713"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Truncus ", "Subsubsection",
 CellChangeTimes->{{3.8851643869251366`*^9, 3.885164437610298*^9}, {
  3.88516493724627*^9, 3.8851649382441196`*^9}, {3.8852505098494453`*^9, 
  3.8852505098494453`*^9}, {3.8854032919561925`*^9, 3.8854032936077414`*^9}, {
  3.8874089604123163`*^9, 
  3.8874089662835436`*^9}},ExpressionUUID->"d2cc13ef-e398-4e7b-b382-\
1ac4e76803a5"],

Cell[TextData[{
 "y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "(", 
        RowBox[{"x", "-", "h"}], ")"}], ")"}], "2"]], "+", "k"}], 
   TraditionalForm]],ExpressionUUID->"02a25dde-913f-46a6-bd1f-758bce61ce8e"],
 " - asymptotes occur at x=h and y=k"
}], "Text",
 CellChangeTimes->{{3.8851643869251366`*^9, 3.885164437610298*^9}, {
  3.88516493724627*^9, 3.8851649382441196`*^9}, {3.8852505098494453`*^9, 
  3.8852505098494453`*^9}, {3.8854032919561925`*^9, 3.8854032936077414`*^9}, {
  3.8874089604123163`*^9, 
  3.8874089620687437`*^9}},ExpressionUUID->"15edd3bc-8bba-4cc9-a83d-\
3540c258ed12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["x", "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885164444594262*^9, 3.8851645438090696`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9d0b763e-de73-4a01-a365-248c6695749c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJwdlnc4FQ7Ux6/NtS8yo1yVLSNJ6ZwGUUjKyCtKRCoVEhn9qotIUnIlZEYy
kj3KqMiIZIfsvTKuvd7e9/xznu9znvPH+eN8ns9Om5vGdvQEAoGDjkD4v34v
7qzUHa1mIPx/SWHKa5c98pHN8JjEkrF8koz3Zua1kaUF1O6vryX6SeJJHVfb
cy4toBB0/0Vt3U4cn3WN8zrVCjqu+7hEPHdg0YmF0pD8VjBlUyd6lkpgYPSd
7kRyG0xJNgpGRYijnJ6baN1aG2STKG8+e4rh+pvFA3327dBsUZuZ9EAUf9Dc
zBea2uGltMnovpcieD32btj2tN+wh07EcKNTCA8tLmUrC3XAyds6bUXcQsih
796oTemAS/1CHLsNBDF9yZ3bybIT2lP4B971C6CPwYrCw6pO2JaRlpRxQAAN
Ezz0qWpdcOx5hfGhV/w4bXgvoITjD6if1yaoOfJhSeJqcqP7H+gsJqw0dZEw
ePVe5fDgH/CxjXG7YkJCpSRPBu7P3dCiq9knaMaLBT4lJR/Ue8GqjPQnWIYb
Y1M26wqv90LLKd2JXxe48HHz4T9f43uBbe1+XXUEJ5rLlq61cfXBpEsRyWQP
B6LJFrH/eB/UD3HF73NnR+n/QGTyXh+4+bP62f4k4kpLqQZhpA+uIset+8/Y
sJ9A0CVu74dy67FbPUusWCOHZvxn+4GjvVDyjh0rvn5Qdke6tB8epzNbnD3N
gpoK5VlG4QPwUm4xltWcCfc1t1JLqgfAl37wavUEI+71nLwnvz4AZsvXqIUP
GXF3teAx1kuDIMQnNva+kAH57JyaSmWHIEzWIz9Xlx65OCj5CheGQL7sqFTN
HB0SsyMiI58NgaSEZqZ6DB0S6Cou36UNQUyEXuiXTQJORonSFEuGQeteSTpD
+haMHFNuj5oZBr36C0bmklvQP67ziUgegcBeuV+qkZvwW8OZMuw/AvNn/iJL
+AZUNlfxvzkzCnhaSUAkZw3KPbuX2SmjMC5lc4R6dA0+SdK6PPL+ZXe10Mqm
Vci6JfHWRHQMbOs2daY2ViCGw20f59AYbPaI/SbfXIbX2U+EPQXHQXm9/C07
7zJQLeI2RvXGQe+W/zhX7hIEvftR8S1jHDrDc72lGZbA/TjZ1Mt9AjQE7hay
5y2Ay4SG5vj7Cdjr2/VN0X4BnF4Yipv/mYDtjDSPdeEFsOv1GFY9Ogk7eB4G
OlBoYOzV4DbBPgUavEaKhtfmwYA8bHH+8BSIJFPPBEvPg27N2uHvt6bg3ezO
M1Ijc3BYaA9LQssU/NlvuqDgMAdyOd7hFjHTcJcWceaH+yzQuwl02QrPgELb
gJ1l5F+wuPi+sUBtBubH77huV/4LWSehmsNoBraaOYvnqqbBRuJqXo7fDGj9
PaKasDkFX6o+hTDSZqDeW+1lzn+TIJJ9xt+cexbE2Qqb0nZNgnP0sHea7CyU
OvXeMf0xAZLOPNfOXZoFM2dL71DxCXgkaqudWD8LxqT++9EtY9DFtHJweWwW
bJaFT7L4j4HazFMVfaY52Pf36pOWA2Mw+C1fgnZwDk7KsOzzSRiF407sq8dS
5kA0yDdZym8EGMuzMgYezcOO9fc/Ix8OgWXqibf7Y+ahU1liV6fOEOSEdUU+
KZoHlw+1YiSOIbB1ZA5QnZ0HzoOkpjMRg1DBZ3H5kRUNlMpY9waVDID45vT5
Ng8abP59ZbUWMABuo4+M5MJokGoYYnPQdAB2f07XaqqlwSCpqVlsth/8rtAJ
kQ8sAMtw7dd5pX7oNqJy3T23AM8b9BTv0vWD+kE5ptqbC6Cu8W0mtakPhrlN
5pyTFsB0yuCp6L8/1Sl89+ML3yI8nHlyNK++F1g4jB7YTC9CZHHTOTvpHjDf
Y1GmzrYEManKzOs93fD+qO0WUWoJCNv56IJfdYOhh7t39vklYLW1anvO0Q3U
4VgPxoolcLggmRy71QW7y2dvJ0Uug6KB+Pxlrk5w71rLvJe3DP3JXZXfmjqg
ZolpxvDXMvDx6xsPRHSAk6KI0xLzCkjecB7Ul+6AvMijjrrOK8AcmjjkZfAb
tN1CbcZ1VyE7lVmzI68NqM+j40our0LCFH1bkV8bjKYl977wWQW3/nELBbM2
CBootjqYswofzrEtlKy0QrPRoEWQxBpo0D4vmmq3gq3cvrOKi2ugM+v+PITW
DHk68IKedx1eZPtGhP5oBlYbvV+tcuvw/Wb/e9a3zZD26sLp+5fWwSHzgfJR
s2agMfmdavixDluGavcqyprgUW/rMeeEDbjZlqlQlNQI3YWnbrh/2gAp1FW6
7N8ImqFlVJ+WDeBkM5q0cGiEGe33Y4Esm6Cu9+iBilwjWKV6P0u4tgkSC40X
r+T8Ak03qc5m1S2Q14uX5GluAOrpCMZO/S3IPeB8XaWwAWaluRT77LZgYUHx
98s3DfCuc+m/qfAtsL5Mmdnm2ADbjtTuZl7fgklHlvBVhgZYYTpQKGpDQCWB
viRN33pIcp6ve+NEQJ/K499+mdbDuZ70/p2eBBTkzb3eKF0PmQWSHNIvCWih
JWjPXl8HV65xWKtVEjDU9Odhze110NzQw2ggS4fydySzn9TVQmakn5HPP65m
l2bE1zlVQy2f3wg3gR6n7ZsMKbrVMPzE1yeOkx6ZWKwUn0tWg5gXJe2bND32
Rps/SmmrgseWD1nZrekx2iJ/X6F2FVzc7lMWXkuP7SsBxb57v4NnmLeZzG96
5JAVcVXk/g5UTu/pomF69NGL6BWfroQfG55i3XQMqOorkdiUVgka3R7uUhoM
WDOZIHxXoRJ4Yu7s/ZjIgH8F9r8hHKwAOcE7349mMWCi16xdzfYK0HnmatVc
yoA6HXGGDYQK8LrvErTU8W9f/svc0+/fYNT69qgWLyNyra5wlpp9g7IdN2Jr
vBlxI3tnkMvDr3Az3pZn0JQJVQW3blhvlEOwR0RU8GUmPKJSdUxwtBwyjOql
D9xiQuNs7u+0xnKY3tx/JDiACQMdFFwlUsrh+v+wO2t8YsKjdx3mZczKwZE/
qyloJzNuIoWhtrAMrvhtUfdNMmPHjoTw04ql4HdBjdy7zIyP+TfjFtlLIUnt
6odAJhZ8dIrTsHWsBIb6G7/3iLOgfs6HSK2kErCFpOWAMyxIKcTqNztL/nFP
36I7799cvfyWtuRnsHJ8vd3/ASval/eoKusWw9pvtvrZp6xI16zxJla+GF7p
efhYvmZFNU2hogO8xfBL2rxHOZsVwz4E5490FMHxEYG4rkFWtGUar5e5VQQy
ts+lVHTZUClcWpEuvhBoFx7L/eEiYmDK58XlHQUQUrfUeUKUiLcjglOIxAJQ
0LIPytpDRPPg3RuH5vPhipjOlD8SsfGLYAh9ZT787mD4oOJMRAvzwErijXwo
Mbuv8riFiEPuDqe6yvIg4IzbAdUodrTaoyLO5JMLL37IXk9LYcd2Hbdwkau5
EHWi582ufHY8deFioOG5XMjU0mUUamRHLluzWR65XGiXEfm5zsKBLDTSrZXf
OSBNX2Jb6cKB73erGUtr5UBlFlPI+VOcyEnWaggRzIYGhaIvjeacqMjat8nB
nA0d75wWTl3hxImn0YfiaFkw/abN4vADTtT51rSPtzELtj1J2UXO58QSQz4H
YnAW2F02KJ6U5MIXAZkGWsQsYOQPG76/yoVxi+XRoaSPQJr24SKxcGOBdfd4
GeNH2FnloJ7Ix43p9VOrm4uZcNjrkF+VPDdakfqX0jozwWNwYBevNTeuWrR6
1b3NhOkcFbv4r9xIu/5MjKiVCZOyo7dtdHhQw6rnVPBUBtAE//im6vNguGrB
w4KWDFhjbIygGfOgS070oc3PGUDsKS73s+bBI55fQzqDM2BP6DPeVHce7Gq/
r/hbOQNs1tQ/zr/nwdV0+d5PXunQVus7Q+H+55XDI3oiu9Lg5eFobZNtvJjm
dNIjjSsNjD/mvN61nRdzHjy/cX45FeqpA8crZXlRUoqwRv8jFSovHYlg0eFF
zTmiYIhrKuQtrR8J9OLF3G6HWqea90Alu4Y+G+PFHiJEKj9OgXPUJ6PWM7zY
FuO+8tM1BUhsCVp7l3jRsWP4IuVSCgRP/xppYCRh1mvVSsWDKeBXqHSItIOE
8kPLZ/3+vgO30xODL01JWEqqD5ayfAcmnjbqr7+S8KPbhwG948lAjeZnXqr+
59G6Nc8D1ZKhtbSy5WwDCb8bKu/vlEoGU0a5O5x/SOjQ9JM3jSkZzJ/OZ/+3
SMK+nYnZbFVJYBFDUbaX4UMUT/GPP50EF78myas948NBmXgou/oWrrNPSNZb
8OMTbzPHkooEmPAoYmS/xI+5S9tD3xYmgONowPAJe35sWvVvDE9PAPsK6ffl
LvxonKBuHR2WADb3ryjnBvHjzSI2TbkrCXB+vg+iSvjxx81Qfx22BNDpbLd0
lBTA6PpBgpRZPEikVlKZxwVQPYQqscwVB+diCgprZgTQw//tWVfGOAgMfd8V
vCSARSZPtFZXYoHmGSwpyLQNiUIyDOShWKjRN83Ys2Mb5gtWsY8Ux4Lb9FCF
ruk27Ges21C8Fgt1ykwLgV+24VUJW4/+2BjwLDh2ljtSEEOiPhqS7KNBxbJh
xjpOEAv15mwumEXD+JZlcGayIOrHVrDlnogGixNu1WdyBPEo86vfAdLRoNn6
Dl7WCaIf3RJX1XgULM9zygsThFBtlMH5ye0ocFNqZyTbCeF3YeHQVv9IuJV0
PU9dSRg7i00JC80R0P1TNIxLXRitsmaHZyojwGClxmX4kDC++/pJZbkgAmT1
ZZSpJ4VRne9VlXR0BAzODqUu2Amj0PhCOM+VCDDTso7LiRLGeAvV0zMrr+Bw
85kgFaIIrnDfS4iReQUc9PttFIdE8DbGPr6aRIXCuwxnhydE8IYXV7tYJBWu
TP089mZOBF3PM71uf0aFsnaHXVwEUVyhzJ696kH954WvR6dERJFpujpvWp8K
HZabTulGorgrVZ70cCEM3uVXeMp/EsUZ0u25UP0w0L5xLkw2VAzpAy/yVPO8
BKHC7Te1pcRRSXiwMJb1Bbxwfvx8b5sEEhdrmcRlQsDY77RCdN4OfFcknJF4
9inI/g/FJNF75z8+j1ZxfQ+E1mG2+FATSbQdWMQGq8dQbzN0hCRBxoKGC6YV
9n7Qx5i8HCZJRoXb28hPrP2AluTwQXg3GSsktt01MfMD4YkJsZ0KZJQivk1e
0vEDW5e5JaWDZFy0/1p/e7cfrD7aSjcwI+Pbkn5LzWFf2P1WWCTgGRlL3O8a
MV/1hQMnOhs4Qsm41sLaYHrJF/THovxDqGT8deOoc+p5X7itsGMhPJqMXWwt
pEsnfeFT7u6GpFQy1sqKOm/I+YJxparft+9kHJRqFl/+SwE7h4VDurVkrLPv
dgwYpYA7MX++tp6MrJnnU8X7KBBtqHmpqYWMp0KdNs81UmC0FQ/1D5BxiCYb
M5NDgVV3+nm7ETJ+kavAuHQKcIp+SxkbJyPvRFKZSRIFVKxPCM7O/suPLIxq
wimgTcdW77pAxiiRUovAEAqYJ9RQlpfJqJMdomEYQAFH7aCDXuv/7osRHxF4
SAHvEYO5rS0y+oYUXe67R4H/BeBS4uA=
       "]]},
     Annotation[#, "Charting`Private`Tag$7868#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-1., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.885164467336825*^9, 3.8851645444166813`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"749fd72a-6d51-445c-a828-f6e7bc24c396"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Square root graph ", "Subsubsection",
 CellChangeTimes->{{3.885164589731572*^9, 3.8851646110813646`*^9}, {
  3.885164648672707*^9, 3.8851646792842255`*^9}, {3.885164804096723*^9, 
  3.8851648470769224`*^9}, {3.8851649417004504`*^9, 3.885164953231406*^9}, {
  3.885248902379532*^9, 3.885248912547525*^9}, {3.885250515133539*^9, 
  3.885250515133539*^9}, {3.88540328220465*^9, 3.8854032851227503`*^9}, {
  3.8874089723489676`*^9, 
  3.8874089810187364`*^9}},ExpressionUUID->"b93b15ea-2d1a-4717-92fd-\
40d236687c18"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"y", " ", "=", " ", 
    RowBox[{"a", 
     SqrtBox[
      RowBox[{"n", "(", 
       RowBox[{"x", "-", "h"}], ")"}]]}]}], TraditionalForm]],ExpressionUUID->
  "23373a23-a844-4ea7-b664-fb5750025428"],
 " +k - start/end point at (h,k)"
}], "Text",
 CellChangeTimes->{{3.885164589731572*^9, 3.8851646110813646`*^9}, {
  3.885164648672707*^9, 3.8851646792842255`*^9}, {3.885164804096723*^9, 
  3.8851648470769224`*^9}, {3.8851649417004504`*^9, 3.885164953231406*^9}, {
  3.885248902379532*^9, 3.885248912547525*^9}, {3.885250515133539*^9, 
  3.885250515133539*^9}, {3.88540328220465*^9, 3.8854032851227503`*^9}, {
  3.8874089723489676`*^9, 
  3.887408978158684*^9}},ExpressionUUID->"97cef482-f24c-41e0-978d-\
7749496390d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885164684720046*^9, 3.8851647930178075`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"068cabae-a6fb-44d6-a0e4-98ee236620e9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HDNjDQcCH976ZXF9ncRjrUpMN0cC/weCrAhj
       "]]},
     Annotation[#, "Charting`Private`Tag$8133#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999775510204}, {-1., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8851647381139545`*^9, 3.88516479368124*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"60c190f5-2341-423c-b9e9-285942a3aa1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Circle graph ", "Subsubsection",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248621933689*^9}, {3.8874089926235223`*^9, 
  3.887409002249263*^9}},ExpressionUUID->"5476705e-45f9-40d5-85a4-\
03eeaac4d5b5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "h"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "k"}], ")"}], "2"]}], "=", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],ExpressionUUID->
  "25e1515d-db54-4571-b6e8-328ee10f3ec6"],
 " - centre point at (h,k), radius is r\nOther Form - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"2", " "}]], "+", " ", 
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", "hx"}], "-", 
     RowBox[{"2", "ky"}], "+", "c"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"58080df8-50b4-4863-b4e9-92f0fc795cb4"],
 " (where c = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["h", "2"], "+", 
    SuperscriptBox["k", "2"], "-", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],ExpressionUUID->
  "d28c96a2-a6c7-4194-9306-2c73aebd5561"],
 ")"
}], "Text",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248621933689*^9}, {3.8874089926235223`*^9, 
  3.887408998835838*^9}},ExpressionUUID->"8cd24ed3-2ecd-4fb1-b34e-\
3a9be1ebcc93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"021a84fb-6cde-4023-8c64-d181777af7ba"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8852486261502495`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"879de085-254d-43e0-8b91-4c063587e111"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Semicircle graph ", "Subsubsection",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248666567751*^9}, {3.8852486998701525`*^9, 
  3.885248718342806*^9}, {3.885248775190827*^9, 3.885248775190827*^9}, {
  3.885248883132225*^9, 3.88524889637088*^9}, {3.8852492562594957`*^9, 
  3.8852492614052567`*^9}, {3.887409009183489*^9, 
  3.8874090159897118`*^9}},ExpressionUUID->"dcdf27fb-8e71-4c67-887d-\
d703da74d200"],

Cell[TextData[{
 "y= ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["r", "2"], "-", 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SuperscriptBox["h", "2"]}], ")"}]}]], TraditionalForm]],ExpressionUUID->
  "def0d643-c7e9-4ff1-834e-f95b86c496a8"],
 " + k - centre point at (h,k), radius is r"
}], "Text",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248666567751*^9}, {3.8852486998701525`*^9, 
  3.885248718342806*^9}, {3.885248775190827*^9, 3.885248775190827*^9}, {
  3.885248883132225*^9, 3.88524889637088*^9}, {3.8852492562594957`*^9, 
  3.8852492614052567`*^9}, {3.887409009183489*^9, 
  3.8874090119056816`*^9}},ExpressionUUID->"4b73a7e8-2a99-4880-8d8d-\
015c2ca32672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"8", "-", 
     SuperscriptBox["x", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852487947178717`*^9, 3.8852487959434433`*^9}, {
  3.8852488289434996`*^9, 3.8852488308566165`*^9}, {3.8852488759525614`*^9, 
  3.8852488818653994`*^9}, {3.8852489586881847`*^9, 3.8852489825575895`*^9}, {
  3.8852490379921646`*^9, 3.885249040302639*^9}, {3.8852490769045744`*^9, 
  3.8852491100559072`*^9}, {3.885258223171713*^9, 3.8852582233434753`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"938ca171-c86b-47e5-b092-cc4034a59f17"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$22385#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.828334362058351, 2.8283074717772876`}, {-1., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8852490410995407`*^9, {3.885249095302803*^9, 3.885249110714418*^9}, 
   3.885258224014792*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a0295b2c-0c68-4754-b03f-03377b5693c1"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear Relations and Equations", "Section",
 CellChangeTimes->{{3.889035549913274*^9, 
  3.889035565939006*^9}},ExpressionUUID->"891d6cd2-77d6-48ae-85c8-\
1de616df17e4"],

Cell["\<\
Tips/mistakes: 
- When solving questions for values of m in parallel or perpendicular lines, \
look at the gradient only\
\>", "Text",
 CellChangeTimes->{
  3.8894645753467894`*^9},ExpressionUUID->"95f937b5-bd67-414c-b9c8-\
eef8c00a4d8c"],

Cell[CellGroupData[{

Cell["Linear graphs", "Subsection",
 CellChangeTimes->{{3.8866990786276646`*^9, 
  3.8866990808789415`*^9}},ExpressionUUID->"6d6c9bd9-7c42-40d6-97dd-\
4709de432bee"],

Cell[TextData[{
 "Converting radians to degrees: \[LineSeparator]degrees to radians: Multiply \
by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "180"], TraditionalForm]],ExpressionUUID->
  "e5008493-5eb0-4872-b6cc-656ad795aeb9"],
 "\nradians to degrees: Divide by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "180"], TraditionalForm]],ExpressionUUID->
  "8946aebb-970c-49e4-af1b-918f72eeb296"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QlUTev/P/CbpCIVKkIyNchMKFPIrGTKkESSIZEpGaJMFRWRoVKqi5Ix
hMgsktzmKJUGFc2TUNH9v389639W3waXSif5vNa6VvecffZ5NvXu8zl7P8/u
ttRo1vJmf/3110YB/DFL12Tshg26W2eL4n80125ctWKt/rIpazfpr9DfoLSU
Fw8O5/nrr7/x3/99/S8hhBBCfkBZWVlJSUlRUVFeXl5GRsaHDx9ycnLwCLfH
RQghPy04ONjFxcXHx+fBgwceHh5Hjx7dv3+/ubn51q1bN23aZGRkZGBgsGLF
irVr11pYWAQEBJSWlnJ7yIQQUj1UaMiowsLC1NTUsLCwO3fuODs7a2pqSktL
DxkyREVFRU5OTkJCQkhIiJf3/z4DqaR169ampqa5ubncPg5CCKksMTHx6tWr
9vb2O3fuXL9+/bJly2bOnDlixIguXbrw8/NXDTQBAQHEnbCwMP5UVlaePHmy
mprarFmz3NzcPn78yO2jIYSQ/4GI27Vr16BBg8TFxZs3b14p0HjKtWvXbuzY
sUi/jRs3omCzsrIyMzMbNmzYxIkTz5079/z586CgoNDQ0IyMDG4fDSGEVPbk
yZPx48ezTEPl1rlz54EDB6qqqs6bN8/AwGDatGlt27bt27evk5PTu3fv8vLy
iouL0duin0Wxt2jRori4OG4fASGEfE9ycrKrq6uxsfHmzZv37t3r7OyM7vXx
48evXr368OGDu7t7r3JeXl6cl5SUlNjY2CD9FixYEB0dzcXBE0LIj0BqFRYW
fvz4seoZ0ps3bw4dOhSBduTIEc6D+fn5GzZsQO2nrq7+zz//NOxgCSGkPqGo
GzduHC8vr6mpKXpV9iDycNOmTUi5IUOG3Lhxg7sjJISQukCphoINgbZmzZrs
7Gz24NevX9Hb8vPzi4mJ2dvbl5WVcXeQhBBSa69fv543bx5SbsmSJQkJCZzH
HRwcJCUleXh4jI2N0e1yb4CEEFIniYmJurq6/zdretassLAwzuPXrl0bNGgQ
Hp8/fz6dgCCE/L4yMjIMDAyQZhMmTHj69Cnn8cjIyDlz5uDxAQMGeHt7c3GE
hBBSF+hGN27ciDRTVla+fft2xcd37dolLCzcunVrfEFTHgghv6nS0tKdO3c2
a9asT58+Fy5cqPiUj4/PkCFD/m/VL01NlHbcGiEhhNSRra0tCjYpKSlnZ+eK
jycnJ+vp6SHlunbt6uDg8PnzZ26NkBBC6uLUqVPS0tJCQkI2NjYVH0eZh6d6
9OhB5yAIIb+1S5cu9evXj4eHZ8eOHZUmR8TFxWlra7Ny7tixY0VFRdwaJCGE
1Jqfn9/IkSP/bx3+jRsrXRpXXFzs5uYmJyeHZ2fMmBEaGsqtQRJCSK0FBARM
njwZOWZgYFB1baW0tDTUeO3btx82bNjNmze5MkJCCKkLzvQHXV3dxMTEqhu8
evXK2trazs4uNja24YdHCCF1lJeXd/DgQSUlJQsLi8zMzGq3KSzXwAMjhJD6
Eh8f7+vri6Lu27dvP/va4uLi7OzspKQkvDwsLCyoHPrcXzFOQgj5RcrKyj59
+pSRkfH27dvw8HB/f//r16+7ubkdOHBgy5YthoaGS5YsQds7c+ZMNTW1adOm
HT9+PCcnh9ujJoSQapSWlqKHTUhICAkJefjwobe3t7OzM5pZY2NjAwMDHR0d
RNn48eMVFRW7desmJCRU9eY4fHx8yD0q5wghjcfnz59TU1P/+ecfZJq1tbWR
kRHSTENDY+zYsQMGDOjSpUvLli2rphkPD4+wsLCMjIySktKUKVNQyy1dunTN
mjVmZmb37t1D7cftwyKE/NGQQmg/Hz9+7O7ujlxatmyZuro6Mk1UVLRqoKFm
69Gjx9ChQydNmjR37lw9Pb1169bt2LHDzs7u7Nmzvr6+z58/j4qKSkpKyszM
pLlghBAuKikpSUlJ8fPzs7KyQsE2btw4xJegoCAn0Fq1aiUnJ6eqqqqpqYna
bO3atdu2bbO1tT19+vTNmzefPXuGNEtOTs7JyeGsoE4IIVxXVlaWnZ0dEBBg
b2+PSmzkyJHt2rXj3GO6a9euKioq8+fPR79paWnp6emJGi8iIiIxMTErK+vL
ly/cHj4hhNSosLAwPDz877//Xr9+PfpNSUlJJFuzZs2kpKSmTp26YsWK3bt3
o2l98ODBq1ev0G+i2OP2kAkh5Eehr0SCzZo1q2fPnnx8fPz8/LKysjNmzEDi
ubi4BAYGpqWlUalGCPl9sds6CAkJ9e/ff+7cudu2bfPw8AgJCUH60Z25CCG/
DlpIpE1AQMCvnjaVn59/7do1W1vbK1euREZGFhQU/NK3I4QQxtvbe8KECZMm
TTp27Njbt2+/fv36ny/5XK4BxkYIIXUXHx9vYWHRq1ev7t27r1y58vr161lZ
WTVtnJeXd/v2bXNz89OnT9c0m54QQhqbDx8+ODs7jx49WkxMbOjQofv27QsJ
Cak6XyA5Odne3n748OEtW7acN2/eq1evuDJaQgiphYKCAhRpurq6HTt2lJSU
1NDQcHV1RfqxZ9GfvnjxwtjYmN15QVZW1s7Oruoql4QQ0piVlpZGRUWhG0WI
IcrQw+7ZsweP5OTkoI2dPXt2u3bteHh4+vfvf/To0dTU1IYcG2L27du3t27d
Qqd8//59apYJIbWG+Dp+/PjgwYN5eXk7deqkra29efPmUaNGCQoKCgsLT5gw
4cyZM9nZ2XV8l6ysrIcPH0ZERPznlmVlZQkJCSdOnNDR0VFSUurZsyc6aysr
q7i4uIqbIY0RgBcvXnz58mXdh0cIadpyc3O9vLymTJkiKirKz88vICCAEk5M
TAw5gzqqXm6e9erVq9WrV+/bty8/P/87m3369Mnf33/NmjVdu3ZlU8DwxYwZ
Mw4ePIjSruKWjo6O8vLyffv2VVNTQwkaFBT08ePHuo+TENJUIV4uXbo0bNgw
zsR5OTk5Jyen+rrILTY2FlUi8iokJKSmbVDvoTxD9SgiIoIBSEtLz58/38HB
AS9JTEx8/fo1yjlO5N67dw8h3K1bN2zZvn37adOmofxLSkqi640JIdXKyMg4
fPgwuy0g065du1mzZl29evX71deP79/AwKB79+5ubm7VBhHqSWdnZ9RmeOuW
LVsqKysfOnQIFeDnz5/T0tKQYPPmzUNOnj17Flti+y9fvrx58wa9NkpQNve/
R48eKAKRfnSTCEJIJSiiECO9e/dmWTF9+vQ+ffrga3SvSBsXF5e6f/iPUNq2
bRsfH9/69eurfoyG3OPcmBWRhRLOx8eHpVleXh6ijJ0fgREjRmBLzgvRpT5/
/nzr1q0yMjJsJToVFZW///6bvZYQQgCZg86UxRoizsLCIjg42NXVFXHRqlUr
PIinUObV/RyrnZ2dqKgoSq/AwMCqY0AGtm7dukWLFpqamtiALU6CbPT29mZ9
dIcOHTA8pO7ly5fZq0pLS9HDhoaGRkVFobFVVVVlrW7//v0xfgo6Qsi/5X0i
SrV+/fohHHr27ImIS05O/vf/X023aNEiZAueQqW0e/fuSmc5f5aXl5eCgkKn
Tp1QmyGgKj4VHx+P92LnGk6ePMl5NiIiYuHChSgpBQUF0a6eOnUKEcdGyC53
0dfXNzMze/v2LQaMXlVLS4utNoySD+Onz+gI+cNlZGSgikPlwyLOysrq3bt3
nGdRTYWHh6PEYhcGS0lJIQPT09Nr/Xb3799HfYhdGRgYVNrPhw8fVq5ciack
JSUNDQ2fPXtWWFiIXtXa2hqpyFLrxo0brMBDBr5588bGxgY13tChQ5GK7I5d
eNbf33/OnDktW7ZEFWpkZJSSklLr0RJCfnf5+fmo4thncb169bK1ta0YcRwo
nI4cOYKQQW6gmqpLORcZGYluFG+noaGBprjiU8XFxe7u7uzch5iY2MSJE5Go
KPnQhLICD2PgnAQJCgpCTnbp0gWttKOjY8VJuBU7XBzUuXPnaj1aQsjvDvUS
woSXl3fw4MEnTpzgzO2qCl2tn58fyqo6nm9FHKFOY5+bXblypdKzaWlpBw8e
lJeXZ2cZkHWysrJt27bl4eFZsGDB69ev2WYY55YtW9CWIuIcHByqnhbBu5iY
mCCTcWimpqa0Sichf6bPnz+j4+vbty+KqwsXLvzIPZrLytXlTdFpIscQXCIi
Ivv376+6+Pn79+/d3NzmzZsnLS1d8Y6ESkpKqOvi4+MxgEuXLmHYfHx869at
q+nMr7OzM/prvHbNmjU0LYKQPxNSDoXZ4cOHw8LCGrLauXHjxpAhQ6r9aI4z
sFevXjk5Oc2cOVNcXJyTdci99evXBwYG7tixAxGHdhXtdk3vgpd37NgRr1q1
alVdPkgkhPzWvpRr4DeNiIiYM2cO8gchhoCtaTOUefb29uz0bsdy7Dq61atX
o9LD1wMHDvT29q72tSjwNm3aJCAggKbV3Nycpn0RQhpSVlYWukjE1KBBg65d
u/adLS0sLPj5+dmpii1btvTq1YtVdKyZlZOT8/T0rPoq9KeOjo7slIqiouL1
69d/2aEQQkg1vn79evToURRpoqKipqam35lS4ebmxibsDx8+3MbGRl9fX0xM
DP/bvJyIiIiZmVleXh5n+9LS0vj4+EOHDrE5Ytg/svE7p1QIIeQXCQkJmT17
NpJKWVn59u3bNW2Gfha9LS8vLx8fX79+/Tg3qpYshy8GDBiAwAwODkYX7O/v
7+TkpKur2717dxZxWlpaL168aMjjIoQQ5tOnT+fPnx86dCiyaO/evTXdNKew
sBCbqaqqCgkJ/VXBqFGjxo0bh+hjVzJPnz4dmTl+/Hh0skhOtj4J4g65V1xc
3MCHRgghTE5OzqVLl9avX3/hwoXv3BoMQXf//n0TExMWYgICAuhhrayszp49
q6mpyc5NVITYVFFRsbCwCA0NpYgjhHAXUigrK+s/F68rKyvLyMhAYebm5rZ/
/353d/eEhAQEI9peS0tLZN3kyZNR2qmpqS1duhSPPHjw4Eeu/SOEkMYvOzs7
MjIyICDg0aNHQUFBSUlJVe9BRgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhFRUWlqal5eXnJwcERHx5MkTb29vFxeXo+Xs7e0Pl7Ozszt06NDB
gwcdHR2vXbsWGBgYHx+fm5uL13J7+IQQUllxcfH79++DgoIQaMePHzc3Nzcy
MtLV1Z09e7aqqurAgQOlpaUlJCTExcXFxMTatWvXtlybNm1ERUU7deo0aNCg
KVOmLFq0aO3atRYWFmfOnAkICMjOzub2YRFC/mgoujIzM0NDQ5FsVlZWy5cv
V1NTGzBgQIcOHVq0aPFXbQkJCcnIyEyaNGn79u2+vr4ZGRncPlBCyJ+lqKjo
zZs3N2/etLW1NTAwmDFjBpJNRESkYlK1atWqe/fuSkpKU6dOXbBgwcqVK42N
jZFapv9rRzk8paenp6Ghge1R13ESEvtUVlbeuHEjUjQlJeXr16/cPnRCSFNW
UlKCqLl79y7KNi0trWHDhqHx5MSaoKCgrKwsMk1fX3/Lli3W1tanT5++detW
YGBgdHR0WlpaQUFBcbmS/4WCEE8lJSUFBwdje2dnZ3S7CD1FRUVEJdszGl7k
5Pnz59PT07n910AIaYJycnIQVkePHl22bNnIkSM54cbHxyctLT1hwgRdXV1E
k4eHBzZ79+7dp0+fysrKav12X758Qej5+PggLfF2oqKieK/mzZv369cP4Ymn
6vHQCCF/MqRNTEyMp6fnpk2bpkyZgl6ShZuAgEDv3r3nz5+PDtTNzc3f3z8x
MRHJVu8DyMzMROloZmY2fvx4MTExvHW3bt22bt0aHh6OIrDe344Q8udAvr15
88bR0XHBggXy8vL8/Pws3zp37qyuro6cuXDhwuvXrz9+/NgAg0El+eTJExMT
kx49emAMHTp0WLx4sZ+fX2FhYQO8OyGkiSkuLo6NjXVyctLS0kLhxMJNXFx8
7Nixq1atQu69fPkyNze34QeWnJxsa2uLGpKdhB0zZsyZM2fy8vIafiSEkN8U
8i0uLu7kyZMLFy7s3r07y7cuXbpoamra2Ng8fPjw/fv33L1eNyMjw8XFZfjw
4WiZMbYBAwacPn2aKjpCyH8qKSmJj493dnbW1taulG/Hjh2LjIz8FZ+51U5+
fv61a9cwMPYx3ejRo2/fvk2f0RFCaoLaLCEh4dSpUzo6OuxTr0abbxxfvnx5
9uzZvHnzBAUFW7VqtWjRorCwMG4PihDS6CDfEhMT3dzclixZ0rNnTx4ensaf
bxxorn18fEaMGIExt2/ffuvWrXR5CSGEA/mGTDh9+vTSpUtlZWUr5tvRo0cj
IiKKioq4Pcb/htbVxcWFnYxAl21jY0MTwQghkJ6e7uXltWzZMnl5eV5e3t8x
3zgQawg39kGigoKCu7t7Y64/CSG/GhLs5cuX5ubmffv2bd68OZJBSkpqzpw5
v2O+caAoRbuKphWHM3v2bBwIt0dECOGOtLQ0Z2dnNTU1FghNIN84/vnnH3V1
dXbF8qFDh+jCEkL+NPipf/bsGQoeOTk5REHr1q1HjRp18ODBJpBvDI7i+PHj
Xbt2xdFNmzbtxYsX3B4RIaThpKSkODg4TJo0ic2v79mzp5GR0d27d7kyeeHX
iYmJ0dLSYudbLSwsmtjREUKqlZ+f/+jRo40bNyLZ8OMvJiY2efJkJF5SUlJd
VgtpnIqLi0+dOiUjI4MjHTt2LA6c2yMihPxC3759S0xMtLe3x887W7OoV69e
pqamAQEBTfgzK6T3ihUrWrRo0bZt2x07dmRmZnJ7RISQXwLN2u3btw0NDdn1
FR07dpw9e7a7u/uHDx+4PbRf6+vXrxcuXOjXrx+OWklJ6datW9weESGknpWW
lr5588bW1nbEiBFCQkL8/PyKioqWlpZhYWGfP3/m9ugaApLc2NhYqBxa9ffv
33N7RISQepOdnX316tWlS5dKS0ujmOnatauenp63t3dWVha3h9agfH19lZWV
8TfQt29fLy8vuk8EIU0AfpBRwtnY2AwZMkRAQEBYWFhFReXw4cOxsbF/4F1N
kepmZmZt27bl4+PT19dPTEzk9ogIIXWSm5t748aNZcuWsRJORkYGndqDBw/+
5LUlHz9+PG7cOHbZjLOz85cvX7g9IkJILX38+PH06dNo0Fq2bMkuFHF0dExJ
SeH2uLgMyW9lZdWhQwcE3fz586Ojo7k9IkJILT19+nTixIn4WZaXlzc1NX3+
/HkTvlDkpwQFBampqeFvBiXu0aNHa7o5RXp6+tWrV728vGjVJkIaoW/fvh06
dKhNmzZ9+vSxt7en84kVIe0PHz4sJSWFoNPQ0AgODq52Mz8/v/HjxysoKGze
vDk8PJxOVRDSqCDlbG1tkXKGhoa0rlpVkZGRc+bMYVcMWltb5+fnV93m0aNH
Y8eOZffuWbx48ZMnT+hDPEIalVu3bmlra585c6bpzdiqu0+fPjk6OrJLo9HX
o7uvuk1ubq67u/uQIUN4eXlbt26tqan5+PHj4uLihh8tIaRa6FKDgoLevXvH
7YE0UnFxcTo6Os2aNRMTE9u1a1d2dnbVbfLy8s6dO6ekpMTDwyMiIrJw4cKA
gIA/8AocQsjvqKSk5PTp0/Ly8ijnRowY4efnV+1mBQUFZ8+eHTRoEDZr06aN
rq5uSEhIAw+VEEJqJyUlZc2aNYKCgsLCwiYmJjVN5kVF5+rq2r9/f7Z4Cwq/
P23OCCHkN/Xt27erV68OHjyYLcyCKKvpxhA5OTlHjx6VlZWlyf6EkN9LRkbG
jh072CKiU6dOffDgQU2Xz717944VfkJCQhs2bEhLS2vgoRJCSO08f/58ypQp
nKVEnZ2dq21dUfhdu3ZNUVGRFX5eXl4NP1RCCKlWUVHR06dPg4KCqj09imfP
nj07ZMiQFi1aIMEGDRqENrba/aDw27JlS+vWrZs1a7Zt27Y/ZMUqQkjjl5yc
vHHjRnSmNZ01yMnJuX79+tq1aydOnKilpXXv3r2adoVKr3PnzghDbIxX/bIh
E0LIT4iMjNTU1FywYEFMTExN26Ahff/+/bNnz0JDQ78z4ff06dM9evRAyhkY
GNCkEkJII8Gm50+ePDkgIKCOu/Ly8lJQUEDKLV++nE5AEEIaibCwsJkzZ3bp
0uXgwYN1uU1henq6mZmZhIQE61irnS5BCCEND3FkYmIiKCg4bNgwT0/P2gVd
UVGRm5tb7969EXGysrLu7u401YsQ0nhcu3Zt8ODB/Pz8CLojR468efPmp86Q
pqSkODk54bU8PDxt2rTZvHlzamrqrxstIYT8LDSbNjY27MRB9+7dFyxYYGdn
9+DBg6ioqPfv39e0pFJhYWFMTMz169c3btzIbloN48eP9/f3b+DxE0LIf0pO
Tj5w4ICcnBwLq44dO6qoqGhqaq5YsWLbtm3Hjh27ePHi1atXL1265OXldebM
GTyCPhd5qKioKCIigpdISEioqamdO3euoKCA20dDCCHVSEtLc3V1XbhwIVtZ
jqN58+bt27fv27fvoEGD+vXrp6CgICsri0f4+Pg4G/Tv33/37t1BQUE1TQEj
hJDG4PPnz2hCkXVr165FncbWPBcWFv6rOq1aterdu7eGhsaGDRtQ49EFcoSQ
38XXr1+zs7Ojo6OfPHly4cIFW1tbY2PjVatWoXvFnwYGBoaGhkg2S0tLPBsc
HJyVlfXt2zduj5o0Wfn5+f/884+Tk9OJEyeioqLom43UO3xTFRQUvH//PjU1
FX+mp6ejbMvLyyspKeH20EjTh+86hJu6unrnzp0lJSWNjIxevXrF7UERQkj9
QBWHiGNLFzLIOnt7e1oLghDSBHz9+vXu3bsqKioVPw3m5eUdPny4jY3N48eP
aVVqQshvLTY2duXKla1bt6565ktCQmLcuHFmZmaBgYFFRUXcHikhhPy07Oxs
a2vrLl26INPk5OTYsjkKCgqdyrGsExMTmzJlyunTp2mZL0LIbwdF2tSpUxFl
3bp1s7KyioyMRPc6ffr0adOmWVpa6uvr9+rVi2Udijp0r9weLyGE/JwLFy70
6dMHITZ37tyoqCg8kpiYaGdn5+rqmpmZ+e7du1OnTg0dOpRVdAcOHKjp1kuE
ENI4HT58uG3btgixdevW5eXl4ZHS0tKMjAxOc1pUVIRt2NrU2trasbGxXB0v
IYT8hC9fvmzbtq1Zs2YCAgJ79+6taRWvoKAgNLBIuYEDB3p7ezfwIAkhpNbS
09MNDAwQX1JSUi4uLjVthtbV0NAQmwkJCVlbWzfkCAlphMrKytDvJCYm0oUH
jR/az4ULF7IiraZ7xv1bfh527dq12Ay97ZEjRxpyhIQ0QqGhoaampkuWLEFr
Q3PTGjn8MsK/FJvp4OTkVNPE1devX8+fPx+bDR48+Pr16w08SEIalYKCgr17
97JPs5cvX05LGTdynz59srS0bNOmDQ8PD3pSdKbVbnb//v3Ro0fj31RDQyM4
OLiBB0lIo8L5pQ+TJk2q6W5leeUaeGykWrdu3VJSUsK/V013l8vJybGwsOjQ
oQP95iIEHj58OHbsWJZysrKyHh4eVbdJSko6cuTIyZMna6ocSEN6+/bt4sWL
2bLVtra2le4CjGLv3LlzgwYNwgaSkpL4h6tp3X5C/hA3btwYMmQIS7mWLVvu
3r276g+Fv7//hAkTxowZ8+DBA26MkfyPz58/HzhwoF27dvgnU1RU/PvvvzlX
ypWUlDx+/HjatGm8vLxCQkK6urrssmFC/mTe3t4DBw7kzPVeu3Zt1ZmPaIvQ
HImJiVlbW9OF9I3Bs2fP1NXVW7RowcPD079//82bN585cwad7LFjxxBxbdq0
wT8lSvS7d+/SbTEJ4UwX4qRc1Ztis1oOYYhWiFKuMUCXeuXKlYkTJ6L8xr+a
gICAjIyMkpISZ7Y+/k3d3NwqNbOE/Jk8PDw4tyeD9evXVz3L4Ovri5+gJUuW
JCQkcGOMpBpFRUX37983MjLCb59WrVpx/gVRcquqqtKHqOQ3hV7y8ePHKKjw
7f3hw4d6WeTf3d29W7dunJ+RTZs2Vb3XmKenp7y8vI6Oztu3b+v+jj+itFzD
vNfvC98A7969u3r16o4dO/A7CP9Ay5Yts7KywjcJLbhEfjv4kQ8NDd29ezd+
Tffq1UtFRWX16tWXL1+u2l3+LPzSZ9O6GRMTk0pLapeVldna2oqIiCxevLhh
Uu7169dHjhxxcnKi0vEHofzG31VcXFxycjJ1qeQ3FRUVZWBgIC4uXnH5a7Qq
jo6O1TYmSMXi4uLvFHvYICsrKyYmxszMTEJCgu2zdevW+/fv//r1a8UtUdoZ
GxvjWV1d3cTExPo/tv+FRgyh2qFDB5pmTsifIy0tzdzcXFJSkl3SNmPGjFGj
RrHZCr179z527Fh6ejrbEgGFILp27RrCasuWLcePH3/27FnVeo8tQYZqcMGC
BUOHDuUsrK2goODl5VVpY5QHS5cuxbN6enr4+lcfLGoSdjHYgAEDKOUI+RMg
uM6dO4c0Y8tf29jYhISE+Pn5rV27VkpKCg+igT18+PCHDx9QdOFxlHyDBw8W
FRXl4eHp2LGjlpbWo0ePKu4Q9duOHTt69OjBzs21atUKZeF35j4EBgZOmTIF
zyIVG+AD7fj4eB0dHXaW8MKFC7/67QghXJeamrpq1armzZsjuDZv3oy67t/y
z8piY2N37dolIyODQJCXl0fx5uTkpKqqyi4tQABqaGggl9D9RUREcPb25s2b
TZs2If1YZiIqly1bxu4gACiiKn0U9uXLF1dXVxSQfHx8O3fuRBf8q4+3sLAQ
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
HcePH3/o0KGaJrgxSHjkvIeHB7p47v7TYyQYf2Bg4P79+1Ha8fHx4SjGjBlz
8ODB6OjopvrLlzSk3NxcNG6PHz9uqt9Od+/eXbhwoZqa2rp167y8vJKTkyst
Vvy7Q5rZ2NjIycm1bt16woQJ+Nre3v7s2bPf7/vevXu3fft2vGrp0qUVl3zh
IlR3Fy9eRHPBLiDv0qXLihUrAgICGn8PTgh3ofEJDg4OCgrKzMysl/v1NCqf
P392dnaWkZFp06bN/Pnz79+/j0d+5NO5iIgItjALOkREYsOM9j+hrnv16hV6
WEVFxRYtWggLCxsZGTXAOvmEkEaLs4rU2LFj/fz8fvyTxqioqLlz57JzzZaW
lo0q/1HUoepm0/S6d++O0pQ+oyPkz1RQUHDw4MHOnTtLSkqi/vmpKKi4XIyx
sXFj+1T206dPrq6ubLnC0aNHI8AbVQ4TQhpGSEjIjBkz2Ezhf/7556dey1la
EFauXPnhw4dfNMhaS09P3717NwK8devWhoaGDXavXkJII1FaWurg4CAlJdW2
bVsLC4tqV5f6jpycHLZWAyxcuDA2NvYXjbMuQkNDZ8+e3axZs27dutnZ2eXm
5nJ7RISQhoPqa9WqVcio4cOH37lz52df/vnz5y1btrCU09DQQFn4KwZZR1++
fPHw8Ojbty8GOXHixKdPn3J7RISQhvPy5Uu2nvySJUtqcRayrKzMysqK3ZFt
8uTJ31kpmrsyMzO3b98uKioqLi5ub29Pn84R8ue4evXqwIEDeXh4tm7d+v0V
UGvi7u7OVuGbMGHC98skRGJqauqlS5eOHj16//79qku4FBcXFxYW/qK5JOxI
MU4jIyNqWgn5cyBwUN7UZaFjPz+/ESNG/GcziLYRdSPa2379+klISIwdO/b6
9eucZ9kVbseOHduwYYOnp2d2dnbtBvMdYWFhM2fOxDjnzp1b08qEhJAmBsXb
tm3bmjVr1rdvX5RYtdtJcHDw9OnTkR5jxox58OBBtdsgxB4+fKilpcW5pRre
FC0kW4oB7eT58+fxLJuCqqKiUtN+6uL9+/crVqzA/sePH1+LJcIIIb+jtLS0
uv/gcy4M7t2794ULF2raRk9Pr9KN29avX5+Xl5eQkGBtbc25bSW0adNm//79
tWufvyMnJwe9KvY/atSoWiz3Sgj5HSF8NDU18YM/b948NIy12wln3oSIiIiN
jU3VD/Zzc3ORY+x2ukgzhAxLOXSvqOUQjH369MH/CgkJycvLs3Lu+zeDqx3O
RS+1O5tMCPkdcU6w6urq/uwJVgRURkZGfHy8j4/P5MmTWRm2YcOGqucUUCWq
qqqyaVbIGXV1dXZzImdnZzx7//79RYsWycnJSUpKImzZbR+nTp1a7zfR4NxK
SUlJ6datW/W7c0JI4xQaGso+kEfOIK9+/IUfPnxwd3dftWoVXohE6tKlC0u5
xYsXV5pcUFxcbGtr265duxYtWiDf9PX12VIh+BoZ+2/52sthYWGo61Dmbd68
md3eqFevXufOnavfg33z5o2WlhZ9LkfIHyUmJobdGhItJxrPH3zV+/fv7ezs
2ORQHh4eXl5e/MlSruppVs5tQbp16zZp0iRZWVl8LSMjc+zYMc6E2ZSUFOQb
CsKLFy9u374dediqVas9e/bU7zLRvr6+ysrKeHcdHR2a50XIHwJdKnrVn7o7
T1FRkYuLi7y8PLv395IlS4YPH87z/3Xq1OnEiRMVV94LDw+fNWsWu/sk+2gO
tdyuXbvY4pwlJSUosfbu3Ttu3DjEWmpqqqurq7S0NDZbvnx5PS5pjjdiJWXL
li3Nzc0b26oChMEvvocPHwYHB3N7IKTp4Ezv+s5FIJVwTlgg4pAbQUFBbLa+
dDl8gR1y5uzjm/b06dODBg3i3LkbObN27drY2NhPnz6hRz5z5gwqK+SkiYlJ
XFwcXvLo0SMkHrZUU1NjLW294FxGoqCgcP78+fraLalfqLHx7bF79+4mdiMV
wkVIoXXr1uFnX1FRseI1ujVBReTk5MTSbOnSpcnJyffv32d3pFUvxz714tzK
DcmJB4WFhVnE4QvE6YEDBzw8PPbt26etrY3M6dOnD76r0TuzFTuRdYsWLcLG
eBwNbH0d6fPnz9kpkunTp1Op0GjhFx9+6+HXKF22TepLcXHx9u3b0Wl27tz5
5MmT/7kyMOdijC5duiDuUCCZmpq2adNGSEho27Zt+Bo51qFDB/SemZmZ2P7m
zZvIQNRvrVq1YinXt29fZWXlXr16iYqK4k1nzpzp7OyM/XDeorCwEHUdLy9v
69atLS0t62W2F44LjTCbhrZ69Wo2NtIIJSUl4bfnkCFDfHx8uD0W0nS4uLhI
SUnx8fGtX78+Kyvr+xtzTiWMGDHizp07t27dUlJSYtdm+Pr64hH0nqwMc3d3
//jxI1pXb29ve3t7ZKmGhoaMjAw/P7+4uDi219LSOnLkSGhoaNW1nhwdHTt2
7MgWrKsYgLWGnRgaGuIYsdvjx483sRt2NCXs85C6zMQhpKp//vmHzc/6kZuG
FxQUbNy4kV3thjYTwYgqrm3btjt37swqh+BiZ1GxN7SrnEosNzc3JCQEjSrK
s2PHjiES0aLWdArg3r17o0ePZks51b27RCGHpGWfDU6bNu0HT7IQrrhx4wYK
OVVV1cePH3N7LKTpyM/PNzMzQy/Zvn37Q4cOfX9eFRIDjS274E22HL4YN27c
o0eP2AapqaloV7EBGlJ0o1evXq20+seP3DEHAcgubEM0YQ91PEDUk0hjQUFB
1JAWFhZ064dG68uXLwcOHGjTps2CBQuio6O5PRzSpHBuNaujo/Of1waHhYUt
XLiQLSgHXbt2rbT6blxc3JYtW1DsCQgIjBkzBmXbz44nOzt7zZo12LmkpKSD
g8NPH8//unbt2uDBg2n9zMbvzZs3+NZq3rz5pk2baGksUr+Sk5P19PRY7XTp
0qXS0tLvbPzx48c7d+4sX7581KhRM2bMOHr0aEJCQsUNUKrFxsaiLFRXV1dT
U6tFMYbf6Vu3bsV4kJOovupyH9X09HS02MhkFHL79u2jQq7Rwnedq6trz549
5eXlPTw8aJlTUr9KSkpOnDiBNlNISEhbWzs4OPj732P4hkTBdvfu3ZCQkMLC
wmq3KSgo+Oeffx4/flyL+90g1iwtLRFxnBn9P7sHDh8fH0VFxR9Z4ZNwF37V
Llu2jIeHB9+BjfPuIeR39+rVq1WrVrVt2xY1j6GhYa3XJ6kvjo6OaFfZur45
OTm128n79+83bNjQqlUrVshRE9SYXb58uX///p07d0Z3UO+LbhHyb/mFc8+f
P0ffikBAvBgbG3P396mXl5eCggJSTl9fv3bzvL5+/Xrx4kX84NAnco1fRkbG
xo0bUb3TNdvkl0Ifim8wAwOD9u3b41eqqanp27dv6/KZWF14e3sPGDCgdktC
MeiAUJ3y8/N36tTJxsam6npQpPG4ffv28OHD27Vrh5Kb5naRX+rbt2+RkZHr
16/v2LFj165dkXi+vr6/4hYM/+nMmTMyMjJIuRUrVtTuwmAUcmxxzpkzZ4aG
htb7CEl9ycrK2r59u4iIyI9PpiakLlC8xcTEoJDr3r27kJCQsrLyyZMnGz7o
Dh48iG97ZNSmTZtqOsHxfRg2qriePXs6OTnRCiSNmZ+f38iRI4WFhbdt2/af
s28IqS9JSUkuLi7oFpWUlIyNjdH9NeS7c2bXot/cu3dv7SZkoSg9dOjQqVOn
6n1ldVKPEGv4lYrfaPh9WotLKwmpC0RNQkICvvECAgKqTjWtu8/lqn0KpSNb
E0BSUtLR0bHWb1FcrtYvJw3g7t27KORatmyJX6YZGRncHg4h9SY6OtrOzg5t
6YsXL6o2pOHh4bNnz66vGV6k0WKFnKio6A8u/EXIb4RNyu7QocPUqVMPHz6M
7pLz0RkKORsbG7aE3axZs5B43B0q+XVQyI0aNUpAQMDIyKheFp8hpPGIi4vb
s2ePnJwcW2R4zpw5e/fuvXjx4rVr13bt2tW3b1/WrlpbW9N1BU0Vfp3t2LED
hVz//v0vXbrErWuWCPl10tLSHBwchg8fzmZysQU2Bw8eLCYmxu5MraOjQ1eA
NGH3798fPXp08+bNV65cSWeISFOVn5/v6+u7Zs0aRUVFzqrpbPG65cuXP3r0
iGb6NFUo5Hbu3NmmTZtevXp5eHjQuqakCUOfkpKS4uPjs3v37qXl1q5de/z4
8ZiYGPrOb8JYIcfDw1PruS2E/HYKCwsTy2VlZdHlH01bZmYmu11Iz549XV1d
v7/SFyGE/F6QaZcvX2brmi5atIjdnpIQQpqM2NhYPT09fn5+eXl5d3d3qtsJ
IU1Jfn7+4cOHu3btinZ169atdI0cIaSJefTo0bhx49CrqqqqPnnyhNvDIYSQ
+pSamrp582ZRUVHUcqjoaMU/QkhT8unTJxcXF1lZ2ebNmy9evPjNmzfcHhEh
hNSnkJCQGTNmoFft37//+fPnS0pKuD0iQkidFBUV4efa39+fVhP6t/wCuX37
9klKSoqLi5ubm9PfCSFNQFRUlJGR0fjx421sbJKSkv4tv49tQkJCeHh4ZGRk
XFxcSkoKfvYLCgqafFVTWlp65coVdoHclClTAgMDuT0iQkg9ePXq1fz585s1
a9atW7cVK1bs37/fxMRER0dn1qxZc+bM0dbW1tPTMzAwWL9+PYocT0/PgIAA
hOGnT5+4PfD6h0hnF8j16NHjxIkTtVvfnhDS2CCvjh492qVLFxQw+AFv1apV
8+bN/6qOkJCQvLz8pEmTlixZYmpqeubMGbS6eXl53D6C+pGVlYVqtmvXroKC
gqtWrUI1y+0REULqAedWaJ06daoYaK1bt+7Xr5+KisqwYcP69OmDn31RUVFe
Xl7OBshDWVnZGTNmbNmyBQUeCsLfurpDP+7m5sZWCxw6dOj169dpBQZCmgb0
aJs2bWrfvj1+ulHO4Qe8Q4cOLOWGDx++Y8cOLy+vixcvIgEOHz68devWxYsX
T5gwoWfPnih4OHEnJyc3b968Y8eORUVF/Y5Z9+XLFx8fn5EjR+JwcGh2dnZ0
fy5CmgYUMEeOHGEruqMVtbCwuHHjxr59+1hJg/509OjRDg4OaWlpbPuPHz++
ffvW398fvaqZmZm2traysnK7du1Y3GE/c+fOPX369O8VEWVlZS9evJgzZw5y
GwXtzp07aZ1MQpqMly9fqqurs7VA9+7dy6ZqIqOQVJMnT27Tpg2eQluKH/yw
sDAUPBVfW1RUhDrw9u3btra2enp6I0aMaNu27e94/4uYmJg1a9Ygq3G8BgYG
0dHR3B4RIaTeODs7I98QTahkIiIiOI8jwZ49e2ZkZMTKPPSwKNLOnTtX7cVj
xcXFSUlJd+7csbKy0tfXR9+ampragAdRJ8nJychw/CW0aNFCQ0MDR/3t2zdu
D4oQUj9Qm23fvp2Xl7dVq1Z79uyptKI7+rj4+Pj9+/crKCgg6Pj4+Pr3748u
NTAwsKY73iIbU1JScnJyGmT49SA9Pd3GxqZHjx44QCUlpStXrtCy9oQ0JfgZ
R4PGPm8/c+ZMTducOnVq/PjxoqKi2FJcXHzKlCnHjx9PTEz83Wue3NxcR0fH
Xr164bh69+6NsrbJXBJDCGFiY2O1tbXxMz569Oj79+/XtFlhYeGTJ09MTEzY
vRqhe/fuiMcbN25kZ2c35IDrEcpONOBsjgNC/uDBgzSTi5Cm5/Xr1/PmzcOP
+eTJk58/f/79jdPS0lxdXWfNmtWxY0e8BE0uWjxLS8uwsLDfrssrKSlBqk+a
NAndOp1UJaQJ49RyaEj9/f3/c3ukGTJt//79ysrKLVu2xAuReDNnznRxceFc
atL4oYpDxM2dO1dYWLhNmzarVq2ik6qENFWJiYm6uroIKxUVle90rJWgS715
8+bq1avZh/bsUpPNmzc/fPiw8X+ulZ+ff+nSpSlTpiDi+Pn5NTQ0nj59+rt/
wEgIqUlqaury5cvZhKYbN278+AsRC0hIBweHqVOniouLYw+ioqJjx449dOhQ
TExMo123JCsr69SpU8OGDePj40PKqaurI65/x5kahJAfVFhYuHXrVvzIS0lJ
OTs71+LlgYGB5ubm/fr1Y/NbpaWlFy1a5OHhgfxsbAXS+/fvjx07xuZ0IJkX
L16M4pMijpAm78yZMzIyMgi6bdu2FRUV1WIPGRkZ586dQ7ixJU2aN2/ep0+f
VatWeXp6JiUlNYZ7NBcXF0dEROzevVteXh4j7NSpk5GRUXBwcKOtOQkh9Sgs
LGzmzJn42V+yZEmtFxpCXERHR9vZ2Y0ZM0ZERIRdQqygoLB06VI3N7f4+Hgu
3sY0MzPTy8tr3rx57NRw165dt2/fjra6rKyMW0MihDSk/Pz8HTt2CAkJKSkp
+fr61mVXeXl56AFNTU1HjhzJsq5Zs2YoFLW1tZ2cnBAslabB/mrI3tevX1tZ
WQ0YMIAtl9e7d29ra+vExMSGHAYhhOsePHgwadIkCQmJLVu2pKen13FvqJ38
/PyQnKjr2OR96Natm5aW1sGDBx89evThw4dfvW4bSse3b9+iZV68eLGUlBQG
gKNTV1d3d3ev+wESQn47BQUF165dmzFjhqqqKr6ol31mZ2cjPHft2jV+/Hh2
EpZFzdixY1esWOHg4BAUFJSbm1sv71VRYWFhaGjo8ePHdXR0+vTpw8/Pj/eV
k5NDhfny5Us610DIH+vz58/+/v7m5ubXr1+vx90ix7BbCwuLqVOnspU5mc6d
O0+bNm3z5s0ot8LCwlD+1f1EAHIVhaKlpeXMmTNZ/caZdYt++Te6aJkQ8oug
i0QU/IqGLi8vLzAw0N7eftmyZZw16NgKw/Ly8rNmzVq9erWVldX58+cDAgIS
EhI+fvz4I6cGEIxItri4uBcvXuC1JiYm48aNExMTYzvv2LGjmpoaQu/58+d0
hxpCSAMoLi5OTk728/Pbv3//woUL+/fv36pVq4r3mOjdu/fkyZMXL15sbGx8
9OjRS5cu3bx58+7du48fP0b6od9E1RcZGYkv8LizszPa4TVr1mhra6NQVFBQ
YDPOmjVr1rNnTy0trSNHjmDL/Px8bh83IeSPU1RU9ObNmytXruzcuVNTU3PI
kCGcBdUZHh4eCQmJfv36DRs2bNSoUajQJk2ahMIMreicOXPwBR5HTyogIFDp
XjzY1YoVK9zc3GJiYugjOEII16HQQm1248YN1F2bNm3S0dGZOHEietiKNd53
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
6dKlfv364XG0unFxcQ16YIQQ8v9dvXp10KBByKIJEyY8ffq0ps2+fv369u1b
Kysrzn2xORfaIdYOHTrEmlN1dXU8iC3v3r27cOFCERGR5s2bb9iwoab8JISQ
Xy0xMVFXVxcBJSEhYWlp+f0pFZzTstC6dWvEV0pKCh4PDQ2dOXMmO+s6ceJE
HR2dUaNGsZOzvXv3Pnfu3Ldv3xrqgAgh5H8UFxc7OTl17doViTRixAgfH5/v
nA+NiorS1NT86/+Tl5dHgv1bfq7BwcGB088yfHx8qBLt7e3p1AMhhLtiY2NX
r16N7lJQUBAl2f3792u6jjczM9PQ0JCTY7y8vFu3bmWXjiQlJdnZ2c2ZM2f0
6NFycnJ9+vRBRXfx4sXvT5IlhJAGUFpa+uTJExRp6DGRdStXroyJialpy2PH
jqEt5QSdvr4+Z1WT7Ozs8PDwe/fueXp6XrhwITo6uqSkpAGPgxBCavTlyxd/
f39jY2MNDY29e/d+Z+W6iIgIFGmtWrViKTdv3rxXr1415FAJIaR2vn37lpaW
FhwcjN4TNVtNmxUXF9++fVtVVbV58+ZIuenTp+MlDTlOQgj51diCmQsWLFBW
VjYzM3v37h23R0QIIfXs8+fPkZGRvr6+0dHRtAo6IYQQQgghhBBCCCGEEEII
aZL+HyWSIv4=
     "], {{0, 157.}, {209., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{120.5, Automatic},
   ImageSizeRaw->{209., 157.},
   PlotRange->{{0, 209.}, {0, 157.}}]], "Input",ExpressionUUID->
  "16085d77-35ae-4944-bb7b-54938f7b05f0"],
 "\nWhen finding the angle a line makes with the positive x-axis, if it has a \
negative gradient, you must subtract that angle from 180 to get the right \
angle.\nDistance formula: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["y", "2"], "-", 
         SubscriptBox["y", "1"]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "2"], "+", 
         SubscriptBox["x", "1"]}], ")"}], "2"]}]]}], TraditionalForm]],
  ExpressionUUID->"34c47020-8fc2-457f-a7c5-ba6ab038dcfe"],
 "\nGradient: ",
 Cell[BoxData[
  FormBox[
   FractionBox["Rise", "Run"], TraditionalForm]],ExpressionUUID->
  "90e01b8a-f0ae-49ed-807f-42414253c057"]
}], "Text",
 CellChangeTimes->{{3.886699096956606*^9, 3.886699192785263*^9}, {
  3.8867369663345847`*^9, 3.8867370251729403`*^9}, {3.886737352237273*^9, 
  3.886737352514721*^9}, {3.8867965604886513`*^9, 
  3.8867965931014047`*^9}},ExpressionUUID->"ed19e867-480d-4e2c-8aba-\
13ec07933d70"],

Cell[CellGroupData[{

Cell["Parallel lines", "Subsubsection",
 CellChangeTimes->{{3.8867369305462155`*^9, 
  3.886736932166446*^9}},ExpressionUUID->"88305daf-f105-486f-9dd3-\
1d6abd818a77"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["m", "1"], "=", 
   SubscriptBox["m", "2"]}], 
  TraditionalForm]],ExpressionUUID->"0217b2f5-4d9a-47f1-bc54-a7c0b9a7c6df"]], \
"Text",
 CellChangeTimes->{{3.886737068521684*^9, 
  3.886737071648363*^9}},ExpressionUUID->"8a04927b-de26-4716-85fe-\
599f643d6659"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perpendicular lines", "Subsubsection",
 CellChangeTimes->{{3.886736937457196*^9, 
  3.886736939012989*^9}},ExpressionUUID->"e1a1237e-7892-4c8f-9508-\
0fa305991d5b"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["m", "1"], 
    SubscriptBox["m", "2"]}], "=", 
   RowBox[{"-", "1"}]}], 
  TraditionalForm]],ExpressionUUID->"d7aece26-beff-40e6-8cae-ca8e2ad19c31"]], \
"Text",
 CellChangeTimes->{{3.8867370591396947`*^9, 
  3.8867370652815557`*^9}},ExpressionUUID->"7284293f-7c08-40d7-857e-\
1d404b9d9973"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Probability and Counting Methods", "Section",
 CellChangeTimes->{{3.8890355729661217`*^9, 
  3.8890355761850767`*^9}},ExpressionUUID->"b7a553ba-c4f2-4ca1-94ef-\
8e0032c26152"],

Cell[CellGroupData[{

Cell["Basic Definitions and Information", "Subsection",
 CellChangeTimes->{{3.8874007296663675`*^9, 
  3.88740073740357*^9}},ExpressionUUID->"f89873ca-d831-4a18-a00f-\
a677189d2537"],

Cell[CellGroupData[{

Cell["Sample Space and Events", "Subsubsection",
 CellChangeTimes->{{3.887400784774577*^9, 3.8874008113854723`*^9}, {
  3.887400867038417*^9, 
  3.8874008697425814`*^9}},ExpressionUUID->"55ed0a99-dc35-4f4a-a4e5-\
ebeef7213a75"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdcFNue7zsv3M+dN3fefXfemzl37mdm3n1z9kn77OM2bHNWxACIkgRB
QESMYABFAVEEFRQDOeecc845hyZKhqaBzk3nVIFX1U1ooAlG2HPW9/Pf7qZq
1VqrVq361ar/qqr/v1+5q33tf/2bv/kbm7/F/tE2e3TM2trMTue/YX/o3bG5
ef2OxdUzdx5YXLew3nvlf8MWHvxf/uZvxrH/8N+eH97PAAAAAGBTgkk0UGkA
AADYtACJBgAAgE0OBEEbXQUAAAAAKAeTaDCcBgAAgE0L8EsDAADAZgaTaB9v
r42uBQAAAACUo1SiWSLRnoQoYMCAAQP2nU0nJ00Cw0s0WSwWL1mComgvhQAM
GDBgwL6/SWHJEolW6pfe8HoCAwYM2F+nLVHplWYPN7yewIABA/bXactVOsDP
F6g0MGDAgG0SW6LSSiUaqDQwYMCAbZQtUWkMAZ8PVBoYMGDANoktUWlMooFf
GhgwYMA2j4HZQ2DAgAHbzLZcpYODAtel0lMt4c25+llxp9Pjr1fk5xLbvlaV
OgdK/jkstHT8q2UIDNhnW/tg2ZX8VL+hDeiNBd3FlRPgLAC2VKWVSrRSlU6s
Sfi7wMDr1QUfGvOOxwT8U0xy09TC2p5Pr8n8Jp19xX8fGFSioNKr5LbOgj6j
PsCAYeaWG/6/+3j+W3o+Ydmqb9upyK3XE/yjR1o2vAWAbbgtnz3kcDjrUWnb
jLAdWTny33UD5Rfy0uom2nunmt9VJO+NC90aH3W/sUK2tt2vOiNsuEo7NWJH
Yqx3f5NrWdLuuIiLZQWdZGxt69PS1OKPhScSw3enJIQN48qsqNKNI1UX0iK3
xUUalxd0La5ABiFfJTH8L7F4Vk14Vu3WhRm+HUVH4kJ3JceHDDTLk8U2Zx/H
ksWEXSwvbCHLt20PqUvfGRt6MC0xpL9Jniy+JedQfNiupJjXnXUbflCAbRLr
IbfsCfe/Vp71twFBs3eL5Bbb3IRAQum55Iht8VHPCLWLN2lPbck5mhC+KynW
qbOhh9L+tjT+XsdsV6ztzDasKuvGz5dSjeSI7fFRN2tK5WeBU2lq7WCJRlL4
L4kxz/ANCUG1Kf/k67UzKfpBS9WGtwOwjbUlKo1J9Dr90mmNaf8Y4HssK8Wp
sSRreLYf+lXE/yYqxqejwq8h418DgxImsYXtdhnBv4kIf9la9iAv+j8FBGiU
5AW25G0J9n3W34L1ed0or/8eHfehvcypJOHvQyIwcZ5X6e7xGtXIgEtVhaGE
Et2k4H1lFZ1zpXcTy/8UGuzQUhbZUXo6NlC9shIr6ESU/w/xcb4d5c4lcf8W
HVdNJrR0Z/1zWBhWdASheGeYn1EjrsCxNUn/Hh3jSSh/W5X8/0VG508RKggZ
v42MwJIFNOf8LjT4bX/rhh8XYJvBGrsz/i0utZZUrxrifbVVJshTzWdCff4l
JgbrLT71af8YFBpJbJ9PX92b999Dw582l/o35vyLv9/b3sbY+sS/jUypxW4z
yc1Xon0s22qbBst+DPKzqisObivEeqx5WwN2LdCL8vqXyGi31jLX8qT/7I9f
EYp68v+nn8/9usKEwcYNbwdgG2tfMntY0Vd+MT3yf4b4/R9+vhplJe1kQsNo
Q1p/XfFwfd5AxeEQvxckgkylg3aU1WDDg8rOvP8SFFQ6jvXqNptkP83mJlyl
I70vduCq2DNRu8vPO6m/cV6l81vS/yEsPL2/Lnewzrc29T8FxFbODoYJ3WMl
vw3wM6gszBqsrxlvld17Yirta1QvO5XIzafC/R0G27tJjRn9taXDDfmDdZeS
go6WlmFrdeMDTRvlQ6A289QIl/4Wq4SAIwW5WCmY6ScEnSyv2PDjAmzjjdxi
GeNt3FSN/U6vjv6vsWkN5FmVvtJQKUvTtjvU90nvvGuu3T3Tf1tBId6RBmrM
Yny1a8qahyr/q7dXYH9LQ3/J/+kXmDXWFlaT9A8RcUkDeGfzKI/5L0m5nbhK
+5j34Pl0j1T+xtcnaai5h1T1F38/4PEA1qtMpcNDQ9aj0hXD9dUkvF8RJlpS
W7L+s59f7khLTF3qb4L8diXF6ObE/7v/gkofqcZv4qq68v5rcHCFbOGjVP85
lfa9PyAbjZAbTgd6JfY1zKt0Ul3K3wcFXcxLNpLZpYK8BvJ8BdoLe0sNM6L+
JdDn/woMvN1aL1Npv5tt8oFHm06Mn0VXW2t/wY8hfn+Iizqfk/hzmJ9cpVWj
/W+2KoxPyC2GkX5/SoiVl2KUm/ysvfYzWhLYfzBrHCj7O29P9ZyUq0VpJrlx
f+fj7drbIldpq+ZqWZq2vWGLVPpRotfvk+LmO9Krjtpecuu9OC/1qvKAyrh/
zSgkUAjeFXF/Hxq+0KurymUq7ftgCD8Luker/sXXJxGoNDAFW6LSSiVaqUrr
xweqFBfLf9f3Ff0//v55oy1XkgNPVFRhgtw+XPo7v3WqtNeB6rpubJORin/z
9UkZbJ5X6equnH8MDauaxHtvZnv27+LT51W6safAoqoIH0KT257kRvwxObNb
NpZWK8d1GOvh24MD3o62eeaG/Jyd3Y0na9GImVXp6ynBp0tL8HzITWdjQlyH
W19lBu/Jz5MPyO9nR5k3ApUGRgiqiv+/Y+MxiZZZ6oFw36NFhauqNCG8JOz3
ObgUY+JsmxZ6pxl3Kbf2ZvxzVPSR6KBXMh1Obkr/b2Ex1bJendSQtL2gtFu5
Slf/7O8XBVQamLLZQxaTuR6VzmjO+NcgbJgaeSQp4l+DfLenZzRPEZwLon4T
EXm7NO1YUvT2CL+D+WmFY61rqvS/RoZcLEpTjQ/+ITGldlJh9pDcbJ0e+tvE
+FslqTsjgy63Ns7PqnePlGwNCziek3q3NPUv4YGGtdilAR9L/4/IcOPidJWY
wJ/S0zsphJz6xN+EhpqVZGgnh22PDPx/Y+MDR9urunL/EBakW5iukxz6Y0pq
K4XQNVK2KyLwZG7ajbzYH6Ki4xU8jcD+Sm2q8Wykv8PAQk8ob0n+h/Doismm
VVS6dazql/CAEzmp1/Li/kdYWMywfIKj9UC4zz/Fxsunv3tIdVqxgTvTk24V
Jf0xLMhNNjuzXKV7yY0Gkb7H8tLfdYExw1+7LVFpTKLX75dun2gp+FgZ2VVV
RmzpkI1yu6faygaqY3trGybbWoiNsR/rseVYsmbZyKGH3NZAaume27YFn1LB
PR4PBloL+qrTBhrap+Suj7aG8dlk3eS2+pHa+I+19aTWJQ8+ESZa8j5WRnRV
VY63yvq/zOPR0lDUV5k+1DiXVXvNcG1Ud1UdqZUw0ZzaW90uq2c7qTmtu2Ih
GZbbZEt+X1XmcGPrJJBoYHjPaZrrq3NL2hrHWzrJhBZSy3y3aSa1EMiLNuyY
bM3vq04dbGxR6EitpJYmhSefsdOkYrAmub8OW9gzl0DeM7FysVK6ZL8JE00J
3ZVyvyKwv2bb4HcPZSptO/RVhBFXacu2pg1vUmDAgAH7irZcpaMiI76fSlPa
EtqLcya+zvA1qr04cxQMPIABA/YfypaotFKJ/pYqDQwYMGDAVrPls4c0GhWo
NDBgwIBtElui0phEg2/iAQMGDNjmMfDlUmDAgAHbzLZcpeNiYoBKAwMGDNgm
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
Bxoq5eKFcuHxWDX9Z3jGnBQV3efYSZB3Z4ezTKXLn6piKo0dNF/DX8Jw5zma
6XDOrhQ/h4o8r+r7DaIKHo+mmGcH1R5E3zxoZuUgL9cnqQZhdKr+uLVjQvjZ
zVIf5vjAu2ThbxQZynodVTK4LCFSmeTbxWBNs1iB97RdSql88SK3EUzt2f7D
70t6cEEQ00sPbNUmCLArI++N2cW0NvJnV+8/Kp8k0TNrqTTU+0HtZvDc8YDE
4oVRwueqtFoFZUGlZxCOy6kdcfHBGkd0BbBcQREeT6REpaczjuw1GZGVL20N
OXrOStEvLalxO3fbB7vlZxDbbC6onDSyg6Q9J0/dnpirOiwWL1Jp7HJ285zt
u/hHMaPYzma/vXLJr3e2eERMjLLQtAmTJ1vml0aHoq2M7IOy3j6t9zC65xUc
5B6Db6io0hqYSksirx1zjmuYbTiRaBWVrgh1fpXUyRdTdM6Yzas0yu3W+vPW
pjE82VKVhidunz7VNVcpKZ8/n9W8SuOzq33Vd3WOHdO2p4vmd3pBpZvDHh7X
d5AvbUhy3HclerlKQ/1+auae80ef3pb985ajYyx8wa9MpVFxtqNpU/cIcWxs
bKjjxqGfHwSX4ctXUGmEVqux9wyVJ/8b75BYFwu01Hxe1BdX24ctKX2q5pA7
PJtaypdKv45KZ82pdLHX1Qs+A4oqPZTvc1T7iZfh7rcZ7fKcsU61tkojrCjf
Dx7v38+bf0iKQGFCSDhRePWS/fyf7P68vKZhJc+JoGyvOwZmJqaYnd637bjW
Zb/yRQ4iVEDU/ePv8gkUWcVop3erN0yj4unxc3oOJOG3evTpV83Q4PJL4Uqg
A766f9F7O38Dk+9xS8s+EzuNCdH2GuaeM9KP6vuOeKXXTY4Pp4aH99Hm9QrJ
eKTmUIJ3rVS7s9b5ohnoo/HRUw008VRXptoBzVYBOiPIP3FGrtIkzaOGPXKV
PnSmXK7SBl5YoRL28MXzdwboE44aeyy9soaJxJrcpKJBQX/UPT3rgMU15dpo
nfhQOoH9bAt9eM+zUK7SqZ1i7Jpd+sLEN69nvC9rmCNBxVQ7Ix0qIrY4uc/G
M2N8glSWHN7URx9ItVF3Kp0fWZIrfQ8eNhqS7fnHfO+fd2kVtvSP9jbFRiTx
BlOPHzxXMsCakTJNj+/yLlsURxIV9RmfOPgmdQDht+sdVYlplz35Ju24ePTc
JJ676L6aSh4XHUl5cOTM1QrCEPFjc0xqGcof0frhB1ylRYOGP21pXlBpyV2N
Q751dMZgycnDhp38uTMO4QQY7bninsmD4PYUm+36XtNiaXP0XdXntcgMHG6t
pnE34OPIeFt5ZlzZ8HzdpL1+py65YmeFMPcFYVIIcfsv7djTT50/atIH508m
juAyKxwt1VbR6MMft0MSXt0IbJqeQSavqJ5tk6m03YUToZ3SGemA9sHDb5Or
pybGMqMiOge6Tff89DajDYaFaQ9UDT0axNJfxwT+dH/xxXvJc3MB6Gjc7V+O
Xx/FLl7wkLqK2SCm0sJx1X1GvfPtBNNent99/U3S4BixoSAltw/3Yw+VBW89
pN1HxQ/QeNmbXcfMilrxDhMYlMOWUKxPH22Q4O4C6zPHyxTm++CxqNMXnuL3
e8yEYzqYXCM1joeveRcJOFO+Vw5YRrahMxIfgx2huNsfzbDTsC3EZ3+KPM31
vPtkKn28QHYRzvayd88fGYy7dfTsrepOrFM1RqdVIYwOlT/9TCAJVtxzVNBW
X1NbvWCNzV2LDtq8X3pmZqI177GTb3lVTU11ZXZiLE/EyYwObxlfmnnMYwO5
x4PWXxcanSWE5FtLa9y0H4eW415EapneTW8OAvzSK4JJ9Pr90pPdZQ6XtbS0
r4TnN6G4k4roYWthcv35IHsq2PH2pau2/WykPd1T58wpTR3zqmHW/Ia8qa7n
V3Wuu0QP97U8tdC7+jSaIZCWBNurnT7/Pr3a3dYqLqexNOaFvsGt3KaPbdm+
l7QuhhS2DlXFX9bV9c9uk/BGnt2yeOUZ4O/p0cvEhZwxUG589rSaml5ADgGR
Uv0eWxhefVjeMaHYofjERidrm6jY6PchOfhjvShUEPT8nq1LeLBfYG4nJk0T
3Um2L4ILsmMCooqx9NTWNLNzZ9Q1dKOrRkT0YW9bU93L9nV9lNnsEEZCQOTs
b5ib7npL/eQp07tuY7JeWRHlqq2hed3G86H1/YCUqiVilBkdI/dhxkSmyB8w
7ikOwfbRJ7OltybJQlfnRVSNBBHHvLh9RvXUpTvuJDY01Zp14aymR3z1QGPq
xXPanskN8xOIeX52Ghq67zM6nlzTtfPKmS9FMt1nY6Ktq2/+IdL7nsO7usZ6
j4cmuuYuPWQOf6rr7gWNM6c0XoQWz6eXClmp7la6hneK28fFFe+fvA3NT497
HdUknfNLD9ekXtfXeuSZPi3FhZrUmnHj7vOIYM+wtHrsNqQ1P8hUy8AjraK3
JvOWoba9T44URrpyA3SxYs4Zl/TSsE3YfblXtDUMzR9FeT968jaSNK0waty0
SClBT26YWnuMc3D1hEWcLH87Pc1zjz2TO7I8jbRN46o6OzI/XNQySqgdmt+I
Taw311ZXU9PxTG2Wtx/KH3V8kiJ/XB2VCiKdrmMd5vLd1wwJTGrLtNC+4JZY
3VefZqGj55pQL5LfgUCi0iB7PSOr4tbBIv+HegaWpT0UiF5nrqWObdgUZ/f0
bXhrS4W1gba9f/rQx7bn13TN7ENHBzvf2ZgaWfvSOcKyiBfXbVzDAr2isxtl
OYrDnt04o3ra+N57MlfakRuoe07rQ2QB67OfApc0m8tVWkJ6aaGrdVZTbvc9
y2F40vai6hWX/CUqm+/jEC27ge3NDzx15mwHff5WTuT/7LFvVLzHE7uPVHwh
UOmV+BbvHiIwhKyrqVEIwnsniq4nNQpDsGI6FIFhZK2xGYpC8KI02EbwQuVk
2g0veMxkea5YmSX1hCBIcYF8U6X7Mr9wrT1F8TxXTSHPBZbtFFbi0sSyHZhR
WgqKLGmKpVXEEkBrPXOGIshahxZZfJzkhwnLfI2cf/2gsr6luGRxWy3twOtn
tleu6zSRtf/icrFO9VnFKgMavKdvulJ2I5UpmT38FVbiA/XiUG/uookPFJJK
5xuFR24/dTv01/Ua0fcBk+ic7KyNrgUAAPhVgJJ6Glr6ycoGEyiFSl/lQgLx
GKSVB/EoJOhrqeijrCzyf8UAiQYAAIBNTn9f30ZXAQAAAADKwSQafBMPAAAA
Ni3gy6UAAACwmcEkOj/vE7+LBQAAAIDvBZBoAAAA2OT0dHevnQgAAAAAGwEm
0cAvDQAAAJuW7zN7KOHSRqe4c3/BbPaKXypHYck4kbLyC3iokEFictd40VjA
mJKu8YocMs3mrrwWGunuoogR8uiY8NNDDgEAAMBXBJPo4qLCb1oEPFn80ClY
/tViGrHXz/aiumu70heGh6pTHlvfszBQO3LyUtngUhVFheQEP0+Pt24X1U85
RdavpJ7c0aqLJ8+Qeco+by6dcLp8/vxZTS1N/Yp+JfH+ID41xc/VJySxc4SK
v5Irmnr64DkJfKMLAABsHN9aojGEBQ633i+84Vjua3FGuUrDaZlF8uXeNzVM
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
yw833mTMrxyuiVLZ9sMVj6LPzl5I7qobwPtaouMlc/d1xhtdjLjhnKopfZUD
hLBeqW1N7CFjP8eqfG5EjsKc8YaWIXnrjtXG/7TzHuPrn65wd0GwicnbT93s
of6lMhoCi6ne/uGFxSWlJSUZb80dgpa2DCrsuWNqiTccKnh23WJwqRCg1aGP
rkSPYvvYlvrm1M0w/rLzREwfTnO9dtLISf6nlNZlcvxUH10Ec/pvq2n0sJaF
c0Lhwc6G6yf3+3XNjuAg0XRbddiRgyZDymUIZRE/+jy4qGEZKVuPduSFpFW2
dzaV2Roc13QoxLo3Kuq5clCdyvvMk7iivGztRDCJzcHbaU6lsSWSIbKwwMtS
2yGTOkkcHZsQyM40FBLSKeTxcRJfslAfFJZM06ksoZg6QRyfxOMIirjMiSkq
go0s2PSJSaoURUU8NpnKFPGYYyMjDK5IzJ8eHx2hyUKxMEfCMJWm0yZHR8fZ
Qrxw7G6FSaNOkEgMDp5AxJumM1jTZNIUS6hQqJhBpVDJkzQmD8WHFtP5L/RN
HSOoNMbCXZYoV+WcHZNJHhkZY/LE+DWQN01h8liUiUk6H2taNlYMhTxJpkth
VMxnkcZJXKFUwKaTSBMcoRSFxNSpKbFUPE0j06cFFNLY+CQDWiw4WGrK1CS2
j5Dsbkgq5FJptKkpMovNEYjxJuKzGTQqmUyhczg8KYKP8JkMJpNG4yn0B1gi
pFFoEhTbnEch0wQCNnF0hM5ZFKcGu7tl0Bl0KhlrtCWaJ+Riu0GdojDxuqEI
i07Hi6Sxsb8gsQBbJWJTiZP0oaqo7dvMeyeZ2JGERVwqFWu8KbZAKsuBRaUy
+Azy2Ng4R7S4p6FSPHfyFJnOwRpWKuaNxljoOSZTaEvHNcVeVnMqDfW2EuQL
O7Pe7dV6y1eoMdaqDCp5nDjOFUnlfzPoNPLUFI05zeXjJxQk5tHm2pCPtSEK
sRl0FotBXzVwz9rAzNeae0/eCcN+ciZLPV+bbttvOCKPmokK4l5aup3+8aa/
/GRBsRalULBKUaV4Z0KEHCaZJWRMjVOwHohIsPpPkCa54oUGQCUc9+vqjikj
00I4xcnE/HUBlTQ2SpwUyrqLBOvAdDoF60vYXTssYWEni0h+stAXHUpJi9Yp
0ykeCztHaNN8+TIOi4G1zwSZiVcE5b49h6u0mM8uczc09Wul0NnzOYzXJ/20
8+4wBTuPiEwefjpLsN5IoXFok5NYZ8DOKSoZP45UFlZvEd7Jp7giiMegkCbw
HzOwmEKmCiUSJnWKy+dSSHj15KcSe6w5u5Pxqe19R/tSFX5jMOctQSVRt85l
dXGXJEO59bqHzrZSBbCY9vim1dTSq4zI5fze0HF8qbC/ZMufdw9QlARgGst8
cWpOpbEut0v9FRffAs56pHovdVRZ7aCXhirzKo0j7TqrspJK45QHWM+pNNTb
3CZf2FPg/Yu6Gx7ZFeq32HdiivM5g01Moj/JL72g0jIwld5/3io5r8zukppN
AP6mefBb345xamu8taZVuGCufwgYY66Xjujff5GTl3JZVbWQiYgYFdonjDhY
72c2XDhpOCSRdBW5HzmiFZpcUJ9od0bPIigys7Uk6KTeU2zkgKn0zoNa7z39
n5ir71OzJQnRzoKQikHKSHWI+tnrDDEt6L72Ka1rvl5Ot/xq5/tkittDv+J+
GoV4T/98WBUJEbFznHRNHMPpdCaioNJH95x85e7rfk97n8p1ApEUaa+rYnDv
vbPtlec5Y0WvXfyzaZTxSCt1h4gq3nD13h+3NoxwmR05+3ce66OIUWg60Pou
gzL6xFhV5+bLkopifVWVBMJC7DApb9LJK2uCMhZw47R9+ggKUd7evTlBo4fb
Gmka3s9qoUnH8x899aOR+s1UD1g+8ellClNtDCp6aX3V2cFDc2KIQE2F/icP
6/dB8Dgh5czBEy/9YkqiH580esFbOIfR/jgbl/RWWk+e3tkbbPHCCiYh6enb
ZDp16o6Wqk/+ILM7xtQ5i0HteahznsQV1cc6HzhwwiMwxOS6W31x+J+3Xv1I
npawhx4bXe4eJfdXRGpqWlBFkorAhweO6ASnlb67rWXhnLTQIVBp6RuLgKwW
6njvffUjERWDkJg/Gn5Z+0kKjcFaWaUVemCYnWXciKIWJfr7txKp/Vn2Zy08
+CjSGXIjpqKruyBo774T3lEVMzDdy8q0n0SJd7Y4rWOZ0kChVvq7RtaxaCTn
oKovHCfCYh5PiJ+YmErHd3TeU9tu4duM5clujXMMqfqg/me5SvP7Ux56ZFBp
5IIPV8zdC7m0Ye97mqqmDu8dLB945MTct2obmiyNdD6m7zY9d5ajUp6z8fGn
qWNsIYKp9PEL1ulFVXe1VZ7HtiJirqW2SdkwvTnm4ZPUQQFj9JXsZMnNSzFV
VS1SvNZJWs4fOOrmFVkS56SqbYutQah5V20DGfRhxzP76kemF1RawCl11bvk
005jchRV+g8/nnT1DXpioX3w9FUql5niZnngkJ5/8OtbztEd2d428R1U6oT/
Q8MHMb18Up76MYNBIcQdSjypfouKh3sWub6PpFO77xz5yxVr15ysKPWdBxqJ
bLzdJKIlHlsJixjg4+OrYCFJSwfJuEpPL2wG8cjahi40JTIG18U+37L94JWb
Tk2yO53FiF11t9vkc/B0E/W7/ri1a4y9PAtFlc7zsDh4PVZ+B93mbXjIOlNZ
X/gSlV6gNtrxevQwvpOYSu//TJX+1NnD5SqtZZeBqUlb5ONzN/xRbpXJDaeM
9PSUeB9DXauuhcs4kmmnbl+MXW3RlMfn7MrEM5JWPRV9Wcv2G6rqDcK4U+XE
mXv4VRAePXvUsFeCiRNX+9C5OhaKqfRuvXfYKErKHjm3/c8pJSX3z2mmpqVn
pEVaGhhnTcJ9UXe1rLwXVVRMOKdpSZN18L44uxNGT/E7I/eLV18t9nqJco+r
PcAHcqj4jsZe14ROarHDybsJEH6fRTM7uCOrE7+yo9yGkwcuELi86Mu73ub1
oMJB0+1b4tqmBKMVbtHdWCFB93WsI3uwlD43zjrE9sxnP5Rma/0hFGuQsDf3
L9yPZn9MUTlpgo2eODU+Z02dsQRtfldNHGOwfc53UH8SWY3dW/he2GP7IYXK
4gwoihw8bHxSB4/dDhMNVC/0YH0HpescN+he6EToVHN228T0RGe6xi6VCc6C
F+elmVkeCd8hYltl1zibP9FU2DbJJHXcPbO3nMyDxvJOHNbhy4ZEE42pP22/
TYNnmhOdj9+Kl+Utjrp59E7yKK3M+7iuLfY3p+zdqUvPFtqPMXj8F60OmRLw
Gl4d0X2O/0i9pv9SiWdguUqj/MF3Lh8U4wOj/AZzMxusxTJSg031bjTTp2x2
/6mgm4wK+k137+unCqDh/KMHz02LEG5zxCmdB1jBw+lOGpfs2sY5Y8TVwlx+
EphKJ3SP14bbbz9kiJUZ4+nVx+N4yFUaZr48vSWLgAdNFjMHj+84UDIs6oq/
e9KhBMa9c+U7ztqlpqcnBn/Q1bk0Ql8Y172zOOVagg+AMZU2cy3EftR7XzOy
i0EhUVZqAYXNKgy7f9q+AJPejMfqDiUsrDGSH2nalymMDLGx9AljMt6CPFMV
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
cpyIrWJxhcMfeybpvE/dC8BXBJNoBp2+djpRqaV9wNgUheB1YdsFt0kKuSHV
1SnrY8orcx3HnG/4UXhYWhv3fK/WO3mUKojHXU9ZEupHlS0/lfQrjzO+FiiX
963kXTrZ/OZNyLf+QjMM8ZCvdEhElGrNXSpk3qcqw68TVJT7xn2SD5HqEs/e
jyZOUqKfmxw570QkU/I87z+OG1g7BwUQSBBzdYdzQc+n1gKRClMeqd1JWxpl
XsIdv6i61z+i8pNyg4iFJpccpfL+gCJc2tDpXT955/ZjSxCpyM9a+4zZBw4e
IA/ljzTs+MMf/PIJEghBIUHYbQ2NG28EYhgRj9+6/fQTYkUAvjbrkmgMScvA
KB4xlhRmuNXIC1MxWMjO72QUeFl+W5WemenO8ZSr9PRA+R1zV+E6CkM44+pb
//J5Ks3oTLEOVBLc/NcCND344pYZU/C1ZLpD/69HpaGpuwcPXnHNpA10E2TD
gkz3q0d134hQTMIGi6o+9Ru/cN79fZ+h0hjlr3SWqzTWr4cq4xt7aJ+UlaQt
Rt3IdX5gICAm7dlt0jf7oQjpY+299qnj8lWUjpzf/3ZvF1UWwQ0S2mjsc4yo
l60RWRhfp4P4PBtKZHjY+hPPq7QcTKXVbnq+f3xb44xuUgse23qwqSjY+4ON
xaXAgu75+2QhczTA/qZrVp6lrkZQJak5Pz7gg+sti9s53Uz0/2fvPPya1vrH
/7f8vs+914kLlaUg2wGyFHDjREUUZagsZamAbET2XrL33ntD2buU0kIL3btN
0l/aMqqiolevPM8971devEp7TnKSnLxz8klyDsIrSYrKLcjzefRikkLJC7I7
bZ8nYBKSfB8b3E1Ea9OapUWJLhcOKpkGvy+irVWYhjj3s+b3xyn8PP+Hplee
DC3yObjm527BdLrE0uFR8fcvmZ687LPEgYVscll6XLCPy11b93Eqf66r8OaV
BwUlSffMTz4OLl5fHZiJf3VJTcPSKa20bbwi5Iyued3kQkOih57OlabpFRax
76bZw3kau70wISAs8u0LB7+YErZcMADhkfOTY6LfBVy7cH+AwBRxyHkRb95H
RLx46hRXPgghyGTzB+vbD/kwMlKbdPOGbUN22HWjky9i69CsCy1p0fEfMiID
M6fkri6F1Mxw34zsDDvrJ504NhOPcb1hHBYRfdnk/CSTWpeXGuL74sqFe/14
xnqO1kRXhb1H/QMj5qj8oZr0t6GRQd7PPYIymJAY4S+mR4YX5Wc7vkxmwsLe
/PeZeYXhHq+a0athiFWTkxL82v3q5QdDRBZ6MdxTGPPufXTUOw9txX+NpcUI
Y7KxeZiw/v+GpVnzvtYmF12zluYwLtfO3n5dwORDLWl+bukYEW8lOzrkHbqX
7R6k1w7LyUxiaYeYVN8nN8+cNO8msNAdMNpYGB0ecP/GnfTmWXRxdUmBITGp
AY63CvqJaAYatiswMDwuKvLpRU2JpRFB04fInKLigOdefTQEgYTjRPonJRbS
idiPWaR+1Oz92NIwJtBI80ECnclkMZnMpbqTiqda1sb5bE95slPXh8CQ/ERd
Gtc9pFg4KhvtDlj6N4Mq+rvuHn5u6bNPMtCrotaox2YPE8TQwpNXmWwudwVX
rrL//OBa304ILIi3Pv44Hyfg82bas69ETXO43LZMr4PHn1DYrTet3NDzN6s9
b4oGT7WE7r2ciEphrDZcwSCItWFp8WRpqLqhh3xbGuFiLmkazqH+YTSZnryO
2humVn4oGZC2pfcU969AXNzVv/6veojclPQ6cYbF5XITnpmdcSkTCbGW2qa9
LCEsnDPRvTwhNwAsMdP6gr9kPFyYRTQ7cqhkkC4kjx/fpdg5z+fjex8kzNHa
wi3vB0hWDBG+vqblnLs28CIiLHtyorAXPcbh/libzK75+ljHK2EYtLwQtdtE
8Xj3Ckc4V6Z/4jxqadFC6Snty0yhSEgoOGNgK0DYr41O5PZSIDqpcJy9Xhho
oeLaNWd0tUpdjV3iWyDW4kWV/Ql1swI+F//hfmLVMJfLbnDRMPMs3cgyVa6q
fGaFA7MHswxN7SWjkSOipMenrsfPCDrfXbGPRovXXVxOEUzaaBsssUW8iY4W
gmgh/VZ6wxg6t6qn6uZvaoltaTpWUaidYEa3yb+nLf0Z65ZGmagL2Wf2Dq2H
XVluao+K0SpTX5iKF0H1r8zdEprFkqGHcebHdSuI6xUUKrNTefqhRwRB3QHn
7ydP0Ps+XHXJQ4+OsWwvldPWqGLvmF3voSO00XCTp/mwcOGZoS5WMgwlXO5+
VmJpAcba+Aa66TmYmj7SppZElpui3ZydXTcml5jqOfkU9LZYkzsRq5mhRcej
/zG8ePPxw0fodMtQVcncfe1YFgZfUdSytJH9ZHNRd/cxO8JqC0TwyOoe7t9y
a2I78r3vHn5uaVnEYzDN1fBWmGgq4oJdRF9vr3QaWh8sG60faba6b3slLYHW
RPurYW2yNAOYcQHES3G/dlzPMq5iRISI5Sz97puWRmtprtdl67RZQm24xVkj
n7qlCj/vQSq0EfGASI/2/7/i3vnIB+ci22Sl6h2eWoKh+Yt65qMSOTPMNc/1
b2Zp9Kqv5dW5B8GlpPEGe6vjXlndfVVp03yk9s2VC08TZIlLAu+a2K72goJw
8Zf27u6cWxcaEnFPxz5fdvOIF2Jx6HUrGSZWG0gtDS9VGOpZSZKyawz0bwvE
CL4p+oyGpp1XHE3w0RqSp7qzi6uibE46vK9DeMtXVA/l91HRhcVePBCYUiFb
o6GZjYfe1y3dneSse+G1bLTzrmy3AybhCI/46uZZPbM7pQNEBBG2xj9TPX7a
N6mGD3Oizu0Oz6handssuSLMxvxttyTrvyri8RnylhasjOntUmzF0kvDbE7s
1Zogzacn5iAQy+WUckD+kDQ54mqp4VEwv5Z7I+IxEX/jSvhge6KzsUNir6zm
D0+g3/OWJ4rziptKPfUepjOGi1SPWcpGnF+NeCCCsmDbo+pnQ7PbBT94LwP5
8OpRQNmM7B/2TNOhv/Z2YqVXXjA39OJx64BC2U8wpc1QUb1ddvtHLCpzOGbm
XbW+zDxfe//yqf+iu97/Y6CKptG+4zb01y0N4eK0z72kSKUnpM0SV9YvvjYs
3ZHmqHY/WyZbDmmcwyFRKMz+ksjThw986CRILH0pQWLpmrBPLV2GWvrlJ3Fp
YnfOAeVbLj5pvTXRqqcdnid0wvJx6VVL42NtTzvk46VZoaWJMaHwa5a2XLU0
2jJvMDG+mxHlx1ooNbvmFBseh345EGere9VTVmOLA+9d9W2SJUZ4hBsH/kpq
lB4RCLRI5aQ6mxp71EvaIAg/5JJK+hT9y5YW4fF0ymyn63XDU64V68VhjRfe
uO0mkralP7Y0P8VK0Tm5WZYMN7XRfFq39GShr+pJaz4kKSlq6RP2ZTCFuMKk
V8V5qh3SbZ5bWVhg4jryrPSPO6f1JFxUeJHZIVuPuYm58tB72vdSJGb4d1u6
wP/muqXRa6XqZ1pOvp7vUxpyH6j5eDzO6VpG93rIRQ278ApZCteLp6I6mWu5
P7V0d4q7zmVfvjT6wFwhoma8fe52Hw2ijYWflFpaUVEHR5PsfNTStqilYfrS
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
zrXo3LpynFUcajbOXRuWFk8W+Opd9ERbku9tjczt4xGIF5TSKBLO26odap+T
2Iy3NKq850D91Nrdaklb2kh69ufZn9Gr4iAd/uZ3AwplP4beM3gU0sSveGLm
JvmG0vjylH02LIaKHLRfVM2JJapcvKl00NY3i8YXfOnGMoxef34Mmcbe+Bnh
N8Y7vy6eks+d+9IqePDT2Bok+rSNnuV2LfSzZLKZMpYJNRkh5qZW1cNLn/88
VhLpXzgmv0SEM+H64Mkkfds0CLbA9757+LmlZXHpwTRXw1thopFAU/v0tfVH
N/b6Sfdrlmb25yipX0YtDeGrTqqbsoSCW6eNa9baVZ/vMrHE0qlylj6FWpo/
XqF4+PQnlpbFpXtibC3s41lT0Ye1n8rGlBU0+Whfe72JpQt8lS7HSK/6xUL2
Ypy3rY7WmeiK8c9rpYi1FUsL+wrepeTXzjQmH9O7K7O0ttEdPcUT1aNkiTBf
nXYvGlrbWgIRjOB7Sx+YaZpcfzElF7xZszQnyFTBq14aCYQpz1V2F9SNr2bF
5Rsa2a5vJhF1TnP/nsIBmvQ/voW6TtWiMAu1dL3E0r1vzWzTJJYeyXpy1qcN
llhaN2xcYukVTKnCgStE3qqloelEE6vXa3sTFgoFMkvDtGHDvUdGF2V3zxE+
/6Oz2GCR30Fjv9TA4EE6zKWOqe/XbZdtdH7DyRM3NrN0j+5+lSnyb3jm4SvI
LI2wpqzV9j6Oio7JbhEja5bmYS/v+DO7Dy+WuGvlvNqh7G7KUObjs6/a0X02
2568xzRi9b4LgiDwhg3kLS2LS/dE3b/gmIhA/Oywtzm1fWOt/npOJTJLa7vU
oTm7c12UnlRtammENX5HX29kGZOUGXPjrCVuNLVhdFHMHbfcva9yalmSgD6v
t1+hYmjtYl8a8ZDGpfkOBroVHKjYSf+q1wfZj5mul+97l25maR2vutXgMxvX
+dLaTNvgds/K5ooTrGCrKyqr5KaGPqzc79BYbdztkKaNzDDJ6cJ5/DeDzTDJ
4YLlwubJoKGmAn8vj7fv0iaXmB//hNAn6nPKOz/JBxEbHtl6rPB/b3Dt+0AV
3d3VufX02GjLfZZB64dlRcgDU1dJWxqT5mJwM1TMbdE6YlA+ushmM0aqU7ux
66FpUcQ1tahpFl8gmmqK2aX3BrX0bGPyqqX7cmRtaWheZmnY66rOnTdFdBZn
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
pTkloa4eJ4xmR5e2Jt3Yuu1x24hLc2KPHQhIAlcl9kWHmEersQVRxN7ev2ie
q9+LLAQd49LtmYFOa4OAE3QUxLzPbqRl3XTf/0Av7Fs0fWnH4KiRlb45teN5
uxbfuE5ndoyiGsWpb4NrCYxnh9ZdfFPt6NL9Hw56XopGhMR5//NDLc12uTRB
XBo11sc9Sypsrkq9O23TS42DS0vb08e6tOW85/okkmroGPW2MsJ0lH0r1pYO
iG88zgPXi8ScG+tuVWiGC8FkQUddWty8zmnJhC6NCvM3eBwfF5iqSQmLLWql
J59ZdyZqrEtXLJp7kDbepYfi0hpO9IKl5wpSH7vtfyMfOReW0U57MCiltzX4
4Xzq0mpu+6XtbovdNqU0Dah7C+fO9xQ4/EnZXHr+ar496zUR5zY/btWMnBEU
G3Hpmrfnd1yOHzlZyEhFQNU31y7yj6jCVXvU5eXb/OwuvbFZM+bYeQmnd113
eFu0iXP4h7+GVpHxXFQEeHlefOfg0tpXXl/k0n0hm3YGTOTSup4d0+Zn4y5t
Nacf+enQy4pPXRqsIpWGu86Y6Xn4FkU+4X2F33BpRtzpnz/j0prel+tPR6mH
TpkWMY9uv+DOpsWXyvBS1HJjFiw4xjIBl579smN8n3YilzZGHV7q9wUu3R9+
wPMzLq0WNLquucRSD+XNgExOqPpX7h7iLg1opTP/Lbr+3+wurZbz/yOF2G2/
U6JVCv+a3N0CMm6S/CWJQLCXZnlP308lDPxgqqjM+WW2nrHSgIiMnwnaI02j
Lm1FiwK9/mfGLqbW8vHCanf/MrupYG1PvHyi2i2CWvd5br/p0qWvznldyQIZ
T72zb9+9vNEVqKm9X2LRSbJf+Tstv8RTUU+ucyeCrZkIe7/OpdF3Z7yCW7Qj
Lq2uvOu64TwPD7upBlo6Rh+G0dAbNUasvyFt+1KXIoHG0aWrI323PGyUtoZv
9r4Odm6sfQBc2qRkrZ/90+sCkv3XWDeJ1ZB0c67HZYk90GGQszv5o6067e6B
Y09KQX7CT24Y79LhNpe2yGgrf/yfj9V0q92l3eaPcWluc8TcLS/Afyy58tlv
uTR213vl2Ve1uGCROuX2k5kaeGDt8Yd5ZAn4TK8Lne5yjKmyB8iNok7GoKNL
r8VdutRWmI4ujek6ty9alkSU4WHB7jayuPqx16lQsHlDyaV19ibj6NILP+/S
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
qD//lpFDIBAIZDL5/wMnGF4=
    "], {{0, 237.}, {361.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{361.5, 237.},
  PlotRange->{{0, 361.5}, {
    0, 237.}}]], \
"Input",ExpressionUUID->"823ed475-ef68-4c6f-9496-a513f57d5147"]], "Text",
 CellChangeTimes->{{3.8874008194120884`*^9, 
  3.8874008432564616`*^9}},ExpressionUUID->"4c7fcc96-32f0-4eab-83d6-\
e3b8e473c8cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Complementary Events", "Subsubsection",
 CellChangeTimes->{{3.887401725891118*^9, 
  3.8874017288563433`*^9}},ExpressionUUID->"6e19ab5f-33d2-4135-a307-\
b1dfed1fd66e"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8FMfZ/2PjnrjGjuP0xMk/iVNd415iMAbiGDDGptpU00GiiQ6iNyGB
hChC0ulO/dTv1Pv13quu995vd6/s6r97AiyKXztxXpc3+/1gsE57s88888z8
npmd3f3l4vUzl9/6ne98Z+Nd6F8zF219Izt70bb3HkB/eH/dxpWfrFu2dMq6
Tcs+WZb9/OIJ6IcD6H9E9Hjs/0dxcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwvloQBAYSSVcMHIlATjAdhxH46zbp
5sDpNBgdtvjIek+TPcKJfkPNxMHBwcHB+UaAIOlU0hKMsh3+Jp3zrNyaK7EV
ajxka4gZAM0Q/E3TUSSVgPy27F7pqy2iScOm/dbk123RvwcciMXl3gjLB7rh
0W9pHb4i4HQUBASuECMAORMw8nWbg4ODg/OtAkklEx6f+xhd8lwd8+5y2nfK
aLeUYX/fWcV/ZsB01AL44dHU123leJAkBLgNMxrYD5bRH6NqlukTX7dF/xYw
1KsY+YgifrrH3JRAArh6fTYwFBUb9ZNqOU8MOWrcEJ4U4eDg4HxxkBSod9jX
Uzi/qmLcRaDdWkafUM64t4J+Wznt1nL6XSTub6iarfakJYl8c4To/4bQI6Cv
iCn9axX/caqxLoH4vzn+/caBRAO+Nr7kIQLj+z22Chcu9Dg4ODhfHNjt85I4
kl8QaXeU0x9okL7NsOTrvI0mzwWRenob9xEC/a4qwW+GXJ3hZOQaJUKSqVQA
gEyxRCCFpG4QKQRB4MyfsZ/AZMoHJBwQfPXINAzHwIQdSEXT1+wEQL+R+eJo
5kA4nkh4gIQLgtPXnPvzhB6BIwBkiyWcUBq63rbLho2ZBiNwGMA2JITTVzMZ
JJFI+sCkJwF/1joGAsNAImGLgDYwHYOvT4GuqTsCg8mkNw6ZgWv3PCBI0GHO
6uY/VMH7BcVQDcEeGEFu9HAcNIQBbMtEAgbg684yOt7DQCLpiWMeTmZcN2ZD
+lNPjjPumqa5OailIARZohDqwPj1571S8ug1JV9tuGsX1lFXpYNxyBJLoP5M
fFacZIqCYTgOQtZY0puAQWT8MSmt1Xaom31bOf3+bluZE4SuPQuMNUfSHgEM
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
Ev+RSLujSvCrAddALBX9Hx9y7/T7yTL9kj7M7c+1if5GkbzZq1kmdDUG04H0
+G/CCr1xJ03+Wrv0tS7lZK5vOJwExpeUglR2VxFPM6tL8jJFhMbJ81TZ1EH9
ZmWAP/ZUYSRp8XlPD0mndEpfH7bkm2P+jNCnwp4zXM27HdKpg7rNpoQz8zal
WDTC1Bo/7ha/minqpT7dOmUIbW+r231eoJnbLX2Jgm0XfKYNC5V3ho27NEF5
YhTA1+1xcHBwrgOBYxBkCcdlIdBz+YHkn3loKpX0xUBtJOFPj974Upt/7/Tj
dt3zH+pyDERTwcy7WswA9rT2f+EkCByOA8YIaAJS8ZutU39ZQxE4DiWMwbg+
lgpf+1Kef7UgKJl0RwBlCHQlYGjcO28ACLJGAF004btyMzh2jzkI6UOACYKB
z3slO5qTpGEYSqdiAfuWHsHPCIxHmuRz9QnbF3sLIYJ+FwT1IRD1fDj9ZVoX
e6lNIBrXRSAbmAa/VElIOpW0R+IjEcgBpccFJ5JKpwIxUOmPKsPor65/+w8O
Dg4OznhgBEliAoG9kO5/HpUzUoJgN6J/3pFfmJsIfRRBUjBq0r98QzSc+VYS
/hIq/D+XjzoqDaPV/zzJ/RwQrII3cXimIS679+qx6IeJNJL8fIcjTn+wXWXc
LtAv6eL/tprx3WrRCzRHH4jEv7C1qGGJ/4wDsZQDK+rLx0nGV2hR1/lqLBSh
NJopIZk1GhwcHBycbyY3EfqbXnrG+TwQnc2RNyj4NZn7o0rGA7XCl4ctZ2xg
ABnFr1nj4ODg4Hx9YM/eoY9YchnqD2n6JZKAAkxDn/8tnBtBnD4/WayZ1auc
OahZKbCX2WKftQcPBwcHBwfnKwQOAZAxFFeEAHU0Ff9fW3j/P086lfJH40J3
hB9MuBJwEt+WhoODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4PztYBc4fqfkRsPGvfTV2zl/03+7zjy21eTb53B3ySuHx++Lhu+vcV/Gb4J
3h/H127M127Av0GmCb8Ss9HThJxaiYg2NDw4NDxM42ndZp16RMQYHhr7hCs3
efwQnALDbgWdyxgeHuIIZRqjw6hiULsZGp0jij+I/t8FHoUBv0HEHWSwhDo3
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
cnXtNT2KBKVVh8/mncqraO/raaXmL5ozde664y3dapOdU5oz+fU1+Z2dmlgq
qHezy06Wi2RK9kDt+VM7jxQ39w0OUMq3L1g695Nlh1qVYYehbfu6WYuWbSmq
E0kVUhpp3ZQlW4vRbhN3SEylH0+ZvutUE28kCgTMEv7xGSsPtLQKbC6DWkfr
H/LC0RuFftWahVmFzSK5ZkTcuGfOyqxD++vV8ajL2bH/QEETOsiGTCxJyeq/
L7hAkdp9fhm39vC6ae+uqdIq3FDSwZH1152qlLocjPpTR/OPFRPaegY7aoo+
mfTenO37q7jmTyMFToSUotajq1949uPDFPKQQtpLrD3wyctTj7aOeL1xvbj1
Qn729oPdFlMIjPnUnPpTucs+mneCIXVGE+N8KCEdLMwrOEVs7+tuppz66IMp
czfkUfptyXFCb417VfqOE9mb8y/VtHd31lQcz1r45tvz81k8tVFNyT+5evaL
C05TWRKlhtNauG3LvNnzjnUOC9VaaSPh4KbVC3eel0esjAvFJ04dPVND6eno
bzi2btqbCzZfLB/Q2CUd1Sufn7jwUEH1oFQyMEg+vOjZt/aQVUJHUNN9sWDZ
25P20bk6Xxw0STrKTixee3DYZfLZFQIRj6sKjLuvAVuOs0slhfNmz87JJTF1
QCxs4rRsfGPGxzv2XugSS5nC3oI1b/xjRwmdZhvX1xDAwWuhFB/aSxRrPEDM
I2Q2lBWdqOg0xz18QuG+Q0fOUjiuWCoRcvJK8rJXZ+84R+KZAwbKqflvLF57
+EidUCnnjQwdWDXtw/W7S6oZSrWYISle8MGCg6dbRKawxcAs2/XmH+bnlJW0
S1XiPmbdzlnPTt96uqmNp1YxWntOLH595sk6nsluYtAqT6xendei9LhjsaCh
v/vijiUzVhzp0EtV/U3H16yYPnflRT5TohE3Hjq0YcPCTVXCxOi4i5fYlQ7P
QMGZs9XEHm3Yo7FXLp29vJAwoHaGNIruU2ue/fOi/eSqfrl0oKb5yPK/vXmA
LHPYLIzB6jPbtp3r0of9QMzLJZTnLJ9y/dJ9Gk64ew7Ny8rauataEYiGExFB
8+Htx08SqgTuWCIes7Pr96/atPHg4Qa5L+oWn1+8eW9JSZfG7xArKlZNf2ne
ptMtvWqJgtuQt3pTAbGtrbujoXDn9nnvvvJRSY/BbRkuLt627t0VJSx/NADB
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
JfEx3UnxV7/68PfffuOXO7ih5hCGO1PvXD/65edHrtwLeRaXVdcNJ1FYa9Th
GP+P/+eP//nN5ZjaxlnkanvQxQ//5w+/PX07tXOCKzarMR2BR09/9MnXp+49
LWkdwS+1PDp5/uM/fHrkqn9k2vOKiGuf/+GTTy/dT28bW17CV96++Nnvfv/B
6WuRNYNrAMm8NjJ9DrWD155+1S+2GDK5+cYdYh+gppR0SH7are9PfHnkxJVH
T6MSc+rAfaR1+XZLqcgwFU/SkovyxwTWF6vs1otw/W2x17//40ffnLl173F0
anFbD3xtS8HAlt67deTD33xy9lJkzTyTNpF69dpXv/vdV9dupg2TZQZ6x9On
Zz799LPvzz0qKB8m9CTcTUvPKewcn57o74u9dOdZUw9WoJLTueOFdy5ENKCF
m2/LzPO5HU4lc20oPfb60W+/+fF6OhRJl2mtLp/PaVNRqKNJtz7+zD+urQfD
EWzMo0rvnvzj2ScVkzMUEhVel3Prh/Pnb9x+GBadUlzZObPEM5hde2J7XrdL
SYRVx0b5Xzr/462HjyPi89qHMGy+UqHmLIwXPI1JKq/tnZiZgY53NxTWwla3
1FIRHl4f8/j746eTp+cYYgEN2p8TeOmrCw/riXjeFgtRWx1649tjocWLfK4K
O1oaEXreL7Cgf2hydqyrtqG+s2OKLDSatZvonvgrt67evZcNXROpTdsLQ3kh
wVcvXrz2ICQyKbWwZXCBwRJtiwjDbSHffn0mpnAAT+ezNmZr08/8/vidwvpp
GpuDW+5JvPXBB34pI1Aim44e7Ey8eer4eb+7j8NiMovqhsfxmzqbijWcHHPt
+rXAopZVoUZBHky67Hf1waP8ceq21EGpTPC7+SA4vRSCWdmy/FR2xOc2WSQr
sxXRySnF5W2jMPgUrKemtG4Cw5JK5Hz6VG3Bjc8+v5BUPohjyvdfo/eYNLyF
yZzbfucuXvN7EByZkl3a1jvP3TY6wcM4h1S0Mpx1/WH9Ao9tABWxz2lwbMPb
428HXP7x8s1HodFpGaWdUDxfsM1fn67Jv33kg0t5nYssDhMJex526+ujV3IW
FnlazlxzU6zfiWvJFd1IolCrAxWX1+PQyYkd1eEBz5KfN2CkJt9ulFCzSR7M
z/I/8ccv7qUPr1GU+8rfeYxSPry+9umlD794XDhBoSz2TXQeoCf+Pn3uVStY
0PJzn9wMzshphc8tTC/2xl397Ue3kvuGCTw+FTadf+fr354Ob5ibp62uTlZm
+J86fc7vbmB4TFpZTS8SyzfYPP8nLth5lUzOKnpqfoXOYNCJS3jqJlcOOHdg
Mt6loNyi1kkMFoNbXp7H8qQGh9Pnsaq47Pme+oq6bggMuTSHnB7pqu+CYDdV
cj5/BT7RUV9TXl3bMjiJ3xRq7F6f02WWcBchw801tTUNTd3jU2im2Ox2AMtJ
nx+rKkoOL54QG5X7iN5nFuKXpwbbO8eRK0zBNmdtHgodhEDmqEKdGbCJ8VOD
w4NTMOKW1u7UbuIwYx2ttc+r6zp6R5CETY325eUw0JIUQ8t7ITOjDNNb3RG3
hkmGD3Q3NrcOzc7jV+aG2gd7B4dnltaIiJFW4AWWCWylDnia1+3Rcylzw/2N
NTXVDa3947OrImAq9h8teQ3brI3FqVkcnbZOJy3jyXSeUGNwiHGwzoa2tr7B
adTCIgrZVtE+iERTOVzASJ3ub2oeRVFFEqPdapCKyTOQ1saO7qFRGAw2PTHS
PQBF0XlKi3XPzPhMm+uoseGOvmEUeUNqsVgNah5pbR42hVxeIVGIuBUaWyQz
H8xE8Lpt6o051PTUJGwBg18hrxLwZKFEa3X6fG6rRrUBn+qqr39eV98yAEUQ
6QrnwcsmPrteSF6Z6mqpLMrLLWvohM6u8IRaB/BYp3KdOAOdnpqBwRFzE8MD
sDWmzGTQy8Q01GRnfVN9Q9c4cZW+waHOjbUBPzb1z5BJ6xuctZnhpoam+g4I
ap0pptHndz36/74QUlDfNNTb21T/vGUUQVcozTaLks1aHO6or29s6J1YZvHk
Sv02GQNpaiotKCl9Xtc5OYPnKp0OJRezMNrdXt/a3js5z1MLaSjUSFdrQ1tH
/8yySLW5hkAMdTQ3dXZBFsgym8kgFazBJ9ufVxTkF1Y0d45i1ngKtU4moUwD
89/S0DE4SyBscEQrY/0tjU2NvaPzZIbS6LIrOMjOruqSiur2XhiBIVcwEd3d
VcUlZfXN/RMLy4jB58WVFS09MDxlc5O/NDzQ1tTU1DM0jSMJtfYXjOzzeDxu
l9O8YyW0Z5QOTK2w397IwGeV0dZm+zqqS4vyS6ua+8Yw7E3VCykA/t6tWp3G
YolYwU+Fk31O3ZaAODXUUF6SV1BR09YHI6zxVXabfHNpdLSzuamlbwi2zJRJ
6IhBSEdjU/vwyDxdZHDq2Ch4T211WVVN5yRyXbo22QObGJtELqJRiNmhnjE0
G5A9l0msoMIaq3oXOWrV2yqbgKc4RqmQhJgZ6mzvGBiEkxlivcUB6E230ySV
0OAjra2Q2VWKQK6S87hLI90tvZNYFlep1SnYtJmejpqKmrqW9kE4Chixc2d/
RhRgHpkVTOwipK2puqqyrmMARmJIDVYvIHdaDXNhDoaYX8KvrADyvErg6Y0O
p02/xSXOTvT09CE3eAqdSrxBWxgb6BiA4gRbKrWMQ8RNDXd2Ty1xVWoDbqw0
KvJ6YHTrIgqNxy0u4Egslszi9jgA5UaGD40MjkIX1re0VrdLJ6bMwQGhrH5e
09I/NLMKjMFoNetF9JWJzs6+2SW6SKKUy9n4ud7mrpFFIksilwuFZASkuWkY
SWNIDFoVsDoTAw2Vz6vqAWmDYTe4GjvAvEraHHx4eHgCsyJUmw0iKnIIMjg2
iWaIdWaPjrY01D04MD5DAKxx517rx+sy67nYJQQCicISV1YpRDyRo9JYHA6L
WsrELQy1tvXBMVShzGDbn+LmdVnUyvXZic46YKc3tA5AkSvrP+10n92sFq2M
zwBybnhVzWfHrRUSpic66+ue19a3Q0aQVJ7aarYA60ZYGOlqHlhY4ysUMg4b
PwVp7x5Ecflqq05MB96iqXkYtryxqX6huMC0VQMfixodmUIQydvG3b3gc5mV
YjpY6KClFQIniw4UtPfa9CoOATfZ39I2vrghkfApjIP0tD+r2uewaTepkJqu
3rGpJRqDxeCRZgYbmyEICn1LoZKwmQuQjqbeKQJPoNZqpQzydHdrdfnzutbO
YeQSZUvtfN8qo796eMFDG7fbbtVpDVaXE9xvHsPLZLzeYQzfbLVa9nVH8Ho9
TpsRbL3mAftAOKwms+NlPgNYM89uMllcvgOJjB6HxWq1mh2v/zew3Nt04uzA
zIbBdpCddsDH2Cz2txdqOzh+p9NmNe1GDcE/9gJir9coZFoVB9XeMYOmMN7m
z7/8qMvusFnB0QN6xWGx2+22n001Bk8rrebdg923/QmYl+Bx+VxWg85gsTl/
qgjksZutNofdBf7aY93tqfT2HE/vjsdmBjN97E6P2/kz7Sg8TmDANpt7Z6/v
43GYjWan0/1Ou9TjsJvNBoPF7n1jSj12YA9brM53XDLxeRxgccNtmdbscOwb
v9th0unVGs0+f+y94ea/OqP3Tx/Br2pMRp3B5Np5Rw1NsI6KTq5S6bRvqwP4
fvCC5RNVMonKbHW+Z4dAQD7sZp1GbzBZXlQF9NpMGkBxGMH39nnsOoVGbzLa
fyZ91+fSCykU7NIcmiKXoPp654jrknddXvM6HWadSiZXmV0HpAXQyjab3Xog
1Ojz7JaOkqr0Fsv7NjLxOi16g16vswCi6rWZgXW1WE1atUwq1dpeJc54d8tj
AT/9krX9CwBPvI1mi93mfGelTLfTBWwL6xttHn3gdrRZf9EdaOeLM/qkUpxZ
ozHanAcLZh4AoCWAHWKwun+h5weoRrfVbLTYHO73TO922y12h/Nn5dvnBrSW
1fLX3grzARrmrTsd0F1gM7k3FBtYks5qMdneVgf0LfDscgGgQf+uDvJb6OkN
ADPsAt/L+R4j3c0fM4DdPH+Rxvp3gs/r0G7ix8M+u/ysbQArsr6zZu0v/hKL
jMUlYeboOuvfd8LtUvE6Zqa/BzZeU1w3u0SR2v7yZw7xT4HPY2PTZwqffPSb
P/7mWkIPZkX3b3rRxWek9aWl3rr8w/VUyFhFE4K3IfnHths5xGt43eZlaGHk
s/txBUtGg/1/w4g5xCH+9eFzGkScuabsC7/55mJMZusCVax/MzHy7/A13t1Y
5rv90L8eXgVmviHK7+tv//xjSuMCX2D896SOfws4NezZybLHV7744s+fn7gZ
XdO+wJP+b4jaPx9OKaatOf7WpfP3HmZB0UKd4VAq/znw7niN0tW2ytDLl3/w
f1S1QBAYf3lk6BCH+DXD4zAZpJx1DHwBQ6JzpT81YvhVwOfQqYXra2gMZo27
rbO95ZbmIf5V4HWa1UrBBplAIOJXqKwtscZi//c8MPM59FIJl0Ym0ek8ld7u
PpTKfxJ2G2wpN9mry9gl3ApTIjc433VkdYhD/PvCB/aCdzodDvAfp8t98Hjs
Xx675+X/noxxiEMc4m8CoNxcLieg34B/Xa6fSbk5xCEOcYhDHOIQhzjEIQ5x
iEMc4hCHOMQhDnGIQxziEIc4xCEOcYhDHOIQhzjEIQ5xiEMc4hCHOMQhDnGI
QxziEIc4xCH+OfCAF/r2347zup0Ou9Xm8LxHRdy/gBdtVu02q93l8R68gufz
eFwOm8XufFeHYp/P4wIe4HA4Xf/s69DASMDx2v6RxRx94NVLG1gN2Gx1vruB
6e6fe4HFc9qtVjt4TdP3+kfXXyi4CBa+BFbdvtvI+PAG1B68l5T+Hb7mxU6x
Wh2u/wPV48D6XU6rxeb8G28T79YB+6vqJIDtisB6vgBApQLMObCtdlXT7max
mcHSuf+gBXi5PcHSwr/mNfeBTZEcNqvFYrHafrbULXiN3PXiZX91N8h/9QC2
iZwplOpkxj0z71VvUTHzEBhO4TlY5fuvhc9p04r4K/Ojgwvrcr3xQM1nq2Sb
hh7tmiGrHKa3fxHYPtumYFHnpxewFJryn3tZ32eT0NbR093TLNU/rNOiz6zc
pBAmBwZbGusgZI7K8rZuJ6/hsevUAhIBPtKP5GyrrS67XiMkE+GQASRbpLK+
Y/p8Dp2St4qfn4UsbeutP9uB4P8g3kNK/y5f47SqhVzi/HD/AlNteldl/n8H
+Jw6kYQw0gElc+Smg+2D/wp4zSqllLsp9+y878p4nTsWARU5MtI3MDS5hCXz
NgkrPJ1J7wXGpDWKCKMtUDxXpfobxvT+8Dn1wG4lzk8PorY0Juevdc09Dq+B
Q8PCIO1tXb1Tc2zDW6ne5zLqt+mk+fFh1KZUa/u1vuy/HDyAA+35C5auy2UV
Eevj6gbQc5zXtVA9kjlYfW5MRNnwtsfoesfH/zJ8ToN6Az5TEXPtbiWUJj5A
1D4DizHXU5RcC+Ob1Y63v4XXqVVQe2tjIzOL+sZ4/9ySgV4Daw7VU53yHM03
Od8+3hcAXAzfG+GLX/SNakLX2NjM0DSaPNOaHteCZCtU71pTt1WzSYM1V4b7
3y1cWBFozFoBfba1KvzGvcJ5wqb+zY8CPr8bLGICTPPm2khVaXx4UB1NpPuH
FszzeX3uf+EO1e8hpX/L0307YNsln8epV1KnJsriLt2qmuYo1O+/AB7QH/1n
x7p+Dr6f2Qw+m2yDASlILJpe5qnf3lfwfZ5uYq1Ce2pz25DGnTcadb0Nbr1e
iBnOiKtogYwgltCIkeGanMhbie14/qbNB1h0ahqkOLoIghcIf/GY3mvcLxbd
a9cJaJP1FbHB96rIPOW77PB/XfisZgUDWVIMxa0iYb2DLQ3FEKbJvWfBX72s
w7DNnuuoeXb3YfkyZcv4q3zZfzl4jDwSh8PnaN81nV6rQkvrK/A/ci+5s3P5
J9XiUS7VNmcnBGeOkg2+v7Gkrc9tNbIQi2WBfzqR0bUilO1/ms+uVHBJKBiW
qXFY3q7pAQ4wGIT95YF3o+Lqe1j/XDoAxsvlrWFmMHyN42eYyed02xUMzJpA
pvmbRdmz49MRa8LKage7lqUGMW1uDMtWGN/eA/jVR5xmBQvZXhXw7XcJMDRH
bbUoOaiu5/e//iFhaoGpPTBmQABUoo3FVZnZ7nZZ5JThkvygq+fyVzfVtn/Y
NvRaZAohA0OS/0PPQ/4avIeU/uJH26w6MQVJEOktFpfVsD4FL3r0xyNZg3Tp
e8WufJ4dj4a3RuUJpLp/Rb3p89iNGiqKJlTLDkYoAPdOLqfNT6OYQrXlF3rP
PodyrbslPuj29cSGTY/2PRxin44thJcHnLhfDCUQRXLFFo003VEc8LgayaTq
vIBXYpHRUBMo2pZW+7/n0XttFu02ZY4gMliMZuX6xPOSwPMnMwkMmeVfcQ3/
EnwOiYw6lHourIvIW99iskj4OZLU/tPhn8/hMElpKKJQbdBb1VxUZ/WDo2fS
5nCbhn9V0/TvCp/H47QYlBKJWKrQmi1Oj9fjtOuVKqVCodTqTDan1+tzmQ0a
lUpjMIDd5jw+p1GnkEqlwO/NrzrAe5xWo8mg11scVp1cIZWrdBawqavHblNu
LDbkNbUO9JOUGpPz7d0efXazlLbakRZ+7tNTgaXVMP6us+IDnMi17qK60ue1
izLXu7rWeoEnmIARKhTgIC0Oh1GlBsYP/KQ321zggPVq8L+NfAKrM+Lrk5ld
OOamRqWUyaUqk/3lcacXPKfTaw1278uGh2ADULNOKZVJZAqN0ewAA2o79rmW
iKCE+NpOmsGslknFcrXR9jP9AHwem0GvkkmlcvCPPK8asHpdbptBI5dIwcea
fmqrAcyV1Wg0GowWh1knF8vkWr3F+aoXucdu0urUCqVSrQHn3Ac+yuty2sx6
7avxe10um1ELLJpCpdaBLUDtxq0tYn9xXOkgnMjUmC1gT1WXzaDWqhRKlQZ4
+lu61u7s9rQ1aVUyiVgsUxnAQy7AQvI4tDopof3p5fiMuvoFqQp4nYNnxIAZ
ZTBoFHKZXKbQm1+2KnbLqbD+yOOnkgCi13l23Mp1xFDEkTNJB4ne59Ar6FOw
zrKY8iX6ptJot3AQzfVR18/mETkimVohBWZKa/4phg9Km0Url4i2pSojYBi8
TSnt9rQ1aNRyqVSmVOmtgOr17UqpQa1UqrRGh9ftsJj1GqVCrdKCzYo9Dp2M
DB1vr0ysxrC21CbQfAJFAlhl2e5cGG0/9R8G1spkAl5WKpXItUa758UIwHNt
mx4YqNVitgJfA/xWBYzO47KbjOAfy5VG508t+sBkD6NSKRVL5Vrd694qL0YI
LLRKpQb7Gr9Ri32flPoAGbCa9Wq9FaBmrUIpVyp11pctmw98zGkx61RyCSB1
wDa3WA+0/PQ5rSoGDdGd9qRoYpXF19vMmxhKS+QnANFTNvnAXgKWFZgS387L
F3XZbQaVEpxbFSCADo/bY1cp10cbcqo6BucoSoPJeaC6rA88ODNqNcCD5EqF
DuxP69vtuWq3mjR6q90EbFiNFpji3cc7zcDCSYCHq41va1ftcwMaywTsFUDK
dcAelqsNVttreQIWVq9TyID9JVebwCa3wAfsWhVzEZoRXg3BoDg644HzoF0d
qNcYrE63Z1dMgJ/UOqvNbAAXDpAfQHG9w/Tzeb1GLn4oP+X2+Ytng9KWrIr3
4EmPlMjoivzzJwEFE5R1HSAAXqdRLhyugBKFDI13tyE4oEs1Rutuy1pghMBb
qXRmm8UESPULxeV5tQd3NZV+r6Z6OU+AqICLLpFpTcAiHTRwwEWnwrvSQ4sn
19h8vZGF6m6JvAgQPW1TolHKgOnTmPeYLICGsepUkm2JFNg/9re1A/LteKwm
nRqQX0AHaU02t2v3R5VWC7yGF9g0GlD5gDzi3t2OdotObzSZzHazESAgCcAn
dodrd/JlYolcD4jDz1Cwz72rWmVSmVylB8boBeXLapHgViBZlz99/Hx2ZU0B
EMGewfucdi2Ps9SbHVE0gqZydIZN4mRv+Imz6XOYdRGg72TAKht/oidgKzvs
egWw8aVKPSAWv3pLwOdx2/Wa7fXVmeHh3j4oYpUqUBsNShlpGjbcOzAyj6Zu
65x2r4G9Ap+Aza+RNtV2q06/RVqGQSD9I+PItXWZDVCSbrtaTMfgF1ELtC0W
ZnS0u29sjrKhsDqt8m1E5rNLZ/0fJOQMoNEb6rf6Sl77toCKqMlqaI8+fuVh
Wk4/SQ+Ozb1jXx1v7hkYxGy+O0rpc+24pQzU5OTA0BiCsLapUK8jEaN9g0NT
SAJ722DzqOn42SkUjskgL4NEfyK1BTaHQk+P9fV3jWIZWrvVDewjvVpAX0XA
cSKbDtRobrdFoxVScbPQscHBMThuZVNjczt8INE/iosuqUXRKbMDvS09ExgW
R3VQ6kGdbzUoOUQcYmx0cHR0epkqtZpdwOZ1OgwyKZuwOAUZGRqZQBJIXDmg
zEChV7NpaDR6cZkupGBG2nt6YQtUkRKYXIBn7fJNEhY7N4uAz6NQZJ7RbXW5
HfptIX0FObsqsrrswPeZZDI2cWEWPjcLn0XTGAKBZGMKEn3qyLHA2ML2iRUO
MHyXWczCo9DAc2YX0MsbQtvOgfNv0NhQC3iUJeQEZGBgZBpNZ4t1FpvBoqav
TNakXj5571Ficj18bmld5PS+brYK6BmHTryOJ8xPTY5NjEJRK2KLAWw1DhD9
TH/kiT1EjxyKOPom0buUpLm6mJALP3wX1tQJJTBlSiq8uT7i6unMBQIWiYL2
9A9NwVa2zaCx5AN1soTFwExCujoHxjCrXLnWcaAhnNfrttn0Ig5xYX58ZHRk
CrZI5arNZqdZLaSsIcZHIAiiFLAtBFwicmp0AgKjbNvdFvkKrDzs8aVzZyJb
+iZW2Aqd3m7QiBlU1Pj4YN/QxBKOIdEAXwRMtd2g2qSQFqYmIRBA4JYZMpl+
N5HKpJCtI8dmV+g0CpMwO97b3TJMZElUEj6VNDcC7KcBtFBmdICHE26HVSvZ
WpudGe4bhMDn1zblu42/vQ61mLVGmJ9FIJAIGG5DZjDssyG9+6TU7nEZJdt0
AmJ0jrbNJMxDof0jo0jqlvWASveB2RLAi6OmRgaGocMDEDiJIdZb9oqsW721
1Nbw5PwHX4XkNA4h6NvCdTSlOfKTb9O6UYvzCxOjfQO943i2wQUYmaBJJ+Uy
sLMI2NjI0OT8Cleg1ZulBET6hR9P33ucWDOEoTLVe1NqwdMYh57PJC4tTI9N
jE+OImgig8PmcpoVXDYZM4Ha4BEnp0YRqFW+ygX8X7WEvogCdt3Q5DSGKba4
9usMQEhVW+QFHBq9RN3kLA0NdfRNLG2wVKAhDpoOJvnWOgELGxsdGhmF4Wki
tdZuN4pXCG3hFz/8JiC5um6aQhMa9ozO47Ko1ZuryEkcW6YzAXaZdlu4Coci
aUwKfhU5MtQHgWCFauvPda73gQY9qWtopCk16mn4+euBvUqx/i9HW7xqKmck
/sIHH1+Oau5a5MkBe8lh86o3NqUmtcnjdZnNSh5ldgLPVkjMHo9Nq+WvIiHI
NRZ1lQCHDfR3QZZZGpvVs6uprBrtFhU/O7arqZZXeICmAvOJLEoOEw+fHBjo
HZhdZqtVlv2JgsCiL7bUh5z/8M9PcpuHEet87HRXS8T546kLS4vIxYm+gYGJ
SYLI5AaNdh+ouKRS1jIC0jPQNw7HszfVjgNiBrCvXb5OwS7Mz8IR81jUGl+v
EzKwM7AxOBzHUTqsCiZ6aWoIOoPFsrWAaeVQcygIFBa3QuHT16Z6O1uH4ICa
Em9LGFjEYHtH3xyeo9C+kaGzq1p1MhYBjxgHNjcUhl7haTUWgIIEAkxXW+bD
bz+8EV/V1oUiU/na1+/r1spWB7siznz256CUql4YmYNHTfSGHT+TPDWNmMPC
Bgb6ICNowe4qg1NnUgp4BNh4X/fA6DyGLlLZf+Xdj5xiFm52qHkAyRAy0Y0l
0ZFxGW1QhsIpm6oOvPA4tr5pQQ44ZzteHbquDDKDxvHYInx/WR0cR90gQque
J0XdTRhYM5oFlL6GuPt3L90Oym5q7uqtS7wf/CQ1sXlZbtdo2S3Zfn5Posob
MEKR0vo2w9hrYKBXoB31C4K12oCHt6Pj61HgAThAH1ra+rqALTT/pVkG+1Jt
jaQkP4qMKISumM0eA64z6lpYXGUNQuL0AmbA9mxNHUDWNA6R1R7y1de3wlJL
69obawoSwq9dedzC2NiWiFcGu9IeXzsdWIRWC4xej47JXBwoze+aZ8kExM62
rNgnkc+hW4CvBhD9vaCrD8MLm1q7uupjrt0JyikcJCn23xSwawS80fzyltk5
Mm99ob83OeBUaP+SUKeTr+FGWwty25ACvZiPGa9ITY/PK5pkma1b5O7kuLu3
r92JyWts6e2tSr57JSy9uZ2gc5qVson0mn4MkioWU7BzlZXDWxaxjLM2WJj1
+N6ZB41opcXo1rLgI5DallGhQSvFDLZDp+HE7U3MSrn/8TOxBd1zJLFGLuII
IamFfdQVDvDNcHhLO0ThNe7zq72uLfhwfV1tyyROINFuzjTHBifnd/bhhWbr
tpQ5UnLrTGhMWeU0l7+lMgAu8KuPeSxK9Vx2ckZzF4wiZCxia8L8MuG4TZ3z
vYnebZas9OVm3L94Ln0GTdlSmY1MZFPN4xPf3MksrO7ors/MCA+5/6Cgf8uj
d9oky+MIyFD/Ik3EmW+OuvMso7EVLd4X3fQYDCLcSHJU9fAylsXn4SD9mcH+
UV0zDIVKs4Lrzw09F1yK04uMDsPawHBe5PmA+iWNTWPcxrWlpgZcu5KNIGxs
q40iOmpkqK6pGyeQydA9aU8SEsqeo6ROp144Xfi8pqdnli7cojPHc6IeRJf2
41Z5W6Ll3upHx3+4FhGfU9fT09RSmRRw7Hx4Znl5a39fR3VTXvjZk/Fda9vb
DoeOt0Lor6+fZdLWsdCKxJSopOQhtsnjVi7WDgyM9y6JtGLmUlHeKJnP3ns+
69ZK9kqpWrG12NoYffvEyQeJZfVNnbVF8SFhgZFJEwq1dY/l43V6tidbEqNT
spr7KQItd6T4YUBe69zC9p4VcFt05NGJ7HsfHEtqnl3ZUJh0XAylKeTjz29F
ZVU0dDRU5cSE3fR/3LHJVdlNrMnJlpKn2RMCvZ47mlNSXFswSNGpWOym+zev
R8ZVjOKEwAB2Xm90wJnSc5cKA3IbZ8dX+VzcSEPw7dwp4RoFO1sXF37j3KnH
2WX5KXFPcyq7EfgtDrWnrH16jUDBIzsKM4ODH7fQBbqfTu0AQ88iJ7VXhd+6
e+0BwE/tvb21sf4Pn2Rn96yp3Y4dB3f+eV5DG3SMJJDxcPCC+2Gxz1uRGwIV
g4koCPjjyWeVY1CKTLmn+bbHKOEvdNaGXz5xuaCHAMj9Fmu2Ie/20e/949MK
GzvqC0uTQi+fT+igqSVvzT312d02HqyuBbE8N9JTmH7zwrkiMk/1HudNHr2W
B+8K/OaHL748djksoQ6GE1k8bjDz3+s2arkoRGX41T9fTusnrUo06vXp8cw7
3x+7FZZW8ry9vqYw4enlH8M7mXSZw61jsZYGSvI655mApurqyIkNCa8a4VvV
G6OjgxOjcCJtBT6bf+fmo8pO9KZs364DFh0ylnXvwxPJLYjVDYVmHdnd9PjI
l/4ZuRXtXfU5uc9Cbt/K6ua71Q6fU7pCQg7Xdy0whNzltoSUqLTEWhTHsbPH
XrJZVMypjLRBzDpVzKYtw6rLJ4RGswRZVhqf8DgLuuH0OByyhcqnSbEZGf10
q55N6ogLu3LzTmBCfnt330BnWcjFByEx0blN3V3dkMHniX6XYyvGJ1jW/ZPu
sWv4nKHE3IrRKTxHyMZguzPvXY2sR3A5Eo2OMYusjTz6UWAx4KLyZQq9bc/n
rEYmHFV4+/OT8VWjGKpUxcJN9oR8efxWYmpRS0dDYUnik2sXYlsoOonVrqQt
LA12tM0xuKylvsyn8fGFxdNgkPlXy/U+8/rIWGNhTEYLFD6PmGjICbp2+25s
Qt+G0y5ZLg94GpqZ1rmqdFt2rMThJsgCjkwlTI/mhEdXDg9Nwqe7C/LDbp05
G1ZBMPK30JDc4Kf+wTF9LLZgmzuZlx0eE5w6SLKbbOrh0nv3YpNbB5gW+9si
9z4Li7IAGx5AbSgNqsnEyJshYYVQnAX8jc9pNFvs1vfKxvJauX21z0Ijop8P
bNp9bjWh6mFEWHpy+5rWbfEaUIPtsEWCQCNaYXWEfXUkqnwUsyrYpCK7m8PO
noybXubITUosqj0l4JubOSjlpt4kQg9AqvJyR7givdOu2yBO9LXXD6GkNpsF
IPoHkU9yK5BcoXCTN57y7H5MQuU0ZQ/T+BwSMXmsNCipE83m6GwmCZUOa04t
nqVKpdSpqsb8zIQWktzmddi0ovmGhqRw/ye1CLlhc74s59Hje0/KB1n8LTF7
MvtOeExeFoRt1m1Ry69FZXZ2LgqVMrEUv0BQOHRmkwrb3pUadORGNUoBuM+b
2M6ygrCU0mWFxqzcWKUyWQK1mMJvefjdxYwaGFVodQAeAa7gxwcZ0EmyVLnF
21rDEzRe22uT1+Nza8ktUTn59bVTXA2wVDYlayAlJTQmpnSMoNXZ9Uv1Dy/F
pLe1E002u3NPQNXnNivls/nF9RPTK2LT9spGW9jJW3VjFIne975E7/MYN8Yq
SkOuXi5eYctMDo+dh2yqe3rhZBx0gcTd4qHGqhMj/R6nLVjlEtx4TUlRRnnL
2CwKAW2K+vHmjYjomnnO68f5nHIqY7TA/3beIJ4vMdtsavr6dFHwD5eT23A4
Dp4wnBty9E4uWic0eR3rkPGC8BPXK+bVVp3LQB3MLwy9dbNibUtt1tGGBpvr
CxrmuTqb06VhTLUO9ECGcFyzBFEfHFzYOovkG+0Og1G03BN7/UlcVe0UVcRa
RKR8f9I/p2oIyxZx6OiB0h8/9k/u7JlnCAXEVVhZ4Kdn88aZVNEGaao1Pzy1
ehg+PTvZk/80wt//YnjXqtVG7orJzy7NH2IoDHolFk4WqaV7M4J9TtteKQVE
izk+Xhj63TdhNRg6WcjF9hQUPr1/uXhVbHC83jNuu4tWl/MgJCKzG6a0e6xS
5gJyjbG9bdr7ZI+dBUdXBH/4Xd4QeUtmdzuEGEpz2MdfRdXACCTBJmm6uS7s
xyPxSNKWTrsBm+1rzGpf07vcelRxYUr2s3KkUCdRDYbcu52c0b7Etuy/fOqz
2/XsudLYJugqbssgo8J6nnz34PnKMkNAHi7KeXDhaHjvwgqJQmZy2auU5f7c
wOjKTigUNjVUnZJ8++JXN2phAu2rc3/wRMauWuhJuh96/1nKEFu4LeZC0xKD
46IKx8k6uQFdmBiZXzOMZ+vtTotMRW7IfnA/Nr9vZI0uWqsN+fhUahsWvW1z
7jnt8blsRtYcpvTun89ktWM3pXaTdHWsJ+z4NwHV3TOkTR5mcSD/ybEf0yfF
TM2bisjnNkiBndg2TFzji2nwxsqg81+GT1Kk75O973ZZlTLSRH9BWMjVc2dP
X78dXlCL2NzSA96jy2lgsFHFgZ+cSukk4mV2u5hAaQ//4fOA7D4kepNHQfY2
Pv7+XNoshi0WYAZHqnJzINytXU21MtnfXtczy9tClj0rKnn+vHdqdrxnuOje
+W+vxtYvoCV7FsbnsbFmF8uD//hDPoQqktlt/MWe5qenvo0amSWwhbzF6ca0
yMt3k+as2wY9e7q5PT8trWFsdm5uqiku0t/v1pPybqb7p9MswBnUi5BV167n
tKMWBUqFmI9HrSnsTsNSeVlMzJ3EQZrL5/KZ8c9DEqMS47s3HHa1GleafDPg
SVxN//qWSMil1j8KCoiOKoXi+FvbW/Th2IuhqQ0NKOk+ReGUSkjDRdduF0LW
VqUANyjF5In6gBP3k7oheKFWjKf0Jp785Gk9msG2OPauMvCyDgGWUvfoi9PZ
7Wj2ts22vTrZ+/Tb7yO7IYsbgs3lhf78iB8uJo5LmQLSYm9tQXxu/SgcgZho
T7n3yC/wfgZ03b3zq72K4BZNFtXnJDwtg+HxeAIONdHd0NLSDzgULkDp46sK
IqOis/oWtpRWSkfXOJnEWafAWoruPEwfxcyg8fjFycm+ltrKtjEG4A2twyuf
JQVFZyLtNmBB6a01sbFB0W2LNovLOFYREJCQ3jXKfzOcBUycQwl4Vc3VBVXD
80uoxdaoR+duPEzuGJf81ckgPjt7rjo+LTI5bVzg8CiXmyKj7gSFZQ9iJWot
rqUfvk4Sml0SgOgjvj6R3kkUyDweLQMBy/jxy8d9KIbS5dogT5WEHbmZC6hQ
LR/fVVIak1ZJdoIXTXxWnVQoYG6KzQ63DQzdx8fXdTFdgHXpotdmPYiKyx/G
7DEevWry+njptfP50xyl2gNm+5uV/DXylsbIhldHpobHJ42B6erAy7tEM5Nl
EddPhZaRbVvE5sqI6ND49gU74Cw7aI2AdZuR0EE2m+TCkfjE0PCo1Odt0CUS
QygxuwE97mJAZ0ojj74gerd8Y6q+KuzhvejyxpGlJQpfrDZZZevizqAffsxp
nGdJPV6bgsnsjggJCI/Pa+mbXqZyxArAIHrtdtk8dnp/+Lmo9NaWZf2L2Xew
WstDHz56WtnDMfochJagy/HZPb20A+vo8zotJh4Wi8Zg8STawiiyMvjb8wX9
K0KV932JfmfHxpqqrnx6/WoFTaQHXs7JRzbVR147k0sEk/Hc/JWBvHT/W2Gj
BhGhpTw1KyGjZQYHSCwONdzYVNfdN0sVvX6cx8CYhRfc/dSvGclSgg6xR6Pm
TJSe/+PtlMER/Dx+tODpsZdED8zhVHHUyV2iN3it6yNFpeF3b9WsKyw2ATSr
vKAkvY/j3GUXq5y3JRBw+WwtsTz4+P08wIU3+HZj6ZqN+vtB92LjG1AbIiq9
7NLpB9Xdi5smn0PNW+q7/4eb6WNTVI3bIxZTOuI+/yqxh44jwGBNuQGBxeNY
HAaHX5rs629uft4+z7I7+XMVlUnhwZEFz/uQODJHqLUezLjbK6UGr2cbtVif
eP5YQp/IoPC4RPNNjfH3TibPCbV7LDivyyNBQUoycnIra8YXsPBx5IpQqLY7
9+8wF28e/zz0w++LxpgKgNDcWwDRR378bfoAXaLwuNWUCWjatU+ChvGbapOK
xyOj4Sg8lbZBHUxPCksMzZtk6hSG0acB99JzegjCgxvd7barBHg4FoPHr1Ex
Ex11QUeu5i1guBoeorE26ub3KSj+7oC9CgIJkn/lSmbP1NwiDo+ZHRltryuo
nFpTmPZkk/p2XLTxvJCEsIyiRTuo+8k1haEx4em982Iu6/nla4ElDTAGaBj4
bDt2cnfkpcfhhSVjWDG96enHZzJ7VonKgyeuHimJ3/nk6LlsgOgBtaBjL86m
nDkS2gunyV0eEWepIeW749F9Qpr8jaNaj0HLxUzlxRa1jEFmFyaasjPunf3j
tfp5gdb0PqTg8+54TAomZr6nLD/s9rXvfjjzIK91iS80enY8YiW77dmfTmd0
EfFyj1ezIZpMvfhFaPU8g+tyaxjzk4mnj0UMzVOJ2J7S0ujUCrLT+FJTbfEZ
ZO42tu7+3ezy1g4knoBFYWe7G4or+5AbG/vvyTi5c8vVTz86VTLBVmm8zi10
T0vEhePp+A2pxePeooyVZly/HDxsFChZczU5+VHJJdM4HA6PR40MNNe3dE6h
hO7XXOqzmBUrY/G3w8OS0quHxpboDKHK7PbasNUV8XF3XxK9faUuNCUmKb6b
5fRY3Zut+Q9C43L6EHrAp7MYJ+IiHiXF16G4bvCICld47UlcedkEb+9dK6+O
xhzPv/KBf8USn7O7t63yDVLeDxeup5dPAMYKiTWc8t2n4c0rgq031solIjCa
gr88k99D3FJ6XDLyZG/48TOpyGWe3uORcBYas88fD+3aomAHe8pynkZVTy3j
l/G4RWhHZ2N7yzAOoK9f7UVfJ707uTg5LrqDrtRqNVoQGq0eTD7w+bwG/Ghu
VHxEZh6UyugqGyOLeep1wnB5/MXgYpyUKX3151qd1uRw29fhVdFJQTGZc7tE
v9FeGxvzOKoFZbU430H0PrfXxMH217dUVdd1DUEG+4bbkp5cOH8/vLKF+gvu
Dtm34JXPkyPvpgzxpYvdjcUpd+9FP8suQazjG6pm6GK+2ecBiP5FMh6Yde/R
M5Hw7CtfPOqe31A4XQzyVOlLFapena1JS3qQXEVxvEoB2+1z73G8SsbbzboH
iJ7RkBMQGZc7tGh9PQ7P1tJqa/w3pwvA7fMq1W7H6/Y6qGN5QREPohNG5C88
Yp8Jv9Ca+PDEnVSUhY9rqoyMfhrf8YLoN1pCY6LT49pINrfVsY2CFD+LvHfn
fnBqXhtyTWwxOwGSGpspi3pJ9F6XYRO70JIW5nfF7350ZgMMtSHXivcS/Y7X
rjVxpzrSgkJu3w2MzKsYwGyoXa8Pt70mj2Wp7u7Jx7GNTZiXZ1s+7WRrbOCT
R3l1a3qv/eeIHkx1sisY5CXEHByBHO0YLQz885m8XoIQIIi/gejBZLyXWffu
rdXB/MzbN58MaoXT+RkxGXFlk6DIal+JrNFifa0O3EoSdCju/AfX6meZClDf
+uwGMaE34MPr0a29CzO49yJ6y1pzRGZyRko/96eQHXjzTstRwpNvfO2f2o0l
7lpDgIJSj0aH342MKJ8iCmn0cpDoe0Cid2p42MGHH/hnjk3RAKKXiKmdiV98
HtdOw8z2Q0qTr4a0EOXqPdvIYHL47LIVVHt2cuCtm3fCEypH5zbkaut+hbVX
SgGiF6OWGhIvHE/s3yV68UJzc8K94wkIwV6i93m8Ji6up7QyLy+zqnOosaxj
YYunPqi03kL0u8l4Q2DWvVtDm5zIvPHRwwHwAppRKt7AL8CmZueWFlrjnwXH
heSMb2jfQfQej9OgZC1jkXAEfG68u7b8wbc/Zs+jOWowbhN963QGZksLhu08
grnlpvijV8un6QKR+tXMaLRG+x7PcZfoJ/KfJIZnFC+Bi+Ok1ReFRoends8I
N3DpR87fyauZ3th1vt07PuVM5rUnYemZvQjRO4le0BW6j+hTzx4N7YPTFC7P
NnepMe37I5E9AqrsYCaOU81izncVpZW1dvUNDA31VafnPLr84ZGUPoZC/hdO
6b0Oq0WnVNt8YEKd1yIVLvc0RV/+9rd/uleCnOdaQKLntB8g+ktfPn2OYnDd
bi1zHpZ85kjYAJI0M12bnhSQVElxvLr77vN5VCYZNPe8f3bD1CxX9XoeDRar
Y9+w3kL0u8l4YNa9e5s6Xpbtd+nRgJ4vw47kJ6WE5TdTd9OBXzxQZ9BbXHsi
tF63TSVG1Zc/C3hw+9GTlJp2JFtsdpsxVT9L9PzWggdP43P6d4neaplOiHyc
AhA9DyB6p55Ycj04urgEyt5L9B4ZgdoVe+w3N4rmN9ng7QmfS8NXdNy+fDE2
b4jIlv5VRD+1m4w3D2bde2Tcxaa8i0eD2wVrk3X1makPk/rISq3yp3fVm16k
/P064WT0puQ8expYjlE7vWAepNftMBr0chVgD3t2rCxIXlHso0ux7U1FHWSJ
2uBkrUAK4875RY3KuBowhxvM0LDqxFKdw0L9WaI3jb8g+pGDRA9G5k2rjW19
KBhRuZtt69pxLHY88wsJyipE6t86Yq/H5Xa5nD9TWM0thE1WJPmfD+8YLCyf
XOutzKpIfHg9s6uiYJi+Dd6QfU30xD1EH/gm0ZMRtfHRN4NjoTKVBSzO5gW4
zGbSm61e288QveX1MDzbmLXm6G8/D6ldFvItXi9Ycsph12vNFuZ06dPIeyGP
G2jWFwnMFuJSV1bwmSdlZKsI8Oj3Ef2TF0Rv9XhMeoNdy6VN15aEXD179Er4
AJ+lcu4neqvNbtXJtiX4ruqwC+d/eBBVPrnMpou7AKLPbpwDiR6YN5NO69Ay
CYMFGfcuXboYFD+tUvxUdcVn9VhJnSGn7j8pKpnkvzzCNMDakyKiwyt6OAaf
A79L9N1vEL3Xadjm94dFJzZ0wNkqCWmzN+r4ufzXRB+xh+jp7yD65wDRXymn
iXSviD7y+tn8lYNEP1uUGRwVljWI0e0KAbAyFo1Bp1W99qA8Wvr0ZNqVj46n
d69t7+pbh0FCGgj87GHWEASPwkMLw47dzlnSCY1e58bIRFHkiesVc7tEvwES
/Z1bz+kA0VPaohLDIkMqFmXg1gArItqtVqOUqcTkP/j2bGQVfG7rhcxa9eOx
0U9SEwGPfuv9iB4xOJL/7NLNwnGFQ+vaNSAdJmDxpDqPTmeyaYUCwmBrwq0z
n3wbVDWP2rTum6d3Ez3qbUTvsTs3mgtCIuLy+ufUoN/s9YH12zz7ExgBoifs
Ej10P9EPHiR6uXSlt788PTh7RmB3m3CVJfGpoT8R/V2A6PGCgwJisSpXR6L9
02pnpoC/W5+DRB67lruP6IUviF6IwjVEHz0W30GViu27tRRdNodOrNA5ra/D
pm8QPfUl0cO32dTSsz9eiskbIPLA0LkHMFUROf4xCUXF49htgOg/OZ3RvUpU
/J2I3muVEuDItsY2plO/m5nqFi4SakP/9IeASvz2iy0ELi6grjxvcoRDxmNg
x6eYZrdt93c+x7aU3Bj1xe8uRnZDCIpdj/4Nov/iTaJHzNQlRPs9jhmVKc3u
l5rKsiUVQPPOn4ouGB3bMLtBMvZ6nUa1Wqc32PYO4hXRF4+zla88epDoN34i
+hsviB4/VhAZE5hcgNKCd6nAXWc1G3UypXHP5QqXF1RUDi1naaY25unVH49f
yhzkGsULVZXxsQDRU50A0VsJNU+SohN/MdGDwdLhlHO/O5EwsE5SgnLm1gq0
PXdv3MmpGH/l0X/ydqJ3i4jM5pAvz+QBRA9sFhnpZdb9QaKHNTYkPrvztB6u
cVk9u9vTpjfrlHL9gZKtvyJ41ejamqibp68lVuM1cqvHqV2nLqOGx2mG3U1i
Y48MFQSeO/sgvI3DU9s9Xi0P1Vzuf+yLayW9RJHM7rRKGSxEbydGI1fT4JV7
ib6tJiYmCCB6m8Vpmap+eDcutX2Q49rZre74UjK8Vrt2HZqZ1T9PoelfhJAB
KmCNZ90PfRgT18t92306t15Ioa+t4liat9+2cwrIY2WJZ7/77k5xP2WbRx6G
5D88fS4wvk+4qQZDlR4xkdUR/tXJ9M5dotcxkbOZP34R2DW3oXC4NsiTJWHf
+oEqVKeiQQqybp0+er8SytCqrRYNi0Can5nhmW0mJBi6j6vrfhG636jPDoiI
yRncS/Q+M4sNL3zw0SfXY3tG1mQ6q06zRZlsG6fLZGujBYVPHlwK76U7dmw+
QPZmYA25Dx43LRvcWlpLBRi6f0n0681PokGiX9WbdMSRMYZEqrDoRAToSKqf
XymBLDSDRF8aefRa9bzCbHCwNmjUJfQ2YE8YZYvt8ZF5hR3DBKq0N/jU+bRa
JEPkduvlYsLIGFunU5s1PGRrR3rwjeqNbc1PkROPz62n1D4Iufcsunp+c3d3
uZitVam5qSVT61azz4FrenQpLqurh7q/bpHPahDj+gK/uJ/U1Y+TmkWE9cag
b05ldeEFco9LToH1Rxw/lTiNZmt3iR4xFH7kdOLkAlOznw3sHFhtVdj1i4Wr
Wzqbx+fgIZrqIq6dzX1N9Bm3boYM6baZo43Pbt++EZXQQwOEwO1QMObhKASW
an79LJeCtDEQf/rDCxkQOkUD3u9W82DFFy/kDawQRNS1scLI41cTplWbOoeW
0Nmd9PDo1TKkyqr32hnQkrLwOzfKSAqzTTlfVhTid/ZmahVGpnG4LBLiChY7
g1nXy2Yr/Y7ej21uw8hdYOhet1H3MCmnuQ5gVzGNVraP6AcefHAz40XoXiKm
vCR6HBWLaoq7c+yiXwlmddtkd+ql68S53hGs1oaDz9OZLInNpOavzmecDy0c
ha6q983TXik1AMp4N3S/h+ib4g8Svc9p1k8nRd4MCS0YXQZnCTCjhDyeWLi9
rwqCi48i1j796Fj2MEOu9PhcQjSlOeLjIxkDNClgsGmoE+MZ1z960I/lMLCd
qVmhIUH1dPCMfi4/NyL2cdYoXac0TkQ8vJ2U1YXlunzevUVKbCI1pS7i6IXk
ZjRabJRSJtsDv7mUiVhkq3jIxrpo/1MZ6BdE7zOsr4/n3P3sa7906Oy6GnAS
dFt0ZGMnRqTfUx3Ot+OkTeQ9SQz7iehrC0Ojw1J7FzUyEzbz6Xm/qJIxhNgN
hu4dpK5nwXkVg2MsnnyjJfLT71I6VnBS0HDb++67ofvQI2ez27A8mcetYy/M
pp458oroOUsNqW8jercCPT/SW1k3v+3wvYiPeNWrtIGks787nQrl0sGYgtth
Vm0Rlhhig/ZgIp9bQZmbKYlLg4mF+l0jxi1VrHckfP1xQM7U9LrxZej+89OA
qnpB9FsTqRf3EP100mmQ6GkM0khR9q3TR+5VjK5rQE3FJpLmRsdIpJ7Q7/1v
RCQ2LTCMgKlqlmN6YIs0osC+dxCuzXl8zdOPT+SMsBRKj0O42N0SfuFExovQ
PUj0mQDR9+v5KjGxPTnp5pWLEe1LcpvJ5dSzllbmYCMkk+t1SFBt1hLGxtgS
idaiY6yM1aVff1iOU7Pnaqpjn9151oG1ehwO0Wz+/bCQuJgupmM3dL+P6KcS
IoOS4+vmXxA94W1Ev+OSide6Mo8D22oSRte5ARaRMUm5Zx7njEDXFDbFGmso
6eTHYU1EwRthpR03oPxbn3z1XXoHQSB1O6VrEz1hx8+mze2G7kGiz7kAEj2F
MjtS8OT22buP6lZ4OqfToREQl+ahs0Tjzj+0dNffEz6Xioztzo67cf7stUeh
z5IzCmtbR5bwm/oXNAoQFhFSm/UkuWHdogTTSF0mERHfFn/31Cm/O0GhMak5
pY1tI2iawizjjHck3r576f6TRhJfpWSO/v/t3XdfW1fCL/pXc8+9Z54zT5lM
2mQyk8Qlce+94d4wGAw2mGZMM5iO6SB6LwKECpJAgIQEkkC9o96Feu++WziO
wcaxnXJmxrO+n/VHYkDaWtrSb6+y18rNOH38wLm8ZpbG7l0ZSD93+8LNO2Vj
GKrS4l9fIS/isskXZurvXziaVDG6xDFDF8ThSNBuFCAa7hw88v3R4+l9ZKXT
G9xYs1AbWEftKcy/eftWTh/F/XyLxZuiHgMdDn909XghiaZ2euxsynBt+tWc
HpHb5IPOJbtpBQ5/eOh//nQuq4e0tCrh4ZrLz3/937szG9FLzJWx0dIbhz7Z
cbl6dk6ypuETcPWpF/fuPn722s3Eh4/LO/qnmXKLSUOrzT299+TZh/lwnm5N
wetPvbXv8Kn4ynbmmven+5fDTquMiC6Kizt07NTZq7fvZeeVdw4SZRqHz66m
EnvLHyfdz2nFYGZnMIOtXbDuTpzI6lsTjz1KO3ny6KUnrStKs5E1knXszLFL
lwrgSyLpzNOkuu4xxAJtcWq4K+9hKU4lUSgkyMrKm0c++y6phiCWmJZm4J3P
Ctoml9g8+nDTk+rWvjmWWmqZzb+08+jNtPJmLJ1IoWKfJFYO4PBU+jy8o/1p
cfm82fyqZzh2a5JTjBmueJSb9aS8D0tZnEXAqlq6kCia3GKTysnPHu7/+/G4
nLxBtszk3dAcDLiNnJms708ePnfpblFNXUVr8fUdnx66UzKMJVNW4BU5hz79
4nQpDM+TKoSMiercQ5/85fTTFixf4/Bv+O4L6Sm93WnH/no4o7xzikhfmGzO
und425eXW1AstVyIhz+9eWH77kP581SxcGGgpPD68f37z15NTMt8XFbXPTXL
1m68nykasFolhOG8mw+yq+r6UPhpJLqvobhyhCg0WbxG+UJ37cUf9l7IyMir
binPyEu+vHN/Wh1RoXB4VHOw1tQT3x7PrumdJlNx4825D84e2nv04o07KZlF
jR0oOkfvCPr0QkRFaUb249K2QewsGT/UWlbTO7XClGu1yxM9t7/+2957hb1k
jlwinGnN2/3/bT9fXDfJFK9SqUPZZ//PH05lDo1Q+Kz5fljqiR92Hr1w9W5q
ZlF54+AYUWT0+xY7nra3tvXMUJnUmcHshKpR6pJqQxMs5DCLJ1+dpUKVdKG7
68HZv352MR/DZysEC93QKbTri/O1GJ7ppwUFo9D36+oELON2/K207KYxLB6H
Hh/D0yQS06a5RRHjMncoc+8n+xKLWnpnqAuorv77h//wn+cfD9OWZWIW8lnx
uW/+Y1dO2+zKTE9hydX92w4n5VW3ddWnJZ47e/R0ZtU42UktSz999vKtXOi/
l1WeV71uQaNdMlh44JsTZ+Lv5jc0VJZU3vj268OpeY29zcUp947u+PL8szGq
Qu8KhEL2NSFuJOvkif1Hz8TdTk7PL6nu7MXy5Da//9VkPL9NMtKQePTs0ZvJ
bUyt3cTrT0s6cvzY9bIOltptZeMasvOzCwsbRnHzs7MjdbV1/YgFsda1ZpFN
Vh78y7mbufntBIrQ6Hn5aQ17zHrq8HD6/s++uJjZPru4uiqY7aw6/+Wnhx83
YlhiMWm+4/65Tz89loPGcK2uF6dZJBQyMgkt6Rn30pMrCVLoqi4SOy4TZwJe
HPfN//qfIw/7R2h6i9toECHqLh7PaqUsyl67tT5i503PPb1yNKGksmMciZvG
T3R0liTHXcxtnRavmu0uLYXS9+D4f35+IatnkCpVcPGEp+f//l9HUprxs2Ix
bwZWeuqLPx/Oa8Zy+MxpfMNP31Tpj8vb+/BMmdksw1YW3jx98vCpC7dSM3KL
K1vGZ1hq/aabKqE3nc4eyNj76f7EJ61daMxA/aMHh/72ybkGOE0uExGQ1Qlx
327b+2iWKDEpVyZGim+f2rXv+MU7SWm5T6o7h/BMiXVD12rYYNMgK5JLeuBz
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
    "], {{0, 143.25}, {506.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{506.25, 143.25},
  PlotRange->{{0, 506.25}, {
    0, 143.25}}]], \
"Input",ExpressionUUID->"a6168307-c227-4423-aec9-8aa14eb3b8cc"]], "Text",
 CellChangeTimes->{{3.887401734396344*^9, 
  3.8874017439821215`*^9}},ExpressionUUID->"8efb0619-afdc-4494-9df4-\
d87a1af57341"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Probability", "Subsection",
 CellChangeTimes->{{3.8874005852060285`*^9, 
  3.8874005892353325`*^9}},ExpressionUUID->"391307df-353b-403b-902c-\
06c8d0c2e933"],

Cell[TextData[{
 "To show something as a subset: A\[Subset]B means that A is a subset of B.\n\
\[EmptySet] = null set",
 StyleBox["\nRules of probability for finite sample spaces:",
  FontWeight->"Bold"],
 "\n- Pr(A) greater or equal to 0\n- Pr(A) less than or equal to 1 \n- Sum of \
probabilities of all outcomes = 1\n- The more trials, the closer the outcomes \
get to the theoretical probability\n- Addition rule: Probability of A or B \
both occurring is calculated by: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Pr", "(", 
     RowBox[{"A", "\[Union]", "B"}], ")"}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", "A", ")"}], "+", 
     RowBox[{"Pr", "(", "B", ")"}], "-", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"e6ead322-b3b2-4d00-ac53-5427b3da7cb0"],
 "\n\n",
 StyleBox["Complementary events\n",
  FontWeight->"Bold"],
 "When 2 events have no elements in common and together make up the entire \
sample space. The complement of event ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", " ", "is", " ", 
    RowBox[{"A", "'"}]}], TraditionalForm]],ExpressionUUID->
  "6a9ded8b-4aff-4cc2-8aed-9f442217a812"],
 ", this consists of all outcomes in the sample space that aren\
\[CloseCurlyQuote]t ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "177c45a4-76eb-4364-b3aa-e2b22c1d024c"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Pr", "(", 
     RowBox[{"A", "'"}], ")"}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"Pr", "(", "A", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "6799a695-ba26-4f3e-b088-16b17470c4ee"],
 "\n\n",
 StyleBox["Independent events",
  FontWeight->"Bold"],
 "\nEvents which are not conditional, one occurring does not affect the \
probability other.\nPr(A\[Intersection]B) = Pr(A)*Pr(B)\nPr(A|B) = Pr(A)\n",
 StyleBox["Mutually exclusive events are different to independent events. \
Mutually exclusive means the 2 events occurrence can not be simultaneous",
  FontVariations->{"Underline"->True}],
 "\n\n",
 StyleBox["Conditional probability \n",
  FontWeight->"Bold"],
 "Pr(A|B): Probability of A given B has occurred ",
 StyleBox["or",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"n", "(", 
     RowBox[{
     "events", " ", "of", " ", "A", " ", "contained", " ", "in", " ", "B"}], 
     ")"}], 
    RowBox[{"n", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "f0559717-299b-4643-8ac9-9745af5fdcf6"],
 "\nFormula: Pr(A|B) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"n", "(", 
     RowBox[{"A", "\[Intersection]", "B"}], ")"}], 
    RowBox[{"n", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "4bdea3e2-1bc5-44da-8d4e-52b46ea9ed14"],
 " or ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"Pr", "(", 
     RowBox[{"A", "\[Intersection]", "B"}], ")"}], 
    RowBox[{"Pr", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "90d17d42-7b98-4835-b3f7-65f1309663ac"]
}], "Text",
 CellChangeTimes->{{3.887401566254399*^9, 3.88740171359007*^9}, {
   3.887401773828429*^9, 3.8874018544700327`*^9}, {3.8874030726260653`*^9, 
   3.8874030839071503`*^9}, {3.887403471005041*^9, 3.8874034736857777`*^9}, {
   3.887403515624259*^9, 3.8874036005214725`*^9}, 3.887820674177083*^9, {
   3.8878654638011894`*^9, 3.8878654784393616`*^9}, {3.88786553656616*^9, 
   3.887865550530443*^9}, {3.8878656096288204`*^9, 3.887865614093236*^9}, {
   3.8879055066577826`*^9, 3.8879055431504793`*^9}, {3.887905905760565*^9, 
   3.8879059251820836`*^9}, {3.887906088849724*^9, 3.8879060952361813`*^9}, {
   3.887906750330102*^9, 3.887906789449065*^9}, {3.887907095968182*^9, 
   3.887907110363709*^9}, {3.8879072459339857`*^9, 3.887907254012206*^9}, 
   3.8879083340159464`*^9, {3.88790843167552*^9, 3.88790843517689*^9}, {
   3.88790861695821*^9, 3.8879086280743856`*^9}, {3.8879464299218655`*^9, 
   3.8879464786064715`*^9}, {3.8879466175031967`*^9, 
   3.8879466340880632`*^9}, {3.887946718483472*^9, 3.8879467224734983`*^9}, {
   3.8880053498982496`*^9, 
   3.8880053514136815`*^9}},ExpressionUUID->"003e99ca-2d1f-419a-86c0-\
11ddbeb0f66b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualising probability ", "Subsection",
 CellChangeTimes->{{3.88740079833145*^9, 3.887400803798812*^9}, {
  3.887410543420563*^9, 
  3.887410544774949*^9}},ExpressionUUID->"87c7f327-80ad-4abb-9d98-\
fef5957b055f"],

Cell[TextData[{
 StyleBox["\nTree diagrams\nVenn diagrams\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
BAKBMBT/B9l595w=
     "], {{0, 118.}, {90.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{90.5, 118.},
   PlotRange->{{0, 90.5}, {0, 118.}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"a6d79fb2-c83a-4fb2-b6b9-4a5ccaa945d1"],
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 144.5}, {98., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{88.5, Automatic},
   ImageSizeRaw->{98., 144.5},
   PlotRange->{{0, 98.}, {0, 144.5}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"7a4ad89a-84da-481e-8bdd-de5b39517b66"],
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
WWHxN0bgQ9D6N8Vl9DzMwc5TdPUPJvo1Xbtf6+EOuS0aT6m1XXcOSWHxv/fX
8AJBcEheBf5PrvGjFxwm+oEuev1xL8ht0XjKbXd3pmYrLL6RDxpD1ddZLp8K
tYbw24MxoxccJvrVnwljntbjSVafSuWufR3xqQqL//XRRKxezW1WJuX1hM8c
okef+QMT/Wp9zzeePwm5LRpP1f4DbS8SFRYfNFKgqYJcGI0H1H6CUVdJhYt+
J4LGp357HdteKtbvS7d4wnjU7zdOMaMv0gsT/eoDwhv8fSC3ReOp2LG3I1Hx
3I9/eCZm0sZb41tWT/jcMXr0gsNEP2bozfrjnpDbovGUb93dmZ6jsPio4+iU
cTf0KKwh/M45dvSCw0S/phsPGW6ukNui8dCsbHsIih+9mXEq9SVxvF14ySnP
/Yu7flx46crCl1rbQW6LxkOebq7MpBfbSGJA/PiZ7jKUyCzsogtZoxccJvqJ
OF2kaeaQ26LZ9GY8zp+r1JS/8IyabbfG20031ydpR18pmPIHE/0A+fNWctOj
IHdGg2m5Hlxh76ZM2QkMjukpNOTCaDbLQ1NeFCh43AA++lXuc2+5FgS5MxoM
w92NdfWuMmUfEIlBL72kdlxNuPr6aHw9hzd6weGjHyviPsPNDXJnNBjaelvl
17ya5o8ZT6OPnLLcP7spGHfI4KRfD55Ssm4r5M5oKgJaEum7RWKlT+zu+5ST
4+Ixt6FcS89aHpatsNTw0U/M7QM/r4GCOMjN0Ui64+8ULlqv/Lm6lVO37rJ+
r28wPPZ3U/3iyxWWGj76ASrsXZtCzkBujkZSfeBg46VI5cvexRN94Ro3Pm69
FTMIX7nH17T1KSw1rPTrIVCo5laQm6N+eKRo0rTFY31Rtf19ituTNMjlUT/n
EzNWhCu1yhys9ANQzTdynkZA7o+aYZ7xpbv4jPV0lbB6/s8zobRO78e/M04l
oUtblCky3PRrfviy3G4P5P6oEzDoKPhxVV+Rsqs8DeenoMxwjH7Pun9KyDby
QSt8xHIIuOkn4Q2QZyzpy34KuUUqp+1eePEaO9XO2IsC1vxz+v3I2/ormND0
aiXLCzf9AHX+F2qPHoHcIpVTam3XFo1W7YyJJdJ/eCbGUvT1AiCuLBcMoLj8
10qWF4b6Cdmt5BlLdfaiXs2m5caFwsUbpCJlz/9IrmEZc86g9fSRc8uwFO+Y
MfzEYaif7M1ryotXWOvdckP9+BeUWRaq9freMTg4aH4Re+SZ/g2Bg5Myp57E
jD69+QPgqR+gzM6p3vcY5EaNKeVbdzUEXlH/vDE7eX9xj9evJV+yS+Wz+6iN
3WMqKWz1E7a2k2dadCfcgVwqJcO+dK5o+c/qNLvDuZ1bP80/iaY/F2EWByf7
Jyi+zfEBsNUPADrwVPP1/KIEyNVSGDBUJ89cyqtQdsSnDKsu5zg/0o8m+HRc
xqyzaWDcNNYywlk/2ZtZWNXOLpDbNXr41HjaOpvGy7c1dd6GaOHyv3JPuI+D
+0rjYJwOmt2KZlUUgrl+Ym5f8Ro7hit8HwMB7pVab6O7+AxKxtDlVhJcdcdX
7vFwNhC499cj8S8LWKoVEOb6AcS9/cDAmsOHITftI+4Vxpdu3EY/dFwb7g2R
88bAe7A0MIYsd+9V4dhWUB8O/PWTvTGwZO12uBkod2/DNvrh44PSMfd5xgQw
ELRucHvfx5B70VTV3ZPpiX6yIQPX7ag5dAhy6965R7OyrT7sq233hsit4QAD
78LGwGgS7qsj8THquSfTH/0A4r7+kvU7KnbshfyVW9zUR8UrN1e7ntCNe0Pg
GRzQCp+ITi+H+oZISHIm+C7EFrHVL5Qe6QeQCAR1p0Ios5e13QmDRDxBKbrx
rB95xpLm+89Ve2ubOtBb++adz1gQiIbqnYP4ityVYSn/8sMUNIzt8vKn0C/9
huBSigp+Wldl78AjRevSvd6MqJK1NjTrPWN9XZEGkUgHgzBVoPI5Hafrx9LD
MZmgs+f5qmRMt9VGRx/1A0j4gtoTQRSz5e33L+mm0mMF+pNNl7JvP9Flg/sp
Kpp75wSkLwpKztLJwkTESvyaSymTfVNIdWObv60QPdVvCC6xsOCntbR1W1tu
XNDS/ISB/FhWkD918foSq138OqVek6cbQDUYgK74wjVuy3UtLsybQs3ZeTv1
S7c49xfFo6/Upxp6rZ/szUswOegM2iZ7UBPW+3r1577QlHhczMMaFxfSdPMq
Bw8uScEK7VDR3isISK78xitpbgAajAg09aB6WT0hIj1rUXDyV0cSvGNorK4B
LR2/vuv3Dh69lnHsLGmaeeWufe0PL6vcLezLeQ7q0tKN2yizlzMvRAhb23Vz
/OoAasIYKntxCPZvHvHOj1JfkXCqeVhaR4jPx3k8S/vWK8EsIP0hkanBbt5H
GTf6DSHu7WffeQJGB8TvFhX8uLpi5z7maV/O04gBSuynfOsnvGy7F15/3LPc
ZhcYU5NNLcp3OLfHYTQ1d0WXgD6h81Pq1JOY3zvHmp5C297EBMRnxFFwn3p8
qbyekFSYE5SUAVpYs7PJv3eJNfZN3nOfoszLKDXCONPvHWCAMFBT3x6NrvUL
Llm/gzhlYf7cFYUL11CXbihetaXYcjN1iVXBT2sosyxAhVm21aEh8AonJUvQ
pNTzWfCHJxTjGZywjGrbSKKJr9yrb48lmPgmTfNHzz6Dnn4KPdk3yeBY4h8P
xRp6ozffIASn0rH09l6lJ8lrivGq3wcMSiRCdutALbO/nN5bSOsrKuNV1vDr
G4VtHVAfmi7oE7yu5/BA3VjI7M6r7Sxo6C5v7q3r6O8ZEEF7YBNEPwR48la/
Xq3oV13NyC+A6ZgRAQ709/cD/Xg8BeuwqQa7uQWbnSPSwz48gm5obGRl4/AS
7UxXAx+Ly8E3NDRq48MR9J3BwUFCHplOr9HeLmoYtcDA3j7Fix0hTDQYjLo3
La+2rmnL5BWgFIw+cDmE7u4e7e0FQb8AVtTU1AL3WlradLCv4pJSsC9KPrWJ
3czp7Ozs6kIyMdPewQGVHqiOsrA5LS2t2nbvHT093NKyCrBT4CGSiRw8gVhf
zxSKoLnkCMYjr1+LkUzAAKQwmK6GgICAgICAgICAgICAgICAgICAgICAgICA
gIAwrhA2FWOzsjIz3yQrG0+h1bQPDL8zyWfinz/B1gk/urWYnffsfmIF99O3
MkfdHAFB3JHhswiFMpj0b5e7ic8jvK3mmC6wOfG8fGiObF/0/mkGhqYHEz82
LVKI95lvYmBie7vpU/6NuvkvSBqTEimqKQo2TchH7NZfpE13fzZBGRivvEAT
g9/yi0JWmaCM5thH1UnAX3IojwLOPCB3flSwftrTcycuZbA++bTC6Ju/hV9x
2/ZH5zi+CsfOr4jcPt8pQZVNEeCBlH3PZph+Mgnr1pZ/GRiazPPCdjcQXj1+
GvX4FeGNYcIm/IOQcwFXnr54lV0nkbQWJDx9/CTqaWb12x+/kEWMvhl2MfRm
dB5LXiEJhm0u5ZSmPAe/fpZCY9ISbwWeuRxfBapEaUde+FazyQaTrY49eJZU
NFxTISv3YcjZwCuPX73E1g8JLmARX0aGh1x6mtckAmrnhdnNQaFM1h5/8ARd
xJG+f3g6PosIKvKhfjJhtvcCI0PUpCXnCgScxzu/MzCadRgjlImogctnbL7V
wKU/P7jBNwv4xcvwmGtsYGL3oB1YI6q+v2vWlC3XawcY17dMnrPrfrXckF82
lwkppy0mGRqbrj50LuzIiskolOVFmpjHwIVunW5sMHlLQEJqLv2XXqSIGrzs
exv53p4d2uCTLZDv4MF2s4VumI66O3bTl/hhW2txF+2mGaEmW5+Px+DpnMIP
Dw9BHxihnyj/DPAEZWh2LFPIT3I2fetP59PtwJkftodim9h5+FKR/B+eXjz5
rX689CNmxkYLT+UJZUKi/0+TjM08MniyYZvLxFXhVijDKavDqsSg0/ijicHk
vc97gZXp7rONDb5z+qDx7Xy8y8Rwyrxt4VlNzXm5ZSIZL83jB8PJ9s+5MlHB
OXNj072vOgVpR2cZof7l+KbxHXl4CPrAyNovy2u+oSEKtSqsXDzMH2lzrPMC
oKUBap5NOLlH+kY/87f6iSvDVxujJlkEUUUyUVGgBQqFWnOpUvyefvRLcv3W
Xq6WiCin5N5uf9gh/ZR+UnbcwR8mG4BK2GxbOKlHKq4KXT3FwNjCIfhSWMhZ
b0/v0LTmgeH6jTw8BH1gRN+v4Yb1FAPDKZYhNNF71Rd/oKcOfXrzLJT8HwcV
v6efhBlpDfRbGlgI9Cs8vwTotymSKVFdP/neapNPbZwLjEItv1AsaIrcMsUA
ZRlY9Eu99l7tN/LwEPQBadOdLW/0Cy4B+km7cX5LjI2nr79IlK89wk88+Maf
FKGMn3wxhNwvE1ZH2k0zNj9Jek8/INcVq6lG8vZaJsj0Mps01eoqXTx8c3nj
u17e+IbTxUKS30ITuX5gQyHWE3QgJ+97we1mN/+y3gQfHRZCku/t1lZT1KLT
RKGoMGDZJEOTufue1PCl/JqkaBJXkOVtBvp+9q+43c3NnBGHhwB7RGxqXLDd
TCOUgeH3S/b4+nkdsNm440h4cvWbdW8EDRjPZfKacMXxDFZfhtfSVXtP37rp
s2WZw5Ma8fv6yS+CPD5oscw+/Eno3mUWzo8r+O9tzuSU3rCbY2hoPHPn/UJy
+MbvUAaTFjo+q+HLevOCNs4wnmGx/2Jyg/jdgQnSfZZaOpy+Eem9aaXDY/ne
pBzc+Q1moDKcNG3xphOJjeCPeolBVrNR31vuu5DSwBtxeAjjCWl/D1ck7GHV
NHQKhv5EVHzeAui381HHLwNWblMdizvmfr+YPyB8v7f2n70xGjjDBrHSgXYG
vaa1XzJy05GHhzBuGcgLsjv0mBhhPcXoh+PZyFUOBJ0irry7z9LGcduy1Ydf
MpCGDgEBAQEBAQEBAQEBYbzw/00dXsE=
     "], {{0, 74.5}, {106.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{106.5, 74.5},
   PlotRange->{{0, 106.5}, {0, 74.5}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"ed7b9488-8cfb-4a33-aa02-18b6bd2899ff"],
 StyleBox["\n\nKarnaugh maps/probability tables",
  FontWeight->"Bold"],
 "\nAn alternative to venn diagrams. Imagine a venn diagram, it can be \
represented by a Karnaugh map:\n ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkpF9LX798+Tw98/nNNNom
Qwj1Ze7rzPvPU28/ffqMdtxDQkLaKL1//GyqpesVtek5peFpOXk8r/zBzYKx
xIw7ESnD/jEDbiG9Nt7d5s4dJtZt+pdadS626pi16Vm0G1l2X3TutfEacA0e
9o0ejUgai7/54Eb+eF7Zk1LSM1L9ywbWBK/t/cPHX+eQg61dzybf0Xqe3WaM
pdcOxxMHwsq6fW93uOa02We0WKbxzFO4polNZ+NYRrEsw1jm6SiGfhTjTAzT
+BrLJI59PqHJLIlzKYVndYPnmNXikdceWNQVVdmbUjV0q3G0rOle74OJz1/Q
pktISEjf19fPn9/eezjR1PKkhDgWd3PAJajd0LJF8zxf6Qz3uB5XRocjqd10
VIMtrsY+osqR0uIeP8lT0uWr6bdonWnTM24zPNdlerHrgnm74flWPeMWbUO+
2mm+ii64G0daq+moOvuwKng4R1KLI6PDldPlKRq0aJxr17/c5+B3J/r640Lc
awbv7Z17X95/gP2XEEbNzX0df/m2puNxMmXQI7f9UgoHOL9uBF3Zv17as+aY
e7W4a9VBJ/I+R9Iee5KoLXGXDUHEmrDDCrfDCi9ig99lhxd1JOx1Iex2wO+0
w47ssMaLWON3WhN22xLE7Ih7HUgHHMmHnSlH3aokPaplvWs1QhpBvoBksb3Z
HFLanUe72zzy8u2Hz7D/EkhISBA09/HT7MjYK1rTo4KK0ciUPjtfUB00a5zj
KZzmHNMCucBT1m09ZdR1+cqgr/udqICxhLD7adGPsuMfF6Y8LbvxrOLmM3zG
c2LWC/Ktl1U5r2rzXtXnv268DQD/eFmb97I6B9wE7gDuBu4MHvKkKHU8J+HB
jZixxLC7UUHD/p7dllZt+iZ8FT0QKE0Smjx5/Wb1s2265r1WniOhieM5JS/r
mTP9w5+nZ2D/tTZbX+a+3n06TWx+GEcYcMluu5jcZBjL0gmnKfjVAUvfa0/a
aY0HWSDmRDjmR9KKqTJIrDK7UWOTU+tZVBda2RBDakypacxsoBYwqcVsWgmb
XtpEL+fQK7j0Mg72b3AEHC9g0sB9wD3B/YMrGtwK6iyzas5fr9GLr1KLpIh7
EXc7YLkDAgiEkZRnjWpgg0E042w8G5Qwfrc7MupGGL3PJmc/wv5rISEhbZRA
TDytqBoJvIYFhJoJKB+AVzcd0+Cf0Gs7bdJjbT0S6HX/ehRweOD2L2tyX9MK
pzhlb5orp9vwMx2E2S7SbA/5bR9lDcz2Uma6SeBJwFO9aamc4pZP0Ite1eU9
J916Wp7+ID1mJMSn184WFCnNavocKc2mI+qgGGk+Ydyqc3HIO+JxEX66dwj2
329jNfZsJqdx1Cmr1TCWqR1GO+5TK+5SBaqGnTZ44N6HPUkq4ZSLN2pAKNxs
wLIApACxmV7bzmjsZNC7mew+Jn+A2TrE6hhhdY2yeu+yB8bYg/f+FHAruA+4
J7g/eBS3n8nqZdK6mQ2djJo2Bp5PL2sCyUIHrwWSyDCpWi6IvN+NAAqW3TaE
/Y4kUNqAGkc/kmGW2BRU3FXb8fgLusyIhPTr68PT5y8bmGNxN7suOoGY4Ehp
cyQ1Wk8Z9jnYjYb5Psy49qwiHfg2cO8JRtEUr3y6nbC2UPgZQJS84VdMMItB
kQLKE1CYjN+KvxMZ0O/s0GZwliOr3XRMk3/CqPOszWhEynNK47uHj2D/XddH
r6Y/lHMe+BR0nE9gg5iQ8qgWsyPusiVI+ZNPJ1a5FtTdqMPSAbg3nkevbmMw
urFQ6Ln7oyxYX8Br8QaYjV1MSgujkosVKUUsWhy50TKrViOaAoJslw3hgBMZ
VECGMcyr13nXCANNgy9g/12RkJBWoS/v3k/yOx5mFfU7+rdqm4Jqgn3oRLO6
frel5d1rwSAjQAUB/Bm49EwncfMDYkUh0kUC1c0kqwRk2TNcxr3E8D572xYt
A/YRNa7MqRbN872WHvfTcl8z+Z8mp2D/vVenj5/m6jqfhJX1XErl6Ecx5Lxr
9zmQdljjDroTDBOrk6sbS9igfGCAs31w5t9zZ/PSYeV0jrBASQIKHByPXsyi
B5Q1qEZQxJwJID7EXatOBDacjWM7ZLak1Qz33J+E/fdGQkL6vt4/evK0jDzs
H9Oma8FTOtN0RJ2npNtpenE4yPtxYcoLSvYEvehNKw56HKyB6TY8yLiXVTlP
y27cifDvMr/MV9FlH1blKZxu1bk44BH6qKDi7Z17sD+BH+n51IdkyqB1Oh+c
jSv61R90Iu+0xos6EFQiKN7FDbeZNHAO39jJ6BplQU+E1dIyyKppY5Rz6LcZ
tCuZdaBE2mVHELUjSrhVa4RQQQHlntteyX3wFY3AQkISBs3NvWZwR4PjW7TO
cyS1OTJarXrGgx4uD27GPidmvW4smOKVr7kPQggB1cdrauEL0q3x7IQhH/c2
w/Pc4zpNEprN6meHvCNe1NC+zL6F/ZF8I1LLuFNmi14k/ahb1W5bwk5bgoQP
8UJaTWIVtawJu9zEH2D9uN/hVwG8C2YPE5RIoFCKJjaeulZ1wJ0oYo3fY0+S
86k1TWgKL+/pf4jqDiQkOJodvvMwq7DL1J4nr88WV203PH8nMuBZ5c2XtXmT
TaVCe9FpvZjpJk1xyl7V5z/DZ47Fh3aamjcd0+DK6rbpXbqXnPWmqx/up3Pn
2XQUrg+cY8v71onZE3dY448Hk32K6wuYdAKfTu9mdv6CBcXKaR9m1Xdg3R/5
DJp1dq24F3GHFeGQM1kzhApKrduMsS9zqOpAQtoMfZ6efV7VOOgZDs6rm46o
81X1B1ydnhSlvqrLB2fg0J0cCtOtuNcNBU8r0od83Pga+uxDJ/gnjPod/J9W
UD48f7mZn877T19Kmu7ZpjefDKcddqHssMKDM23z9JobdVRyC1ZQ9G+JgmLl
gPfL6mXiePS0WurJWIqoIzYZRMar5mwcO6Cos2X01WZ+OkhIv5XedPTeS8ps
0zXnyp5qktLsNLMYSwh7Qc6eZJfM9sL3bWEA1B0vqrIf3IjpuWrJkdPmSJ1s
PWl2JzJlgtOy0Z9O59jr4JIeo1iWrHctcMVddgT1KEpIRX0Fl87oFtKO7M0E
/AXq2hmlTXSvonopf9JObLAuWS2o8ep1Xmb9KIjajf6AkJB+E3159/5JKanP
zpevYsQ+eKLl5JkhP4+nFTdfN96ebsNDd2khZKaDOEErfIbPGA31adUzZh1Q
5ikadFs4j+eVfXz5ep0/nbmvOdS7V1K5GsGNB5zI2y3xR71JTnl1BQx6TRuj
dWgrX31aG6DUIjbT8+j0s6k1+1yJO63xkh7VRrFM74KOlhFUdCAhrV1f3n94
Wk7uPGvDkdTmyp/ssbJ6eDP2ZXXuFLcMui3/ErzhV7yszXuUm9jnaM9TOtUk
odGqYzaeW/rp9fp0wuZQ75gmNEl51gDfE3MknE6oiiM14nl0Th/zd7sAtVrA
34faxSzn0GMIDUqh5F22hH0OJFB0uGa3NQ9v6rVEJKQtoLlPn55WVHWZ2nOk
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
2v8zOw9PyRHduVPyqDjIjjU8YVXDbRXl4xHR3l0r3nCW3UI0vXDG2tqs9dte
7B8AEuHChTPY8OwQt1paMUi326XXI2N9tTRVpKWO2jtcamCWbnJeAHA8bMsM
EWs8bK/dIlqIjDsbHxmd5IxAR4v+2luLR7KjPRfW2XjC+2s/B0adEeEGSoy+
2hWVJAuAigCXHqoiK9mMS1vJ/V+149yvngWtSgpwWCiF3s4vIdJFybQ00d21
bZu+umILfkVPtT6RQdzwyKjN9XS9fIq6pKCI8zMDfwGjk/KtxL/2c3BuH+1t
qqMi1Xh7RSXJ4qOyoizlJQ+RMt1Wcv/umghrU+xKfoiLcf9/qwlQ0dTleZvq
K+3ctk1bWZKc5Q4rMroWIiN73SKD2UxwdbcGMbE43rWwNA28fdUTCo3s8tU+
W/9dVvQ1f1BiNKxmaXTwqMzcOAU5aWJN3gofUs8sBfcXP3SgjJC5eLBjoCG3
MEnhuMw+UVFHp8v8JVPXNysy6Asb88H22i2i2dF72IWpIO8NtT5wku9nZ+Zl
bUrKCK+6FbWA2xUTbFqWudGLFcybft5cCU71gxwtVtuPMNKYr6uqkB3jtZJr
U4ONuadU5Q/uEWvIv7b0ODa8NjMCHAepEe1pvWl9GQ11WF+GTUL2BnkdOMl3
sjhpb6adE2udH2ezADj5B5/LZeMVLTAFahNwqu965VRv7er6EZil/pqKx+L9
zFZybYpe4qehILFfdFdRsv3S4+CxOTHW4DhIDV87g75VtmG96IiZvzBVlL4u
Ftc1TA0J9zA3N8nMicstTFkAVBwLF3w4bavukm7ra7CwMHFxs+4ZWd0KVAwe
XkNdOS4peIXXpkDEgFJIT0+r6dtGdg1S3dyx4bWHD+zPL1q3YF0hRUysL2O3
LRG2124RfXjyHOv+9nTdON8DBUJJUoCThVGUh1VyoOMCif72CwuGe1tfWMkC
UyPUfD1VxZyVOf9SXrRUOlw0xLLme+uWL6M6J3q/6G4tJbmhhpxlN3VXZSpL
H8NWbDDSWfflav+MLjYWGRdjcjfC6AYbYtJCLl01UfO1NQh1NVkg2NlIT00W
vE37i9orudAEnF9L8Rg26W+VsyE6KeGXjVRBgbOSrMlPsN27S0T1+FF68fLR
uXX5Xsfnlwo5e0pxhZe51p22EBus+xu/Dt3fwJyLym9ctbzg4WUXEu65yLnz
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
BAKBQCAQCATyy+V/Abmaxgc=
     "], {{0, 174.5}, {264.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{123.5, Automatic},
   ImageSizeRaw->{264.5, 174.5},
   PlotRange->{{0, 264.5}, {0, 174.5}}]], "Input",ExpressionUUID->
  "898e4578-b8a2-4510-acfc-d4e291ce736b"],
 "\t\t",
 Cell[BoxData[GridBox[{
    {"\[Placeholder]", "B", 
     RowBox[{"B", "'"}]},
    {"A", 
     RowBox[{"A", "\[Intersection]", "B"}], 
     RowBox[{"A", "\[Intersection]", 
      RowBox[{"B", "'"}]}]},
    {
     RowBox[{"A", "'"}], 
     RowBox[{
      RowBox[{"A", "'"}], "\[Intersection]", "B"}], 
     RowBox[{
      RowBox[{"A", "'"}], "\[Intersection]", 
      RowBox[{"B", "'"}]}]}
   },
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}}]],
  ExpressionUUID->"d874fc02-9bf5-4ba4-9c01-9d897c7ff9ed"],
 "\n In a Karnaugh map, the entries give the probability of each of these \
events occurring.\n The sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Intersection]", "B"}], TraditionalForm]],ExpressionUUID->
  "e2749c91-f71e-4db7-a2d5-4a554fa8039f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Intersection]", 
    RowBox[{"B", "'"}]}], TraditionalForm]],ExpressionUUID->
  "96d795c7-244a-4c17-a217-0903f0980e9c"],
 " are mutually exclusive, so:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{"Pr", "(", "A", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f5f43a39-4bc3-4e0e-8172-da6fa2afd778"],
 " (row 1), similarly:\n ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", "B"}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "'"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"row", " ", "2"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}], " ", "+", " ", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", "B"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", "B", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"column", " ", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"B", "'"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"column", " ", "2"}], ")"}]}]}], TraditionalForm]}],
  ExpressionUUID->"1914022f-eeac-4854-aa65-efbff64f83eb"],
 "\n \n Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", "A", ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "'"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", " ", "and", " ", 
       RowBox[{"Pr", "(", "B", ")"}]}], "+", 
      RowBox[{"Pr", "(", 
       RowBox[{"B", "'"}], ")"}]}], "=", "1"}]}], TraditionalForm]],
  ExpressionUUID->"52d188f5-d7fd-4dda-bb67-794f8fa04a4d"],
 ", the totals for column 3 and row 3 are 1. The completed table is:"
}], "Text",
 CellChangeTimes->{{3.8874105466317744`*^9, 3.887410573613456*^9}, {
  3.8874106191140113`*^9, 3.8874106735397825`*^9}, {3.887608594421695*^9, 
  3.887608835682802*^9}, {3.88760905151315*^9, 3.887609265407058*^9}, {
  3.8876093049907093`*^9, 3.887609361855585*^9}, {3.887821487224004*^9, 
  3.8878215499753256`*^9}, {3.8878654666269093`*^9, 
  3.8878654719962397`*^9}},ExpressionUUID->"1bfd3f8e-b555-411c-a00f-\
59c07342e368"],

Cell[TextData[Cell[BoxData[GridBox[{
   {"\[Placeholder]", 
    RowBox[{" ", "B"}], 
    RowBox[{"B", "'"}], "\[Placeholder]"},
   {"A", 
    RowBox[{"A", "\[Intersection]", "B"}], 
    RowBox[{"A", "\[Intersection]", 
     RowBox[{"B", "'"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", "A", ")"}]}]},
   {
    RowBox[{"A", "'"}], 
    RowBox[{
     RowBox[{"A", "'"}], "\[Intersection]", "B"}], 
    RowBox[{
     RowBox[{"A", "'"}], "\[Intersection]", 
     RowBox[{"B", "'"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", 
      RowBox[{"A", "'"}], ")"}]}]},
   {"\[Placeholder]", 
    RowBox[{"Pr", 
     RowBox[{"(", "B", ")"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", 
      RowBox[{"B", "'"}], ")"}]}], "1"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, 
    "Rows" -> {{
      True}}}]],ExpressionUUID->"7e61e024-280c-4677-8ed5-d14890f95b8e"]], \
"Text",
 CellChangeTimes->{{3.887609365693961*^9, 3.8876094545046854`*^9}, {
  3.8876095846778564`*^9, 
  3.8876096103939095`*^9}},ExpressionUUID->"403500ac-c354-4fc1-80e4-\
d72e25d1375e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Quadratics", "Section",
 CellChangeTimes->{{3.8890355939051375`*^9, 3.889035595329756*^9}, {
  3.8893983904607396`*^9, 3.8893983962580633`*^9}, {3.8894011517657075`*^9, 
  3.889401201534848*^9}, {3.8894012761765833`*^9, 3.8894013056198015`*^9}, {
  3.8894014048018856`*^9, 
  3.889401405625824*^9}},ExpressionUUID->"d431406b-ed18-415f-acc3-\
90d0abd6758b"],

Cell[CellGroupData[{

Cell["Basic Quadratic Commands", "Subsection",
 CellChangeTimes->{{3.8894015727109237`*^9, 3.8894015959753923`*^9}, {
  3.889401626246703*^9, 
  3.889401635515601*^9}},ExpressionUUID->"a86b051e-81e9-49a5-aade-\
893420f0d77e"],

Cell[TextData[{
 "Factorising:\nDone when an equation is in general form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["ax", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e0ebd759-be05-4997-ad0e-53ae1f6bdfc2"],
 "+bx+c to turn it into the root form (x-a)(x-b)\nWhen done by hand, there \
are 4 methods used to factorise an equation.\n\t1. By sight\n\t2. Coat-Hanger \
Method\n\t3. Completing the square\n\t4. Quadratic Formula\nAfter an equation \
is factorised into root form, \[OpenCurlyQuote]a\[CloseCurlyQuote] and \
\[OpenCurlyQuote]b\[CloseCurlyQuote] in (a,0) and (b,0) are the x-intercepts\n\
\nExpanding:\[LineSeparator]Done when an equation is in root form or in \
vertex form to convert it to general form.\n\n\nBelow are the ways to do the \
above in Mathematica:"
}], "Text",
 CellChangeTimes->{{3.8894016840722027`*^9, 3.889401817181051*^9}, {
   3.8894018529709644`*^9, 3.8894019616455574`*^9}, {3.8894025417695475`*^9, 
   3.8894025750851974`*^9}, {3.889402749609606*^9, 3.889402751125204*^9}, 
   3.889402789240493*^9},ExpressionUUID->"9844d18a-c8e1-4ae3-95da-\
8b42cb3557e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Remember", " ", "double"}], " ", "="}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "final", " ", "pronumeral", " ", "is", " ", 
     "what", " ", "you", " ", "are", " ", "solving", " ", "it", " ", 
     "for"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "x"}], "+", "3"}], "4"], "==", "7"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.889402793382595*^9, 3.8894028439916725`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"526144ef-75f0-49ec-929b-3fb5da11cda1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["25", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8894037066242743`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a2dd0c77-4714-4b8f-8db0-4487e728765c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"To", " ", "solve", " ", "an", " ", "inequality"}], ",", " ", 
    RowBox[{
    "use", " ", "reduce", " ", "then", " ", "finish", " ", "it", " ", "like", 
     " ", "solve"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "x"}], "+", "3"}], "4"], ">=", "1"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8894028501119223`*^9, 3.8894028693416033`*^9}, {
  3.8894036540664263`*^9, 3.8894037019005685`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7c304de8-2d22-4216-bcc1-73955aca88ca"],

Cell[BoxData[
 RowBox[{"x", "\[LessEqual]", 
  RowBox[{"-", 
   FractionBox["1", "2"]}]}]], "Output",
 CellChangeTimes->{3.8894037041349816`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d8ffe999-2da6-4461-bcad-e8d6991f4e69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["b", "2"]}], "4"], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "2"], "4"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8894025793923464`*^9, 3.889402600690444*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d06a6942-1d26-4325-9fe1-2743a05c51f1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"a", " ", "b"}], "2"]}]], "Output",
 CellChangeTimes->{3.8894026030746355`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b86b964c-d143-4651-b839-01b8e057c1d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.889402627511733*^9, 3.889402656239861*^9}, 
   3.8894026925667963`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"e3635f8d-8c14-495a-90f5-ae19d490dc07"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{{3.88940264101924*^9, 3.889402657102297*^9}, 
   3.8894026927696548`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"65770c35-e1df-471c-a7b0-df86175821c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "6"}], ")"}], "2"]}], "+", "10"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8894026438169117`*^9, 3.889402688894123*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"be0d3390-26f5-4067-b806-dddc08767527"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", " ", "x"}], "+", "82"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8894026824939637`*^9, 3.889402689365873*^9}},
 CellLabel->
  "Out[21]//TraditionalForm=",ExpressionUUID->"8415b44f-51eb-438d-99fc-\
1b8b59b4dd52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"2", "x"}], "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8894026967973375`*^9, 3.889402742186026*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"460e2685-0e9e-44fe-80b6-66405025d206"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], "2"]], "Output",
 CellChangeTimes->{{3.8894027175639706`*^9, 3.889402742690257*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"7287bfdb-3156-40d8-83b3-79acc7c851ce"]
}, Open  ]],

Cell[TextData[StyleBox["Plotting Equations:", "Subsubtitle"]], "Text",
 CellChangeTimes->{{3.8894107232785177`*^9, 
  3.8894107392361717`*^9}},ExpressionUUID->"21a2ce49-dd1f-4f59-8163-\
a2b2e81f59dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "15"}], ",", "10"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"465954e1-9ab9-4af9-9c05-3160c298e13f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EgY5nsxTOlrLJp1q2Vfsaxnk///3/wWaGvAg
          "]]}, Annotation[#, "Charting`Private`Tag$11046#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtxQ0slHEcwPHHeX/Ly93hvN0995iJeSlDrPb88zIvLS8nZ2WZeatJTpiX
iVLeolnklLcN3UQmZs3r2vOrUyqRatGhsilCkyHFuvT2/27ffchYiSiBRRCE
+5//mrd4dH13l4L/krCQa/Jt5ieFJSHY8MP3vm0KS4LAM1Up2aCwJDwsq9Ka
W6CwJGg5TVnDGIUloToj5sjFegpLQodKuozwoLAkqCf47+edFGIFwH77KLml
kgTb7nKFL8UHkbwubu8zAciK3UZE1VaQ+/VQ8rV5PtYC+rPqkrpCrLHmEFwV
IfhVa4k1A//G+8EBX8yxJtA6kjOZHsXDciG6sJr7os0Uy4b8GNW7umwTrDEQ
jnzGp4iDNYTp8tqSjjfGcM/U1SCyQx8sdU63b3obwQHOhGipSAfOuNmrz1ga
YDUhzuN9m1yui1UF+2yv3RSZFpaA5nfhwzmH1cF76HbpxqUdZrGAe9DfjAXj
qg7ZFS6bzKDUzu+zWMlkOISVTXQuMy5Lik3nxi0GZKdeMxnTjO/gjLZSvMYQ
lauZ3oyUSW3v+mHEnmcEnU17ZhUKWpxINb86/5RJsu2LHG1aokeeK8pcw5/Q
tZ5R5xJ1Nmgvxwc9oTfm6caamONto9s0K5M7G89bo1WGdFJ69AikqRdaELu6
RatptKF9Waro8tykT9otJe2dukIOvNRA3fXFofnrKlhtJGmJN/woVsfqo+ik
OquSAi3k7DZWIUeG6EpYpqdrgy4athtq4I0bITWOdOHCzh7EKgvaoPPYaGq0
aK3QwAjLRRG5se51cmOsCUrWXRGOn+BgzRC/43GNxjIXy0O5/T7hBvWmWAuU
2prc6+7Mw1ohPZZHrNMnc6w18jt7TGp/3RK1uN8JkgYKkNmAlcTPxhpdna3o
ExqTqCqttNJlio8CPYcDbq6QSFQc4tjYK8AKkX1UYYQsj8RSiPiXEGuDfgM/
coSo
          "]]}, Annotation[#, "Charting`Private`Tag$11046#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-15., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"5", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "-", 
         RowBox[{"7", " ", 
           TagBox["x", HoldForm]}], "-", "8"}], 
       RowBox[{
         TagBox["x", HoldForm], "+", "1"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.88941074398252*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"99e20772-0484-4e8f-81f8-8a23addac10d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Locating Axis Intercepts", "Subsection",
 CellChangeTimes->{{3.8894016406464405`*^9, 
  3.889401678491908*^9}},ExpressionUUID->"ed7b4262-7164-4676-8736-\
5e83d0b03638"],

Cell[TextData[{
 "The x-intercept is usually found through root form that is (x-a)(x-b) where \
(0,a) and (0,b) are the x-intercepts.\nFor a quadratic equation,  there can \
be 0, 1 or 2 x-intercepts.\nTo determine the number of solutions/x-intercepts \
within a quadratic equation, the discriminant formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["b", "2"], "-", 
      RowBox[{"4", "ac"}]}], ")"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "52591041-68a0-42c8-81e8-b8ca2360c28b"],
 "is used. "
}], "Text",
 CellChangeTimes->{{3.8894016892333546`*^9, 3.88940168936701*^9}, {
  3.8894038586661015`*^9, 3.889403955041257*^9}, {3.8894039969198227`*^9, 
  3.889404071352612*^9}, {3.889404443275135*^9, 
  3.889404446800452*^9}},ExpressionUUID->"ba1bd007-ff4e-48e8-88c5-\
ee6b2b7adb75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "a", " ", "known", " ", "coefficient"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Discriminant", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"10", "x"}], "+", "7"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889404040348998*^9, 3.8894040812516923`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ed3cf368-03bc-4b39-a078-95138de332a7"],

Cell[BoxData[
 RowBox[{"-", "12"}]], "Output",
 CellChangeTimes->{3.8894040856143966`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"4bcd451d-03cb-48b8-b409-e65c83895191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "an", " ", "unknown", " ", "coefficient"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "MAKE", " ", "SURE", " ", "THERE", " ", "IS", " ", "A", " ", "SPACE", " ", 
    "BETWEEN", " ", "m", " ", "AND", " ", "x", " ", "TO", " ", "REGISTER", 
    " ", "IT", " ", "AS", " ", "TWO", " ", "DIFFERENT", " ", "VARIABLES"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", " ", "x", " ", "is", " ", "black"}], ",", " ", 
    RowBox[{
    "that", " ", "means", " ", "it", " ", "is", " ", "already", " ", 
     "defined", " ", "and", " ", "must", " ", "be", " ", "cleared", " ", 
     "with", " ", 
     RowBox[{"Clear", "[", "x", "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Discriminant", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"10", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", "m", " ", "x"}], "+", "7"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8894040883040476`*^9, 3.8894041475218678`*^9}, {
  3.889404494801508*^9, 
  3.889404514362336*^9}},ExpressionUUID->"ff0b53e5-eab8-4cfb-b559-\
85730e4ef7ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "280"}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox["m", "2"]}]}]], "Output",
 CellChangeTimes->{{3.8894041128686237`*^9, 3.889404150349821*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"c5de3ac5-76ee-4539-a268-b3df2e90898c"]
}, Open  ]],

Cell["To find the actual x-intercept, use solve.", "Text",
 CellChangeTimes->{{3.8894041686396885`*^9, 3.8894041705604625`*^9}, {
  3.8894042420955324`*^9, 
  3.889404253269419*^9}},ExpressionUUID->"f76991a3-f494-4837-989b-\
c14f7e711bca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", "x"}], "+", "3"}], "4"], "==", 
    RowBox[{"-", "7"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8894042558378735`*^9, 3.889404285042444*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0c9c657c-1bf9-451b-be8e-983caf1a9345"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["31", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.889404285259823*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"28210e8a-8b0b-42b9-8099-423dc26e06d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], " ", "+", " ", "c"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"b", " ", "x"}], " ", "-", " ", "d"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889404287172494*^9, 3.8894043060861197`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b997f89a-cd5d-47da-93a8-c617f2b590d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "c"}], "-", "d"}], 
     RowBox[{"a", "-", "b"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8894043075253105`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"4b92f074-c978-4dd2-852f-ff0a7067c59c"]
}, Open  ]],

Cell[TextData[{
 "----------------------------------------------------------------------------\
------------------------------------------------------------------------------\
------------------------------------------------------------------------------\
----------------------------------------------------\nOn the other hand, the \
y-intercept is found through general form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"(", 
      RowBox[{"0", ",", "c"}], ")"}], " ", "is", " ", "the", " ", "y"}]}], 
   TraditionalForm]],ExpressionUUID->"c915fb83-425b-4270-aa59-2bc25b6ba872"],
 "-intercept.\nFor a quadratic equation, there is always 1 y-intercept.\nTo \
find the y-intercept, do below."
}], "Text",
 CellChangeTimes->{{3.8894043747994604`*^9, 3.889404466900598*^9}, {
  3.8894045792505064`*^9, 
  3.8894045981041594`*^9}},ExpressionUUID->"3fa7c095-bead-46ae-81f7-\
c30e1ba88bcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", "x"}], "+", "7"}], "/.", 
  RowBox[{"x", "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.8894046046332054`*^9, 3.8894046106769915`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"61b2dcaf-bff4-4e4d-a43a-e856a08ace7b"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8894046129847*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"0912f8b2-0d31-4913-9823-ef9514b55f62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"4", "x"}], "+", "7"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "0", "]"}]}], "Input",
 CellChangeTimes->{{3.88940461880727*^9, 3.889404634901721*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2aad29d8-a869-498c-8961-75df8b9d3584"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8894046356293936`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f9cb115b-0675-436f-b301-7c2a80909967"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding the Turning point", "Subsection",
 CellChangeTimes->{{3.8893984038851185`*^9, 3.8893984134568005`*^9}, {
  3.889399704191045*^9, 3.889399722685187*^9}, {3.889400700819681*^9, 
  3.8894007238313637`*^9}},ExpressionUUID->"3781ba73-7a99-4a44-bcf9-\
ea71b4ebc8c0"],

Cell[TextData[{
 "Usually when finding the turning point of an equation, the equation in \
general form will be converted into vertex form.\nE.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], " ", "->", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", 
       RowBox[{"x", "-", "k"}], ")"}], "2"], "+", "h"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7759ec7f-cce1-44ad-bd61-45637ffa0296"],
 "\nThe turning point from there is (k,h)\nBelow are some ways that can be \
done in Mathematica\n\
______________________________________________________________________________\
______________________________________________________________________________\
____________________"
}], "Text",
 CellChangeTimes->{{3.889399730621171*^9, 
  3.8893998619168396`*^9}},ExpressionUUID->"c460f7aa-7024-4bcd-91dc-\
89b73598ecff"],

Cell[TextData[{
 StyleBox["Method 1: FindMinimum or FindMaximum\n", "Subsubtitle"],
 "Use FindMinimum when a  > 0 and the parabola is upwards\nUse FindMaximum \
when a < 0 and the parabola is downwards"
}], "Text",
 CellChangeTimes->{{3.889398418722761*^9, 3.8893984517348766`*^9}, {
  3.889398686966531*^9, 3.8893987698569455`*^9}, {3.889399654331133*^9, 
  3.8893996569577413`*^9}, {3.889399710626854*^9, 
  3.8893997131311255`*^9}},ExpressionUUID->"fd7cfa82-4e38-4aeb-995f-\
3404ccce2b6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"10", "x"}], "+", "7"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8893984712973223`*^9, 3.889398481437194*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9457a79d-4008-48ae-82af-fe431d7b0774"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.75`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.2499999999999998`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.88939848205823*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"655dfaa2-359a-4c33-a931-627f8c369604"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMaximum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"8", "x"}], "+", 
     FractionBox["5", "2"]}], ",", "x"}], "]"}], "//", 
  "Rationalize"}]], "Input",
 CellChangeTimes->{{3.889398483987199*^9, 3.889398533222052*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9f3ab0a7-0f11-488c-8900-743705c105e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["21", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8893985092869053`*^9, 3.889398533733268*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"cab46975-f43c-4acb-a405-5d415fe3b5d3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Method 2: Subbing in ", "Subsubtitle"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"-", "b"}], 
     RowBox[{"2", "a"}]], " "}], TraditionalForm]], "Subsubtitle",
  FormatType->TraditionalForm,ExpressionUUID->
  "50fe0de5-8505-49f9-ae80-4b9cfbb64cc5"], "Subsubtitle"],
 "\nWith the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], ",", " ", 
    RowBox[{"find", " ", "-", 
     RowBox[{
      FractionBox["b", 
       RowBox[{"2", "a"}]], " ", "and", " ", "sub", " ", "it", " ", "into", 
      " ", "the", " ", "original", " ", "equation", " ", "as", " ", 
      RowBox[{"x", "."}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "50b71bf0-0fd9-4ea9-ac95-5ee34f12f4a8"]
}], "Text",
 CellChangeTimes->{{3.889398664135955*^9, 3.8893986787631702`*^9}, {
  3.889398792640905*^9, 
  3.889398850106289*^9}},ExpressionUUID->"3b7a8803-0b17-4bde-926e-\
7ec01997ff29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"7", "x"}], "-", "8"}]}], "*)"}], "\[IndentingNewLine]", 
  FractionBox[
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"-", "7"}], ")"}]}], 
   RowBox[{"2", 
    RowBox[{"(", "5", ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.889398853993544*^9, 3.8893988805121775`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0fca5a28-6219-4582-9fdd-f411dfd6bfa3"],

Cell[BoxData[
 FractionBox["7", "10"]], "Output",
 CellChangeTimes->{3.889398883116563*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"819560b4-c0a8-4d0d-8ca3-1a36f7d5f41e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"7", "x"}], "-", "8"}], "/.", 
  RowBox[{"x", "->", 
   FractionBox["7", "10"]}]}]], "Input",
 CellChangeTimes->{{3.8893988869334354`*^9, 3.8893989003576*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a88aa8ea-d030-408b-9373-5400889735a8"],

Cell[BoxData[{
 RowBox[{"-", 
  FractionBox["209", "20"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Therefore", " ", "Turning", " ", "point"}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["7", "10"], ",", 
      FractionBox[
       RowBox[{"-", "209"}], "20"]}], ")"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8893991946106977`*^9, 3.8893992134669127`*^9}},
 CellLabel->"",ExpressionUUID->"f024c159-afef-4f0a-bf61-cc755e5fd9c4"],

Cell[TextData[StyleBox["Method 3: Find the middle of the x-intercepts and sub \
it into the equation.", "Subsubtitle"]], "Text",
 CellChangeTimes->{{3.889399005986066*^9, 
  3.889399035010564*^9}},ExpressionUUID->"e7b850b7-fd5d-4ed4-b0e6-\
375ba926c4c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"7", "x"}], "-", "8"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], "==", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8893990450351386`*^9, 3.889399076097394*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3efb4e90-e3ad-4fc1-a82d-46d6200cf1b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"7", "-", 
        SqrtBox["209"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"7", "+", 
        SqrtBox["209"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8893990767092037`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0aeea161-317d-4c39-a4d3-9ab0e01dd602"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{"7", "-", 
       SqrtBox["209"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{"7", "+", 
       SqrtBox["209"]}], ")"}]}]}], "2"], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.889399106772422*^9, 3.889399127266446*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"37f4f375-5ed6-4a65-89fd-45ede59d079f"],

Cell[BoxData[
 FractionBox["7", "10"]], "Output",
 CellChangeTimes->{{3.8893991210723567`*^9, 3.889399127652195*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"c79396f5-ceb9-44d4-82bc-773f907e0b10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"7", "x"}], "-", "8"}], "/.", 
  RowBox[{"x", "->", 
   FractionBox["7", "10"]}]}]], "Input",
 CellChangeTimes->{{3.889399146164138*^9, 3.889399158148631*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fb95814e-35a9-4206-bd74-fb953bf2bb2e"],

Cell[BoxData[{
 RowBox[{"-", 
  FractionBox["209", "20"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Therefore", " ", "Turning", " ", "point"}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["7", "10"], ",", 
      FractionBox[
       RowBox[{"-", "209"}], "20"]}], ")"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8893992219857903`*^9, 
  3.8893992244921637`*^9}},ExpressionUUID->"0dc22b36-c497-436a-8f08-\
a6c9c61c1312"],

Cell["Method 4: Completing the square", "Text",
 CellChangeTimes->{{3.8893992665508847`*^9, 
  3.889399288286029*^9}},ExpressionUUID->"2b99b458-7657-44c7-ad37-\
51e52f937550"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"2", "x"}], "+", "4"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"compsq", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", 
         FractionBox["b", 
          RowBox[{"2", "a"}]]}], ")"}], "2"]}], "+", "c", "-", 
     FractionBox[
      SuperscriptBox["b", "2"], 
      RowBox[{"4", "a"}]]}], "//", "TraditionalForm"}]}]}]], "Input",
 CellChangeTimes->{{3.889399306679146*^9, 3.8893993803463745`*^9}, {
  3.889510249525215*^9, 3.889510250077075*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"0915ae92-3816-4004-8cd3-29a598030121"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compsq", "[", 
  RowBox[{"1", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8893993849773035`*^9, 3.889399391607543*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"78a41290-f95b-4c75-b8de-37dd016b084d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "1"}], ")"}], "2"], "+", "3"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.889399393608473*^9, {3.9083421520392933`*^9, 3.9083421562935286`*^9}},
 CellLabel->
  "Out[335]//TraditionalForm=",ExpressionUUID->"7cf99966-0dc7-4830-94ba-\
2ceb8472ac97"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Points of Intersection", "Subsection",
 CellChangeTimes->{{3.8894109691864386`*^9, 
  3.8894109725920615`*^9}},ExpressionUUID->"4c854834-a900-4e23-a4cb-\
9d2d131a71d1"],

Cell["\<\
When trying to find the line of intersection between 2 linear equations, you \
can use simultaneous equations.
Although you are able to do the same with a quadratic and a linear equation, \
you will get 2 answers most of the time in root form (x-a)(x-b)
When doing it in Mathematica, set the equations equal to one another via the \
y, then solve for both x and y.
E.g.\
\>", "Text",
 CellChangeTimes->{{3.8894109759842644`*^9, 3.889411054701605*^9}, {
  3.889411117161535*^9, 
  3.88941116916728*^9}},ExpressionUUID->"f0836b6f-7352-43db-8dcb-\
8ec772ae7d3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"5", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"7", "x"}], "-", "8"}]}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"x", "+", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8894111755738916`*^9, 3.889411225388504*^9}, {
  3.889411284923893*^9, 
  3.8894112920181746`*^9}},ExpressionUUID->"31cb9373-bea6-4d02-9dd8-\
6974fe4b0427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SqrtBox["61"]}], ")"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "-", 
         SqrtBox["61"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SqrtBox["61"]}], ")"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         SqrtBox["61"]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8894112272054415`*^9, 3.8894112867334585`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"76aeb419-850e-4f00-b58b-240b80b4ac2f"]
}, Open  ]],

Cell[TextData[{
 "Therefore the Point\[CloseCurlyQuote]s of Intersection are (",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"4", " ", "-", " ", 
     RowBox[{"\[Sqrt]", "61"}]}], "5"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4bb69887-2f25-45a6-a305-ae7383d3d8ac"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"9", "-", 
       RowBox[{"\[Sqrt]", "61"}]}], "5"], ")"}], " ", "and", " "}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5e34b949-8ace-4acb-a56e-687a75d25071"],
 "(",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"4", " ", "+", " ", 
     RowBox[{"\[Sqrt]", "61"}]}], "5"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16827227-2536-4a98-97dd-cddfaf25c2d5"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"9", "+", 
      RowBox[{"\[Sqrt]", "61"}]}], "5"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0ede833f-953c-4785-9806-16ba998f1770"],
 "\nGraphed, the two equations look like this:"
}], "Text",
 CellChangeTimes->{{3.889411257669445*^9, 3.8894112690074434`*^9}, {
  3.889411312867444*^9, 
  3.8894114535374537`*^9}},ExpressionUUID->"0b4ccf13-66b2-4c46-a27e-\
f9bdb091c3f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "15"}], ",", "10"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"2934c7b6-9997-41f3-989c-d66a5cd8da19"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EgY5nsxTOlrLJp1q2Vfsaxnk///3/wWaGvAg
          "]]}, Annotation[#, "Charting`Private`Tag$11179#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtxQ0slHEcwPHHeX/Ly93hvN0995iJeSlDrPb88zIvLS8nZ2WZeatJTpiX
iVLeolnklLcN3UQmZs3r2vOrUyqRatGhsilCkyHFuvT2/27ffchYiSiBRRCE
+5//mrd4dH13l4L/krCQa/Jt5ieFJSHY8MP3vm0KS4LAM1Up2aCwJDwsq9Ka
W6CwJGg5TVnDGIUloToj5sjFegpLQodKuozwoLAkqCf47+edFGIFwH77KLml
kgTb7nKFL8UHkbwubu8zAciK3UZE1VaQ+/VQ8rV5PtYC+rPqkrpCrLHmEFwV
IfhVa4k1A//G+8EBX8yxJtA6kjOZHsXDciG6sJr7os0Uy4b8GNW7umwTrDEQ
jnzGp4iDNYTp8tqSjjfGcM/U1SCyQx8sdU63b3obwQHOhGipSAfOuNmrz1ga
YDUhzuN9m1yui1UF+2yv3RSZFpaA5nfhwzmH1cF76HbpxqUdZrGAe9DfjAXj
qg7ZFS6bzKDUzu+zWMlkOISVTXQuMy5Lik3nxi0GZKdeMxnTjO/gjLZSvMYQ
lauZ3oyUSW3v+mHEnmcEnU17ZhUKWpxINb86/5RJsu2LHG1aokeeK8pcw5/Q
tZ5R5xJ1Nmgvxwc9oTfm6caamONto9s0K5M7G89bo1WGdFJ69AikqRdaELu6
RatptKF9Waro8tykT9otJe2dukIOvNRA3fXFofnrKlhtJGmJN/woVsfqo+ik
OquSAi3k7DZWIUeG6EpYpqdrgy4athtq4I0bITWOdOHCzh7EKgvaoPPYaGq0
aK3QwAjLRRG5se51cmOsCUrWXRGOn+BgzRC/43GNxjIXy0O5/T7hBvWmWAuU
2prc6+7Mw1ohPZZHrNMnc6w18jt7TGp/3RK1uN8JkgYKkNmAlcTPxhpdna3o
ExqTqCqttNJlio8CPYcDbq6QSFQc4tjYK8AKkX1UYYQsj8RSiPiXEGuDfgM/
coSo
          "]]}, Annotation[#, "Charting`Private`Tag$11179#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-15., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"5", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "-", 
         RowBox[{"7", " ", 
           TagBox["x", HoldForm]}], "-", "8"}], 
       RowBox[{
         TagBox["x", HoldForm], "+", "1"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8894114573895683`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a74890ab-e0fa-41f2-889c-19aac4443b77"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Determining Quadratic Rules with unknowns", "Subsection",
 CellChangeTimes->{{3.889411573746808*^9, 
  3.889411592362458*^9}},ExpressionUUID->"1c6845db-1adc-4b3f-a5f2-\
3b58625713f5"],

Cell["\<\
For three unknowns:
Let the unknown coordinates be (1, -4), (-1, 10) and (3, -2)\
\>", "Text",
 CellChangeTimes->{
  3.889411595844808*^9, {3.889411657523043*^9, 
   3.889411698667322*^9}},ExpressionUUID->"ed8dcb46-a392-4ca9-b897-\
8eec06c2797c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}], " ", "+", " ", 
   RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], "]"}], "==", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "10", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.889411707504859*^9, 3.8894118579834456`*^9}, {
  3.8894119119072113`*^9, 3.8894119550032444`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"68f8cef0-bc8e-49c0-b250-fa4466889de3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "2"}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", "7"}]}], ",", 
    RowBox[{"c", "\[Rule]", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8894119315345716`*^9, 3.889411955326287*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"facc0ba2-9cd3-4b89-bb76-a395929dc200"]
}, Open  ]],

Cell["\<\
For one unknown and two x intercepts:
x-intercepts, (2, 0) and (-3, 0) <--> Passing point (4,5)\
\>", "Text",
 CellChangeTimes->{{3.8894119735412636`*^9, 3.88941202524677*^9}, {
  3.88941205776865*^9, 
  3.8894121110626154`*^9}},ExpressionUUID->"9b323f36-837e-48b8-8cf3-\
6368ee1bdbc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"y", "=", 
    RowBox[{"a", 
     RowBox[{"(", 
      RowBox[{"x", "-", "x1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", "x2"}], ")"}], "\[IndentingNewLine]", "Sub", " ", 
     "in", " ", "the", " ", "two", " ", "x", " ", "intercept", " ", "x", " ", 
     "coordinates", " ", "for", " ", "x1", " ", "and", " ", "x2", 
     "\[IndentingNewLine]", "Finally", " ", "sub", " ", "in", " ", "the", " ",
      "known", " ", "point", " ", "and", " ", "solve", " ", "for", " ", "a", 
     " ", "in", " ", "root", " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"4", "==", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "+", "3"}], ")"}]}]}], ",", "a"}], "]"}], "/.", 
   RowBox[{"x", "->", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.8894121145916452`*^9, 3.8894122098537664`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1302b5a8-38c9-4a59-9a6d-f2cc14d73fe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    FractionBox["1", "6"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.889412204596607*^9, 3.889412210222726*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"f95ee249-247a-4d6c-83b1-7c7409349743"]
}, Open  ]],

Cell[TextData[{
 "Therefore the full equation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1f43982d-0841-495f-91a7-795f44db8199"],
 " = y"
}], "Text",
 CellChangeTimes->{{3.8894122274490547`*^9, 
  3.8894122537117176`*^9}},ExpressionUUID->"717deaa4-30a4-4aed-a42e-\
64ffccf9439f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Questions", "Subsection",
 CellChangeTimes->{{3.889640904286933*^9, 
  3.8896409058638515`*^9}},ExpressionUUID->"cdf82907-7a39-4261-ab44-\
4817fb2cbccb"],

Cell["Distance Formula:", "Text",
 CellChangeTimes->{{3.8896409102891703`*^9, 
  3.8896409238516707`*^9}},ExpressionUUID->"8a7cdd36-5406-4561-baa1-\
c56a4b4c2488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"e6279769-5f73-4d82-8d76-993e445247e2"],

Cell[BoxData[
 SqrtBox["29"]], "Output",
 CellChangeTimes->{3.8896409314642577`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ff086ef3-d711-45aa-aec3-5c8e516eefe2"]
}, Open  ]],

Cell[TextData[{
 "The values of m for which the parabola y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"m", " ", 
      SuperscriptBox["x", "2"]}], " ", "+", " ", "x", " ", "+"}]}], 
   TraditionalForm]],ExpressionUUID->"9b1640e9-56a7-47b0-9e52-ab1c31558a02"],
 " 3 intersects with the linear graph y = ",
 StyleBox["m x",
  FontSlant->"Italic"],
 " + 2 exactly two times is: ",
 StyleBox[" ",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.889640950682259*^9},ExpressionUUID->"f6f9bb86-93ff-43e8-aac7-\
1deabeed759d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", 
       SuperscriptBox["x", "2"]}], "+", "x", "+", "3"}], "==", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "2"}]}], ",", "x"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Find", " ", "Discriminant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"6", " ", "m"}], "+", 
     SuperscriptBox["m", "2"]}], ">", "0"}], ",", "m"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8896409664259667`*^9, 3.8896409750697575`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a2698e7d-c0fc-4629-87e3-0c28ee927136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "m", "-", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"6", " ", "m"}], "+", 
         SuperscriptBox["m", "2"]}]]}], 
      RowBox[{"2", " ", "m"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "m", "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"6", " ", "m"}], "+", 
         SuperscriptBox["m", "2"]}]]}], 
      RowBox[{"2", " ", "m"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.889640957722417*^9, 3.8920191669746747`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"edd144fe-e137-435d-80cc-2ca26ff78e77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "<", 
   RowBox[{"3", "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}]}], "||", 
  RowBox[{"m", ">", 
   RowBox[{"3", "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}]}]}]], "Output",
 CellChangeTimes->{3.889640957722417*^9, 3.8920191669985867`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"7c5b3dc2-8366-4b19-a086-8da9c2ce087c"]
}, Open  ]],

Cell[TextData[{
 "The graph  y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], " ", "+", " ", 
    RowBox[{"a", " ", "x"}], " ", "+", " ", "3", " "}], TraditionalForm]],
  ExpressionUUID->"060f9e19-6e9c-4a2f-9256-8e82859df622"],
 ",   where ",
 StyleBox[" ",
  FontSlant->"Italic"],
 "- ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["6"]}], TraditionalForm]],ExpressionUUID->
  "537ca9d7-ffb5-489a-9833-0671663111e8"],
 " < a \[LessEqual]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["6"]}], TraditionalForm]],ExpressionUUID->
  "36b2db42-ea21-4ab5-8084-34262aaef07a"],
 "   could have how many x-intercepts? "
}], "Text",
 CellChangeTimes->{{3.8896410205593*^9, 
  3.889641024263069*^9}},ExpressionUUID->"ba99cc50-ed30-41d7-b02f-\
02e950078cee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"2", 
   SqrtBox["6"]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FormBox[
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "2"]}], " ", "+", " ", 
       RowBox[{"a", " ", "x"}], " ", "+", " ", "3", " "}],
      TraditionalForm], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "4.89898"}], ",", "4.89898"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"ff46eebd-2dac-4032-8de8-2432f0a96cc2"],

Cell[BoxData["4.898979485566356`"], "Output",
 CellChangeTimes->{3.889641032078455*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"17528669-9c6a-4d75-8784-3d56279c07b9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 4.89898, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -4.89898, 4.89898}}, Typeset`size$$ = {
    419.99999999999994`, {133., 138.7164612031699}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -4.89898}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^2 + $CellContext`a$$ $CellContext`x + 
        3, {$CellContext`x, -10, 10}, PlotRange -> {-10, 10}], 
      "Specifications" :> {{$CellContext`a$$, -4.89898, 4.89898}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{771., {185.77424324816093`, 193.22575675183907`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8896410321024456`*^9, 3.8920194780417247`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"22c1bc52-a85c-489d-ae3d-49751c2bb451"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cubics and Quartics", "Section",
 CellChangeTimes->{{3.892748580152279*^9, 
  3.892748588399276*^9}},ExpressionUUID->"f5ce02db-af3a-4a97-a119-\
5aab62e2f581"],

Cell[CellGroupData[{

Cell["Polynomial Division", "Subsection",
 CellChangeTimes->{{3.8944253791592045`*^9, 
  3.89442541696535*^9}},ExpressionUUID->"f8e81e89-7ebf-408c-b0aa-\
ad1018ebd0d8"],

Cell["\<\
Polynomial Division - gives the quotient(value when one thing is divided by \
the other) and remainder in the form of {quotient, remainder}\
\>", "Text",
 CellChangeTimes->{{3.8944254078326406`*^9, 3.8944254120851374`*^9}, {
  3.8944255492685194`*^9, 3.894425550466696*^9}, {3.8944255912850275`*^9, 
  3.8944256041479297`*^9}, {3.8944256374821415`*^9, 
  3.894425669812682*^9}},ExpressionUUID->"67e83fd9-f52e-4b46-a853-\
2822fc027c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialQuotientRemainder", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.89442557171743*^9, 3.894425586607147*^9}, 
   3.8944256309084945`*^9},
 CellLabel->
  "In[288]:=",ExpressionUUID->"12502d0a-b697-416f-9160-442f3509fc5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8944256325272226`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"86fb64f7-903e-4f91-9a9c-fb63ca8fea63"]
}, Open  ]],

Cell["\<\
Polynomial Remainder - gives the remainder and ignores the quotient\
\>", "Text",
 CellChangeTimes->{
  3.8944256854620275`*^9, {3.894425745367878*^9, 3.894425753012105*^9}, {
   3.8944258271988273`*^9, 
   3.8944258283047276`*^9}},ExpressionUUID->"d24518ed-1baf-4ea7-b797-\
8df776b97713"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.8944257380331206`*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"5610ea00-3397-4e55-a1bb-d55b4186105f"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.8944257422633066`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"0ad6453f-7f03-4ff2-b1c5-825a2e92ae97"]
}, Open  ]],

Cell["\<\
Polynomial Quotient - gives the quotient, dropping the remainder (ignoring it)\
\>", "Text",
 CellChangeTimes->{{3.8944257652907076`*^9, 3.8944257767145934`*^9}, {
  3.89442582230105*^9, 
  3.8944258248237767`*^9}},ExpressionUUID->"0dff5f96-92aa-427e-b3cf-\
e461d3c151d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialQuotient", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.8944258173084335`*^9},
 CellLabel->
  "In[290]:=",ExpressionUUID->"ce4d5eea-4fb5-41f2-abc6-9e95bce619e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.8944258181729937`*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"dc621201-8cb6-4513-b0ec-86abbd0666ba"]
}, Open  ]],

Cell["\<\
Polynomial Division - Greatest common factor (if output is 1 the 2 \
polynomials are relatively prime, meaning they share no common positive \
factors other than 1)\
\>", "Text",
 CellChangeTimes->{{3.894425940847477*^9, 3.894425983008092*^9}, {
  3.894426015016901*^9, 
  3.894426022910237*^9}},ExpressionUUID->"8919e327-622c-4024-8dd6-\
bb5f77f56fab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialGCD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "^", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "x"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.894425965039977*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"fa657af9-962f-4bde-a21c-461ecf02f00f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.8944259664655848`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"bcaaba07-cdb1-4933-a860-32c55b4a47a5"]
}, Open  ]],

Cell["Lowest Common multiple for 2 or more Polynomials", "Text",
 CellChangeTimes->{{3.8944260626431494`*^9, 3.894426085323209*^9}, {
  3.894426128643573*^9, 
  3.89442613031557*^9}},ExpressionUUID->"09741766-bf27-4d11-a90a-\
43e7429780b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialLCM", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "^", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "x"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.894426088065011*^9, {3.8944263139599733`*^9, 3.8944263153132358`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"2351169b-9e64-4ea2-baf3-d1d351984856"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.894426088609105*^9, 3.8944263158081846`*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"5f37f107-9445-4838-a0c8-4ffb8fbf4ffb"]
}, Open  ]],

Cell["Cancel out common factors", "Text",
 CellChangeTimes->{{3.894426305479839*^9, 
  3.8944263242769732`*^9}},ExpressionUUID->"ab591c0e-0e40-4601-88b6-\
6cd493b21dea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"x", "-", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{3.8944263322569222`*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"91b20ef1-8ab8-4eb2-9e2f-392c5e7473b7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "x"}]]], "Output",
 CellChangeTimes->{3.8944263336105165`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"9abe7b62-d0b6-49a7-bf20-f060f1a36621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.894426384959447*^9, 3.894426390924462*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"86bcfaf6-110a-4747-9f14-b1d8b87284ba"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.894426391264407*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"8b233120-b15a-43c8-acfe-6581ceed674f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8944264121028233`*^9, 3.8944264142234187`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"f5231bdd-4232-4437-b86a-60e9d76a4422"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.894426414776657*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"68a723a4-9518-4c8e-a274-0fe55db4697c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for Variables", "Subsection",
 CellChangeTimes->{{3.8927486875395927`*^9, 3.89274869951772*^9}, {
  3.8944253576972327`*^9, 
  3.8944253629222846`*^9}},ExpressionUUID->"cf83b068-105f-44e7-a194-\
5571a67509a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveAlways", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"6", "*", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"7", 
      SuperscriptBox["x", "2"]}], "-", "x", "+", "2"}], "==", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "*", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"b", "*", "x"}], "+", "c"}], ")"}]}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8927485966255045`*^9, 3.8927486728430347`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"77f36110-e8ae-4d07-bdf0-bfd0648569dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "6"}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", "2"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.892748673669567*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"684d32bb-4894-4470-936d-6a4a6d1a1f8e"]
}, Open  ]],

Cell["\<\
Find a solution for x (x-int) that is near 1.5. (Similar to bisection method)\
\>", "Text",
 CellChangeTimes->{{3.893267605831708*^9, 
  3.893267633337006*^9}},ExpressionUUID->"18bf33b9-1233-4591-8848-\
75024f25d0b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", "x", "-", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8932674819082384`*^9, 3.8932675398089547`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"51119fb5-b32b-403a-984c-2b97e67eaf52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.5213797068045676`"}], "}"}]], "Output",
 CellChangeTimes->{{3.893267537108573*^9, 3.8932675411001525`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"a942e61b-f330-4576-b8d0-bb7e6a9eee86"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Domains", "Subsection",
 CellChangeTimes->{{3.893871854081629*^9, 
  3.8938718753957105`*^9}},ExpressionUUID->"27298394-c5e8-40a8-8572-\
a8d9ed8d0f47"],

Cell["Domain on a graph (simple method)", "Text",
 CellChangeTimes->{{3.8938718880717163`*^9, 
  3.8938719032622957`*^9}},ExpressionUUID->"4987dc61-a319-4077-912b-\
dc3b8f41fbdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"20", "-", 
      RowBox[{"2", "x"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"30", "-", 
      RowBox[{"2", "x"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "1200"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938719094623213`*^9, 3.893871949784244*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"df86d032-cb29-4ffa-8a25-5cdbc5447421"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mzsd74gl2o5fSnvMwEgzT+EX8QP7RNGvzQwUGKo6zD1GQcf2dnPiGwbur8q6
aEH8of7Ryv63DKyLvZ/vSpy2/mXK6gEGEkxyivyJZbjj7l1jDAzb5ScnE4eZ
akiV/WBgpiZl6AbxR/MdhQJhJr61nxSrIHa05Dvul2Ji5aviD03ENdbVP8yY
TKwQcj7bRbx84/cshXlMOF0qnRoivrRJ3WpCgQmZcVHdKWKaneuXpxwmym2i
NcSOUwi3Tzh/Q4uJ1nc+/zKIPzk+NI5ZQc5FZkLnE2/bPtbrZsRE70hgvTJx
rYvaKUMuE3nfJfrUiVe6ueiwLJmItZuq0yXO2hX/YtCW/L8hOnAlMcO9KuyR
AxOKmu/6DYgj94wqZrgyUbR8K8eI+N+9S+sOujMxc5WhZUzsus/Zx24fE8HP
nX78d17vfZat5c/E4XFe0mpiwwOVd0UPMnHEOWhKnzjHf2RndyQTn7gP1VYQ
ywWpit2NYUJt5LSSDvGxkO15VBwT2cVSfUuJvx6Ms/M+x0TNPxGBisRuhx9M
mKcyMRmq2DiXuCFiOH1xJnmfmO6wLLHRUY75ZC4TFvf63goRXz22bfBZAYl3
29GM7ySec2LOCPJuM9F1ZY3aAHH0yQqDE3+T93k6RHQQD8d+69xZzcQ8D/GM
euKmeCcN9lMmLFXVrHKJ1whOtwy9YmIgkP7sHPH1c+UhtV1M1DGj1I4Qn0hW
qT40RM63jv5hRzya6ui1dYQJ4eO+M6uJd6fF0rWnmBCdx4tXJFZ8NqHzTYQF
/9iieZ9IfjptZQm5SbBQ+PW4XCNx/AvN1nppFo4/r+ouIP7x0u3wZRYLAqWg
Pl/ittc1dU6KLEyGWJf0kHqi7+hKrVFh4ZTd3OX3iC26xn30lrLw+8XyKIq4
pEdDTlqHBZf3FokmxPw+/q4KYxb21oQlniH1W+dxfYWmCQtjvvbZLsS/+qvF
ksFCzaBbjAax96fvef5WLFJv49U1pB9YfXGdXOLEgsn6Jr3BCJK/c2Jao5xZ
GLdL/VxE/H1t/q2uHSxs5XPPHCLOivvplcxj4Wid6B5h4h/q6R3SASx4rcm6
JEn6UwGv+/5wHAuxH9j7ekj/E4kTT97EJ+8t2GSSROxcrBuUd46F3Rbj49bE
4kJHtTxSWfgo4yt3i/TPXRmKae25LEDK4PeBUDJ/Ov6MrHzIwmrvxa1lQRQ8
Z2OdF9Wy8P7Zi2lX4gq1Iv2wxyyE556Q/B1IYX+o0JcVLSReVdUdIK6Ry96Z
28kC+2mP831/CiGb3q+Ln2Ah8Ge88EFf0g9rPIRdddhwfvA7RonMq2HTNwuP
6LFxq3bk6A0PCpLVW/SzVrLhu+XE2ZXEhlVrvD4asSGqa/rGdA+FpHJWc9B6
Ntb+reXgRObhltKK1LO72ODdMOvcQubnP7lzlj+g2GBwS04nkXncoxpn8/Y8
Gztub2ELE49fmeWJprAhuLit2JfMb9XLQxdsMthIm3UxMiXzPfrSw5+vbrDR
8crKq3cLhXUpvo+/1rARyl0fOLyBwp3TtbuUx9m45zN22BMknzc0zo+dYiNk
99S+a1yyj9BevPjykw2ujdemAbJvHKN6LctF5DBM95/cQ/YR29Qfy7ax5OAk
ltZmt4bC+2vLZ89qy2H0hvT41CrSTx6nZ066y+H47/1bTqiR+IuHvm1pkUPA
zKE9SVIUFio9af/5XA5lSmujcsn+1WK0+KnGKznU3wuuuiNB4uVb9yC6Uw55
B8ULW8VIP2+dm2b4SQ7N+p+txYXJfMwqc7okLA9e/iVu1KgAH9ZONRzQl4eH
BM9C9YUAe4Ii7tAuyiO+kD0ZGC+A4cqeO5oZ8mi59rxLP04AmVGUWWbJw6X/
yqqJWAGKAiXuHrsqj4U2gwYhMQL8Cjh373uJPB6H9iTvDBcg2f9aeVejPD4e
ur7go5cAT3xbqwtm5HHqoU/6M1MB9Ly0W2zd56DXV99DiezjT+V0ZEON5yJf
ZNJRdhkf5YXRaTqi81Au7pj81+4ERAhr2TV1z4Naa+BDbe94yHSFW/uV/g9R
PKXrY+5n0X9VJSkzcj5yU7WntF3ikKSxQOy+0wJcKDCIKVc/A+qi52N35YWY
/0qzbvZHLFyTdrbQBhbCMXb1qMTjU5iyyJ3OrFwE7b4klyqfk+jrNwuriVWA
6yI3mWmFE7hssmJRs/timA3IBDOuR+PmyVC2l64i9K4qWUlbHEes056NouOK
+Pyx+u32migYdGXfiG1Wgrf1TGhDWSRSNdNuNm9UxtHCrJ41rw8j6mFC6sb7
yjBafzfHrPwgNi1yym1QVUGKX1C3bUEwTP0e72CfUcHb1Xy5qFcByFTgqTaN
q6B8yZwHked8oProWvLmHUvw9r7PqsqxvaB0a7ReVC7BvVVLc37F7YbnmNjz
J1ocOO73nqzLcAKveFT5jICDHIeu2c0HLOEb7fBrwzkO7trvf9XNtkSoQ2k7
7TwHo1kPFoaXrcfp8VA+lcyBxPcNcztnLVBoPP0zJYND6rn3Jve8OaarZ9uu
5nOgWqUXf7ECoF7QEmofc7BeW/A1c5UhLl45sO/UEw6Ukp7NNT5mgCshLebW
jRxw1iYs/dakj7J51I/GFg7mtl3glniuQper/L7WV8Sbbi9NTlsO9b4F5u/7
ODBZpzdSN1cNy0vDFXP6OUgKk0rMKVHFmpOd03sHOBA019KqtnBgq55RNDjE
gcuYitz1OGUE+Sgrjoxw4BQ5vyNNYh4i/zg+XTLGwdtXRu2LLeRxkv7+Zcg4
B39L0s4viGYh9daVs1NT5L2R0XG/f4vj8jExr79/cND+siKi9YgQ8rfuNYv8
xcGGX4k9a3+Oc0uX/LN43W8OFgbzMw5P93Mrx9SmZ2c56Ll73snSU5z7f6+H
cu8=
       "]]},
     Annotation[#, "Charting`Private`Tag$21488#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-10., 1200.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.893871951995185*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"84793247-4abd-4b02-bca8-7ca1fce3965c"]
}, Open  ]],

Cell["\<\
Domain on a graph (more complicated way -> shows more of the axes but keeps \
domain the same)\
\>", "Text",
 CellChangeTimes->{{3.8938720102288074`*^9, 3.8938720510444613`*^9}, {
  3.9222549706786957`*^9, 
  3.922254971148178*^9}},ExpressionUUID->"37bc4c64-4e46-4230-a130-\
abff9e2ee44a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"20", "-", 
      RowBox[{"2", "x"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"30", "-", 
      RowBox[{"2", "x"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "1300"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8938719705345173`*^9, 3.893871995170796*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2c1b8a25-a5c9-46d1-bebf-6d61be0bd27f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mzsd74gl2o5fSnvMwEgzT+EX8QP7RNGvzQwUGKo6zD1GQcf2dnPiGwbur8q6
aEH8of7Ryv63DKyLvZ/vSpy2/mXK6gEGEkxyivyJZbjj7l1jDAzb5ScnE4eZ
akiV/WBgpiZl6AbxR/MdhQJhJr61nxSrIHa05Dvul2Ji5aviD03ENdbVP8yY
TKwQcj7bRbx84/cshXlMOF0qnRoivrRJ3WpCgQmZcVHdKWKaneuXpxwmym2i
NcSOUwi3Tzh/Q4uJ1nc+/zKIPzk+NI5ZQc5FZkLnE2/bPtbrZsRE70hgvTJx
rYvaKUMuE3nfJfrUiVe6ueiwLJmItZuq0yXO2hX/YtCW/L8hOnAlMcO9KuyR
AxOKmu/6DYgj94wqZrgyUbR8K8eI+N+9S+sOujMxc5WhZUzsus/Zx24fE8HP
nX78d17vfZat5c/E4XFe0mpiwwOVd0UPMnHEOWhKnzjHf2RndyQTn7gP1VYQ
ywWpit2NYUJt5LSSDvGxkO15VBwT2cVSfUuJvx6Ms/M+x0TNPxGBisRuhx9M
mKcyMRmq2DiXuCFiOH1xJnmfmO6wLLHRUY75ZC4TFvf63goRXz22bfBZAYl3
29GM7ySec2LOCPJuM9F1ZY3aAHH0yQqDE3+T93k6RHQQD8d+69xZzcQ8D/GM
euKmeCcN9lMmLFXVrHKJ1whOtwy9YmIgkP7sHPH1c+UhtV1M1DGj1I4Qn0hW
qT40RM63jv5hRzya6ui1dYQJ4eO+M6uJd6fF0rWnmBCdx4tXJFZ8NqHzTYQF
/9iieZ9IfjptZQm5SbBQ+PW4XCNx/AvN1nppFo4/r+ouIP7x0u3wZRYLAqWg
Pl/ittc1dU6KLEyGWJf0kHqi7+hKrVFh4ZTd3OX3iC26xn30lrLw+8XyKIq4
pEdDTlqHBZf3FokmxPw+/q4KYxb21oQlniH1W+dxfYWmCQtjvvbZLsS/+qvF
ksFCzaBbjAax96fvef5WLFJv49U1pB9YfXGdXOLEgsn6Jr3BCJK/c2Jao5xZ
GLdL/VxE/H1t/q2uHSxs5XPPHCLOivvplcxj4Wid6B5h4h/q6R3SASx4rcm6
JEn6UwGv+/5wHAuxH9j7ekj/E4kTT97EJ+8t2GSSROxcrBuUd46F3Rbj49bE
4kJHtTxSWfgo4yt3i/TPXRmKae25LEDK4PeBUDJ/Ov6MrHzIwmrvxa1lQRQ8
Z2OdF9Wy8P7Zi2lX4gq1Iv2wxyyE556Q/B1IYX+o0JcVLSReVdUdIK6Ry96Z
28kC+2mP831/CiGb3q+Ln2Ah8Ge88EFf0g9rPIRdddhwfvA7RonMq2HTNwuP
6LFxq3bk6A0PCpLVW/SzVrLhu+XE2ZXEhlVrvD4asSGqa/rGdA+FpHJWc9B6
Ntb+reXgRObhltKK1LO72ODdMOvcQubnP7lzlj+g2GBwS04nkXncoxpn8/Y8
Gztub2ELE49fmeWJprAhuLit2JfMb9XLQxdsMthIm3UxMiXzPfrSw5+vbrDR
8crKq3cLhXUpvo+/1rARyl0fOLyBwp3TtbuUx9m45zN22BMknzc0zo+dYiNk
99S+a1yyj9BevPjykw2ujdemAbJvHKN6LctF5DBM95/cQ/YR29Qfy7ax5OAk
ltZmt4bC+2vLZ89qy2H0hvT41CrSTx6nZ066y+H47/1bTqiR+IuHvm1pkUPA
zKE9SVIUFio9af/5XA5lSmujcsn+1WK0+KnGKznU3wuuuiNB4uVb9yC6Uw55
B8ULW8VIP2+dm2b4SQ7N+p+txYXJfMwqc7okLA9e/iVu1KgAH9ZONRzQl4eH
BM9C9YUAe4Ii7tAuyiO+kD0ZGC+A4cqeO5oZ8mi59rxLP04AmVGUWWbJw6X/
yqqJWAGKAiXuHrsqj4U2gwYhMQL8Cjh373uJPB6H9iTvDBcg2f9aeVejPD4e
ur7go5cAT3xbqwtm5HHqoU/6M1MB9Ly0W2zd56DXV99DiezjT+V0ZEON5yJf
ZNJRdhkf5YXRaTqi81Au7pj81+4ERAhr2TV1z4Naa+BDbe94yHSFW/uV/g9R
PKXrY+5n0X9VJSkzcj5yU7WntF3ikKSxQOy+0wJcKDCIKVc/A+qi52N35YWY
/0qzbvZHLFyTdrbQBhbCMXb1qMTjU5iyyJ3OrFwE7b4klyqfk+jrNwuriVWA
6yI3mWmFE7hssmJRs/timA3IBDOuR+PmyVC2l64i9K4qWUlbHEes056NouOK
+Pyx+u32migYdGXfiG1Wgrf1TGhDWSRSNdNuNm9UxtHCrJ41rw8j6mFC6sb7
yjBafzfHrPwgNi1yym1QVUGKX1C3bUEwTP0e72CfUcHb1Xy5qFcByFTgqTaN
q6B8yZwHked8oProWvLmHUvw9r7PqsqxvaB0a7ReVC7BvVVLc37F7YbnmNjz
J1ocOO73nqzLcAKveFT5jICDHIeu2c0HLOEb7fBrwzkO7trvf9XNtkSoQ2k7
7TwHo1kPFoaXrcfp8VA+lcyBxPcNcztnLVBoPP0zJYND6rn3Jve8OaarZ9uu
5nOgWqUXf7ECoF7QEmofc7BeW/A1c5UhLl45sO/UEw6Ukp7NNT5mgCshLebW
jRxw1iYs/dakj7J51I/GFg7mtl3glniuQper/L7WV8Sbbi9NTlsO9b4F5u/7
ODBZpzdSN1cNy0vDFXP6OUgKk0rMKVHFmpOd03sHOBA019KqtnBgq55RNDjE
gcuYitz1OGUE+Sgrjoxw4BQ5vyNNYh4i/zg+XTLGwdtXRu2LLeRxkv7+Zcg4
B39L0s4viGYh9daVs1NT5L2R0XG/f4vj8jExr79/cND+siKi9YgQ8rfuNYv8
xcGGX4k9a3+Oc0uX/LN43W8OFgbzMw5P93Mrx9SmZ2c56Ll73snSU5z7f6+H
cu8=
       "]]},
     Annotation[#, "Charting`Private`Tag$21976#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., 30.}, {-500., 1300.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.893872001781831*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"21c1c12f-bc19-413c-9ffa-17cbdba05e4f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Maximums and Minimums", "Subsection",
 CellChangeTimes->{{3.893872257983318*^9, 
  3.8938722617306337`*^9}},ExpressionUUID->"ae2679df-35ba-4967-9896-\
208c9941dc1a"],

Cell["Finds a maximum between the x values of 0 and 10", "Text",
 CellChangeTimes->{{3.893872270606536*^9, 3.893872281624526*^9}, {
  3.8938723974756684`*^9, 3.89387240103168*^9}, {3.8938726029533644`*^9, 
  3.8938726091674995`*^9}},ExpressionUUID->"7a24d4ad-58e6-4374-970f-\
01a148ec8f58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893872289869191*^9, 3.8938723073360815`*^9}, {
  3.8938723649699645`*^9, 3.8938723776724815`*^9}, {3.8938725969822187`*^9, 
  3.8938725993981714`*^9}, {3.893872838953128*^9, 3.8938728396774035`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"03fb0fc0-4689-42be-b67b-10895c75ce87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1056.3058954611904`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.9237478373513657`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8938724029303308`*^9, 3.893872599726246*^9, 
  3.8938728401928215`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e4e35bc8-aa01-499e-8fe6-046c20d1f808"]
}, Open  ]],

Cell["Finds a maximum near the x value of 4", "Text",
 CellChangeTimes->{{3.893872625011407*^9, 3.8938726349877677`*^9}, {
  3.8938729825277677`*^9, 
  3.8938729831634293`*^9}},ExpressionUUID->"feaf1e9d-097f-4cd0-9d06-\
a6a387c539d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938726440792503`*^9, 3.8938726480613785`*^9}, {
  3.8938728431148825`*^9, 3.8938728437203712`*^9}, {3.893872953250568*^9, 
  3.8938729766987257`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"8e506cb1-d3d2-41a4-aeaa-a153421ba11d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1056.3058954611904`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.923747814892458`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8938726488625193`*^9, 3.8938728443664074`*^9, {3.893872954707869*^9, 
   3.893872977114286*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"957667b4-2be1-40b4-8fe4-95a2dbeac088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "1200"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938726828765817`*^9, 3.89387270720767*^9}, {
  3.8938727492373133`*^9, 3.8938727507585588`*^9}, {3.893872833041506*^9, 
  3.893872833879015*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ea65b9b1-671a-4f01-b0a8-78821ac22416"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vubHwgIxH5+jmasw5/9p/mn6
       "]]},
     Annotation[#, "Charting`Private`Tag$23882#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-10., 1200.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8938726989703255`*^9, 3.89387275115374*^9, 
  3.893872834386372*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d3fe0851-0b27-481b-9548-a05cf6a0f318"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equation Forms", "Subsection",
 CellChangeTimes->{{3.922257170190547*^9, 
  3.922257176416916*^9}},ExpressionUUID->"53dd8be2-017d-4482-8cb4-\
653cb7afcdf8"],

Cell["\<\
Cubics:
(what you can see), other features it has\
\>", "Text",
 CellChangeTimes->{{3.9222572104484687`*^9, 3.922257266052679*^9}, {
  3.9222573384946938`*^9, 
  3.9222573469488153`*^9}},ExpressionUUID->"84874eea-56d6-460b-870d-\
a0f773e7baae"],

Cell[TextData[{
 "(y-int): ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ax", "3"], "+", 
    SuperscriptBox["bx", "2"], "+", "cx", "+", "d"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d7ccee3-886a-44e9-a113-9af603b955f7"],
 "\n(SPI),1 x-int: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "h"}], ")"}], "3"]}], "+", "k"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b0a82595-46af-4dcf-8258-2cc57607ff5a"],
 "\n(3 x-ints), 2 TPs: a(x-b)(x-c)(x-d)\n(2 x-ints, 1 TP),1 TP: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"x", "-", "b"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "c"}], ")"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "068d88b4-9b9b-42df-ba9a-0a3d53c4778a"],
 "\n(1 x-int",
 Cell[BoxData[
  FormBox[
   RowBox[{")", ",", 
    RowBox[{"1", " ", 
     RowBox[{"SPI", "/", 
      RowBox[{"PI", ":", " ", 
       RowBox[{
        RowBox[{"a", "(", 
         RowBox[{"x", "-", "b"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["cx", "2"], "+", "dx", "+", "e"}]}]}]}]}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a5654455-f512-4163-beff-84c2d6162d75"],
 ")"
}], "Text",
 CellChangeTimes->{{3.922257254497126*^9, 3.9222574710195513`*^9}, {
  3.9222575424940095`*^9, 3.9222575550389767`*^9}, {3.922257591153051*^9, 
  3.922257650235299*^9}, {3.9222577108889546`*^9, 
  3.922257714767457*^9}},ExpressionUUID->"91a07faf-aee2-43c0-b179-\
db452a463d79"],

Cell["Quartics:", "Text",
 CellChangeTimes->{{3.9222577207660575`*^9, 
  3.9222577264880023`*^9}},ExpressionUUID->"e08a730b-9ddd-49d3-9609-\
22191b93759a"],

Cell[TextData[{
 "(y-int): ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ax", "4"], "+", 
    SuperscriptBox["bx", "3"], "+", 
    SuperscriptBox["cx", "2"], "+", "d"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aad36989-2c86-4bea-b7d2-6158c255b662"],
 "x+e"
}], "Text",
 CellChangeTimes->{{3.9222577435966873`*^9, 
  3.922257755962572*^9}},ExpressionUUID->"ccac6a55-1f29-4404-a1df-\
89f1f0aabf7a"],

Cell[TextData[{
 "Sum of Cubes:",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "3"], "-", 
     SuperscriptBox["B", "3"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["A", "2"], "-", "AB", "+", 
       SuperscriptBox["B", "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "293dafc9-a43c-4a3b-bcd4-51486088c325"],
 "\nDifference of Cubes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "3"], "-", 
     SuperscriptBox["B", "3"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["A", "2"], "+", "AB", "+", 
       SuperscriptBox["B", "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06a9efc8-b493-4c88-b5ed-45914d8bb975"]
}], "Text",
 CellChangeTimes->{{3.922258432377143*^9, 3.9222584617149906`*^9}, {
  3.9222585003188686`*^9, 
  3.9222585246793323`*^9}},ExpressionUUID->"9261fac5-41ff-41cb-b667-\
996e836d4438"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stationary Points Nature", "Subsection",
 CellChangeTimes->{{3.9222586154217725`*^9, 
  3.9222586198640375`*^9}},ExpressionUUID->"7915f749-a773-4290-aebf-\
b6dc8ff54bd8"],

Cell["Sign Table:", "Text",
 CellChangeTimes->{{3.9222586272260237`*^9, 
  3.922258628949216*^9}},ExpressionUUID->"d31ae610-fbc4-43f1-bb14-\
7879c2f8ac65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "'"}], "[", "x", "]"}], "==", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9222586320533543`*^9, 3.9222587406736827`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"29f3e934-7aca-479c-b0da-5a3d78015a7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["4", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.922258695949892*^9, 3.922258741238248*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"fe959d4d-579d-4977-8b9b-185ea8f78d7b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"x\"\>",
       HoldForm], "1", 
      FractionBox["4", "3"], "2"},
     {
      TagBox["\<\"f'(x)\"\>",
       HoldForm], "5", "0", 
      RowBox[{"-", "8"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{"x", "f'(x)"}, None}]]]], "Output",
 CellChangeTimes->{3.922258695949892*^9, 3.92225874125514*^9},
 CellLabel->
  "Out[74]//TableForm=",ExpressionUUID->"8e5e0566-e81e-4142-bab9-\
0618ff8c3cb8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Functions", "Section",
 CellChangeTimes->{{3.8945641874824076`*^9, 
  3.8945641900074635`*^9}},ExpressionUUID->"f6cd9d47-3fe7-48b7-8432-\
dab5e1e6a0ca"],

Cell[CellGroupData[{

Cell["Rooting (Cubes or more)", "Subsection",
 CellChangeTimes->{{3.8945642386236715`*^9, 3.8945642669069614`*^9}, 
   3.8945647213635798`*^9},ExpressionUUID->"7703d0c0-e28f-42aa-b6dd-\
ef0bbac4df2d"],

Cell["\<\
Fixing Issue with ,Reals in Solve (expresses outputs with powers)\
\>", "Text",
 CellChangeTimes->{{3.8945642799153013`*^9, 3.8945643262560515`*^9}, {
  3.8945644142222886`*^9, 
  3.894564425609744*^9}},ExpressionUUID->"91dcef87-0764-4fb3-8549-\
155299dc8dfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "y"}], "-", "3"}], ")"}], "3"], "-", "4"}]}], ",", "y", 
   ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8945643307530794`*^9, 3.8945643373380957`*^9}, {
  3.894564440906593*^9, 3.894564510246541*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"63d7b82f-c152-49b4-8704-119939ceb0cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Root", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "31"}], "-", "x", "+", 
        RowBox[{"54", " ", "#1"}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox["#1", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8945644776099844`*^9, 3.89456451101564*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"92f25bfe-e15d-4150-9117-118eaed10904"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "y"}], "-", "3"}], ")"}], "3"], "-", "4"}]}], ",", "y", 
    ",", "Reals"}], "]"}], "//", "ToRadicals"}]], "Input",
 CellChangeTimes->{{3.8945645197921553`*^9, 3.89456452664826*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f012d704-0778-4ff8-86be-712ec4b01fcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", "x"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8945645275375366`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"74dea701-ead8-4120-a516-2aad36ba8cdc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Making an inverse function", "Subsection",
 CellChangeTimes->{{3.8950811260596504`*^9, 
  3.895081131546692*^9}},ExpressionUUID->"b23bdd34-0aa5-4034-9670-\
270224c5e2b0"],

Cell[TextData[{
 "Swap x and y then solve for y (use apart if you want the fractions \
separate)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["1", 
     RowBox[{"x", "-", "3"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c47f2672-37d0-4a69-b7b7-95f1a5a46dec"]
}], "Text",
 CellChangeTimes->{{3.8950811383263493`*^9, 
  3.8950812328127813`*^9}},ExpressionUUID->"8af3dab6-5377-4dbe-aee1-\
eed29a62ce28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     FractionBox["1", 
      RowBox[{"y", "-", "3"}]]}], ",", "y"}], "]"}], "//", "Apart"}]], "Input",
 CellChangeTimes->{{3.8950811644815283`*^9, 3.895081185856637*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0adf8a2f-59f4-4dc9-abd2-0cb9166a2f66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"3", "+", 
     FractionBox["1", "x"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8950811789385796`*^9, 3.8950811862694616`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"308578a2-6bad-47b2-a577-4414bd1eb543"]
}, Open  ]],

Cell["Inverse Mathematica function (may not always work)", "Text",
 CellChangeTimes->{{3.8950815315634937`*^9, 
  3.8950815726737165`*^9}},ExpressionUUID->"6912e0b3-90ec-4831-b4fc-\
b9f11a502b2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"x", "-", "3"}]]}]], "Input",
 CellChangeTimes->{{3.895081479563903*^9, 3.895081487863454*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"37fd7ab3-21b6-4564-82ee-126a7f5f9de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFunction", "[", "f", "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.89508150049529*^9, 3.89508152134144*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"10ee7250-1daa-40ea-a465-3d854f9e035a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"3", " ", "x"}]}], "x"]], "Output",
 CellChangeTimes->{3.8950815250922904`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"7ba29fad-19af-400f-9344-acd504e4fb50"]
}, Open  ]],

Cell["Sometimes can give a goofy answer so use //N", "Text",
 CellChangeTimes->{{3.9082983390958977`*^9, 
  3.908298347232999*^9}},ExpressionUUID->"e82a6a86-7992-4f57-ba3d-\
e3baacae75d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Log", "[", 
   RowBox[{"2", ",", 
    RowBox[{"5", "x"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"InverseFunction", "[", "f", "]"}], "[", "x", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x", "]"}], "//", "N"}]}], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"3b481e94-289f-460a-9340-338476574ae8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"0.2`", " ", 
     SuperscriptBox["2.`", "x"]}], 
   RowBox[{
     RowBox[{"-", "3.141592653589793`"}], "<", 
     RowBox[{"0.6931471805599453`", " ", 
       RowBox[{"Im", "[", "x", "]"}]}], "\[LessEqual]", 
     "3.141592653589793`"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9082983300907297`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3b8a08bb-831f-4dc7-bf8f-975a1f47b5bf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting with domain restriction for inverse function", "Subsection",
 CellChangeTimes->{{3.89508161405401*^9, 3.8950816358618937`*^9}, {
  3.8950816687230988`*^9, 
  3.895081671432234*^9}},ExpressionUUID->"9c27a164-2dfd-4b07-831d-\
87772195918f"],

Cell["\<\
Plotting with restriction for inverse function (&& for domain restriction, \
range difficult) (may need to find range of original function for domain of \
inverse)
Change PlotRange from {-10,10} to 10 to make the axes x = -10 to 10\
\>", "Text",
 CellChangeTimes->{{3.89508167804823*^9, 
  3.8950817103691797`*^9}},ExpressionUUID->"023f5b42-fae9-4089-8d06-\
3f73a5a6984d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"x", "-", "3"}]], "&&", 
      RowBox[{"x", ">", "3"}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "x"], "+", "3"}], "&&", 
      RowBox[{"x", ">", "0"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8950816407606907`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"16bfb872-4a8e-432c-bdf2-3842b9dc8110"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18813#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
cmZxDgn/C9+M70U=
       "]], LineBox[CompressedData["
1:eJwV0Hs0lHkcBnC51Pu+M7zNkFsXl18s45ZJKtdHa9BJW1itS20lytklXdTh
SOucJpfdOpNRQmxlS1l1VGOVttSmHSEMcjm2wpJBe5DLsu3s2nf/+J7nfM7z
z3O+VjFJoXHaWlpa/tz9n/vS42+x+hTEP6ZPrC9nULA59eTOIgo+/o/OThQy
aLOL6HNVUKjVlumGXmTgr1529fUQBcuZm4W2cgb2sbmrxUE0bKWrFfxsBjO7
sh3eGDBoFPpMPElmkBNyfOPaYh6aFZ6lB0IYyF+KEm6V8zDo61ocsJ1BcWDf
9zb3ebgksK+03cbgjneQrmk7DxGJtWZjwQx67M1bNUv4ULLSzvQgBnbatbHK
o3ycefhlbrcvA+U9vXORW/SRNTul2ezCQNfowvA3Hw0QdcNrfmApA+H4SQPh
EhbqYp27PM5WL+LdrxmyaGu1MXFnGfic8Mp84chiymjdyBl9BqlDgzaC3SwO
VvdkbmIYjFeJ40rrWIy0uek16zD4QzRyOCZgKbYYR9VGztHobjo9KWUFiKzX
y3Hop3Hep0QSbizArvY9bEIfjdC7VUU2KwWoIW7Ot9/SaMkf9FeKBLgSlyh2
fUNDudevcEmAACPXzvqhl0b1nMbv2xMCnDN2G0h9RSOfJOfJRgXI/dtbvqOB
RnhajHtRnRBq+XaP81VcX2K0eK5BCI/0Lfu0OHc9UXaGqYR4rCuZTFDQ2KHr
cEz/jRCiNZfdAu/RiDg7rcj4k7NME611h0bUZanrAXtD/JWS3CqtoLGnrszR
TWaIvF/CqjpKaSTw3lu3RBmh87Ug5LichkWFMn/x2DLI+I2p7cdopD34NIy9
ZIKbE/1qKprGobKEancXM5xvqPg1UEKDr70+xvmdOWJPJXXnr6EhSfz8gihv
BewcetMqV9EwrVmZJFm9Cl/rSFJesDTkR7Jz13Rb4Cp/ZGXQIu5/mducSqot
cci0ZkA4S0EULQ2/lm6FDcd0XJzHKHQN06V54dZwfthoHN9HoSXmnZ/QggA7
K9XruigM6N6Yv2BN4OhZLTPgPFMWX2lmS9Dn6xyg7qRg9v79Cisnguy5kLcF
nGOPTs25eBIksN891Lyi8PHUwu2tXxCYi8eX13dQsL1uZp4jI3iU8SF4fxuF
jYG/qfh5BD832lSBc/Bocda5fILEnm675ZwPO1nOXiwh8PIu8FCpKDz6yVZV
VkEwvOnpvx6cQ5VrM5/XE+Q9O6hj2EohLn7WK6iJQPGA+I63UEhh7k83tRBo
PR7KauBc8pnH3o5OgiPiJGRwHumC1++DBPsVQ8HjzdzeFO3pODXBTO+GyQbO
+sufl4+OEfgZxVy5zlm8O9DkwweCZ4Wmn+ziLFlEtyTPEjzdU/DPBs4RPzRK
5+cJKJf2fiPOX0nOeJ7QELze+kQ1+ZJCunrr1MICwUZeZPNLzv8B4lrC6g==

       "]]},
     Annotation[#, "Charting`Private`Tag$18813#2"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.895081641810807*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"7b22ef8b-2354-4311-9442-a9092e828790"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Logs and Exponentials", "Section",
 CellChangeTimes->{{3.898712109075137*^9, 3.898712118940626*^9}, {
  3.9011301583233004`*^9, 
  3.9011301834126453`*^9}},ExpressionUUID->"725ba91f-08ac-4669-a56a-\
581b41638ca7"],

Cell["\<\
Logs have vertical asymptotes, exponentials have horizontal asymptotes\
\>", "Text",
 CellChangeTimes->{{3.899953482632637*^9, 
  3.899953497438712*^9}},ExpressionUUID->"ec615760-1b3c-469f-8f44-\
1fd6f425b6d7"],

Cell[CellGroupData[{

Cell["Exponential Functions", "Subsection",
 CellChangeTimes->{{3.898712130736126*^9, 3.8987121329401608`*^9}, {
  3.8987121723163605`*^9, 
  3.898712174162047*^9}},ExpressionUUID->"3fb71a6f-22bc-4c75-a8fa-\
f2739a6fd39b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "x"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "735b0018-be6c-41c8-a48d-40619369174b"],
 ": _/ ,",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "x"}]], ":", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b726f7fa-d405-4433-a53e-98d6421b9fef"],
 "\\_, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["2", "x"]}], ":", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "24a2e198-7169-454f-8a2a-db1d0a809d21"],
 "\:203e\\, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["2", 
      RowBox[{"-", "x"}]]}], ":", " ", 
    RowBox[{"/", "\:203e"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "481aa7e3-44c6-4782-9b2d-02ad32fea906"],
 "\nBase Change: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"log\:2090", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"log\:2091", "(", "x", ")"}], "/", 
     RowBox[{"log\:2091", "(", "a", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3df84c56-9db7-4ccc-9803-704eb8497754"],
 "\nExamples of Exponential functions"
}], "Text",
 CellChangeTimes->{{3.8999529834372034`*^9, 3.899952994859692*^9}, {
  3.899960012509717*^9, 3.899960013848734*^9}, {3.8999604106250124`*^9, 
  3.899960445594818*^9}, {3.899960484597419*^9, 3.899960521785557*^9}, {
  3.899960560738021*^9, 3.899960560738021*^9}, {3.8999605914080095`*^9, 
  3.899960600483543*^9}},ExpressionUUID->"890073e6-f29a-434d-8df1-\
d931ffc83eff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "[", "t_", "]"}], ":=", 
  RowBox[{"80", "+", 
   RowBox[{"20", "*", 
    SuperscriptBox["2", "t"]}]}]}]], "Input",
 CellChangeTimes->{{3.899953018142477*^9, 3.899953066292104*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"12c4f5f7-d70f-4fab-aab5-76b1a3e6c337"],

Cell["Starts at 100 and goes up -> 120, 160, 240, 400...", "Text",
 CellChangeTimes->{{3.899953089531041*^9, 3.899953108258258*^9}, {
  3.8999531519010925`*^9, 
  3.8999532114505816`*^9}},ExpressionUUID->"f126b09b-cbed-4373-b94e-\
f0f1f35ba814"]
}, Closed]],

Cell[CellGroupData[{

Cell["Logarithmic Functions", "Subsection",
 CellChangeTimes->{{3.8987121417419014`*^9, 
  3.898712170616041*^9}},ExpressionUUID->"a56e7dc5-4ed7-49bb-bcbf-\
d365945a4949"],

Cell["\<\
Log\:2082(x): |\:203e, Log\:2082(-x): \:203e|, -Log\:2082(-x): _|, \
-Log\:2082(x): |_
If there is a factor:\
\>", "Text",
 CellChangeTimes->{{3.898712186755125*^9, 3.89871218859408*^9}, {
   3.8999600240515747`*^9, 3.8999600546803594`*^9}, {3.899960086088654*^9, 
   3.899960189012492*^9}, {3.8999607569610643`*^9, 3.8999607644694123`*^9}, {
   3.8999607982950964`*^9, 3.8999608255261483`*^9}, 3.900004390832388*^9, 
   3.900004529115779*^9},ExpressionUUID->"405e1422-fa72-46a5-a1c3-\
5dc30ee26cd3"],

Cell[BoxData[
 RowBox[{"10", "*", 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", 
    FractionBox["p", 
     SuperscriptBox["10", 
      RowBox[{"-", "12"}]]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899960826958702*^9, 3.899960897571933*^9}, {
  3.8999609514204226`*^9, 3.899960959220095*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"04eef557-2ddd-4196-834d-0f284e9dfa88"],

Cell[BoxData[
 RowBox[{"10", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", "p"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "12"}]]}], "]"}]}], ")"}]}]], "WolframAlphaShort",
 CellChangeTimes->{{3.89996097200896*^9, 
  3.8999609782077847`*^9}},ExpressionUUID->"5ddd7e90-a172-4179-99e4-\
3ba12b0a0a1c"],

Cell["10*Log[10, p] - 10(-12*1)", "WolframAlphaShort",
 CellChangeTimes->{{3.8999610948790894`*^9, 3.89996109645132*^9}, {
  3.908342423985275*^9, 
  3.908342424187734*^9}},ExpressionUUID->"3d051426-9a83-4eb6-af56-\
ad1ac6e40495"],

Cell["10*Log[10, p] + 120", "WolframAlphaShort",
 CellChangeTimes->{{3.8999611180943837`*^9, 
  3.899961132784394*^9}},ExpressionUUID->"d5ea913f-b1cf-4f67-8cad-\
ea92a8e0dd37"],

Cell["Solving Logs", "Text",
 CellChangeTimes->{{3.8999607943373194`*^9, 
  3.8999607965661545`*^9}},ExpressionUUID->"be607d1f-069d-4b3c-b5bf-\
c43821d2b245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"4", ",", "64"}], "]"}]], "Input",
 CellChangeTimes->{{3.8987122038699036`*^9, 3.898712208651163*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"6a2c0bb8-dc04-4fb7-9d13-2360313faf0e"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8987122092859516`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"a89ee955-4b49-494e-b763-fed95bf54263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"4", ",", "x"}], "]"}], "==", "3"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.89871221464314*^9, 3.898712240574293*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"0b2cc864-40bd-4263-a6ae-81d3c9a88fcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "64"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8987122411266885`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6b1c211a-f71a-4bdf-9246-b48072e68c0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"x", ",", "64"}], "]"}], "==", "3"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.898712250476809*^9, 3.8987122536698585`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7ada2720-d5e4-44b7-838e-c698b7d53634"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "4"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8987122541515636`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6c58623e-6ba2-4ce5-ace7-4501cff9d8c5"]
}, Open  ]],

Cell["Figuring out answers with variables", "Text",
 CellChangeTimes->{{3.899937993641979*^9, 
  3.899938014620786*^9}},ExpressionUUID->"678346b6-c16f-4ce3-a20f-\
be1a75db6b73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["a", "2"]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["b", "2"]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", "*", "b"}], ")"}], "2"]}], "]"}]}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.899938016997351*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"fab9251f-7b56-4aa1-bc01-80c6131d69a0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8999380175782146`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"27f4a7b7-0de6-41a3-97f7-a3a8d8f45603"]
}, Open  ]],

Cell["or", "Text",
 CellChangeTimes->{{3.899938045738538*^9, 
  3.899938045910186*^9}},ExpressionUUID->"b1686846-d2ec-4d3a-8c41-\
05b9378cfa7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", ">", "0"}], "&&", 
    RowBox[{"b", ">", "0"}]}], ",", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox["a", "2"]}], "]"}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox["b", "2"]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"a", "*", "b"}], ")"}], "2"]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8999380645422883`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"8da0a28c-a2da-4f42-8da6-514b94dab723"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.899938065505507*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4f4e93d5-4aa2-44a0-96e7-c41a063c3bf0"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Circular Functions/Trig", "Section",
 CellChangeTimes->{{3.9007106331232157`*^9, 
  3.900710639663052*^9}},ExpressionUUID->"69cc2540-418b-4119-8016-\
bd44759351ae"],

Cell[TextData[{
 "Rem:\nPeriod: \nTan = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "n"], TraditionalForm]],ExpressionUUID->
  "5bc9651c-4dff-4a4b-8f9b-907689a45108"],
 ", where Tan(n*x)\nCos and Sin = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "n"], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"Sin", "(", 
      RowBox[{"n", "*", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "b6248353-fe5d-43f7-ae33-acd9fa57c5c1"],
 "\nAmplitude:\na where a*Sin(x)\nAsymptote:\nTan[...], where ... = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],ExpressionUUID->
  "b3de669b-cfa1-44d5-8da8-8126268035db"]
}], "Text",
 CellChangeTimes->{{3.9022969436245513`*^9, 3.9022969447390714`*^9}, {
  3.902297061651752*^9, 3.902297214263362*^9}, {3.902297264461546*^9, 
  3.9022972663938704`*^9}},ExpressionUUID->"5443c897-94a1-4e31-b816-\
585bc4b266f7"],

Cell[CellGroupData[{

Cell["Solving for x in sin, cos, tan", "Subsection",
 CellChangeTimes->{{3.900710648582409*^9, 
  3.9007106679668183`*^9}},ExpressionUUID->"fa7ac1d9-36be-45da-9b27-\
c103e079a221"],

Cell["\<\
sin(x) and cos(x) can only have solutions -1<=x<=1 as the unit circle has no \
points where x is > 1
Solve with domain\
\>", "Text",
 CellChangeTimes->{{3.9007106765813117`*^9, 
  3.9007107949923472`*^9}},ExpressionUUID->"022562d6-49c4-4193-b8cc-\
1fc3e4273bd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "==", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"0", "<=", "x", "<=", 
     RowBox[{"4", "\[Pi]"}]}]}], ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{3.9007106863919034`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"7752045a-22e9-4b94-b1ac-643d93f4acf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Pi]", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "3"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9007106873052015`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0ad65673-e2d7-4cc9-a1c8-4bb0bf3aee89"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "t_", "]"}], ":=", 
  RowBox[{"21.8", " ", "+", 
   RowBox[{"20", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", "*", "t"}], "12"], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.902356210158137*^9, 3.9023562187321963`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"24bf226e-965c-455e-869a-3abdad568938"],

Cell["Reduce with domain", "Text",
 CellChangeTimes->{{3.9023562422035823`*^9, 
  3.902356247295187*^9}},ExpressionUUID->"ce891770-91f1-4fa3-ade1-\
804c4a296bfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"h", "[", "t", "]"}], "\[GreaterEqual]", "  ", "11.8"}], ",", 
     RowBox[{"0", "\[LessEqual]", " ", "t", "\[LessEqual]", " ", "24"}]}], 
    "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.902356186746598*^9, 3.902356190792938*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"1dcd30b5-b35c-408b-8277-54922fb756e4"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "ratnz", 
   "\"Reduce was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 209, 19, 30759355072334092782, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.902356222323923*^9},
 CellLabel->
  "During evaluation of \
In[209]:=",ExpressionUUID->"c8f80323-e57f-425c-813f-13ce2c7dabdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "14.`"}], "||", 
  RowBox[{"22.`", "\[LessEqual]", "t", "\[LessEqual]", "24.`"}]}]], "Output",
 CellChangeTimes->{3.9023562223551536`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"c4a808ae-b39b-4f85-934b-af6e1f6710aa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tan", "Subsection",
 CellChangeTimes->{{3.9017341871108484`*^9, 
  3.901734188764079*^9}},ExpressionUUID->"7234e6f8-fd86-4acb-9bb4-\
a0a311a4f0e1"],

Cell["Finding Asymptotes, x-ints,y-ints, etc", "Text",
 CellChangeTimes->{{3.901734196372351*^9, 
  3.901734217238302*^9}},ExpressionUUID->"cdb29106-43e1-479e-ba11-\
a75fb9ad87d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"x", "-", 
     FractionBox["\[Pi]", "4"]}], "]"}], "+", "1"}]}]], "Input",
 CellChangeTimes->{3.9017342242826643`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"123142b4-6241-451f-94b0-8fa012aa4058"],

Cell["Ints", "Text",
 CellChangeTimes->{{3.9017342411918545`*^9, 
  3.901734241727727*^9}},ExpressionUUID->"048aac65-6388-40dc-8542-\
0f07c526b2cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.9017344002839346`*^9, 3.9017344027351294`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"688ef06e-cd22-456e-b8c5-71eff5403695"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.901734405159675*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"eb512866-fc9c-455e-85fd-f4fe99c83820"]
}, Open  ]],

Cell["Use && For Domain", "Text",
 CellChangeTimes->{{3.90173443804077*^9, 
  3.901734441672959*^9}},ExpressionUUID->"5fa186d4-fea9-4a36-824c-\
0b72fbf62f58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "<=", "x", "<=", "\[Pi]"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.901734430684492*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"66de6a50-d443-4a0c-b283-8594cd50a70f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "\[Pi]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9017344312857685`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"33aa439a-af9c-49e7-9750-dafba174bab2"]
}, Open  ]],

Cell["Finding the Period (T)", "Text",
 CellChangeTimes->{{3.901734473814101*^9, 
  3.9017344785441008`*^9}},ExpressionUUID->"a79ab09e-8bb2-4c7d-bad3-\
5e4237f1626c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.901734461578498*^9, 3.901734467958189*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8d3fd99c-4f81-4467-b4b0-8c7df71b35dd"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.9017344695286217`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"25c5c890-fc7e-49f8-9e50-be09736952f9"]
}, Open  ]],

Cell["Domain and Range", "Text",
 CellChangeTimes->{{3.901734500256542*^9, 
  3.9017345023835382`*^9}},ExpressionUUID->"e9b38b90-dddb-493d-85c3-\
62c320a7a930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.90173451889559*^9, 3.9017345217716284`*^9}, {
  3.9017345733175735`*^9, 3.9017345808714743`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4c1df50c-3ffa-4757-b676-f889f4ea5a40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{
     FractionBox["\[Pi]", "4"], "-", "x"}], "\[Pi]"]}], "\[NotElement]", 
  TemplateBox[{},
   "Integers"]}]], "Output",
 CellChangeTimes->{3.9017345811313615`*^9, 3.9017512267606544`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"4a9d22a3-de28-4379-b899-6fd70b33d765"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.90173460239016*^9, 3.901734633258429*^9}, {
  3.9017346727952337`*^9, 3.9017346803803864`*^9}, {3.9017348404516745`*^9, 
  3.9017348630158105`*^9}, {3.9017512068089776`*^9, 3.901751215505808*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e103c1ca-e1f2-49d9-97be-019da0a5737a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.901734609215083*^9, 3.9017346812837143`*^9, {3.9017348417463145`*^9, 
   3.9017348633024335`*^9}, {3.9017512088216667`*^9, 3.901751217640246*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"6e009477-c6f1-454a-8664-d9160dbf2303"]
}, Open  ]],

Cell[TextData[{
 "Asymptote for Tan only (Add period for more) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Tan", 
      RowBox[{"(", "x", ")"}]}], "=", 
     FractionBox["\[Pi]", "2"]}], ",", " ", 
    RowBox[{"x", "=", " ", "asymptote"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5dcb1c7f-6f55-47cb-a810-090af4c02cf4"]
}], "Text",
 CellChangeTimes->{{3.9017349025487194`*^9, 3.901734944499289*^9}, {
  3.901751311023018*^9, 
  3.9017513149985094`*^9}},ExpressionUUID->"767099b6-e531-4e9a-a726-\
010fe927d66b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "-", 
     FractionBox["\[Pi]", "4"]}], "==", 
    FractionBox["\[Pi]", "2"]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.9017349152982626`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"57328953-2227-48db-9373-8f0152cdf6c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9017349164224434`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"78ae9ad0-1d7f-4865-9667-329c5478ea69"]
}, Open  ]],

Cell["\<\
Graphing (Ticks is domain (v1 and v2) and increments (v3) labelling), \
Exclusions gets rid of the blue asymptote lines\
\>", "Text",
 CellChangeTimes->{{3.9017352621585317`*^9, 3.9017353013596716`*^9}, {
  3.9017353449148054`*^9, 
  3.9017353634104714`*^9}},ExpressionUUID->"86e5a28f-86d6-46eb-abe8-\
bc5c031fa242"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "5"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
        FractionBox["\[Pi]", "4"]}], "]"}], ",", "Automatic"}], "}"}]}], ",", 
   " ", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "4"], ",", 
        RowBox[{"3", 
         FractionBox["\[Pi]", "4"]}]}], "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", " ", 
   RowBox[{"Exclusions", "->", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "\[Pi]"}], "4"], ",", 
      RowBox[{"3", 
       FractionBox["\[Pi]", "4"]}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"d370b985-de70-4eb3-a897-37af3a101a89"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3DKRHg==
       "]], LineBox[CompressedData["
1:eJwllns01Hkfx3+YhCaLZHqUttrKrYSsarK+X1GrspJLadZWPOuSQrIsipKK
onKr3FYatLSFIiR8frmEYtwHE4NxCWtQDGMM8+zzPO9z3uf99+uc9/uc92YX
H1tXaYIgiv7xf7PUddVQb9cgEP+TKln0Q7F8XO0gDKfNN8jmryEPXBzyLrw+
CO6G9ONmkSrkcNkuuRDfQdjAaCzNOKBCRspffnLw7CC4PPAzYC4rkyymcjv7
h0E4YxrWSr+sTDI6TPctCHng8Hqn6aWbSqQfPUnG1IcHN+qcv2NlryYTEtb3
nDjNgwNqEsWBH1eThZN/FPr8xINmgVVqwyiVnGMyXZ/o8sCJ/W3z/C4qGbjq
eS1ldAAo/x6/b9aqQCa56qVrdA4Ai8aPLwlVIEshP9D4/QBMGOhXZu9QIBf9
Xmt7ZA6AVmPx64ZoeTK0pyLq49kBCC0xzdn4ixyZZmz269CxAVA0eS/lqCpH
QkyVyZLpAHSUhm+salhJEgfr+HoaA9B27sV5JbOVZPiLlmNx3f2wkJ1k/s5Y
lowMHVpzyrYftt0JCFyyoZDZXW4Tvmb9ULsiutBkHYWsNxyrvqPfD7+MCkVW
/TKkwme+f5liPzRWrv+VdUmGVH88mYce9kHE027FnnRpcpuZ6t7GCC48N7/V
WqEhRboJ1o0tu3IhoS2RrT1NkNk5Gsn6FlwYczsspVNFkDoqmuJ4ggt9tHEN
ridB6g/uIxlBvcDwOF5zP0wC9JtnLEc9e8Dq21vJHLklqBeGZJ0+2gOY/3MZ
r1IMjhdSpTt0e4Cd9QCehYjB36677N3EJ2CrBBV4CRYhf7OdQYr3J+iPGtDy
5ItAs+KQuvUlDhhrm3PrxEIoMnD9vdqWA6Ps+1V+74RgkRXeTt/NAeoh4cCr
W0JwiSbvac52g2yKf+WQihDSGHQZqYBuoA5qn+EYzIPq/M6JgqAusF7N/f5I
pAAyPK0O6zC6AD/O2oEdBGDI9XyaTu8Ci97qxWdbBGBT8+fZu4udYPW9QXRX
xSxExW/ucAvphFH9DXLu4hmQ1l9b8a8wNtD3DjNXRH2FKQ/x/auR7WCxs/Xa
Oc4UtOcaKFm7tYOK3ZRz4s0pKJ11i9lg0Q6OQUZewQZTcONaS8wbSRvsvdUV
ZB01CeqJT2NnAtpgK62UmDvEB4tam3h311a46Pu29kzPOCRuy3p47EAzmNZG
9VpdGoGQ8xy1jZuaIVrmqOjLrhGocflWr3uxCdzopm8VJ4eBETyrt8avCYIj
smJyzg/DzZw0/QhnFuzwvnnH9MIQcFbO7PYxbYBXvb4x78N4EF6dQkfCWlD1
ds++M9ELo6x98a4ltXBj9WatbZG9YN3d+XdUYC1sCshKO761F9Qn1/zRJXwP
0z8qlDJO90A+LVriu1AD+C/uK9luDvR6XqnOFFXBVr/ZU6mfO8F7S2mqqghg
k4ON/UHnVti3Z+4n52CAZp9HT3OorUCxMpS8EFVA4aO1fweVtECK/zPnHxfL
QfXsvDdDuQXq6pK3B4vfQuK1u2KpmCbY4nM5v2+5GKbzrMZ2x3wA9luT6mcy
+TC62PnYYf072BDkwv1KzQNivxo3KZqE6OCjRjEquWCzcUX3nBjgfIhG/weN
55Au0KjcUlcOOuHv9mCjbMAlHec/XngDOffkP+s4pwPBU+If5OdDc6FRgdzZ
k0BwGv0eerjDmR2Hluxjc9FFw25Xsr8MmSQ+vTeXnodGT9B/km0rR9TrMkpW
jvmoa/LVtXPVFWiM/+8nfPeXaFrtpNePtiRi1myt1o8oQKP9rPEDOyuRqv9T
+eKaYmSVfL/wp6YaJB6z/+C8mUREkN8V7foGNGDp6OCdVoc2hrGqtHvbkenw
FefG3jqU/zO7XW9VB0oOe+K1Q6MeiRztGGv3dSDb0vGb4yn1qPBb7wcRCR2o
UjekyC3pA5LVnwiSPcJGTEUm7UxCA7LxyzBIzutEhuOCCc2DzeiWr3yOhxsH
zeahvHX721EZGWxOi+5DnKyN3l+ae5CTZ3zgJ84Quuz91tLhMQ/llo9uFbqO
Icf0XSdT744gDV4518CTj9wi6qX7mseRb3V5ZWbnNKq6oasb/XESBedOh/n2
fEWnlYcrVU99QcyIacEAfxbN0GtNBwJmULOCbhPNaR7l+axecLkoQJRvKoqm
RhfQRJv+/NdAAcrSkY1smF1AOnvtBdfDBMjQIvzAS0KEMomUL8w4AUrNOZQb
t06EkmO1xnmFApSmG7ai2FKEbhSYf3JZEKCK+y/o8c9EiDEfVO5yfQ49v+vx
lOq/iChXR8JcEuaR1888s7XaS8jbT8bBOXUeffhk53rdeAl1uW/SOps5jw6d
2coUmS+h5zYM1i+F8+gc94dS6pklZL+FpX6qfR61zH3KffNgCWXUvC44pipE
99h6yYdXLKMD1JvDJglCpP74c+Agfxk9J5gl+1OFSMPzZ7s+8TJSE1RE0TOF
yON2+P6xVRI03is02FsoRNXfZzA1dSQoLu9C6O52IbJVSeAcd5cgnq09TUd1
AfWztC39hyQoLOm7w7SEBfROLWDtOX8C71iZJeanLCC5Iy0+pSEE7vpte351
xgLaQNvlr3qLwHo22rRLBQuIOBpby3tIYI7sruGG1gX0S5Nd+HgJgY1+o4dd
VxahoD2U4qJlAo9YH3/DvydCe3xHSppipXBsWeuF6ocixIu5zXBKkcImOvab
UtJEqC7PHM1mSuG4FScjLHNFyHoq1+hQiRRGZU4OGY0ipGTMjPXvk8KJ2h5f
HKmLqLTrAu1f+tL4KOWqdvXtRWQUd3Jy/ydpfLac3m4Rt4ie/TBqduqzNA4I
mAutSV5EZb/V6UXOSGPmqFf7+78W0Yxh9p31VBksbHC6Wt+4iE7fs/DQMJXB
mQ/oHSxlMbJcV0uWZMlg8fa5a91JYsRiTMR/vEHBKv0vdRlMMdL6mqQXFk/B
mklebM4zMVIb8vA9xqRg21XDuj1vxYierrBqD0nB2VNtbG6vGFltM4uiL1Gw
Q8nLHUObl9AJahPjxJUVOPewV9dkzhLKe3mFj2Nl8XTcFkfuyyUU1VKhf5Ep
iw17Ojsb3yyhhhNGUFEgi4u8D3Q+r19CY8HVe9+yZTHE09ieY0uIFaRuY7Jx
JW7ufdc2orWMEpW4/W8KVmIVzd/t2PrLaG76+9ura1di+4s72mr2LqNfrzVt
i+CsxN3Sj1ozLZfRg5rwbZNScpineaHFxWMZhW0NpyXZyuEZX7Um7p/L6Orh
7s6uRTls/PajNStvGUUZqr6qV5bHgZQwVnnxMgryKtw5pimPxQ//bkytXUbc
Uf27RfbymFJGNjA+LyNT57qdf+TLYzXZ8x/Y2yVozaXJE8aXFPDeZKhhZUmQ
sMfJY/8WKh7SyzPxyJWgj6unRyfNqDi2Kq1AqliCuu0jtBecqXh8IuSJUZ0E
5eO7bFoGFacik5DkcQnqiD2FcrRX42uXnNQLaARO990mfHhYEbNN2jsk6wls
3OdXcNlH8Z9+W8VabSLwJCv7ZNsDRdydsl9uRIvAxPrehcFBRWxYoz63jk5g
yrCd2oeb3+BhWndLqBOBwzjkkQu+StiEZ3P341kCK3g6b4iIVMJxz+ss17kS
OPlxrfn0YyVsalYCL70ILGtOqhc2KeFEz0cvhkIJHBjXZ2S4WxlPGn1zziCc
wF7Wb15PWSljC8mtraERBM7YrtAr766Mv8QHpNBiCLypZsVRp1RlfKTc4faR
JwSeyPGxLlqlgtMjGi0eZRF4/yL/yAMtFTx3/CAxlEPgO8qVM7yDKjhjxOj3
kFf/7LB8Krs9TAWLv1F1za8icJkyfei0RAVbWUhJpQ/+w/v/P43/A21t4CU=

       "]], LineBox[CompressedData["
1:eJwdjQs01HkUx4f+Lw0aQ6IVZSOvlYoeVHuLkh6K9BRGsnmvzSgtezIqM4UW
KXoykkbl0VMiv1+RJDlZj0RRDY2jpYlIM5rd2f2ec8/3fM/n3vudtftX72BN
Fou1TT3/edkluxpkSwDrfxngfUM633jzCIj5XP20M0cft73jDHivIGCn9EDS
FyEXl1z0+mXjKgICeS6bo9y5ONk38/06DwLQrDUxaxkuXtym3+XmRcBogmny
RJoePltv2LgwkADOTWLQQsLBvFKTkukCAs7rmX04ZqaLl0T42Uw7SkDcl/WJ
fQ91MNf6YqH+MQJunug6Nhqsg2vyzXK1Mwjg2W4Mm3RLG1ueNk9X5RHALfIz
Fwewsco7SFtZQAB/2uHSvbps/HJKgeirhIBE4fXPadWTseiYhUBeRsBi31hp
m/lk/DHBat97TIDR40xFqILBtUtCh7prCbhr+Gz3ylsMPj9WFNZVT4BoPHen
cySDPaNtg1pfEGCaNZgf2UvjsiB7n7q3BGxIf634qYfC+9c6LrzKIiFjS22D
gQaJP7leyc8kSNAMm5c2t4HAIcumT4lnSPDNoVmTswjs68DqX8chQbljwGjI
msBg2Hhm0IyEC3pRSi3/SZj9Pui7w8/qff8X8uxeDXykqz3U2JWE0xU57eQ9
Daxq9WjXcCfhWaxDjypFA8ufzC39y5OEFi3xuNBJA7cXK3l8fxJejO1yuHGC
hfMOnqwt/4OE6HB+3PMSFTKOoeblCUi4q69t/GaPCmVGHLwgOkrCI5kN8+AH
FToaELB/RxoJ7913lPakfEdhq2ytlOdJ6N06mOYVO4Ec9WpSlleRwDHZPWIf
pkBPJcPejxUkzMzLLHJ+OobGn2hWav5DAi/lSZPTn2PIUsb9ESZRkCrUiqzd
MoaSLBaM3GdT0P2tSZrZO4qW5secLDOhoAqErHJmFJWd+9JybjkF6cnPXL1D
R1D3fWLpq5UURDjMPSxaNIJ0Og0KDN0pMJfN3zOfGkFhRk78jI0U7DeVBXYW
DKPZp2INhDwK+I5Hwj1ln1HOiTGffUkU2KXVseMOyVFdMfWgNJmCCYbr7OAj
R6ONhhaDxyloYkWVu1nLkTd70ejekxScX/hop1LyCWmLDpzyK6Cg03a9i4n/
EEoUjLetqaNAokwL8JN9RCF8xVazyTTcvtYp1AuRoWJfobWBLg1yVk6FprUM
Da80UFfR0LArhRsw8AHF69mLh41pcLvqcsQn6gM6URL48bE1DdBnE8CN70N3
+usPRXjQsHxCzJEVSpGmX7akQkSDgTPoz1jxFrm7zY4vSaWBeW3H8HXeolTb
GxsupdMQQeV/t7/dg6YqGoZTc2gIGcpsFfR3I6ts1VKehAajkDVW3O1vkGdz
cDNVT4NIFXco36sTnVvlqNhMMxChqWuVcrkVXS3ell3NZmC9/u/tJW6t6N7U
eEdrDgMJUrdP/r0tqL3vYZTKiIGyjm8V/hYtiJO8USqxYaCjrNv+bnEzSq4L
a/y+gYHoLcely4qfo33u4otXshhINA0MV2jUIEFprQv3DAP92U87kvwfofRp
/R0JFxiYaZc751XlQ1Qss9f3LmSAJxa3yeIw6hdWCSfK1fec2atvjVci//qX
0V5dDMgTfTYRnjdRpINSp6qHAc5RmwWzzG6ghBzTa5a9DLy1e2PiJi1FZ0KC
+5R/q/+L7lgnO11DrczIjkKVmn9mr96uECNptOFXziQtwCGDczz25KLhjiVZ
8bQWJEqnhnNenUVTihKbNnG0ANq2NU40ZyBTvYLwSgM1dz280/D6cWR38Alj
aazO9bF8p2oBcnk3cDl9hhawauhUwe3f0FoPXVflLHVmwYjUKaP6X41KhFA=

       "]]},
     Annotation[#, "Charting`Private`Tag$15770#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, 
     None}, {{-0.7853981633974483, 2.356194490192345}, None}],
  GridLinesStyle->Directive[
    RGBColor[1, 0, 0], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {-5., 5.}}, {{-3.141592653589793, 
    3.141592653589793}, {-5., 5.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{{
      NCache[-Pi, -3.141592653589793], 
      FormBox[
       RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[-3, 4] Pi, -2.356194490192345], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
      NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
      NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.9017352717500553`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"05b96d3c-421b-4aef-90b8-5f3d7d241c51"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Complementary Angles and Pythag Identity", "Subsection",
 CellChangeTimes->{{3.9023811398154306`*^9, 3.902381144645326*^9}, {
  3.902381246280836*^9, 
  3.9023812488982477`*^9}},ExpressionUUID->"a8f23039-92c5-4f02-849c-\
cb123c33ef21"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", "x"}]}], TraditionalForm]],
  ExpressionUUID->"3508d2c7-ae7a-415d-8dd1-e98a7b2e7df2"],
 "]=Cos[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "+", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6ad646f9-ee8e-4496-8933-855e986c9ae1"],
 "]=Cos[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", "x"}]}], TraditionalForm]],
  ExpressionUUID->"aa11d12f-a702-4f8a-bc89-3b0837b7c754"],
 "]=Sin[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "+", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6a99a05d-0e4d-4df4-95b6-881a16155868"],
 "]=-Sin[x]\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["Cos", "2"], "[", "x", "]"}], "+", 
     RowBox[{
      SuperscriptBox["Sin", "2"], "[", "x", "]"}]}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"84c89fbb-432c-4197-bf3b-717578dff2ed"]
}], "Text",
 CellChangeTimes->{{3.9023811842874303`*^9, 
  3.9023812731832485`*^9}},ExpressionUUID->"655e0a46-fad3-471c-8571-\
43c48864d1f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cleaner Answers Using FullSimplify", "Subsection",
 CellChangeTimes->{{3.901821470106183*^9, 
  3.901821517774607*^9}},ExpressionUUID->"031e296d-56d8-4671-8c4f-\
389574273a2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"2", "x"}], "]"}], "==", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["2"]}]}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "<", "x", "<", "\[Pi]"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9018215428159466`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"c6fba2a6-cdd9-4287-8d77-e2616a125db5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"1", "-", 
        SqrtBox["2"]}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.901821543608976*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d5547d76-5a6c-45c1-834f-e5476e4c0b95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Tan", "[", 
       RowBox[{"2", "x"}], "]"}], "==", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["2"]}]}], "&&", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", "x", "<", "\[Pi]"}]}], ",", "x"}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.901821557937582*^9, 3.9018215814643745`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"e8aa9f83-a1ec-4a20-ac2d-e4c41f5388e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"15", " ", "\[Pi]"}], "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"9", " ", "\[Pi]"}], "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Pi]", "16"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9018215823054647`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e6583be8-26db-458f-aa2b-84e65cce064b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact Values", "Subsection",
 CellChangeTimes->{{3.9023814844285917`*^9, 
  3.902381486412442*^9}},ExpressionUUID->"85bc5fec-ea19-4d5a-a962-\
05965204f280"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd4U9fZx2tWCJCQkNHstPmSNGkzmnSlSdPMtkkz8MIGbPbeK+wNYdqy
5G088MB7bzzwxBvvvW088R6yrC1/773HqA5gWbKu7pXN+T168hCQdI/uOOd/
znnf//vbtbv0N8741a9+tW8u/Ed/zcEv9u5dc9jgCfifJTv3bdm0c8P6b3f+
tGHThr0frZ0Jf7kW3vsc/IH48wgGg8FgMBjMtEYqlTY3N0sEknLvEvSqCipn
ulEYDAaDwWAwUwCsozAYDAaDwWAmB9ZRGAwGg8FgMJMD6ygMBoPBYDCYyTGq
o4RjdFQg1lEYDAaDwWAwE4N1FAaDwWAwGMzkwDoKg8FgMBgMZnJgHYXBYDAY
DAYzObCOwmAwGAwGg5kcWEdhMBgMBoPBTA6sozAYDAaDwWAmB9ZRGAwGg8Fg
MJMD6ygMBoPBYDCYyYF1FAaDwWAwGMzkwDoKg8FgMBgMZnJgHYXBYDAYDAYz
ObCOwmAwGAwGg5kcWEdhMBgMBoPBTA6sozAYDAaDwWAmB9ZRGAwGg8FgHgYk
UplILBWIJMNCMZcvGuAJ4SWSSNX5TqyjMBgMBoPBTEWkUhlfKAZpNN6/gkYC
1cQTiAeHhV0Dw2nlLW4Jpaf9MtZax3xxzO/ldVdeXOsQmFGtXht+oaPKvEty
vYukMpk634nBYDAYDEZJYMyVSGV45FUVOGkFdR373ZI9ksqEYolMJhODahKP
rjX1cvm3au743Kz42T9zBTvqwz0eM3TNf7XYDL1m6pnPMbB4dAn7KVMb+5hC
dZpxj45Kdc17crlla88QVT8Tg8FgMBgMQkqO9TDo84XiIXJfqWeQX3K7K6m4
qaKlB4QB0w2cSsDZ+/K43yx9Fsghu+uF1a29ETm1rLBb621iPz7oPd+ILVdN
M/TMZxuw5i5hzzfiPLbUcpGp9edHfbc7JthG58cXNqrZjLE6qsSr2J6V+KSJ
Nb6UGAwGoyRi9YIrMNMY+b4SWiHpGxKUN3dH3qqziszf45L437NBr210RIsk
OrpmMLgX1ncy3WQCmUzW2c8DgcfIoUFkPvCfJL88mT1cfkLRbRBRIKXkemlU
Nemaz9ZnzTW0mGfEWbDUElTNn/deW215/VJwTnBmdXFjJ3wDhW0eq6MKrxXt
PBb6zgYnCr8fg5k0oOb5lN7tGAzliMTSsJwaLKUwCBjrUTQOd1jYy+Xn1XUE
ZFRdDsnZZBf3+VHfZ1ba3r+vNN+Y8/gyy99suALKiunmjwISBUTdZ0d8aD6u
VCZr6BgAkTk4LBwhT6aQ3KQjQpsGh7Oq2nxvVlwIzFpvE/vJIW84dWOFE/rv
AmPOE8ut3trmYmwWfto3wzu1Iqe6HX6OZps9RkfleRT+a9u1L3d6avSIGIyS
wONzyCMVhwxgtJkhvsjgYlhqWTPTDXmIkGlfpwBCGiZ9/TxBdlWbeeitFeyo
v/7kOe/+fSVD9jy0r2Ri/elh7y328ZYRuVG5dbVtfUz/gv8B6uVmectcQ4uf
/TNpPvSwQLzG6vrcJezLwTmgQqEZdtcLttjH/XnfNZCdYyXo2E26J02s3952
VUfX/DcbHOMLG1t7uDQ3+xc66lrhdzs839ngpH03KeZhZIAnfH+XW+8QA2vL
GIySgI4yvBTmn17FdEMeCmBo4glEtzsHmG7IKCKxFNrTM8gPza75yTXp/d3u
Y/eVHhmzr/ThXo/VltcvBGYHZlQXNXTyBNq70i6RSm8UNULjj3un0XxoEKLG
ZuGgOV/b5Pjkcuu7qgmdSfYCY87jZGjTJ4e80SZdaFZNWXO3QCQurO+cpc+C
NySXMjCjGaujCq4VrT4QsHCZVf+QgP6WYDD3AM/UaxudugaHmW4IBjMuQwKR
0eVwq8g8phvyUCAUS2yjC9bZxDC+JAUt6eXyPZLKlrMiF5nYoBEfBTw/vszy
d1tdjMzCT/mme6aUZxP7SlOpExNLpJG36kC6HPJIoe2goEjhfDrHF7+01p6M
FjOHMwm6aJGJ9ZfH/Q64pbgnlSUU3a5t63vgHjpMZ74+4Q9tPuyRSlub5fwi
PsqzaP+JiMeWWubW3qG/JRjMPfQNCZ4ysW7D2aNqw/SYM50BHbXkUjidI87D
DIyhETl1jy+z6ujnMdIAqUzGF0m6BobZ4bl/JFefZuiaw/A934izyNTa4GKo
dVT+VB9A4SQHZVbPMbCgLV6LJxBdvVHyyUEvpEV1dM2eXWl7JbYwrbylT7lV
HYFIwgq9BdfirW1XpbQnyo3VUcWexeyL8Y8asV1ulNDcDAzmfnq4fJjZNXcN
Mt2QqQ2ZejOMA6E1BFqPWsGOYrohDwUgYyqae+Ybc1wTSuk/NE8grmrtPeGd
/swKWzTiLzDm/GGH60+uyWHZNUxJO8oRSaS+NytAR21xiKfhcEKxxDG2WGex
2aNL2ItMrP9z0h/+/MIae5WWHEE75dXemaln/thSy4qWHs21dpyj/09HlXmX
3HDKedSQjfsEjDYA/RLWUeozLBTvvZoUk9/AdEOmJzCVXmoW8flRX6Yb8rAw
wBO+tsnR8FIYna6VApGkoqV7h9MN0E7yOOfvfw7yT6u8xyZIRj5x8H7a2kY5
Yqk0rrARful3Z4M0fSy4hq093Dc2Oz+x3IoTnld/pz8ytw7O8MJlVp0DqunS
wWEinhbEGCeC7k32e3w48zwK/7HZDTQhdA40twSDGQs8Xy3dXNBRTVhHqQdf
KD7mddMjqYzphkxPYNDcaBf33Co7bEZND3DC11rHED1DJx09A1zWfp7AIabw
+dV2ML7PNbRYuNzqvV1uL61zeOAV5/KFO50SzEJypu7dAL+rvKl7hq75G1uc
NX1Tc/miPS6JcDXNQ3NGyGWlWzXtcJ4fW2pZUNeh0lfxiFy/aNC3a6yua6ax
43KPjir0LNpzLGy+MSc6r47mlmAwY4Hnt7FzAJ6vxg5tyc2ZosDU+HJwzln/
DKYbMj3hiyQnvNMfX2oJU2mm2/JQIBRLnOOL5xmxXTUffyKWSKtae1dyomFk
n63PesrU5rRvRn59x5FrqQ+c4kmk0oSiRrScwiUdkKYo/UOCR0AxLrPq1qQV
J5ze63n1C4w5RzxHg8Oh22/oGNDRNZuECJGHSL2zw5XmSc09OqrEq9iVkzx3
CfvItZt0NgODuQeZTFbT3ot1lPoIxBKbqPy9V5OYbsj0hMggi8qHsSCh+DbT
bXkogCGyrKkLRnmQNxo9EIzymZVtf9vvqbPYDDqi5azIfHKFBJTzca80uOJJ
xU33fIRwXiprQcsppU1dGm2eRhkcFr630w1+Rb6Ki0IqwROI11nHbLaLG/uX
/TzBwuWWjy5hu8QXq/RthCrLr4eTD5OaOnonNffoKHjleBS8tNbhrz954uow
GAYhAkpbeqD7asA6Sj3IMM6itbSvdT8kiCTSgPQqnJ5DJwPDwjc2O7297arm
lh2kUllZc/cfd7vr6Jr/eqXt2G1xgUhyyif9gVccZn8wgsNQPt+YE1vQoKG2
0cCQQPTjuWD4FRG3NLgzBSe5uq33nr8kJZzrXEOLs36qLaHDvXC7c3Cmnvl8
I05EDq0bavfrqAKvolWW10GIFjVoRaEfzMMJ9JClt7vwdon6iMRS98RSvQuh
TDdkegLzzZTS5kcMLY564jV8muAJRIaXwjW37AAjclsv98vjfiCiXlprn17R
OvZfQUed9s0Yz6qojytAZd08k8s10TZ64AnEqy2vzzNie6bQHVc5xBd9czpw
joHFpl+uUykDaLAP93rMXcK+EJSlibaNx/06qtinxDIyH24D/7RKOluCwYwF
dFRBfSfRVbZjHaUWZBZzJU4o0xAymayqtXe2PsvocjjTbVGXe4rqDvCE2lng
koxJS9PcsgP89pWcaB1dsxfW2N0jokZIHfWzf+YsfZb+g+Ym3GHhX/Z5wlB+
KShbE22jB7gBdjsnPrqEbX+9kP5Dg4KaqWf+mepd1rBAvNYqhv5Q8/t1VJlf
aXhO3VxD9vkAWhUdBjMW6NJzatpBR9W2a1HlqamIWCINyap5b5cb0w2ZtvRw
+TCqfnRg6lUmRXVg+aRq6uXy839ZVPfFtfYH3LXRXxTEnldyOQxSFwOp1yqo
5/nVYrNFptZp94moEVJHmYXkzNA1f/9BzxRPIAYNBrra2Cxi6mZwglI96Z0O
Z/hCIN0yAJ1eOP9PLLcSiVVzvYM7Ge5Y0rEhWEPNeyD366gK/7Kypq45Bhar
NBzFh8EoAHr4jMpW0FE1WEepB+io6Lx6wteO6ZZMVwZ4wlfWX3lulR3jxUom
BAkntNzUQ9aBdYor2nM18Ytjvo8ttRxbBxaGgHlGnI8PejHd5AcAUie35s5s
A9Aq1K8BEksxLokKNmphcHe5UQJn6ekVNvdf8YFhoXnoLZSy18udqhXWUO4b
nISDtBv1Q38VnFk9Gqt/W7VYfSI3OSR7hp75h3vcNdS8B3K/jqoKLO/nCZ5Z
afvhXg+t7xUw0xZUcxwepfsDETEqAWcysfj2wuVW2BROQ4Am+eSg9+PLrO70
aZ2jNQz0IomULyKEU9fAcHJps931gh2ONz494vPoEvbYorpzDdnzjTjwxC0y
sf77Aa8NtrGgB+7f1dISyKwuq9c2OlFbBAROV31HPwjIZ1fajpfhIh/oSVuA
XxTO44skZ/wyfjwXjKKdQ7NrKGwbnYDYdoorBi292V7lICU1kcpkhQ2dOovN
iBOYpdoJBInrmlACn31+tT2d6uWBOgqeuM+O+sJN0jekQe8IDEYBMPonlTRB
r17VinWUWoyu7C2zau/FlQo1AghU/Quhk3AO1BAwEsGAMiwUDw4L6+70+6dX
Hr5288vjfsiLe1Q4GbDmLmHPN+ZAP/+7LS7LWZEXA7NBHhQ1dg4JtDEm6h5g
kPrquB+c80pKi4Cg7Es4MxZhueO9B3VNaMGksuUXvRNPIF7BjgIR9cfd7o8Q
9emSKGwbncB58E+rJKP+Iug/Oojkx5dZwlVghd5S6YMgccNyapHEVbIwHyU8
UEcRDr22sQuWWubUtNPWEgxmLERtgoJGrKPUh4zY76B8xMHIgQ5zi0M8aJLr
efVMtUEilRIbdgIxjEFFDZ2uCaU7nRL++pMnEk46pI3ko6RweoK0415jdR2k
AjR4ivqKwDnf5Zw4z4gTlFFF4dfCObSOJNzAMipaxnsPPFBwhuGsLjC2hBnK
Pa3aZBdHlowJ1tE1e3mtA39qFogBQRKT3zBTj/X1CX/6jw4i+dPD3nMMLDba
xar0QZC4aRWtSOJWt9EXEPJAHYUMkOEW9U6toK0lGMxYkNUtqaPw6K8W0O3D
rJmYFlXjaZFGEJBBufOM2G40Fs8lcuvEUhQi3jUwfKPoNjs8F9TR29tc5ItO
MBI9asSGh+iFNfYmrCh2WG5IVnVz93QotASCxy66YO4S9kVK0+L4IvGRazef
XmEjEo+rf2SykeauQbTxFJ5Te8/HD19LnaXP+uKILwhXGEMD0qmUebSBFrFn
6Jl/sMeD/qOjlZyZeuZ/P+Cl0u4cSp5FEjerqk1T7buPB+qo0bVNQ4szKhph
YTBUAToq4lYt1lHqQ9rTDcw35twoxIbbGkFIOsaTyU2aTXWH0Q0025BA1Dck
uFXbfjWhZI9L4j8P+8g37GbqsR4hzYsWLrN6b6fbVof4qzeK8+s64B5Acvr/
NjlqYRDXJID+ISijGoTiNocbFH4tTyBebxMLmlPx2/p5ggVLOURtmoRfWHGS
22FVqAzf4nMhsw1YqzjRU7HwImka362ja/bSOgf6j45WckbL6/BVK6/Tw+XD
DIIoK5NL3+LwA3UUzHTyaolsiOWsSNpagsGMBWXr490oSujs58HcOSizmumG
TE+QQxeM6TscEzTx/VJSPsHYnVTSdNo3Q/d8yPNr7MYm1j26hA0T8EWm1l+f
8D/kkQqz4Jr7sjNAg8EMHSSWz83pYAwIPye9ohUE5Pc/B1H4tTyBaK31dYeY
CUyTBoaFr29ygtNuGZE39u/JpSoutGruEjZcCLg6U7QiA1pzI5TMciv6tyah
8w/MqBqtVlyvWszhAE/40loHkLgeiXQuDj9AR42Qpqxwk7y305W2lmAwYyFm
dulV8ByVN3cz3ZYpT9+QAGZ298ydMVQhkUpvFN6G0VPvQgi13wxPAQzZOdXt
Z/0yUbCTjq5cOHGeNLH+6IAXiDfn+KLMqtZBhYVxpTJZyW3C0Ga9TczUWx+5
DyKx7k7/DD3zt7Zdpf/njKejRkg77n+d8AcddcYv468/XYP32Ebn095ACoBO
A+4WRvJTkAmzzmKzearP/rh84d/2e8Jp54Tfe2k0x3g6Ch7Jd3e6ElpUOCXD
5DBTHRhBfFIrsI6ihH6e4Pk19laR9HUsDxUo8JhwrdlLWTAJfCfMrD1Tyr88
7ofk0yOGFvA4vL7Zeb11jHVUfkLx7Y5+FXboiNJv7UTpt6dNbaaHAwbc1XBC
YIKgWEBqAgU6ii8U/+SWPNuAZWIR5RBT+PgyyxWcCXYJtRO4/V5c60BEVrQw
kOkDF3e+MVGt2FnFasWoMiDNdZrG01FcvgieX7gHWru5tDUGg5EjEks9Esvg
KS5rwjpKXaBL/N1Wl/O0WxM/JMhGRlp7uDq6ZotMrCmx4oSxuKixa5VlNMge
GJEXGFv+3yanQ+4pCUVEhNvk4m3gM+19QyD24JkqUdHeUDsB+fT+Ljf4ORUt
dHcRCnQUdFxXE0pm6Jq/u9MVrqPLjeIpmvZO1Ave5bZgqWV2NX0B22OP/s6O
qyCH9l1NVumDw0LxeutYItfPVrVcP3UYT0eRhSDDSENRPIphGAA5qk3C0hZz
P9Ap/XmvBy6kqznkayNdvzRmVBUZuZ9yOSQHvm2mnvnC5VagpuILG+XaSSKV
VbT0DPEns6AEt8EftrvONbQ47ZuuTiO1hCGB6Iefg4kEiqJGmg8NOuqNzc4P
1FEoDk1nsdnjyyxvd07h1EguX/TFMT84vXD70X/0IcIfzH+2PsvUQrXVPCJl
0oNImdQ7T19l9vF0FIi6DbaxC4w5N8ubaWsMBiOHMNSNL542c2dmgS7x86O+
u50TmW7ItKV/SPDoEiJLroerlndxL5e/nBVB5NQbEzVZwrJr73nDAE/42kan
784EiSWqlR4bIZe5drskEtXHzlAZm80UMEhttoufZ8R2pzGiGKFAR43cFdXM
+ompD3KXpdyhS/mjL7eInKXH+peKBlYCkeRiUPZMPdaXx/w01Lb7GU9HEfX+
3FLgToi4pZGC2hiMYkBH2V8vwDqKEmBy998zQettYphuyLSFCMo1tCBKqqlR
A4LLF+53SwER9ZSpjXVU/gMtjJBjNsxwk0ubVP1+Mnej8leLzZ40sVa1AqwW
AiPmad+MuYbs8wF0b1gr1lHwuH19wo+w4w5TzY5bqxgWiNdaxTxqxL7KRH4K
6bOaMEPX/PfbXVX6INwVZ/0zYbKgfzFMM017AOPpKGjMhcAskPrXkspoawwG
I4c0Fs4DHVXU0Ml0W6Y8Q+Q2vbEZAyUeHhJAR83WZ5E6apLVKIjEipsVSERF
jj97hefCNrrgEUOLY6rv0iJDG5ROXjz1Hyt0KuYYWNC/0KpYR/GF4r1Xk6Bh
O5004oNBD/Ar9rgkgRpkh49bIkdzEHLILxPu1SeWW6lUQpEvkpzwTpttwFpr
dV1zzbuH8XQUukXhPrGKnJI5m5ipDtyB7HBCRxWq6B+CuR+eQLzKMvq/02I3
RzsBHQVzZ9BRA8OT1FFDfNF3Z4Ogy1VsXkSE31S3wXT7syO+k4hp7+MK5hgQ
PtuBTGzWUItILHWJL55E9RD1UayjoO+yiswj9qROBtDcMAoBJXPKNwMU+ykm
oumQAvkVEWamWvlv0pE+lQhQd03SWOvuZTwdBZMjr5TyaRORiJlywFNsHnJr
Ej5smPtBBeD+ecSH6YZQhlgi5QlE2pO/38sVIPvlSefgE6EU7imPL7Wsv9Ov
+J39PMEiE2simbpH5WRqaN6He9wnUQFWCwEddS2pbLYBy5RNt7HAoEIdRdpI
VoOufnv7VZobRiGgZCzCchlZ7hsZ9batQGunKqVsw3O03y2Z9I+ibxltPB0F
d0JUbt1UX5nETF1QaQC8HkUJ0Lfsc01+f5cb0w2hAOiaBnjCyFt1y1mRJhaR
lPgMqE/3IF9NHQWqwC2xBL6hcyJXqCGB6Pufg+YbcxRs/yn47A8/B8FsHcaa
ybVTeyCLsFSS9qf0ZWYh4Cq/ucVlPB0lkcoyK9vQnpRw/Dp9Wo5QLHWOLwaZ
utqSvg0yOahOPVkpj5OiSigg9HUH3VMWLrcKzqKvfMN4Ogq57sM5XEG71Mdg
RkgddSk4G8dHUQJfJDnmlfbqhitMN0QtQGn08wQhWTWLz4WgkijPrbZTyYtS
c0AzUBGNSS+RoeClt7a6TPhOIgLEK21ymwVEIrZN7CTSybUQUNTh2bWgo/5z
iu7tM8U6CqR9U9egji5RFAb+QHPbqIJw8EsqhVtlmTkDcZXyWL75Rhx45JX/
IFFhuaJ1o12c5tp2P+PpKKlMVnq7G27R/54JpLM9GAxCrqNwvp76wMk8H5BF
uEQy3ZLJAZP6Xi4fevV/nwyArnWGrvmCpZafHfXVnoqBd/pGddSw5rcayTry
laR+CFR1NY4vEh/1vDlTj/XFUfqywjWEWCqNLWgEOf3JQW+aD61YR42Q9hTP
r7aD7gvEAM1towq4zbxTK0BHGV6iL/FNDlH3p4Ow3yeS3ZK1PdlNgY6qbOlh
ROpjMCOjGaNYR1EDGbSfu3CZ1eT8G5kC+lK4DboHh2G0+tNeD7QGNd+Y8/5u
N63qWkHLtPVwR3WUUONnGDrniubuGXpEWHsfV7WwdrgT4GTq6Jq/vtlpiopq
ORKpLLmkCUQ1/RvWch01Xq0lLl/0j8PecK/GFjTQ2zTKkG+bLj5PcdVIJenl
ErkbcJLtr09QNppxxtNR0INVtfTAtOUrFV2wMBhKIJZQArOwjqIEGD2vxBSR
mS90lxydHDBE8gTimra+0z4Zr6xzAIkC/TncDH8/6OWaUDIsFDPdwF8gk420
dnNRPAzctzQcEcbx3211gWE6TkWvaVS2EoVyTS1RfT/EDk5lK2jC/9vkRPOh
J9RRcPeaWEQxZWJJCWKJNDizmsE9qQGe8IU19nOXsC8FZzPSAOVRoKNq2nth
9vc5jaagGIwcGI/OBWThujCUgDKbHl9qWTdRLhjjQO8Nc/ns6radTglzDdmo
wBwM+j+cC9aeXbx7QPEwdMYVwzC9khNNDjE5Kn1QIpXGFxLhu+TN0Keh5tGD
VCYrqO+A3/LsSluaDz2hjiKs450T5xmxvVLKaW4bVcCTGJZdOwlHcaqAk/zH
Pe6kVVoaIw1QHgU6Cp4y0FGfHp4+udKYKQSypcV1iimBiKjJqCLcF7VYlIrI
RLyYvIYV7CgYHOEFXeiTJtZrrWJQfV6tBXRUY+cA0lEPNCGnHIFYwgq7RZo2
q5aqBtqjuKGTTIOyzKxioP4shcBvKW/uYSQtbkIdBd3XGb9MGnQU/HBoTD9v
kq5lCiBz9uuJtZSjvpR/uTKQtvD+U8I0YHwdRfQMcA4/PujFdBsxDyNkR5QB
Q395M9ZR6gJdYnRuPQydWdo3dErJIKheLt8nteL7n4ORgppryH7K1Gafa1Lu
VAjTlcfEwoAuUcV7edIQWeHkstKTy61V2uWExrX3Denoms834txfvG9qQZz2
O/1oj7Jvsjbyk2NCHQXyxiGmcJGJdUB6pYbaIBJL4amxv17wzk5XTazIkWH8
DaAB/nGI7jB+BE8gMjaLII0XohlpgPIo0FFNXYNwDj86gHUUhgFQ8SysoyiB
iMgtbVpgzEko1qKFHRG5hVdQ33HSJ/2trS4oEQ/GJhgUzgVk1rZNmV0nGNBr
2/tGa1jQ4mdFyKFe7kw9FlFKvky1UvIDPMFzq+3gPDvFF2moefRAhPf3cpHl
dTu9gX8T6qgRsgcbL5tPTWBa1D8kuJZc9slBL5TR9rf9npQfBTqNxKLboAH+
+hP1X64MpHtw3Cx9li5Dge7KM66OGhlp7eHO0DP/875rTLcR8zBCViVIxzqK
EqRSWU51u5aUHYfG8EWSHi7fK6Xc8FI4WoCaY2CxYKnl+7vc7K8Xdg0MM91G
1UDRpHTqqBEyI+yTQ94KUu/H/eCw8C8/XZtryAaxqqG20QbcRToo1qud1sA/
uY6yjqK1bhpoGzh0eE7tt6cDidBBfdZTpjYXArMm7f6q+Fgppc2MpEMiyAov
NxncWFQeBToKpD6cww92uzPdRszDCOiokz6Ejqps6WG6LVMeGNzLmrrnGXF8
0yoYbIZILIUO/1ZN+zHPm69vdkY+BjAYPWVqvc46ZhLu3FqClMxuRjqKtoPC
bH2nU8IcAxacOpU+OCQQLT4XAsJ1h6O2h51MSP+QAO5qIhuF3ihK+nUU3GNw
4dLKW0wtotDKLajHJZfDNbdTj9Ih4UC/Z6i6DVmqPn+GnvmHez0YaYDyjKej
RkiHXjiH7+2cDrUkMFMOVLYbesiqVqyj1EUmG2noGJhnxHZNKKX/6DAEwNSy
Z5DvkVSmez5EvgD1+DLLfxzysYkqmLCinJZDGDqROmqRiTVtB0WFvMkQVtXC
V0CAbbaLn6XPMlAxRl0L6ecJnl5hC71Ebm07ncelWUfxhWKYTu5ySkDPDhz3
za0u8DRp9KBoERtZjWn0QONBloZpeMTQ4l2tL2ilQEd1DQwzqEUxDzmgo457
IR3Vy3RbpgOdAzzofkG00HlQmUw2LBAXN3YduZb6242OyAYK5NzTK2z2uCQl
lahQNkubIas/dMGve8qUPh1F2vvUjCYJSqTKf5BY6fVOJ2JfNRBUQzMDPOGr
668sMOaklrXQeVzCv4sWHQVqGQbi077pC5dbodkHPDuXg3N6uHyNHneEvKvz
6zt0dM1eWcdYPSmeQLzZPs4hZqr6cI6grWdd8zeVqPeEwVAOXyQ+5nkTdFQ1
1lFU0D8keNLE+rKKdkPqAFewoWPgoHsKDNnIxABG/G9PB7omlDywKB7Mf8Wq
6AHtAUackkZCRz2zwoa+g0pl+XWEexI8IxXNKqzZwtDMIS3NX9vIzDoDhYCe
eXvbVfptw+G4b227qlEdBdq4l8u3isx7c4sLmoDA87vbOVGla60OhEVGY5fO
YrPnV9vTc8SpiwId1TckIK1inZltIebhhCgEdo3UUW1YR1HAAE/w6oYrp3xU
rmw7CWAIgEn0Wf8MmDvrECYGFvOMOEc8U7Orx43lkEgJX6Po3HqajYAoAUac
wnrClOnXq2g1hOzlCmbrs0BFXM+rV/5TIrHUNaF0NCp+SurW/wF65oM9HvON
OOH0ejhoVEehdDyv5HKUjjdDj6h3rH8hLJne9VvCnquph+ZV1imKYh0FGvg3
GxyZbSHm4QR01GGP1MexjqII6Pnf2eH6k2uypg8kEEl8b1a+vtlZhzQxeH61
3Rm/jI8OeBfUdyj4FF8oPuieMiVqad0PaazdCYrxudV2dB4XqQjypKmwXUts
CGZVM2K7RDlcvvDvB7xApQdm0Op1L9dRNpTqKDFpRRucWYPS8XQITwPOh3s9
/NM0ZUKlANLNg+4s1CmKAh0Fkhgmki+vc2C2hZiHExhYD7mngI6qaZ8yPkLa
DPT8MOJssY/X6FEkUll2dfsLa+znGFi8usHRKiKva2C4nyd4Zd0VxVVdRGLp
1Rsl0Gk/bWpDQ6lfapFKZXm1HTDqwQ+n87iEUaF5+COGFirJY4lUmlB8m7Rd
srzdNaC55tEA3NUfkutRIVk1NB+XWh2FDA1i8usNLoXdtaK1eHalrVVkHlPV
JMnklH5UfZueqpFTF8U6CsQw3hvFMAJaoAAdVYt1FBVw+aJ/nfA3ZUdp9Cgg
mb467g/9xhqr671DfPlfvrjWQXGqIIwjaeUtM/TM5xtzYvIbNNpIyiEym2ra
dXTNXlxLa29JGuykztJn/XguWPlPkarvDgqsKmnU3jpBygDa492dbsS+Xg4z
+3rq6yi4HPBsJpc2IUMDFEn49AqbM74Zt7sGKWnt5JCNjLT0cNG6JXeKl7TW
NIp0FE8AE5anaYycxGDkgI7a75Y8JUrrTgmG+CLd8yEadQZGBbnmGFiss46B
IV7+99CTPL/azipyghGHyIHa6jLXkH3Wf4r5Q0pGM8TNaF69F4oljrFFKDNd
pvTOC1k7tR+V2MuobNVoCzUN0jOqRohRdVw1dRSyhII7Z4NNrNwM5ClTG9DG
WhLM0NHHQzpKPieaZoCIFYml0FmpWc5JsY56Yrk1nY4oGIwc0FE/uSWBkq/v
0F4dBWMXdIYiiRS94KnU2kACnkC0nBX51XE/zR0CWX7BzKv4l6sc0JM8t8ru
rH+G4o8PC8XrbWJn6bP+eyaIkbNI+FwJxZMIdGdKRyGDHbRD19arQmEUlItN
f5ob5QwMC1/b5AQ/JI72fL231dBRhB+IUFzS2LXzriUUKKhFptZ7XBKLtWmF
sHuQj3RU1+AUKzGgAHhqBCIJ9Id9Q4K82jtXE0oOeaRmVqplZ6pYRz1taoNj
zDCMACPa3quJMEA0Mbq4/UDIyiZi6Etvdw6WN3X7p1X6pFbAK7+uo6K5G/5+
mByO6SlZqyTQpA22sX/RZKmsIb5o8fmQcwFZ9/w99CTPrLDd75ai+ONwxuyv
F6J+u2eQ7vkvyODKlp6fXJMd41SuOseUjoLhuKq1FxTRAmNORoUKK0sDPMGv
V9kS4dnpVZprHg0M8IQvrXWAn59Ib+HISesoGdmz1bX3w9gNUwaitosBYWiw
2T7+Vg2tVqLKAEqDME4Hld5Da/lCakFTXTjtXL6oa2AY5g6Xg7ONzSJeWeeA
DCWgwznoPkHvNMEhxtdR8Kw9u9JGVZM3DIYSYNzf4ZTw+DIrbXuE4XnMrblz
+FrqPw/7oLnk2NcMPcK6dq11jFVkfnJp05BApCWeSHA+dzsn/k6TdnDwSx84
nBHWVcutNtjEKv44qJGs6jZQI8Q6Cb0hUqCKbxQ2vrPTlajgsMtV1Y8zpaNG
Rntpu3lGbK+UcuU/BTLgDzuuwqdgMq65ttEA8fNX2YKOSilVrVizmsAJfG+n
G+ioK7EqpJcKRJI7fbzTvhmLTGxQdTwYXldxotNU0cB0cldHWUGzmW6LasAj
CfMy6PRAaVc098Ak95B76pfH/eYYWKCqOvAHuP8XmVp/cyrQIaZQzY1LhTpK
+MIaOxyrj2EEonqFfZxWLSnDvKafJ7CMyHtsqSUMmo8YWsw34sBkDTrDRSbW
T6+wgdZClz53CRt6SB1dc/jv4vMh4Tm1PC1QU8hH4rlVtCbmI0BHQTey5HL4
xO/kCZ5aYQMnkB2eS0PDEDyB2DO5DFqoQxppBqi+RMOgjoIp9mdHfVUtOgyf
+vyoL8gAjoo1jrUNMvgEHjrLdHqlCJcv/IjwW2C7JSpVaEkklnYP8i8FZ788
Zg3EyCz8RlGjppuqDj3c0X29zn5t6YTHQ0bO40CrwNS1l8vPqGy1u16wwTbm
3Z2uaIY7U8/8EdLIDn4O/OVWh3iPpFLuMDXx84p11Kvrr8BB4Q+UHAuDUR7Q
UeusY8gQR62wuIHZTWVLD8qpgbnMC2vsj3mlgUZq7RlCG9/wH5B8CcVNFmG5
JhaR/7fJCZ7ZWXosUFMGl8KicuuZyl9GQA9z1i8DBh36jS5BR4Hy/PqE/4Tv
HOKLvj0TONuAtdb6Og0NQ0eE2Siaoj670jYmfzLhygzqKJDoS80jYICYcNv0
nk/pXwida2gxYdCalkMmlbMXLLXMrqZ1Uwxum3+fDIA5VED6BM5OcG+A2HNP
LHt/tzs5mrPgUz/8HAwdAj1NVYeO/tE4827a99mVRCYj1p1gXtDWOxSVW3c+
IFPvQuivV9kh7QR6Fc12od8D3fuTa7JPakWlBgq2KtBRxNLlLje46K09XMqP
i8EohicQr+REL1xuBfMLpttCdJtXb5S8ss5Bh4jptdpoGzthaV2RRAp97L9O
BoCagqkQSK9dTokMSimBWMIKu0WEHmm+Mtc9wGAHXdkHeyYu2s4Xig+4pZDl
0V1pCMuE7tc6Mh/NVd/Y7DzpNQ0GdRTcUZvs4uDu2nblhkqfgkkKYTzlpnFf
Vo3SNySAawcqPa/2Dp3HFYmlPjcrlrEiFLxHRurVm2UtSy6HE6aauuag9746
7hecRatl6KSB9rf3Dt3N19OKyexYoIOFoaHuTr9VZN5Xx/1HwyrIDbtHl7AX
GHOeMrX+7mzQKZ/00Oyaxk7N+qQp0FHQyfzziA9RKLZFK3IwMQ8VKL+MkfWT
+1tiFpKD4hmeXWnrqkpICTzsvjcrPid3XghDAJsYpqQUiuKGaVFzN91x+zDY
PaKcoy9ZsqQEJaBpOr8A5onmoTlo0vruTtf8OkV264phUEchexBVV/CIZFjX
ZLghJwxa03LQxhMMUgX1nUy35RfA49bRzzvkkTJqqrmE/dpGR4+kMqbbpQIw
j2ntHvWPgoeF6eaMIpPJ+CIJXHe/tEpTiyhUu5MMdiI27H6/4ypMcqGjS69o
oWrPThkU6CiYg39/NoiQ+nW0Sn0MZoRUL4aXwhhPFxVLpGHZtcheeKl5xOSy
kgUiyc8BWaAl4HnfZBfHiJQCieKeWAqPc2ULTXVO5YCOQiG1gokkMQiSjMpW
ONvzjTnxmgwdgXHhfGA20sZ/3ndNzWRzBnUU3Fpn/DLgVxhfVrQ2cv+nzvqT
nzJT4VNayB3S4Aju6tLb2mIXADcD3PCOsUVvbXVB6XhPmdqc9cvofFBtbm0G
+l2YyyA/c54WbApISbOImra+Y543X9/sjB5ekE9Pr7DZ6hAflFFd28aYY7MC
HYUWBBYYc5JLaE2FwGCAIYFo8bkQxktk9nL5nx/1nanH+uq4nzqCDnkrISm1
w/EG/YtsIonUP70SRpx82qdFSEcR0aoDEw8l8B6YY5KZUCr7DyjJAE942jcD
TWM/OeRdobawZFBHwY3Eicibpc/6QRVLc/gUOzwXhnhN+9trFHgem8kFE0Zm
Bw8EBGpmZduP54LRZjHc86sso3Pp3XOkCplMVn+3Lgyf0dhOqVQ2LBBXNPcc
dE+Zb8SeQRbuXGRibWwW7pVS3jXAfAy8Ah0F2m+jXSxMDKPptYrFYEbuhhzT
XLDsHvgiMdrRe9LEWn3HQiJj7loq2r63iaa+TLxiSLPxOpgWpZa10HxoFMRC
lEpUYsJIVEzb66FqzTjl6ecJjnreRNU3vjzuR8kcllEdJXWOLwGd/+UxFRxW
kRE66CgY5TXXNk0jH+i1pHoUly9ySyx9eoWNDrmg+vFBL5qr/lELWae4D9Up
FjEUXAEzV+6wML+uY9/VpDmGFjPJulHv7HC1iy5gcPXpfhToKLSHPs+I48dE
sWnMQ84QWQ/uNxscmWqAVCYrb+5eZGIDymePSxIl34mC52fps74/GySl16UT
xvqkkiZGLKyRCw2xFFY/cQwSnCJTdhScou/OBlHekv4hwQG3FCSivj0dSFX9
MilzOopYZkyrhPHlr6o4rJJJEFULjC23Omi2brVGgYG+pr0XRdM1aDiQeKKW
EDf5Se90FOr8lKmNdWQ+U9qDKpDLK9JRjARXyEhDdbS4Bx0CdCCfHvbxSCpj
PGL2fhToKIFIcso3fZ4RW3GBUQxGE8Dk7otjfm9ucWaqATCgb7CJhanlsytt
6yia7cL45ZVSjnYi1N9OUgk01s834oRk0p0u1MsVkNXcOMklTRO+GfkzgCZ5
aZ09tb03iKj9pIiau4Stez6EQn9XVPkXbhX67bkkUml8YSOM3W9tU81hdZio
A56aVaVWOQxmIWY6Td1IR7V0M5ZULpZIm7u5JqxIpM/f2+WWUESrubqGkJ9e
0FGMNACVqoep3yITa3hgtTnPUbGOMgvJeXQJe8ICoxgM5XD5wn8c8v7DDldG
jg4D+O3OAehD4P53pC5QB2QBDN/Q2VJSKV4loFcsvd0F0yJPVYyvKQElVYGE
C8+unfDNIDU9k8vR4EhhaqFcRMGZX3I5nNqYCnLpsgeNODRPltHe1kw98+dX
M7kDzghw2osbu8hbhTHDbZCjoGP/vO8amhyts47RwjpWkwP1GL8izWkZaYCE
nJ5cz6vX/lOqQEehRGlVnXIxGEoYHBb+5adrH+xxZ+ToIrHEJb4Y+pCnTG2o
XZ+Xb+0R1Xgp/N6JIAbcO/2gIpziimk8LAHa15tnxAnKnNgqnEjZq2gl168s
VaoZp4CxIsrocngPl+LAVDKzaWDUaYd2ey54Un6//eor6+neUmQcchmwg8FC
unDmbaMLZpHFC54ytabThJ8GQEcV1nfqLDZ7fjUDRRCmFgp0lEgsvZZUBnPn
w9dSmW0k5iEE+qgP9nj8TZN1dRWAbHmgh/z2dCC134z8B1DnP8SnNZu4o58H
QsKS9lIg/aR/FOgo/7SJdRSxZNfLnalH6C7fmxREZmpaRCG6BoZ10AYT7a7F
ZJT7HXX8r6Yo8MOzq9uZMors540GRM0xsHhto+P0y8YCmQo3lY6u2YtrH7ql
TlVRoKPEEmlwZjXcJNtVccrFYCgBdNQ7O1z/ccibkaODwvnvmUAY/dWsA34/
yJkTZRPT7G6H6tydD8yi86Aj5IizwJijvC4iq+i6zl3CNg+5pe6hx4ooM02J
qJHRAiWcx5ZaVrdON9diGAh4AlHfkEAbKguMRe42RrNRpIxcYoWeARmdmVhE
alXuGFWAjrpVe0dH15zBZJ+pgiIdJZXGFjTONmCt5ExhjxHMFGVgWPjmFuev
jk9clE0TQD/5/Go7og4p1UkWaLv8V2T4OrXfPCGgZ15e53DMK43+4z6x3JoI
zUpWKjSLqP52MVT9qiW0iagR0pPq+dX2oKMKG7TLWFsdQEHBgxCUWW14KXy2
PstIiUrTdAI66mZ5C5qSDAtp0nggonqH+LucElAI3wFVyhpOLdByH+ioNzYz
luxDCRKpFHpdvkjME4iHhWI+vIi68VQWjlego1Cgwix9lu75EAqPiMEoA1Em
e4PjN1RvqymDVCYraugcDdGppLiOvEAkOR+QNUPX/N1dbtR+84QMkIE0e1wS
6T4uTwCiEXSUknUxoKPb7Zw4x8Biq8PkV8LHiihjQkRpNmxpcFj4xhZnuGEy
qb5hGEEmk3GHhSFZ1f884oMsJZ9YbkX/naMYZOVBp8GRjDTm3WQXp0Me9FJw
Ng0HZQq03DeJVFAtQSyVgmqC65VYfNspruiQR8oKdhRcO+hbjnnevFF0m8sX
icTUqCkFOgqNJjP1WF+o4vCGwVACDL4vrLH/4WcVXJqpAnnyIPtNysdfZMsG
j9XXJ+heaoOx/q8/eW6wpbukGkjiF9fYK++gApNHy4i8RSbWhzwmGZlJs4ga
QfahezwWGHMSiqd8zjtI/br2/i0O8fLqup8e9vHXPhdBiVR6o6iRToMj6JR2
ON3QIdJPrB3jNOW3ryWAjsqqaiPWo5gzn5kcMtI2J76wcZdzwnOr7VCJQ+hy
ZxuwZuuzZumzQBzO0mN9dsT36o0SsYQCKaVAR8GN2dAxAEd8n/aJMwbTzxM8
vcJG/0Io/Ycmam2E583QM//zvmuUfzlMkdZaXydKm5nTXdoM+pavjvsvZ0XS
fFxyafEKSBqXeGVLPEPnllza1Dep4OGxImqpeUTvEB0JdHBuPzvqM9+YE3Gr
jobDaQhUG84mqgCmMKim5G83OnqlVDDdrgcDN0lsfgO0EyQ3DYfjCcSXg7NJ
EWUTkK51qpJypFJZLhEfZfbqlIqPAhHVM8jfYh+H3DuhE3hsqSVcsi+O+UHH
u9Qs4oefg97d6TrPiIPc0Sl5YBXoqBHS+AV0FLO1OTAPJzAaPr7UaikTdVRB
R1lF5sOd//vtVyn/clQ3kNi0ukK3lfQQX/TDz8E/qlKIjRIGhoX/t8mJWieu
8WBERI2gMkanA6d09QeeQJRU0vTDaG04FoiTwx6pFLqVUg7oqOi8OnoMjsho
4QYQUYtMrTUnLGUyGRHJIyTCeAQiiYTekgf3QPgeNCDfg6kkAEDuruJEP2Jo
sXC5ld6FUMe4ourW3nvOJLnjUPXBbneQUp8e9lb/PCvWUSiwgShTKNI6J3bM
9KZ7cJio/8VhoP6XSCx1TSiBDkQTMwgY6P+63xMe8+NeNyn/csXAQLnMPIL+
bXroRp5DQfuJmq2MMFZELWNFTG45a3LAuV1yORx+o3uiUjFgWgUMK10Dw6Ca
iI08Mgft6+N+N4oamW7XBICOirhVR09i/uCw0MQicuEyK2cN2K/JZIRhHUjx
+jv9V2KL9rkmbbCNvRiUfbO8mfJjKQ/pw9lNeugxXCxeJfgi8Vn/jAPuyUkK
qyeQfr9lyD21vLlbzYMq1lFw87y9/SrhFturvbMSzPQDHuHKll4iY+uqRorV
KoasPlaJ8oAElM4giIiOwkZk7h2cSXcNU5jkbnGI//12V5qPC3pmriFb02s1
/TzGRNQIOQtebRkNh7a/XkjncdVEKpUN8ITXksve3+2OrJCeWUHUhmOinJrK
gI4Kza6lITFfIpWlV7Q8asTepoE1ZL5Q3NrDdYkvNrwUjiJ50AvFFTBS2A5B
1NdrYbK+nkaBmyckqwYVua5r71fz2xTrKC5f9PFBbxBscD7VPBAGozzQcWVW
tsLgez6AbrOjEfIRiyHjLmD62TlAZb0J6DP3Xk0iVrpW2w0JxBR+s1JHF0lO
eKdDr0hJaKWSQP8LwwRy2onK1VTsEMz40HIKKJnlrEiaRdQIqVF3ON6Yu4Rt
FpJD86EnDdyNBfWdKznRqLou3O3rrGOKG7uYbpeywG0cmFFNQ2I+qE04LdTW
ZBwh4weIZcBrqdDRIe0EOhYek6dNbWDMHa2/3MFY/WWyAkKfJqaT2gCcfHZ4
LlptU7+7UKyjhvii788GLVhqeau2Xc0DYTDKAz1k5K06GBOvaD6i5n5AxaVV
tKCpSq3aU5Wx9AzyX1nn8IihxX71nJEmB3Qd1pH51NatmxByabEH1SlO1Ewu
G+gBx9giVCWWERE1QmrU415p0IAj1+jerp0E8Hz1cvkXg7IXLOWgws1vbbuq
hRl5ikF5taAA395GfRyjRoEepn9I4BRb/PY2FxQOPd+I88wKm51OCTDXgH+y
CMu9u+VEazXzsZDVjgbRdJJLb+UFGhgYFn513J+0daIglUmxjuIJxCYWUUQy
77QoYI2ZKojEUo+kMqKSCBN5MSjAEvVjFNoqkk7mlehrNaQolGhABRydzhoi
RNZPDVG8A6Zj2dXUT8ckUimczPlG7Jl65h8f8m4fJwIBBgWpJqN2YcLOCr01
x8Biiz3d6QOqArPjiJy6L4/7oRF8kan1Ce+0zn5m6vyqA9zPPqkVoKPe2enK
dFtUAMXz650PRbYS8Dz+eC44PKeGOyySv2GpWQT869MrbGiw7BgPVKHpbtkd
xpqhCZClA7F8bcS+ekPZJGIFKNZRw0LxtivxIJVDsuiO5cA8zBDOAxF58405
N5gQ8DKZrK69Hy2h3CxvoeprhwQiU4tI6PY/2M1M8WWQHPGFjXBW4woaaDyo
LJE0S4TxovS2uvGc9wBd/Z1+3t8PeuksNntmpS30jQ98G4icho6BvNo7g8NC
DQV6wB3rFFeshabfY4Fr0T3I/8k1GcWTLzC2/O5sUEopk8HM6oAqwM7QM2eq
mrmqwAStl8s/6nkT7eLNXcJ+baOj+33JF92Dw/CwzDZgrbWKYaSdcroGhsnt
RauOKSizFQAdwimfDFSGnpKCmIp1FF8kPuyRShoRazbRBoMZC9znJ33SoTPJ
q7vDSAM6B3goNDogfeLSusoA2qy2vX+mnjl87QXaK9whkLMu/CjvFKXqs1CC
WCINz6lFm6T1d6jcJB0hI9hXWUYjx1S/mw/ORucLxbbRBaQbEvvjg94a2vVD
uQkz9VhfHtdS12KYFKeWNX913B9OBYzRIDsdYqZSSPz9gI5ySywFHfUXDfi8
UQ4o7aLGzh9JW4lZ+iwYwc/4ZdyvT9AiG7wHnlP4AyNNlQMPC8z7GKm+rVHg
d72/2x2egjVW1yn5QsU6Coazi4HZjy5h20QVUHI4DEYZoM/ffuUGg2GWXL7o
i+N+FAYy8QRiVB0eRnymxCFaqIdpkWVEHm0HJcYFsi4zkfZL6ax2iC867ZuB
VrouBj24QgeZadWK4s/X28RoLgRILJXGFTTCoPOe9rkWy2REMiNcdDgJOqSg
XcW5XtHCWOANVYjEEpcbxTA3+fsBL6bbMgHQofmmViB30/nGnMXnQ3JqHrzH
De/caBuLNvUY32ztHxLAPQP9cCNz4e6UI7dvBaUamFFNyXcq1lEgoWEqB/O4
cwGZlBwOg1EG0uko8onltJZxHwtfJD7ieRN10ern/MoLqjLliCVngCd4ZZ3D
UU/6YqHldZmfIGzoKEtRhCneteRy5Lm9znrc7Q8YCD497E0sEx3zk8efaAKp
VJZT3Y5MC7UqRRxGjbbeofU2sWgZBEbnqb4MJQdurSuxhaSVog/TbVHEkEDk
HF+M9lJhGnUuIEtBl4IKDM0xsNhk94v6TTKZDLoRuJowMaHNnxPkN0x/yHSb
PnqOSAN8oXiPSyKyb6VqdVqxjkIb0DArP+A+bataY7SQIb7o6+P+DBrpQ38V
lFGFUo8bO9TdjYKnVf9CKJpjFtbTF+N9P9BLf3TAa70NfXEXqC6zjq7Zb9ZT
ZvKDKtE/t9oOxtC/7vccLxsdZX2iBavw7Fqqjv5AYJirbu1FQblDWpPcBCN4
WE7tH0lvqPlGnP+cChgvhGwqQkr0AhDJXx2nu1Sl8si3lWfomj+z0nbCSGN4
Qt/a5gJjLprsyC06QckklTSFZdf43qyEiwgzTRrcS0BHPbPCFh6fytYpv3op
p4fLf3X9FVCqu5wpq7utWEfBlQrLroUjbraPo+qIGMyEQGfy3i43TZS3UxKi
uGTnwCw9lvohUiAk0IIMDGSs0FtUtXByQIesez7ku7P0lYa5W5fZ/KP91Gy+
yMhAXBg6UWx5ekXreO8kfEft4+DQfzvgScmhFdM5wAO5SLOtxHgQIc1DgrP+
mWgEX2Ri/bN/Jgy96nwnTKuF6n0DtUBjbKLy4SH998kAptvyYAgHFXIhepY+
6/XNTillE4f0oyJKaO2Cyxc1dg64xBcbXAqT+3PqkMvaS80jQrKqNb0whSqM
kxkiU8ZVTDHIc4zMIbKMpS7dRrGOgssEGphMQmGgzBnmoaWfrCTy3zNBDLYB
OrFPD/tAh3ZQjcVYmUzW2DHwyjoHGM0/OehN4cbW5ABpscE29n0aEwbJuswx
MI78QJF4g3sDFSF90sTaW2Gls94h/ktrHeYaskFCUHLoCRsGTYJBp4RpK0uQ
7iW3u5E/NtzAf9juGqmwGCvMGiYcj4ViqVdKuW20FgXKEnUwI/Lh1vr2dCDT
bXkw8Lwf9bz56BL2Z0d8lTQ4JXK7rqXq6JrDsPvN6UCknWYbWMCE7vFlVk8s
t3p+jR2qsQtKILNq3EkEJYCO+s2GK3BLFzC6ik4hPIF4rdV1wrt1izOFJu0T
6qjs6ja4Ub9jdETDPGzc6RtiPJQIOrSDHimEK9FB70k/cYPDwm1X4lF0UFRu
PbUtnAR8ofiAe/ILa+iL4RkSiPQuhM4xsNhoGzvxuyeCJxBdDs5G08kLAQ+O
LUfIY9I05/95D8SOzFYXOFwadV4Zk2uGe2Lpy+scdMhNxh1ONxS7cMO93dY7
1No7JFN4k8O04t8nA9bbUHARqQKF76LgN6bb8mDglN7uHABdpLwNlFRKJNX+
doPjPCM2CLD5RpynTG1gJhKYUdXRz4NOSSSR+qVV/mmvByjkfa5Jiq+amsC9
9LutLqCjcqeFETeZaDMEP4csb5pG4TdPqKNyqtuxjsLQCXTs5c09TBXXk4Pc
ktWpzjAsFLsllqJyDzudEihv4SQQiCTnAjLpNCiGA3121Beu5jG1Oy4YN4Mz
q9Eay2rLCRKW4c3I5PzJ5db0uN/AL/3kkDdZ/oYZwTzWHmq2PuvZlbYeSRMU
TYZBGEaWN7e4wC3RPTis4J2dA8MgEU/6pFPaZLUg48yLYKbzj0PeTLeFSkAa
NXdzXRNKrCPzw3NquwbuvS5ETRPS8JzywlX3ADrqgz3ucN1TldiR1H6g97Mj
Y9XgvCmIB5gEinWU9K6O+u8ZLV04xUw/iJWEshamiuvJgd6spq0PJBDMCjnh
earO+uCZDcmqgWdHZ7HZc6vsatu0IuEFTeFBGTZ10ZTITIS67XSDc2gVma/O
94C6Lmvufn2zM6rfOqGhDYjYXc4J6M3qHFd5hgSiH88FzzPieCXTZ88lhz/G
HmrBUksjs3BlNpKI3KWrSSgDom78nCyi4mReA1N1msZDJJaC2CByDX6iI/5N
eyCSGtp60VqrRhc/CfuXY74wNYjOY34tXU3Q2uCr66+QiQkUL2BOqKNu1bRr
8wY0ZvpBZjfUQKftyHSnDWPxJrs4HV3z1zY6qZQhK5IQxUqeW22nQ45Q2tML
QcO8UsqJejf1lNW7UQx0xZ8f9YUJoJfCWCbFyMjShD+cCyZiy1fYpikxl4Tj
/vOID505MjyBeLXldbhv7aJpNRaQkXEs1pH5cGgQFU+Z2liE5yr52V4uEUJG
rhYqssKAScGl4Oz5Rhx4MKloMjWM+pnrmr+vfZ5dGoWIWy6+TUMhY5ga6J4P
gamB7zgmt1MI6BB2OiWguEoKI8wRE+uo2jtYR2HoBNkUM1VcbyzQX2VUtsJY
PHcJ2zz0lpIF2uBTeXUdb29z0SHrDmhV+VfQqFG5dTCNTS5poueIaHt0g3rB
Uf08wW7nRLRJ56mcGTvorrmGbNJDWK11MOVBvjTEOiqNfvUSqbRrYHiLQzwq
FvbJIe8kpa8s3Ayg8JUJIeMJREaXI8gKiVpkm4DqRYKO+v32KVanWE3gh3uS
5mmLTKzVzMFUDEwNVnGi4SFyiaegCB2DoH4PhVjscUmi/Psn1FG5pI76zykt
TSzFTD+EYglMqJkqrncPRIlJxxs6umYwbS9s6JxQSMEjU9fe/zFZ8Q0mPpQU
waQQpAzJhQXN+ilRyOCw8JRvOrKBUjLzDn5malkzUggJdJWEFogkp/0ySA98
mtz24EmBX/fJQS/QEnCzHfNKG+Cp4FvLF0lOeKeR3qF2ig0NBniCl9c5kNvB
zFs6yCFy2NOrdHTNX9/sxHRbaAVFORKGHvs1u6EJvd9OpwQysEHZFU7tpJfL
/9cJwinl2ZW2CvavJ82EOgpm1tps0IGZfkD3fswzjcHiemNBW9vzjDjwFHx9
wr/7vpjPsUDHXtPW+y2ZrfzEciurCJpWQpSHjOHvnmfEdruvOqp2MiQQscNz
UTWN3S7K+ubBhN07FRWjsWylqzQYKq4NE156bE7hN8YXNj62lAPK7XdbXSYh
jLl80VfH/SdMjEVZTuiW1ujqh6oge0OY44DGY7ottNLPE8CFIzymNKzYkW/D
XEOLM34ZGj2QRuEJRKywWyjJ1za6AJ5T8iUViQlzeDHhD09YxEPfKCOzH+E/
qiZoT6ij8usJHfUvrKMwdIHsExksrncPxCp6SvncJWxU1xKeygdu8MHDmFTS
hLyjFy6zYjZIfjxQiT0UOc90WyYG7gTXhBJUHW+t9XXlOzeUyYUuhEpLNOpA
hj2XztJn6V0I1fSxpKR9+js7XWFo2OF4YxJlZOFUwqfQubW/riigC4aYzKq2
XxGb1NZqNJl6yM0aYl/y2ZW2TLeFPgiX/txRl/4IhbZg6oMK7BKp0xSVGaWf
Ib4oJKvmmZW2qMjXldhCu+gC+K9zfDH0LX5plRE5tQnFtzMqW4saOmvb+2Da
VX+nv7ypG8Sq8janE+gomaygvpOIbz+hvcb7mGkGCJUll8Jh8qvRgmgqAf2J
RVgu9Cez9VlLLoffqmm/fx9kcFj4xmZntJ13MSgbtBa8Bz7ISIMVAP3Dr1fZ
nfLVogT2BwJnjyimYGgBp93wYphKlRaJxHByFQuuBYVue4qBAS44qxq6638e
0Xi5N7ivzvpnPmrEPuwxyRUJkP3xhY0ouS+nWpE7kNyJCx7JyR1LQ4il0tiC
BtQwui4y83D5ohXsKBo29UbupvfOMbDYoE2+YcoDIuqge4rcCl6lF8jU8uZu
JQ+krI7S4gJGmGkGkeF1zPfFtdq1Vk86WKbMM+LM0DWHKbxlRN4AT8gTiKGr
IReEiSJ6L61zgImPe1LpwLAwt/aOVWSe4pk+I4AgeWenq5b4WY0HnNW08paX
1znMNiC2UxU7Sd4PyIwzvhk6umavrr+ioRbeD9wHicVNcHu8vU3jYc/DQvFm
+7jPjvpO+hvgDDuRS3YgQhT7a6GqFuidtIlSZZCnrUHDtKpgjeYgPWGaR1cR
NV9vWiSWuieWTtGCJnCukkuJaizwQo6mMGV4fJnVQvJF1F9eZgliCV4LjOHF
mQ8vIw708PAH+EvozJWvKjihjiokddSXWEdh6AIG+j/suMpgcb3xQFE3MEo+
Ymiho2v+4lr71ZbXHeOKChs6GzoGihs70ytao/PqLwXlfHHM7/GllrrnQxO0
IFT+HpARgSk7kumGjAtfJE4svv3hHo+ZpPtTdVuvyt8gFO93SwZJ80eFFXCo
1QRENGntHbT/pWm5gQKAgzKrJ/0NROjLtZtwG7+5xUXxO8VSaVxB42h81ES1
ceGHo1CTSTdMeeQLZVpVG1qj9HD5354O1Fls9utVdu29qk0uJgFRrj2zehZZ
oUbTx9IEPIHI1CLKhBUFU9qQrOpbNe13+nj9PEHX4HB7H6+pa7CqpbeooTOr
qi2ltDm2oCEsu8YvrTIqtx5mwSodaGId1QA6yvwLbTXex0w/+oeIIuPMFtcb
DxgfYPK+3zUZJiwwcwFBBU/HaP1QXXPocOYYWMCk5v3d7j6pWuq4MiQQGVwM
++aUlnaMMCDCFHjhciuYRb6+yalwUoW9iBA7B6JC8efjrNiAHoA+tr2X2zck
gCNSspohk8nqO/rRsK6S2xgjkFGI8coUVSHsEciAHLgo9+xTI9UEJxP+Hr4Q
ZkDN3YNJxU2VLb2aLqE7QuqoLDJwC044DI6aPhzjwJN70icdXQh13NiUh5DQ
hY0z9Mz/8pA5narKhDqquLFLQXeEwVALdL6tvVzGi+sphozy7QOltM816W/7
PWGeDi+Y139zOmCTXZxjbJH2RHbdz7BAvM465sM9Hkw35F5kZOzW+UCifB5o
Uf0LoRUtyq6r3wNPIF7BjgJZ+/19xZGRa2VAetVKTjS8gSh6dTbIKa6Iy6cg
HL2Hywc5TaZI9Kv/bRqFLxTvdk6Evv2jA16K34nS4u4G7QuQZALxCReruWsw
tazZM7n8nH8WuqnQnOIpUxvl90QmDbLlQQ3rUljUZhogD6qHudsOxxv0HJRI
MahsfQidJVRlQh1VQuoodTbiMRjlIW65212MF9dTCZiV05YUpj4wgIL8e2kd
faWKlQGue88gf7vjDR1y/+i4V5p4oi0kBZDrUfHQcX3yy8pryBd9OSsCDfdo
/RD9Qe9CKF/tpIABIobf9rGllvmTWkajE75IfNgjdYau+Ts7XOGWGLsTh1aZ
4PwLxYRkAr3klUK4Ps4z4rgnll4OztnqEP/vkwGvrr8yNi4XRluY/swzYoOI
2ns1iYafgLZL7rpbaHyTi1lAKP6dNAp7Y7MzbS5eRDGmpm56tqqnNBPqqNLb
3dAdfXpY4xkoGMzIqIMiUVzvAo2m0A8VKNVr4XIrnkBbFs1I362+xedDZuiZ
P73Cxi1BXW8r+I2nfNKJOPMNV8b2/71c/gabWCScnjSx1r8QCnILZBt0cSDd
T/qky9QbLQaHhe8SXgT02cVPGjLqqQGUD2lDlFza1AVzAdCBfUOCxo6BtIqW
wIwqi7DcXc6J350JemXdPZJpVILOXcKeR4bvwu30+mbntVYx7ollk4hnmxzy
UR50VKN2eKRoCO6wcI9LEso/Dc6afFCcqsDT0Nw1SLN/yFRESR01zQpqY7QW
GFJDsrSiuN50RSiWWEflw9DT3K0V3tQoWviDPe5zDS3+tO9aChWV5eE32kTl
342cGe3/QeSg4jKg0r87G4Q2nmCkaO8d+vsBLzQcqznTRzH88404odpUh248
0O7nTD0W/PYZuuYgln69yg4E0i8kE2hOPSLjCf0ZHkw4pa+sc/jmVOD2Kzcs
wm4FplfdqmlXnPGnIWSkiRZx4ZZaakkdcE0AkwJkKgsn//C1VJqPDroabVW3
9GhFd6GdTKijQPCrqqNIR1ANtBXzECASS11ulGhDcb3pCqru+thSy5LGLqbb
QjAkEOlfCIXReZNdHFXe4yKJ1C+tEpnAoOURvkjikVSGBiPDi2Fjx32UHw1C
Yu4S9uXgHHWOyyNj+OcZsd2TpoBdPHTvNW29Xx7zW2BsCacFXo8YEktMo0ni
xkSS+PNr7L4+EWDCitLRNUN2H6p6UGgOGGUayMB+uMqTDqXTcuBOTi1tBuE6
kwz27uHyaW5AP4/I+iHOcPP0PMOTA+49ZHsOvYeEtApsaLwtGBYVexYVka8S
v1IQwHyhmAgmFIjy6zqIWMT9njDV4vKF3GHh4N0XuQ4shPNMvIaIBWG4ytBB
QWd4u3M6r7JiNAfce+ahOURZNO1zDJgeiCXSiFu1cIZTqVj5UR9oT1JJE7Xp
jaSzUBOqBJFe2SpPkAeRsJwVef9gBP3Yq+uvzDGw2Omolq0W9JnrrWOQ3lDn
e+hEIpVmVLY6xxdbReYd9Uy9GJRtF10QnFmdWdkmX52DHn7hciJBVauyUOWW
7MSk4LZWTAqoBe7bosbOd3e66iw2e3qFTWxBA/1tgIH+d1tdJjRrnRIg5SOV
IvFDVIQBmQrzSlQpBoYeQvmIxEj88ATwEoEEQsqHEDyE5iGkDnQgLd1cmIMU
N3ZmV7WnlDZfz6t3icrySSq/cC7m5JnoQ6ci952KOOmTftA9ZadTwnrbmB/O
hcBMZOFyq8+O+Hx80Osv+669v9vt99uvvrnF5Tfrr7ywxv6ZlTZPLLeCR2y2
PktH13wGeumZM33OMFMSuI2PXLtJROrWaXuk7hQF+pC0CqJUcXjOlClVrCrk
QnoXyvsLyapGdlKPGFp8ezrwgTN66Cq/OOY3S59lcDFMneOiA031emT3A4MI
9PmgD60jtatkZGc/D+mofC2oxUkt8JzWdwz845A3iKhFptZMKViQEH/b76kl
E9vR4nekEBKTpfGQChqVQKP6Z1T8yFd7+smovzt9vPo7/WVN3Xm1HdAB3ihq
hOlkQHrVtaQyp7hi68i8y8E58Ngevpa61yVxs338Kk600eXw738O+vK430cH
vN7Z6fraJqdnV9rOM+bokApnpp45SvidTcYKziFDDefosx4hX3P1LeYZEdGD
80ljT/gD3KjwkccJL1D0GnUEXUime8NrkYn186vtXl7v8Pom57e3XX1vl9uf
9mldVjVmSgAPwia7WCJwFC9paga0WQ/POHQgTLdFg0DPCf0bSJqzfpnQ0zrH
Fy8+HzJeMn7vEP+3Gx2hM9ziEK/OQaEz/zkgE75H+ZLKUwIYlWA0QaH4TLfl
F4AqRqVtsqf+aslY4EYqbuhEFc+fNLF2jitmqiVDfNE3pwI1FPInk42QoohY
F7pPDonHyiGkhVp7uFWtvaCZU8tarufVB2ZUuSeW2kYXgAQ65Zu+zzVpo13c
clbkDz8Hf37U98M9Hm9ucX5xjT1IFFA7M3RJ5aM3VvkQNafke9mPEkkT/1M+
IB0XLB01PIfxSC54XlhjD1/7wR6PTw97f3M6UO9CqKlF5HqbmLXs0AOuyduP
hu47EX70dOTZCzEeSWWofl9sQYNncjk04N2dbjVtvQ2dAy3dXNB13YPD/Twh
/EyhSEKD3xrm4YFHRstoVXG9aQaKKoFO48q0juRHoUpErvERnwfWlZYjrzQH
XajvTbVm/Si+nXA/s9Re97NJACdzmXmE+jqTcpBahiEvvaKV6bZQBndYCPLg
pbUOyAOEHZ7LYGPg0huZhRPTrmTVpl0odgjtnSGNxEfqiC/ikstEMHlp6BjI
rb0TX9Ton1bpEFNoHppz2jfjJ9fkzfZxphZRP54L/vKY35/2eryxxfmZFTZz
DFjkKhAphAxYSAXNNZRLILn+IZXP3RIwcAJ/vcr29c3Of9zt/skhr3+fDNA9
Hwo38zqbmO2OCQfck096p18MyraMyLsSW+iWWOp7szIsm1A+qaXNIM6LG7qq
W3ubuwdB8wwJxOMZ9U8YZ17V0gN90V+xnSmGFmAC8s8jPtpWXG86gaJKoOeB
eRzTbdEgqMTqaL3RJkX1RqFLN7wUDu98ZqWtmvl6KIYf+nmYEavzPdoGKkND
7nuGMt2WX9DPEywglw5SSrUi2E9NQHV0D/L3u6WgPaCnTW1soxh+SImQPxsi
5G9sqVC5wxjaVuOT1qzEhhq5fAQXBVRHZUtvVhVRJ8srpdw6Mv+MX8Yel8QV
nOj/ngn8875rL69zAF0EvxEtDckXhR4oh0ALPbvSFtQUfPCr4/56F0NXcaK3
X7lxyCPlZ/9MTkSeY2yRd2o56J8bRY2ZVW3FjV31d/o7+niDwyJ1bOiUR7GO
QomlM8gqVzQ0BoOBx/Dt7Vf/gu83TdLRz5tasdCTAOaARY1ds/RYiiu6Qv+P
TCbhbWYhaiXrjZDjYHhOLUrMUfOrtArCc8wvE37XxwcnMD+nGRiyF5nawLAb
X9jIdFvUBUTI9bx60Anobvzbfs8kpl3I4CGCiS3on7mG7PMBWTxio03YPyRo
7BzIrGoNzapxTSi1CM897pW2zSF+mXnkV8f93tvl9twquxlk7BBaNZpraDEq
kO6qo4XLrJ40sf7dVmeYMhteCttsH3fU8yYrLNcpjpBD8ASBHMqqaiu93U3I
oX4ePKTMnocJmVBH1bSTOmovjnfC0EHfkAAese/OamNxvWlDD5dPiWzQcoi1
zcM+MOGFvvqBBpt8odg/vXIWmSADs131k8phkp5S2gzf9n+bplUdDbS4B7/r
txsctSqMY4AnfGGNHQzQ1/PrmW6LWsD8ES1DzdA1f2K51V6XpB4uTZVuZGSF
HfHd3TdU9Afa08vllzf3gLTTJ/fH/7b/muGlcFB3z660JdaRyLBq+SLSAmMO
iiNCEUQf7HH/9nTgCnbUbufEs/4ZNtEFMFu5ntcA6qiqtbdrYHiahQMpqaP+
hHUURvMQxfV6iOJ6qy2vM92W6QyIVej0pr1jPHJuRwabLd33OlPBv4Zk1SxY
ytFZbPbMCpvoPAoGYmIRjKxUAqPJdBopRBKp780KVCF3SGts8EeQYcWGK0Ty
afYUTj6F0+udUgF6HmTJ77a6+KkXpDceMjJgCUUrkaFKRBR3P48I3r5V0x6W
U+sQU3TKJ329Tex/TgW8tc1l7hIL5FqPXFjhz2gp6cW1DjA9WcmJPuSRCnMx
57jioMzqhOLb+XUdDR0DIMA00XgtZ0IdVdveBwr5g93uDDYS85BA1MVu6IRp
DkzNmG7LdAY6z6dMradZbv79IINNIhnZwGKLfTwMH/J/gkEkKrfuKVMb5MwT
QZEFhEw20nS3jkbnAAMW3xpCHooPilSrvAEJd6MtLqCjgjPpq5ZCOXDbtPUO
/fds0EmftK4BtZahUAbc/YtLMHWqbutNJo3aLMJyf3JNXsaK+Mdh7xfX2qMg
pUfu7r4tMOY8vtTySRPrP+y4+v3PQZvt43TPh4CI+vfJAJgjdDJhXK/9TKij
6u4QOuqPu90YbCTmIQEGvsTiJpiUXQzKZrot0xnQUS+ssT/uncZ0QzQOMnSC
kQJVGoIBhTsshKHqQmDW82vskIiitmAZDFgg20gf9elTqQSG5oK6DhS0n1er
RU5NcEHf2eEKo79f2sNV/oDMhiPCvO/mwZGRSzxBS/fgrZr28Jxax7himCiB
Cvr+bPB7O91AAI+WRCT10nxyGw7U/q9X2n580HuZeeQB9xTLiDw4jTfLWmrb
++QhSSKJFKQXUcj7vHalGGgVE+qo+o5+0FHvYx2lMeBGRb4Z6AXzCPgbeEag
71KzauqUA6ZRgRlVuLiephngCX+zwfGQx0Ox6NfL5f/ziO9MPSJp+s0tzn/9
yRM0JEgCmIM/s8LGn+rxF87tS2sdFiy1vFU7fRyNyHq1XJCjMP5G59Ux3Zz/
ATrqT3uvzTNie6WUT/zuqcYvduJEhGkAly8aICOXSm53xRc2eiSVXg7O2eOS
uORy+EcHPJ9f/YDFJdBLTyy3+t1Wl29OB2yyizvrn+kcXxyVW5dfd6e9d+IS
P/LUic+P+tLwk6coSuqo93ZhHUUxMjJXqHtwGHoAuLfP+WeeD8hihd5yiisO
SK+8UXg7t6a97k5/D5c/wBNAdzHEF8GkAz4CDxShtcSEmyuptZj+JdSB/BLh
8Q9Ir2K6LdMZGOtBUey7msR0Q+gAno+uAd6Xx/zmG3FgMv6IAREcCyPLUrOI
G0XUJ3nBo/rBHncyg4x5/2cKgd/1hx2u2mZpzuULQT8QBQ0Tp7Cp7KheIheX
xu7E1d3pSy1rBqkP5/ywR+oqTvRXx/1e3+yMzCTnkHcy/Hb54hKKXDKxiDzo
nmIVSSwupZa1VLf1quPFR26ONxNrKVgDjM9EOmoE6ah3droy18bpCV8ohoHs
txsdnzK1/tcJf1D7nxz0/v0O10Wm1vBEwHOxwNgSHhB4wXtgEv3t6UATVuT2
KzeOeaWxw3I9ksqi8+pv1bQ3dAz0k0KLSwot+Nqpu6gFLb8cnA1zqMTiaTUG
aRtoTNzhdIPphtAHPA6hWTWnfdP3uiRdCs7WXJo8DIJfn/CHuUBgxrSaC/AE
YlN2FIzdOxy16LaBTu/Twz6g7mD+xXRbJkY2Mmq7NCbSezRyKaH4tnti6fnA
rC0O8d+fDX5/lzuMAr/YiTMi7LUfX2a5yMT6T3s99C+G7nRKgDvZI7EsrqCx
uKFTzcCq8YARJLf2jo6u2cvrsKffuEyooxo7B0BH/WHHVQYbOS0BzXAlpiix
pOkecwyQPd2Dw1WtvVlVbdfz6r2Sy22iCs74ZcBTAxMNUFzv7HCF2TQ8UKC1
UOGep1fYwHP3zemAlZxoGCZ+DshyiCkMSK+EwQItavVyBQM84S8XtSRoUUui
TStafJH4kEcq/K6CelxcT4PAnfDhHo+tWuZNPT1A/s+PGrFdbkyBkV15oL+C
Xmi2AQvUFNNt+R/QoX113A9khsP4FmGMAN0qsqmULzFBD9zeN5Rd3RacWW0V
mb/fLWWpWcTf9nsuMrEZs7h0N8x7ufVbW12+PRO40Tb2tG+GY1xReE5tTk17
SzeX5jxQGB5gMEIpqEJaPC2nIhPqqNtdhI76/Xaso7QICVy17sH8uo6Y/AbP
5DJ2eO4hj5TVltf/cyrw7e1X5SprAamyUNmg1zY5wjP73zOEp8cOp4QT3uns
sFyYAaWUNTd1DQ6QEgumSCCuiO1ChqQVdDgbbGLJnCC1bKUxigEdBTfDOusY
phsyDSELRMbBmMgKvcV0W6gEJIFbYulsfdaSy+FMt+V/oOpvxG5jFDO7jcjZ
e6yZgNx5KTa/4eqN4tN+GettYv91IuC3Gx3ltkvySG8UufT9z0E7HG+YheR4
p1SklrXUtPUNCbTFeRJGgrZerg6ZggoTfKabo6VMqKNgkAUd9fZ2FwYbiVEJ
EEIt3YPFjV1JJU1BmdXO8cWXg3MOuqfAuPnjuZCP9nu+uuHKQlJrLVhqCUIL
XjD3+fHn4N3OiZyIvJCsmsKGzv4hAXdYyBMQu4Ro2YqGlg8JRLrnieJ62tON
TEu4fOE/DnmvYE+rGnBaAlpThbHyuNe0SoeUyWQNHf2/XmV7KViLcmmhx4A+
DVSrpovQySuhjN2SI5y9OwbSKlr80iotwnL3uCTpXwz94273x5ZyfhHsTRY3
gVP3z8M+MNs96ZPuHFcMU+CSxi4QTBptNiXAz5y3hA3jRX2HFlleaBVK6qi3
tmEdNX2QkbsPcGVzatr906ouBWVvsIn99LDPkybWaK/wUSMiEPfvB7xWsqPh
qXdPLE2vbO3o5w3KlRUZ4k55w7h80T8O++CNeE0D5/nL435LzSOYbsg0BJ6O
i4HZcwwstl/Rojii6QqqRg066jJF6m6subc8Ra6fJ2juGsysag3MqLKMyDvg
lrLMPAK6x+dW290NYSLW/FFyHPSiIKUML4btc02CN8NMNru6rbXnXhvYKQRK
QYWfBnNzptuipUyoo1q6uTq65m9uxTpq+iOWSitbemLy6+2vF+x3S158LuSN
Lc4wkyL3B4mJ1Z/3XVvJiT7rn+GVUp5T3d7L5XOHhcN3lZX6oVaEq95WF1wU
W9PA0PDvkwEGl8KYbsg0BMZf++uFs/VZJhaRTLdl+gM6aqlZBMiYc/6qmfND
VzVGL0lGLQV4gvbeIejZQrJqrKOIFDlTi8hPSbPKsXpp7Jbcd2eDtl2JPx+Y
5ZFUllB0u6q1lzft1tKhW353pyuMAmnlLUy3RUuZQEeRdTqwjnpogd6mvZcH
j49bYulRz5t6F0Jf3+xEbAgaE2FX8N+PD3qttY65EJjtn1aVUdFKhFrxUObg
aCi7StFWfUOChcssvz8brNEfhRnii+Ak/3gOn2fqkfsWfnMqkOm2TH+gn1nB
jnrE0OKUTzppTSmDySAK8EaG3nyheJjchoN7HiZ9A8OEWWXHAK+6rTe35k5Y
Tq19TOFxr5urLaM/P+r76vorE+ol98Sy+MLG8qZu6OjUbLx8rxC1lpITogmI
OpVHfOFsxOQ3MN0WLWVCHdVG6qg3tjgz2EiM9gCdFYilxOImx7ii/a7J358N
enmdw+OjmYNEzcrfbnT86oT/GqvrJ7zTHGOLonLrihq7erh8lC04/P/sXQd4
HNXVjW0MBhsbY1ogoQUChFACCX8ISSChhwTLTdVy771X3LvVe++9996b1Zsl
q9hWs5plFauttmnX/5kZWwhbZbXtjdZ7vv34jKSdufPmvXvPfe8WnpApgcW7
lzAIuyOk97LwwZWnLzJaZS6f5npiWlPRH7FopM893Psz+isPA/p5AlDi70+o
Db38gckcXVA7dYHhRzvVPUllAtXihKFGgyLBvUYn98p3C/vp9nBt3RymGsM2
h6TKxs7c6pb44vrArGrnxDLTiMKTftl7XFLXWsVpXgz/5ljAn3d7wA18Ws8C
ZGn66Hxpo028fPnSEOBT4imY9D3Qudq27qzKpvC8627J5WzLNxwOOggtmCrl
oS7rNwok5VEb1DxKjZEhopswQue4JJWf8steYxn35RF/eHaz6SpYM+mEQXw+
2OE2/0zIKotYaLzDnhnnAnMsoopcksr8s6pgd9LKGwuutUbm10C5we/r4VCF
Giby4XUzn37e7X5eVx/vVs9AS1d/U0df/a0eiFfV1HnlRvvl+vay+vbyho6K
G534ybXWLvwK2gx/AwrX3NnX0tXXdptzq5sD4ofrdHPu1ovo41IkEPqEQ/PA
ISp4HxuELwy1LxKJWV61C+75kovh//7Jj7QgKgWGt2MaZFU2M/V2GO9gaJOE
4QMCev+B2YJgPkMTifkwv707o4bNq6GpNcwLmGTMn/Fo7qNGWEoDw6gRlhuW
c1c/t+FWb1lDe2ZFc3RhrV9mlUP8ZaPQ/OM+WTuckuGmwRH412Hf97e7Qsn8
ar7BVA0qFQ7a47HFVAEBJsAbBGmWFpW5PFuHKlM5V8/irU2On+73Allaahy5
xT5RQXxpOPCweEZoD6iUpNIG84jC3c4p88+GvLPZiSFvr693wEpcbx2viLvL
BVTpMOMoEE6oa9KysBQS8qg31qt5lBoTABTmzducgms3Q3OuW0UX73dL0zII
/8tuj9+stoXqgE67W5mBLs4wU/NufQaoQajExxYZ/2a1ze83OuLz5gaH4Z83
fvn53fq7n5fX2P56uc28pZa4MtY7rsN8oFSHf2Ysvv8nQ3/JfKCKqQ/truKP
n9G3gpb7YLsrdO9XR/3BA/WMouDebndIPuieftLvkmFoPp4O6sU3szI893p8
SX1WRVNRTVtVUxeIWUcvd4iJMYVSmfpdDBnj0lW8hgwoU6B+aGvurqFUzNuB
DLpGkX8/4K2Yy7MXP29O3mU4w+jNPWJzd9NDIGSOhAZ49KkQczBEnw0xb/Nn
9k5Td1hJ8PYbt3pBziPyazCNYcHBATIrmlLKbsQX10cX1ITlXgvIqvbJqHRP
vuKcWGYXV2IZVWQSXmAQkoePaUShZVSxXVwpppN7yhWf9Eq4/2G518EiMK9S
y27gUnlXW4tr28AuMMFqb97GHGu93T/E+bvveR+9A0NTjpp1zMRjHAHaF7g3
Ce85BXdnI+0dDDkID364w4fl7nmZkLnaz+MzfIjoUWIEg4QdvQNwW4pq2zAg
GAqvtArr6OLzQbnwqrbYJcJS/+908N8P+Pxhi/OvV9o8uujulhG9bBleRNWi
pKiRNkONzKFJnltuhVUPEgUlsMo8ZqdTynHfLAypY8JlOGhxxXWXKpvLb3Q0
dvQqiCaNAcwrDAI8xLMBOQvPhb6wwhpE7t9H/PCwZhEFGAH4dMqXSgrgRW+y
TcArMIsoJC0LSzEuj2rt6gePen2dA0Eh1VAlCEViaH6YgCs3OnKvtsBHg7Hw
Tq+ABdlgE//IQiOomo22CSvNY1eYxSw3jcZnmcndj75JFPQtPnrGkXpGkTpG
EdqG1GepSdQy0+hV5rFrLOPg2W2yTdxqn7jDMWm3S8o+1zRwnp88M455Z53w
u3TMJ+uIV+Yhj3RQOziGOxyTtzkkbrZL2Ggbj+/iprgLrq9tEAGH9+tj/n/d
5/XuVpff/kz/7jJApjzXzGEkEB84wkP0jKFkc3TNf7PK9q1NTh/vcv/8sM/3
JwIXXwhbbhYNvbTHJfWod+b5wFwYUDy7R8qVwEvV0QW1qeU3MCywlTWt3S1d
fb8wkb+0j/e2yH7mZsMM4i86Nv680UFzBlxK3zT6L3s879vlUNAWx/ADVga/
OGAVDbGa4R+qGv/QNs7QZzjhGX7QM9ysD9n0IcLD2HHMuqaOPphyjC0YfmZl
M+ZeVEFNUPZVcBvXpHLbuBJYClj2E76XDnqk73JKpudhjI5hpMbZkG+PBf7z
kA98gfe2ueKFvrbO/qVVNs8ts5qtbQbKjXnLnBYx7x08Cp8hJg8mMIOeHo/f
+zCJG9SeybAP/RMT5nx8aEZR3x1i/g8Qfua++Ms5OmbP6lvBAXl9nf3bm5zf
3+768S6Pv+7z/OyA9xeHfeEFfHc88H9nghecDV1yIRwLB0sGjwanAIsOlh0L
YY9r6n73tMPUSsk86XvpTEDOheBco9B8OAsYE3gNmK5YSntcUrY5JG20SVht
EYtFB0K+6HwoKNC3xwP/9ZPfPw76fLLH48MdbqBD8HSwcF5YbjVX1wIPNXSa
9osto3s94GbTnU2wyl5ZY/fn3R5fH/XXMojAWt7nlnYmINsiqsgtuTwk51pi
aX3etdbq5i4YJmZbGCKBdK22kE8wgFyACQ8yGVlQA32FJ/rxTPC5oJy44vq2
bg5p0aQBU8oD8/C0fzZpWViKsXkU0HabM0XD4NW19qQkVOMhAUxkQFYVa1s8
iMRUeDY0YV1bDxhgwfXW9PJGOLwh2VfhWUNmi8gimBuwNdgjWBmYmEXnw747
EfjZfm8YtVfW2s1bajFn2F7c/UxMc8huDmNidBUafOWF5dYvr7F7c6PjH7e6
fLTLHezu80M+sDX/PR288FwYWN8y06g1lrGgZzCIe11TYQ1P+GbBFDIbHVbR
xfZxpa5JZd7plf6ZVX6ZVd8cD4ALn1p2I6uyOe9qa0ndLTwUOEZDew/I2/1b
HAM/b3EM32q4/1CV3pxh9mcY3nKrZ+DmbU5LZx8IDK5c29aNW8AIVtLHrPDH
S2pvFdW05V+/mXu1Nae6BcJkVDRBquTLDbCY8cV1sYW1oDoR+TUg2yA8/lnV
IJyO8Zcto4qMwwrOBeaCGIMSb3dMgs3FmGteDIdN/+qIP4Yd3PWdLc6vrLUH
28E4D/Gc4XuVM35JbJgdD/o86O6+x9CpEGPl8RJfXmP75gZHsOs/7XT7FC/i
sO83xwJ+OBUM4o0XoW8apU9H7OADR+CAexroxyn/7HNB4CQF5hGFNjElmC1g
BZ6pFXgR4AYRedfxCc6+iv/FXAKjc4i/jD8DqaM4TGDuKb/sI96ZuNQup5St
Dong/KssYkGEtGi2/8PJIMyEfx72xazA3Hj3HoHBUz+tZwGZKReAnnhDjsDd
z70HvDsb6V5Us+hnnzn0uW9MtMxmDfvKbG3mUncvPkf37hCBYb6+3gFU6oMd
bv+3x/PvB7y/POI/dJr2k1fGxeA8u9gSeE8ReTVYR8W1bTWttzt6BwQTDLem
qqz7XsJrxcgraOFLAUz+DTYJGHw4aNlVLaTFkRUY5DP+2Vgs+x+OzuZSYHwe
1a3mUWooAwKhyDmxDLbMP6uKtCwKAVO2q72H09DeW9nYWVRzE5whvqQ+LPea
T0Ylnt0yqhj25YTvpb2uaZvtEleaxyy5GP6fk4H//skPlghOOkjUmxspE/mM
vuUvjaPZEDcbOi2dNcwU3rfRAfIAUoF1fd/55tCZJrPFMVeP4W+2v6f524c7
3EAI393q/PYmp99vdAINg1qAMC+ttHl+ufWz+tS2w5N0LufQ/szPuzTD9mqG
mMxox6/MCeyMYds4I27m3D3luRcDM2TWhwz6iyttwDwh9t/2e8GO/+9MiJZB
OLjWeqv47Y7JoCXHfbJAfU3DKW7jApKZVgEyE1lQk1hSj1eTf+1mWUP71eau
Gx29t7oHYOQltPLgmRgfluSJi8RivnCQqrPN4YPZtnUPtHT2N7b3wh241nIb
hLa8AWy2rZCmsjD6GfRBZEJJfVxRXXRBbXjedXxiCmvxk9TyRhBd/FlxDXW2
WN3cWXuzG4MDqtzZSyWScDFAyu1aAhMPTwFzjD3JpxgHkF6QWPgFpGWRDzB/
QOmxTuEekpaFpZCQR7282o6UhGo8JMBqNY0oVGfXSgjYxwG+sIfDa+8daO7s
r2/rgcUvv9EB1x6WDvYuld4uiyqoDaE3OjxTK1ySyu3jSq2iiw1C8/5xyAeU
46h31kH39N3OKVvsE9dbx60wi9Ezilx8Iex/Z4K/PR7w+WHfT/d5MWc0YE0v
rbIBcXpjPRW39s4W5z9uc/lgh+vHu9w/2eP5131eYHr4+3/95PfVUf9vjwd+
fzLof6eDNc6GLDwXuuRCmJZBhI5RhL5J1PJfHr/ivtsdk3Y5Jw+dwB72zDjq
nQkyedLv0ukAahvnQnCeYUi+SVi+WUSBZVSRQ3ypR+oVPBHse2xxbWrZjezq
Fjx1RWMHzHpzV19XHxcjQ6q30R06TxxDAZoXlnudlAwPCaA0MCWmLTBiSdIE
LU/xvKWWEfk1pGWRGxgPF36QrpG6JNrIGJdH3eoZUPd6VkMJgGt5yi+bJV68
aoMJeJi31IK0IKoJqlXxRRVsVcxCwMQ7JZRNW2DIkuK9t/t5cChINftTEJiI
i0cWGv3nZBBpWViKcXlURy93ynyDl1bakJJQjYcEXL5wr2vqk9pmpXW3SMui
4gBlPead+ZSuuUDdwF0BGOALt9gnzlhiciEoj7QsKg5MYO/0SqoD7GZn0rJQ
CXohOVfnLbWsU60+dHiu2KI6kNVP93mRloWlGJdHdfZRPOpFNY9SQ8GA9Vlv
Ezdbx6yurZu0LCoO8KizATlzdMwnRdr1pAOG94TvpccWG+9xSSUti4oDJj44
+ypLTkw4POE66/gNLK4EJR0GReLMyiZ1m90xICGP+rWaR6mhYFCtsgwjYNwx
5UjLouKAoTcMzcdQt/dOykRsloMJ2pm+yEjfJIq0LCoO8KiYorpfzTd4Stec
eOXbbg7v3a0u/ipX9FskFpfW3cIgP7fMivQYsxQS8qgXVliTklCNhwT9XMG3
xwPm6loI1YdNCgYMvUVU0Wwds8aOSdyGnrUQDIp8M6gWe9+qW+wpGIMicWr5
DZj4ObrmcMQISiIWi682dz2pbVZSK2VYgpimhUzfZHg6Ss58HAMgqHVtPdQg
65hDS5MWh40Yl0d19fEoIrrcipSEajwk6OPyP93n9coadWaowgFdbRdXOlvb
rKZVfYQqfwhFovji+qkahn/c6kJaFhWHSCTOu9rKmPj2HpKbq6BAUQW1T+tZ
9POEE/oi0zgG2q+lqy8i77p9XOkpv0vGYQUpl2+IWEOl2nsGMMizdcxbb6t3
sEfAuDzqdj/Fo57VtyQloRoPCXoH+G9vclJ3d1UCBEKRW3I5fOcrjR2kZVFB
wPwV1dyE2oRVZXWfxckPkVhc1tBOm3izhvZegpLANwEF+uveCURiC+jGMZcq
my8E5X5zLOApXfMPd7gtPh+20yl5uVk0/re6uUtxAk8IoAHwC9Q72KNBEh6F
AVTzKDUUjW4O7/nlVl8d8SctiOoDCtwnoxI8qri2jbQsKghQpxvtvVNo//2m
2n9XJMR0k3TwKEzm6iaSrIMnGDQOy5ewMgAcme5+XmBWtebF8HlLLVeYxXil
VTZ3/kxReji8P25zSSm7oTB5JwZI+4Sm6Wxts9qb6h3sESAJj5q2wPCZpWoe
pYZi0dXHnb7QaPHFcNKCqD6YLKdZWmYqU3KZbYBTwJRYL7+h3vFTIMR37rR0
9TE8iqxTwKU71OgYjlOpki8chEn1TK3476ngl1baGIbmNXXev8MDcljX1v20
ngV7SAvm81N6FhRZZc0WGaswbp/iFrpP8Wvr1H1h1FAg4MLX3+p5dJHxGstY
0rKoPsCjIgtqZmmZppU3kpZFNUEfUjtjhFNZs6WgqgAtmaJhAKfgUlUzQTEG
+MK9LqmbbEftnCIQiuAqOsRf/uqo/7tbnG1iSkZLTObwBIc8MrQNWdQxsIc+
LKAiAdR+wUgYh0eJxTWtt6dqGH6w3Y2gkGqoPERi8eX6W48tNt7trC65o3AM
ikQJJfUztUzjS+pJy6Ka6OMK/n3E7wlN06Dsq6RlUXF0c3hzdMxBWZMuNxAU
g8MTrreOP+Ce/uCvxDSvdksu/+Kw76f7vVyTy7mCUWPRB0Xi9PLGeUstsipJ
0sL70MPh/3a1LZ2NqI4EGAFj8yjGuk1bYPjZAXUhUzUUCKrUW0XzjMXGJ/0u
kZZF9cHoavCoSBXqAsYqcHgCHcOIx5eY2MeXkpZFxQET/9JKW0zmqIJagmL0
U+XvIs8G5Dz4qwG+cJtD0m9W2XqmVjz42+EQUw1EBv53OviYT5ZixJQSPQP8
NzY4gEcVXG8lLcvPEImoHtxsqJMzNo+Cvs2tbn1kodF3J9SFUNRQIKh6eoW1
sDumEYWkZVF9UOv6astMTdNg9W6JYsCYzhmLTc4GjmBY1ZAjegf4b21yekLT
NJBoAcw+ruD7E0GWUcUP/goS/mmne7IE22XdHN52h+SF50LZUzyKAR7hD5ud
Z2mZZVexJaKSKxAWXr/pEF+aVUm+H+u4PCql7AZ41KLzYQSFVEPlIRgU+WVW
qVu7Kgcisbik7hZMj3d6JWlZVBNM0+1HFxnvdEohLYuKAyb+410eT2iaeKRc
ISvGp/u93JLLpb5CP09wISj3tXX2lU2dchRMLsDTfbjDbZaWafoVVkRUYn3Z
xJY8q295MTjvcn07aXHG4VHCQVF0Ye30RUbLTKMJCqmGyoMvHHRKuAzL7p9V
RVoW1Qd4VEVjJ0yPS5L0al+NMYD5bBVdPH2hka7ROAlcasiIPq7g88M+jy8x
sYsleYTaw+G/vdkpJOeadF+HqQ3Krp631JKdIYt9A/xP9ngSD0JjAPVV1dT5
5gZHmAzSstzFuDwq8FI1vKox0hDUUEN2wO6YhBfM1DKNLaojLYvqQywW197s
humxjS0hLYtqgtlfnbbA6N9H/EjLcodth0TyRT91oBaIyWxGNCTgdj/vuWVW
CaVSsqCO3gFMFYvIIvlKJS+ArH52wBv6Oa64jrQs1BtfYxn37fEATGyW9KkZ
m0cJhCKPlCvqxuVqKBo8weBJv0vwdzIryB92qzxgVps7+2B6zCPV0WgKwaBI
lFjSMFXD8J3NzqQlERfWqHKOFYcnWHwhbMZik3NEQ9HaujmztM1yr0oThg3t
dyYg+6uj/jy6s97QB94lPrDCxJkweNS/fvIFj4omGsx/h4lJqL2FoYbHnXu1
5YdTEhU+VTTG5lFMHy7wqKPemQSFVEPlwRUID3qkP6ltVlhzk7QsDwU6erng
UQYheaQFUU0wEWi/mm/wlK452XwiOOx6xlEwygRlUCg4POEy0yjaSBHLcaOa
FLdQTYorG6UJbeLSXqSuUeTF4DzD0Lxzgbnng3JNwwttYkqcE8u80yuzq5q7
+rkDsMeECBVm0XfHA2dqmoZKe3ApL2AmG4bmv7nRESbDOKzgvW2uZOVhMC6P
Mg0vmLHEBK+VoJBqqDy4fOEOx2QoogqpFJEaE8Xtfqrg9mn/bNKCqCaYHb8p
VEsy85aufoKSUPHP+7zaulW2PQ3YxQabeLKHJiKRuOBa62wds+YHipNLCLAC
q+jiTbYJ663jt9gnbrZLXG0RC2a14FzoN8cCntazeFbfcotdYkZFk4AELe/n
Cf53JphKirxEMinyDj2fvz0e8JNXBo8OBXljgwMbWliOzaPA/cCNqf3/CJae
26qhGoAyXGcVD0VUf6uHtCwPBbo5vBdWWB9R7zMrDD0c3nP6VAnoIqLHahDj
d+sdcqtZVPZHvoALtss55dFFxhttiAXxDorEyWU35uiY9w0oJFyHLxTlX7u5
0yl53lLLsFwCO0IcnmDhuTDwKB+iGb4isbi8oWOWlilGG3wyIKsafkorUT/l
rmBj8iiuYPCodyZ4lIO6mpwaigSHJ9QzjlL3dVUaejj819c57HNNIy2IyqJv
gP/n3R506gTJkBL4738/4B2We52gDAoFjNRhzwyySeXCQVFYzrV5Cu5CS4dR
5Sy+QKAGEXiUlkEE8eISVBpsTPFzy6y4AuqIM6uymbifwmAcHsUX7nFJAQv1
ShunEKsaasgCyt85H6o4h06N+9AzwP/DFudtDkmkBVFZ9PME88+GwPS4y1BT
SA5icKmdBOekMoIyKBQUu/DPnr7QaAm5FucCocgz9crbm50Uepc+rgDmmMjx
JfzcpSZRj2uaOCeSnEgwE0uNo1aZUz1YqaZ1N2/PIu2nMBibRw3whRttE9R1
j9VQNKDtvz0W+JSuOfHMlIcEvQP8j3a6r7eOIy2IyoJSnjYJM6hg/nyCYsAC
rrOKNw4rICiDQsEXDuLpHllo9P1JYk03IINtbMnf9nsr7hbCQVFEXs0z+pYF
1wlk4mAyr7KIoYp0xZE8mWrvGXhuuZXHvfY63f28p5dakPVTGIzNo7AGl5tG
z9QyjWEB5VNDhQFX6x8HfV5caUNakIcFfQP8zw54q+vrKg48weAJ30t06+0U
gmJw+cID7ulHvFQ2EA4cxjqmeNoCw38e8iElA51ElvffU8EKur5YLL7R3vv3
Az6kEmzBo9Zbx4NHWUWP0PhGORAMigKzqufqWdS03mZ+wlRZJ+unMBiPRwmW
XAybpWWaWnaDoJBqqDyY5g5vbVLsxrgaQwBx/fKov9bFCNKCqCwY+z59oZGO
IclB5gqEJ/0u7XFJISiDQiEQilySyqYuMPxolzspGTDIx7yzlplGKeLiIrG4
pat/yYUwXWNitfHBo7bYJZItdgoZ4JJ8e/znXcd+ruA/J4PI+ikMxuZRVNWI
E4FSlxdTQw0JAR719ianP+/2IC3IwwIs7R9OBf14RlEetBpUp49LV6ctMPzs
gAKPe8YFly887JmBD0EZFArBoMg3s3KKhuGbGxxIyQATv9Mpeau9/KMNQaIa
bvVonA3VNozo7BuQ+/UlBJd6wJQZRCvO3e7n/Wmn23ABODzhSvMYLUNicXFD
GJtHwWn95yGfJ7XNyho6CAqphsqjh8P7zSqbLw77khbkYUE/lcgc+s0xf9KC
qCyYfKIpGga/XW1LsMIN48Wf8rtETAIFA3w1PPf6lPkGLyy3JiUDDPpqi9gj
XnImq5hC11tv//dUsJ5xJFiEfC8+IYBH7XVNI1g0HkORfqURVCS7qmW4VAfc
0wie5w5hbB7FBKPO1ja7fu9EUg01FIHuft5sHTOWFPl/GMDhCXQMI/5+kLwK
UlUw+USw73N0zDv7uKTEoE5k7BMvBKts4XqhSBRfUs+UjidY7nvR+VCjUHkG
6ggGRRWNnd8dD1xhFkM8i5krEB7yTJ+x2PgkIULOlLL8/cZfBH5wBYPHfLI+
JneeO4RxedTvNzpSZVq7pCzTqoYakgCGZvpCIy0D8ju0DwngQUM/qw9SFQp4
B09ompKt0o8XvcYyjmwPX4UC3CmzoulXNF/t4fCJyID7vr/dNSBLbrW+wX5j
Cmv/ftB7tUUM/i2vy0oN0JjjPlmPLTYmVbkXVOT7E0G7nJLvk+psQA4bomrH
5lE9dNFjgvNTjYcBYvGdxo6+6YuMVprHkJblYQGzTfG79cRCSu7QzVO4fCGR
PhfKQS9VpMuFbJ4OXXIn0iamhJQAigbVk+X6TfAouoovgdLWlPpq752lbZZ/
TQ4VCcQ0KwPvnatnccL3kogFTU/u0IzltH82eNQBdwKVe8VicXVz10xN0/tq
uUMqo9B8NmR5j82j4E/N1DR5StdcIFTZNpdqEAeWybWWrkcXGW+2TSQty8MC
rmDwiFcmljZfSIzGMKlkvhlVpARQNPq5gm+OBTyhaUrwGSHD4gthiiifKBwU
cVmwVQKmcaWxg+ZRZnVtBLpKDYrEaVcasZRkjwMHJ+zo5e50SnlumZVvBskO
LPcBjOVCcC6pIh7QUU4JZfOWWrb3DPzy54OWUUUYeeJkc2we1dHHnTLf4Ncr
iMXvqfEwAJqwpLYNi3SvK7FOow8b6OqF+WS7U8EQxxXVfX0sQFWLr1KHp+ZU
9ULzSGL9Sfu4gv+eCvJMlWdDCjg+vQP8oEtXj7KgPyNsKOgTeNST2mZXbkiZ
DyWmd2g5PIFo4lNRIBS5J195d6uLdLceAtyKwpqbC8+Hfn00gEixzTHAEw4a
heXD1d3qQMDVZc6mNR+oVw9+5ZhweY6uOV6c8qUajjF4FOZnw63eKRqGv9/k
SFZINVQbMKPZVS3gUce8s0jL8rAAyt85sQymp5Jc6M4duj3Ne9tc2WY15AVY
xoMe6ZjYhzzSScnQx+V/ecTfP1NuoTs8weC1ltsbbOKf0jXf7cwKx6etmzOF
5lEF16Wsz0NVh/DI0DWKLK5pmyiVYs68llyUvu2dmO4bbhNb8rv1DntdUolH
lT8IuF3mEUXgUZtsCTSD7urjvr7e4cGzaSgxj5Qrc3TMO3qJVYRgMAaPEonF
lU2dUxcYfqwORlVDkRgUiZIvN8xYYnI+KJe0LA8LhIOi4Jyrs7TMLlU1ExSj
nyfQNoxwJ9r8VHGA9TGLKCQb+HevT/G18f90PIBgUOY+puTVtfZvbHAIvCQ3
biYj6Hh+E1ni0MTiO623+w+4pX+00624tm1CUUkcnmCVRcwhT+mpcj9XsMEm
4ZM9nhH5NVJfRKGgispGl4BHrbFUdicpoUgUV1wHslRad+u+XwkGRQFZ1bN1
zJo6COfBjcWjROKimrZpCwzVVX3UUChg06MKaqjjjwhixx8PGwZF4pSyGzO1
TKMLSLZ84vKFBz0yjvuq5j4k9LxPetW0BUZfHSVWp6tvgA8FLnuDVK5AWFx7
S9c48ild851OKU2dLMrg7uHwX1lrP1PTNFQGuigWixvb+w55ZHx2wKuisVMs
MZXC3f9x0Mcp4bJ094WdrWjsOBuQw8JtqCGAR9nHlcIj0DdRdicpLp0qOGKx
eqwvf9bzKDqftPmRhUaKaxukhhp3aB4F3xY8yp5oE8yHClRMWt0tePEeRPeC
6MZk+XDGCcqgODAbrVM1DN/a5EQqAqyPKwCL88+UPtAdhuB2P88sovCFFdZ4
EPZsQw0BXPHPuz0wmd1SZG1ZO8AX7nBM/vpYwI12iULWsY7Kb3TAlJfUtsl4
azZDIBS5JpURaXLUO8D/6qgf+O0IUg2KPFMr5uiY3+pm77keVd+suB5Dp22g
bsKlBgW4ToMKSMRljrmhBj1TJ9n5DpxWkEDIjxWNf2BwMESSe7IEARlvtPeC
u1qQC4G+Q/u5TollGmdDCMqgOFCpZDeoVDI6FJZMaht41LfHA33SpUz+Aq/I
vdqqeTGCioZySW3pJJaVMAb68YwnAuTV/e1eVHMEhm7cP6YJRvnbLChhpFBA
v3mkXnlkodGiC9KHgUkBZgWNtm3OBHmCR5Et9n5nbB41KArLvTZ9kfEqi1iy
QqpBFjB2HJ4Ac7Ww5mZSaUNLV18fl88TyK0UBq5vF1f6hKZp4CVZTx8UB7Cj
QRFFmfDg0LTQsRiQ6ubOuKI6rGWvtIrwvOup5Y2F129eb73d1s3p5vB6OHw4
U/08ATtLJHX382AcSRUoZgAlE5JzTYXLgXb2cqdqGM7WNqsh1BKCytc7HSTF
riOzDWUYmv/0Uos/bHEJzmHv2oR20jWOlGO17dv93IXnw9ZYxo5b2AEUDvZx
i70ystjwRqAqiVSUggbzy6gCj1JyR048r0P85XlLLUdkSvitbVwJnBTipUrH
4FFU/8eMKirVUQHtF9WYFMCq7erj2saWLL4Q9ptVtvCs8Zm2wPCve72MwvKh
Q+SSsU4lg0QWwumILGBjmCXEAx2qvdmddLnBNbn8tH/2Wqu4L4/6v7zadpaW
Gbyh36y2nbfUAv+YrWP2pLYZfjhLy/S55VbvbHb+234vDJ1PeiWugOuwaqcK
NO+tTU7bHZPH/1OFgWmb9dwyKynyzScFMMivrrUnGM8Pzr/WMu7CBDM4YJgy
K5s0zobM1bXY65pKsDiGJIC0m2wTYKp2OqXI5YJ0T5/uLw777nFJwQCONjVB
aUrrbmHhpyiszipuQTtuAujhjIomkIrrrd0KutcYYJpug0d9fyJQmfdlOhHr
GUeN+FtoVIvIQoL9gIYwFo+iN81IlTBVgzjgyUbk1fzzoA+404zFJuA54Akg
/7O0zR5fYkIFzp0OLrh+U3b/iC5LW4DrxxfXyUNw+UBMC9bZy7WJKfnHQR9Q
IyjMl1bafH00YKNNgkFInn9mVU51SwttYjAGsJiNHb1XbnTghwkl9cHZV0G6
zCMK11lTGeL/t8fTJLzgRnsv8SU/hD46k2upycg6Sjmga0H3YXyqmkiWX1Ac
sIj+ccBHxhBoWYA5jLm6zFTS8GDMT5jsc0G5kPm9bS7hudcVKp5cQHV/88iY
vshouZncoqBB7Itr20ClVpjHtHVzRtRyoDfHfS99ezxAXjcdAu4GkgCVAhnO
B+ZqG0S8ts4e6vedLc7RhQQSQ+jDqevTFhj9+yc/Zd63o5f78ho7x1Fi+Jno
SviwyhRpRIzBo/AeraKLCLYmVIMUBIOi9p6B3c6pYFDQTs/oW54NzIkqqAUN
4PKF+ddaLaOKwSvgAP5pp3tFo5S174aA5XAxOA8XTCptkIv8sgMiQXkahuT/
aafbs/qWR70yMyua8PhSXAoKubKx84TvpVfW2r2zxSn3aitL9l76uQKNsyHf
HVeqg/kgeukg4ShWbkXKDpjaJRfCHtc0cUqUMp9LRlAFLrKvfrDdVZKwPbj/
yWU3fjgVNFfP4oB7+q1ujhIklB20AsmlTp1Oy/PUCSN2o71HyyD8+5OBZQ3t
1H7ysN9iYFPLG19f5+CZJs8ap7gs3kJ9W49xWP7nh33htIJBrbGMBZcoqb0/
8V9pgFTgb9MWGMLzUtpNqcPEzKqn9Syut4x8Js40L/7NKlb3haHJXt6MJSYG
IfJsY60Gm8FUKvZOr/hgh9sUDapl1XLT6Mv17ff9GZzWrMomrKnpC430jCP5
srUNwkw7H5QLHqW47fEJoW+AbxCa98YGxxdX2sCXl44+3Qcx3YtZ1yjyo13u
Ey1QoyAwe+Yf7XQjLYYAc8wkvICsGArCAF+40Tae0qLBeUQEwEzD+n1Kd5ze
c4MiEebnSd9Ljy8x+XCnG2sLGY0IJsASVv6z/V5yvziWySa7hA93uFpFF7d2
wfkQCoQivNZrLbf/cdBnn5xaMDAbUN0cXmxR7UabhLm65vOWWm62S0y+zArX
EtMjoaQeI/zJHk+l3bSPKqsVv3j0yHYYjpN+2W9uIF8nfGweddKPWlbW0cVk
hVRDOYDKrb3Zvd46/lfzDR5dZPzrFdZjtJPAykosqYeBwAyxjJIp5wsz7UxA
DnhU+pVGWa4jF0BRwnGAP24TUwLLIscri6lt6oFF50M/3efJhmMsLl+4yzkF
XJEspWPe/moVTWZh+hhS0RFuxKIjmKLxITmjHiyCyiaUNnx9NADT/rBnhux9
4pQMOpS3coqG4RsbFNJ3m4pnji352z6vV9bYHfPOcksu3+eW9v2JwKXGUUKZ
U0iEIoqVwVkziyj89xG/J7XN/rLHwyKyqP4WgV6BowGOc2rZjakahh9sd1Xa
HZPLbszRMfcYPYkbnPYnz0zMbeWINAbG4FEQ8oB7+hOaJi5J8u9xqQbbAGPa
3jPw8S73KfMN4L1ud0gat+kncx7HHJrLclbFMPZZWmZZlSRra9+hfU84tnN1
LRziFVLJCl5nU2ff9ycDV5hFE9+SYrw5aKp+CfK7FQemsvp721yID4giABNs
ElYAr4QgUWRCpHaMlFCAwe/s5R71zoQ39PFuDyKxN7IDTxFbVPcrWnEpLv6Q
qp59qXrBudCPdrlvsk2AWZTxXrhgN4cXX1K/xT7xWX3Lp5daYJLEsPIV0MUk
m8Cj/rDFWTl37OcJllwMGzsREp7gPrfUP+8eoUSnkjEWj+ILdzolP6Fp6iXX
81+WYFAkYlKoSAvCFmA0tjokgkQ9t8xqDNd1OKh0lfr2RxYawYeSZYMFev64
bxZ4VE51i9QXkR0CocgvoxK8wihUgQfZdO04qicUcX+TynaJKpqtYyZhyUEF
QSwWVzd3wQLWkEhEUjSY+kJYI/+Ta+jORAE7WN5wfxwj+HN0Qe0Xh32f1rM4
6pXZ1S/P3VdlgmrQWd1M1enSMYczSFqc8cGETwRmVX911H+Wlum7W5xBdKua
ye9RjwaMcO7Vlikahr9br5AdvwcBPZlQUj/231BFU52SlRmyNRrG4FFUMqld
Isur+kgHGO6k0oZP9nhgJpOWhRWASXVNLmccOnAJyb/YxxX86yc/OLN2MpQi
Z84+Zmmb5V2Tss2o7IBmq2vr/s0qWyW0sO/o5f52ta0V6eNyuvxpBTgwwfhV
BrApf93rSSqjTaEQDorC865PW2D4f3uVF1gyLiBVR+/AIY+MxzVNIBg790Ak
B9UKtrET6mu2ttm1UWKS2QOm0fN6m3gsPY2zIXBa2b8TyzSJm6JhAMVFWpaf
wdS7+PIIsaZLQxibR622iJ2paQo9QFZI+QLPFXip+uU1dnrGkWxuaaQ0iOgN
gdfW2c9YYrLHZWJhk9AJZwNzpi80WnwhTOo63nTacjq0SuH1m9JdQXbAN19v
Hb9EKdV6B+jAJII91xjAmEbm17AhvJ/xK0+oYpc9OiOjmTFALDGWAzxhXHEd
vPin9SyO+2T1cPgSfhHrG4/D1O1XqIQTBaRp6erDIMMXy79OzBcbF0xpU8uo
4lfX2j23zErqlnzKB2xEWUM7mOoz+pakZfkZTOX5H04FkRZkLB4FIfWMo2Zq
mcYWTW5vZThgLjF7H19iom0YQbyYPEvQzeHpm0RNXWD44U63iWY6M+fmcLdn
65i3SZslzeUL97ulgUcVE+pRRXlbtW1wZpWTpiQQityTrxAvH8eYeDhKsjex
lREYEM/UK98eD2S9Xz5hDG2VEI9Du0MTISx2Jgv7o13u8eOdm4Ay8YWDWJ6Q
HF+sv9WTU90SkXc97yrruArEm61jBmuVyJraKfcBwwhVufBcKBb+Vvuk0XL5
2QlM46qmLubAgj27ZxyeYJlpNIZ0+A8Zqq9kScbkUVSgF9xVlqReyo7eAb5J
eAF0iKZBuHxTsSYvoCdNIwqwQOCcSkeYMaofbHd9QtM0SFpzDA2zxzUFPKq0
jswB0wAVr5imtBJzdJp2yfPLrZRzu9HAmPjHNU2cSSeSMF205i217JZ4b2QS
4VYPZ4oGHA2zBqIRcTAuzZ19qyxi5uia73RKHsPrgSXCkuzq48YU1lpFFe91
TZ1/JuT3Gx1hC7BIn1tmxcKKgj0D/Dc2OMiihRQKKEnb2JJn9S0/2eMxuWpK
MKAKvLfeZngUe4KKQVG0DCK077VOpsom93FTym7EFNUquVPMGDyqnyf43+lg
NmRRyQVwWE74XgKJWnQ+dNIl9ioOUKdPapvO1DQ9E5Aj3RXofcvIx5eYQFFI
dwUmAR8qGsZUuivIAnhX9W09L6ywVlo+Bd0Hp+h1ZUVsjgG8fbw4hcbVS4h+
rkDzYvjkctIlRA+HB+6B6V1UQ2a79Q5tccLzav68y+PZZVZuyeWj/ZmQziCD
JdrvnvbuVhdwv1fX2s0/G3rAPd05sSyptKG6uaufUMPlsdHHpULs2OAU3AeQ
0o7eARDXOTpUEvQkNT1Qkg3tPcy2qiTtm5UDKI0F50KXmUZDvNv9PND7F5Zb
w8TTHYKU2u5qLB7FFXx7LJA6cb5GLGpFLhDfuYPFv9s5dcZiY42zIVIfP6ke
QOBP+Wc/ssDo66P+Uu+FMnF0MMfmkVI2W8cVtjkky5j0JzUwCBeCct/d6ixQ
lp9F3TE4lw1lT2A0f73C+ifPDNKCqDJ6B/jvb3edqWWaUEJgY18spmJyzgbm
QIAfTwcX1oyqzLEMw/Ouf/GT72wd878f8DYNL6xsZG8G2X2AtfrPyUDYUFYV
dMVKz65u+fZ4wDP6lvaKKaWiHDARaAyPYk9eJ176f08Fr7aIab3NWWYSNVPT
9D8ng8D55y21lG+R+XExBo8C7fznIR9Yt8t195eznkSgix9y11jFPbbY+L+n
glrY3XBTyejhUB3WQIFkyR1jkiagwQyl3dbAFbbYJWKmXW3ukloMqUG3RwlV
5lEF87z/PqLUTlUjAib+wx1uG20SSAuiysAE++ZYwBOapv5Kzw4WCEXXW7v1
jCOf1rM4E5AzRmQLZoJlVNFsbTOs5cl4AMHhCZeaREHJKyHfVkL0DfCdE8te
WmXzyV7PtHLyFYZlRHvPAJURKUMcrNzRR6+sJRfD/m+vJwgepu5K85jnllkF
KH2hjcmj+BAP1q2axXUtxgbVjKOXu+RiONbXDyeDmjv7SEskZ0Av4jVJdxYs
Eonzr99kjrwrZHA8uXzhbueUGYtNzvhLeTJI9c6wSYAOv95K4FgH7tUra+0C
Lilp6WFOYh5isUt9DCpHQBF9ddRf82I4aUFUGUzCjiwH39IB/A0G5b1tLm9s
cBg7Jgf+1CGPDHAtNpzwSgd6Tzvp0UXG+C9pWag9wK4+LoZ0to4ZPCb2EA9Z
cLufN5UO82OPGcW8/XiXB+wXpu7ZgByY+L/s8cyuIlCEcAwexWxHY9zq2iZr
fbxuDm+9dfwjC42+OR4gly5pI4JU+gLu29LVD2cHS1UKGZhq5NSh3jGZ+pVz
BcKDHhm0Jyhl3jp04DqreGqmKT0QF2Sy4PpNUDhZmOSEQLf/Lp631HLccvFK
AIcn0LwY8S/l9nBXEPAq2RMBOxyY3tsdkyhHIyBbOXcU0Xb8uE8W1tRaq7ix
Zxrd7DUHlsg/s0o54ikCXMEg9M/0RUb6JlFkJREMUnuA8E2wxq2iVKelGnjU
9IVGmFGNCrOkE4JQJMq/dnOmJpX7YBxW8PEu96UmUYqz8mNjbB71+42OFP/s
Ygv/nBD6eYKzgblTNAxfWWOnuFKxUFkN7b1EMprp8Oxk5sxaihoOeL9fHvGH
m2wqW0QBVY3cJws86qBHunRXGOAJV5nH0oW1lb0KqBIEKVd+s0p5xeXgQ31/
IpAl7eRg4uFovLNZSb0eFAEsQMzAngF+3rVWy+gitpU2unOv/85ji4x3OaUo
4XYgk+UNHUsuhj2jbynJDlhH78AftjibhUsZ3MgSYJCNQvPhMmNxERSDwxNG
5l//cIfbmxscValeENDdz4OxgJauZ4EDyNQ8/GSPJ5jz3/Z5P7fMiux57hg8
qofDe2GFtXQ2mjiwrHzSK6fMN4BTEFWgwPmM2QU+/J+TgQKl16xgQivBo+bq
WUzUE6e6wNdRddXm6JrLWM6ascUzlpgYhUl5KADls9wsmsiOMVcgPOKdOUZL
cfkCVj7tSuMsLdOwXFbUtmUqdz2tZ8GakjATgHBQ1McVYBrDG4X1xFMsM4lm
YT0TrE3LqCIo/KWK3yrp4/I9Uq68tcnpi8N+mRKEOVHt/8ILYIYm+9kTXyhy
SiibusDwL7s9iAggpi2mcVg+VreuUaTqZZ52c3gztUzp8ynCPIpp+A7bN22B
EaYuRFJQO1TJMQaP6urnTltgCBvNnrpbEmKQjvx5aZUNRtg8okih96Jihu0T
qWKGOcquWwJ++9vVtlM1DN/b5jLR71Jlo8IL8X7/edBHRjFA574+SoXRSh3d
Bx6lbxI1W8f85m1lK3OmG6bSgszBW/a6pv5uvb3ScgPHBpOrCF+JhfRjDGD2
YvIHZlXDYGGN/22/t2lEIWvbk8HD8kqrfGSh0XfHFbhVIhKJ8RIPeqQ/pWuO
/0rYqQFKHsTjQnCu4gRTDqgmwllVUzQMX1trr/y7M8UNttglzqUDdZQvgBJA
VTrVNicVxTocWPurLWNhvN7e7ITZvsI8hqw8d0bnUVRRnVs9sNFvbXIkLePE
IKYzC7484j9jiclmu7G6RcsFsESGofkzFhsruTYdyG1Jbduv5htAP88/EzLR
rzPFwTBE54NkVaHwwl5ZYzdL2yxX2irHHJ4ABpHqMdqr7OIqfQP8zw/72igr
APhWN+eN9Y7HWJNSRFcELaUyJSeD+yyi60O2dXPMIws/P+Q7b6nFJtuEVNJN
bcaFcFAUW1QHXfr+dkVVuoAWgucIPQD3XPL+mEzvP5h+UlElcoRQJIovrmc2
2HnKdVLowW/99ngABn9Sx5iNDfCop3QtaF2h1KxqUBEOXbKMWv4C4a2egcOe
GdMXGb2+zt4quvj/9noeYkHZltF4FMx0cW0bKB98PdIyTgxMbDkk/+yA90S7
nEgBZtP+0UXGG5SbPE5ZwNhS6A2aC03YA+od4L+3jappE3kvkUdM75ZMNLwE
k7ypo5eJ0ZK6pgRdljacyK5ID4f/5kZH/yxlaL8+Lv+Ae/oz+pa5VwlklIwI
ePHQ/LJwYOWAOcIrrLl5yCPjtXX2L660gddfSaLamBSgEmOvtWKNwM4qYmsf
a9kpoey1dXY6RhETSpcAATjtn/3dCZnSTFiCoUFW8rY2pqVnagXmJHgUwTqr
eHysZbxQUA58BvhCufdGgWF9ZqklVeVPuRu/3f38ZabUeX3+tZvHfDLhs8Pa
LjwfCn8Kg/+vn/x2O6coU54RMRqPgj1Nv9L0yEKjHye+10EQd2PL5xs8u8xK
OfmPoB72caUYqPu6/CgaAzzhSvMY6I1ZWqZJE2/cc7ufB8cNBnSoVRaW3kGP
9IJrE7OnVH+9yqYpGgavrrWbqAxDAI9adD4UPApLVeqLSIeO3gHlNOqFinNL
LqdSS9hUJ3BQJEooqQedjiuqIy3LyMD66u7nReRdx2yfrW32+SFfl8RyyVvr
sgFUT42btxlfQ76eAlPXBXZk3lJL44lHJzIxCfA65SgSKWCQr9ODjCWmHIJN
dSHp5f7klQlFus81Vckt7/G8AqEIbxDeWVcfF2rcJ73yTEDOGstYrJTdLilY
MvK9I12Wn+JRFY3K6zohFImSShv+tNP9jQ0Oc/UsvjzqP3WB4Uc73WtvUjUE
+rnUqcomW/Ll70bjUcyW7/RFRstNo0nLKClAyDGXmIJISitniskM+zhtgdGX
yi2rCCL0+nqHX9GB9BM1K8yhLe27mTXcurulDy9mnXW8Z+qVCV0KY+6bIWvs
B9ivxtkQWBl41lJfRApQurf1NjRDWYNiK80yfZDhSekZRyr0RhMFU/bhCU1T
H4kPg5QDkVjMFQyC5drFlX5zzB8qFD5pTOFkTYDCaoWKAA+8Jr/zUyaAYf6Z
EFiZhPE6Do8Iuq1GyGl/aaoxwEDAiMPxwQfXgb2T4iLyBTjqVA3DWVpml6oU
XkcUJMosopA5y3NRYicaOD64NfQkJhLszmbbxC8O+z6jT9EbrJG/7PFYbhYN
YgzB/ijvdgmwMr9eaa387l2YacmXG7Iqm+GwP7/c+rlhOyT99EEGG3KfR+NR
dGxkxaOLjHc4KrVPjSzo6ue+uNJmxmLjfW5pWONY3Jhy8GexyPE4WOmKCJjH
lb3TK6k8kT2ecr/4aBgUiS9VNoMITV9otPjihHPN8PXcqy1Moh9GifkhVcjO
MWmiXRWYIlSYJ1tkCEXDcvjxdAjcugG+Un06qlFvU6cSPCxoePhN0EJsi4Vm
2j2ARxmE5JGW5S6wTjEfwGyP+2S9vcnpWX3Lw54ZJbXETkzkAtig3662naVt
liO/I11wM3DLH8+ESH2eDnP88S73iTakg/bAF2OLajfZJcCoPb/cav7ZECXs
6I4LDDL0/0wt02hFJmgzYHiUVXTx5XplNPtgWGtXHzextOFMQM5/TgThMect
tVh8IeyMf7ZvRhW8oaG0eg5PcC4o9+U1cq7lguF9aZWNErzOBwG73dzZ97f9
3vOWWg7PdObQhzK6RuSd09F4FFMt8LHFxtBmpGWUCCBJeddaqQRDXXOM7XaH
5IMe6cd9L4EYOCWUBWRVwWWrbOyE99THFWBOYiHIpdQMnSdSPUXD8M2NygvI
p7PtCkCE6OpPEy78glUZmV8D3+3tzU5DP8SY7HNN2++WNqFLMUcDdFMY6Q0x
/NkfTgY9pWuu5Cw28Cj4Voqu2I/5dsgjA5Q1UFkl0yeEngH+O5udN7Ngbxz+
DnR1fEk9HGpQjo92uVvHFKtGI6e+Af5f9njA9slrSw0awDHhMsh5uQxGDXYZ
0zKmsE7yr4DigjJpG0Rg1Xyyx9MoNN8qukjbMELjbAjxyl1Uk6Odbk9omnik
TGxTnbUYok9Q17tdUv6wxXmOjjnWxQH3dPxkxJbHsGv4Fd6OaYScC4Jhbb68
xg5XVr5TgxHAHIOjfV89NKolmV3CwvNKjagZEaPxKLyO80E5bGv7ODaYZmFQ
VhB7xmJjkMBHFxlPX2T0yEIj8CtQnSka1CnY54d911jGQgPkXm3BV7gCmULy
qAPQ3OugNM/oW0qoRzC2+Eh9xzv3ArPp4CizrIqmiX4dBss5sYyuZO4/9EOM
w1HvzIke4zI1rJ7QNPXLkD5Um+qIfTwQPErJqhg8CmZIoX394DG5JZdjfI6x
1R9hYgwIBhszhTQ7+7juKVfmnw3BNFhyMTwk5xopeRQBuqFqEKaBV6p84g2w
Uopr2lLLG6V2PTDsFY3UZmxpnUTl46DoOnoHdjunzNIy/eKw71D4DZSJa3KZ
8o97HgRVgOVYAFxLi0jF1rpRNDDUXJo+RRVQ9OndrS5zdS2+OxFoGV009vYX
dHhCST3o1goz+UfjgEe9upbiUcXK5VFw9Pa6pmHWHfG6P80Zo7THOfU7opVX
GYzGo/BGQHof1zRxSrxMWkZJIaapVGRBjXFY/knfS/vd07Y5JOmbRP33VPCn
+zzf2OAwW8cMxAPabMZiE4ZcfbTT/aB7ekxRLfws6Yw45nxMUR2TbytJnzum
C8OFoFymcqZIJJaCxWGJPb/cmskAkkKR0iQ5FwxzhVnM8B+eCcj56qj/GF98
ELf7eS+vtsWo5lRLf2ABBfjlUX8YUCUXKmN4lHyjVoajj8t3iL/8lK7F9ycC
h85P2QZM2s12Ca+vcxArvUwclhxefVVTp0FI3l/2eMAT2eeaxp5kRjmCygox
i2GViR8UiRJLGqC12nvGLzYCxw1a7vNDPs/qW9rFlQyfKVCbOVdblBOVNDao
8inGkcovQSMvDKNPtXtcUt/b5jpXz+K/p4OtY4rHjZzH4gXfgMv2+np7XaNI
RSQ+4/pvrHcAjyq4flPuFx8NeKcm4QWPLTYesd0PbNbZgJzP9nspTZ7RMBqP
olvHxoNyBF5SdnlJBQEzrbWrP7uqxTu98pR/9g8ng0CrntA0AZ2YvtAIjnBq
+Q3uxLeJBqmEgnomGae9Z/x8W6qAcFgB1I51TAlsK5zB6ILaCdVCpxRgaQMV
HCVtFgBTDRKTE1Rz6IeYkzBnw0/6xgVzlsrEukvXK5kBnb5KlQOS+grSAVOi
9mY3XlyJZC655BCKRNCHR70zMcF+PB3MtrCo4aBLceZRbdwlmL1yASYwZmBn
L9c7vWKZafST9BGeVXQxe/qfyh2U40yvuOO+bNmWFAhFHilXfrt6nCga0CTM
ZCjMWVqmC8+HPnimw2R2U+b1mvLM64hgYgxY0qpYcoCU9nD4WA7RhbX7XO/S
px/PhNjGlkioN7CEr7feXmcdD1d0h2OygjIHewf4b210Gp7irWjAVgZkVVHF
lw54t3SOcL6POeySVK7MiJrRMBqPAg/UMYycqWUaX1xHWkaFQCQW19/qAYEH
FQGrAZWCljvinYn5PKFwdEqNlDcyuW+1khXMB2347IA3LCw8Oy2DcJBV34wq
yW/K7GgxwVG2sdLUw6cbfl2Cwtk4LCoGk9Y8soiqYicxmcRXHBIuP7LQaIFs
NR8wIP885PP8citZLiIdoBw+2umOaTChb4H3jrZ7CQaFa8YV12kZRMzWNoNa
6+exdCeKAZMoAfWYr3g7SBUx4PASS+r3u6W9vcnp1bV2B93T5VVIEwuI2d2F
dsUchlWFEuvnyTMYUmpQazYoh0rHsFd4ZWAJgXdhEVX06b6xfHkMYEZF08Jz
oVRdhVECPDDgUQU1VPvaDsLFPO+2Kl5oxLas2LEBdfGHLc4vrbIFfcJQO8Rf
lrynDKwGFpR9XOnvNzq+s9k5KFuBmx69dCAlbGVutTJ4FNZyYU3by2tsn1tu
NdoOGOZefHH9qyQq2N+H0XgUE/eCQcsmvVuraFDJa9UtOoYR1N7UQqN/HPSp
ae2e0Nezq1qYuiUSxnzi7Qddugr6gTtSjbcWGs3RMa+5KelN6ViLYOaOhTXS
2D6oUJuYEqoQ+tng4T+0iyulKyFI2j6JCvOzTZixxOTcxAuBDkcfl//ZAa+X
VtnIchHpwOy7bneYQFIqBsorrSL3agtjo7m0meYKhHgvnX1cMCgdo0hw8meX
WRmFStlwUJnABM640jRT0zRIkTvPGLSuPq5jwuUvj/g/o2+5xS4xurBGxrQC
MU0CqRI6A3xYk6aO3vxrrZH5NU6JZWcDcvBOtQ0jFp0P22AdjxeRUdEor2eR
AsziwkqH30RQjOHg00GSo7Woxm/bewYOeWTM0jL9109+aeWjjh4ezSyi8Oml
FhzS/gLTK/CRBUbfHJtMlUUhtmfqldDcazUT7LcCnVNW377cNBoEDI5Jq4Iz
MsCj/rjVhaYEyjh5p/LHHZKgKyLuVYoeEWL6L5Ugz9gYjUfBtH2634viBqSj
B5UDKloyqfz1dQ6MOyP5nsygiKpuQe1HUWE2koYrM5HVjy8xMQkrWHwhDGZ3
j0uqSDKXGfoNBGyKhiGklfB29wFELiTn6tQFhn/a6TZ0S2afn96XkNTd6KE3
c6gsJNmqOMIO/t9eTyJuBZSYbWzJJ3s8JRx8ulBAP9YFnnrBudA1FnHQYBeC
cn/yzAC5fXGlNd4p1v4x76xaiYkxWYjFdxpu9T6haWoaoaiMEkwtn/RKWLfv
TgR6plV09csUvAHih+WJFdTc2eeXWbXDMfmz/V6/XW37uKYJXgpeDXyBp/Us
MLfnnw1ZYxn76T4v/OTjXR4yJnfIAqb727QFRuAkCr0RY1Yk2XyjK79VvbDc
+sErUAXSE8v+tMPtuWVW1jHFY2+VY/GCr7Ih1pc55ZmqYfjBDjfSsigWeL+3
+3mgr79ZZfvRLvfIMZmGvMC0wACvzpKg/7XswNvE6lZ+11rpMBqPwqC9vclp
QrsTkx1UxHhh7eNUrp/Jaf9sCQ/amBoCzLme5DvbUOmn/LKZ1nhRBTUgbxLW
5cDtIujbPbrIeL11nIS3uw/0HlozFA7MTc+9EuJUi5CsKliiKMmqr4jF4mut
t5kiVDImp2Oy/XmXxxvrCRxzU5W4qprhTV+ub5fwjYNx4U3RacguT+maz9Yx
x7ubo2P+zmanleYxllFFbI6GGhE9HP7r6+13OimqUhxGrLKxU8ZKO8zWE8xH
ZkWTQUgeFg7VfV7b7PcbnbbYJ54NzHZOLIvKrym4drOxo2947gZecUrZDRBF
5XT/GRGMt3VfpRFFoJ8n2GgTL0nqHKO4HjzHxwjvcErGxN7plDLuARNTiQ5j
y4ZSA3ii0NxrU+Yb/HqFjdJzJpQHDl16QuNsKLQW/LWhslGKBpMODx6VMfEM
cZXHaDwK5vX55dawDkp7TWwAs0c9bYEh9LOEu6w0/ahm4sxvdUvaZpdpXcqw
r2stt+E4P7bYeKdz8ri7InQMQCa++ISmiesEo3qGg06+cMRFPNOuDIkUkXcd
P3FJlKgu3z0X2/AfB32kFoMBVuifdrq9tUmxJmY0DPCEayxjPz/se7Wla6Lq
F+/r5m1ORWOH5CENLEQfV/DNsQApul0rAWK6dkRbN8crrWKrfdL7dFNIpgKh
RVSRJKlDVOuiiibo/+TLxGpFMu1KmVYLiovUwnWbO/twi4ob4zN5iJFa3khp
rWH5BaBhoNPP6ltKWOuMyxfuc0t7caWNkjsRjAg8URodqoqHmlydgySEgC49
cdiTOmz99niAkjt0M1VbcesxDnkfWozGo0CfHlloNFfPQhE1wNkM6hR4mys8
LE/JKr0IhCL35CvM4u2dSKJEVz8XpIVp7hacTYVLSVLLpW+A/+8jfsztJtST
9D6Aj/3klTF9oZHmxXCGvNGt1hpmLDG5EDRWRU2hSASHCGoK/8WKfoyuHi+1
GAww5u9vc/nDFhcZryM18CzLTKO/PxnY1Nk3odxJ1cAAX7jWKu6dLc4sXOtd
fdyV5rHPLrPEhP/Lbo9DHhmjVSAcDVyB8KTfpeeWWRF0CTGwN9p7pyi+iy6W
0mf7vRwTxneFmJZAlMN47wCaqmBQ3fK0nkW8xF1mYNZfXWvPkjoDMFVlDe2M
c1rXNjlO1SUHnB3fjMq/7vMEy7WMKiYgwAD/kz0eyulGOukwIo9iQiamaBj+
br2UETiTF1TyrB2VPLvZTqIKz1TMdmwJ42lOKG4W6+KLw77gLReD8/q5gm+O
B9BHdfFjlJPCe6m92Y17UTEA22WKAaCd9GaGvJU3dNy513EYvGjXKO2zIRiT
iaZnFAnlWVTT9vUxfzrZUNbWbLjsu1tc3t8u54ZQE0I3h69rFLHoQph/ZhVs
N5PkxeTlQT9TH5EY/2Z6g8Jt5yu39LpCwZwyU32iWbb5zGRgPatvZRJWIN2x
IENgXl5jR7wvQzeHx4RvyeL+jAu8SsPQ/B/PBI9blU4sFlc3d0GeoYFlWq4f
cEuX8F5Mugp8beX0RhkXzHbcFDoBB9qJtDjyBPzW/W5pWKErzKJJjXYfl4pi
BY9KutxARAA2Y0QexRB7qmfcbg/SAiobUA5g+1TjXckqPDNJInQNpYmVP+Lw
hMtMo8GdtjskUSf7OdemLzKiC02M6gzCrHukUntfYDsHPSRVd6OBIm/H/HHT
pcZR4AbMS7+vOOfd+wpFPXRHLW3DCObuL660gev6hKYJlrbs3dVx8bc2OX28
y13G68gCMb31gVEFnYPZ3e6YbBZR4JdZlVHRVNXUiZEprr2Vd7XVO61yn1sa
tBnoFkFp5Qu6JHU5tR1aL+c6WjICrMA8olAW4sHhUU15nl1mRTzsnzpJ3+AI
M5SpyPASptXR03oW43YuZlorztI2y6q8K49QJMqubsmTOM3kdj/vq6P++iYs
amQPsjpL2xRaNLFUdWw9ly88H5gLvgrlQ1AMKvVsnxfGVrqm2KqNEXkUk8s/
6RJI5QLqwMszA/RGwi7SVBlw/5wpGgYT7QvJFQgPeaSDsDHtgahivEYR+F+N
syGj7XVw6Egeuh2MqeR776OB6mhDBUSZ4mG32ieCStXc7IYA/ztNFUOAQmYi
ezt6B1ySyheeC2UY1DP6lke9M+HJMt2Z/7RTDuQH3tbv1jv8nxIbPY8BWJP0
K41nAnI22yXCr39/m+tzy6x+v8nxz7s9vj4WsNc1NbG0vq1bSSUrlQMqCrqs
ARpSOYk/SgMTMIPnkqIHpdzRxxX8/YD3TE3T4Y1WFQGs2T0uqTqGkeNuSYEI
wTrHSVUhENwbrgTcKFbNmd4B/psbHOny0WzsZSkF6G3DzhmLjU+Q3lClyh7u
91bhkpKyYEQeBVOCxUVXO4kgLaCyAT4DDwuEAWxBkr8HHTrsmTFVw/APW0au
xDIa6I2vIlARZh+GDvu8gftSzSOiih7Ugcyu9Uyq4oHBa+vkUyIATMkzrQJ3
ZGqbOyVSRTX/b68n3DosXujJbQ5Jzy+3xtPNoNP597mmVtKbA/QoRc1YbHIu
UKbKUQzAo15baz92SUA1FAcq9bLlNqyPTQyBuAvFATxh0fnQfx70kaWBpryA
JQNnRMb0EEnABD5JsiWFdffmRseArAlTDqoRQFvPe9tc2FbxErb+b/u9odAc
4idNO7OxgakbV1Q3S9uMeL8kjO3nh3zAo2KL5NNrW5UwMo8aFAVmVT+6yHid
tJn1kxRi8Z2mjr4ntakefN7pEm2iUu3JbBOkSFsDh/HLrGR65DHxvVy+cLdL
KpgMnNbg7Kv35fWAd1nHFOPvqbIMftkTutcYoC9bgtWB1z2VauVs+Ky+1dub
nKgorAWGuBeW8Ltbnc8H5Q5V5mdOBKCs5uiay6XXEvT5b1fbwluX/VJqSAcw
51+vtDngLmvKAHvABC7O1bOIKWSF2oeigDqFP2IcpvDO78yWlLZhxNgEsm+A
D61lN/GeCN39vGWm0S+ssGZbiY9+nmD+mRAm6JS0LPIBE/wPkxQtWTkaxYHp
3gVLQVwSFmJEHkUVNEssY4pDkhZQqYDuNQ0vnDLf4Pnl1hJmzjINdEB+Fp0P
m9C9hkofUPG994o4QQ9onA0FK3tuuRWWD+RhuBT+29bN+WSPJ/6eKXY0sQcb
T5Kogpqt9onvb3fFg+DxsVie0jX/eJfHaf/sB80QpHJKuAwhsazkIkAPh/fS
KtvPD8vnampIASbrQfMiW6ptywixWNxwq+etTU47nVJIy3IXVIkA1zQo1WOS
bXTLgqEtqbHP7Pq5goXnQ89OcEsZJM0gJG+uroUUG1mKBmRbbRGLQT4gcxIx
e0AVwNzqstI8hmyvc6qb/BE/+PgReYo9mJ6MGJFHUWWUIgtnLDY+xY6EVuWA
4Sof7HDDMjzsmSHht+ho7bupdhO6HVMB8l5jvrtBsCKxuKqp653NTlPpZEmT
8AKIxNTPWWsZx/TU22KnqBZddJ87X7o+eW3T6E1j8WcLz4VCEvMI+YSdgEe9
uNLmCzWPIgfMseVm0X/aqSKFoDFFtzkkPbfMaqK9NhSHoaaWiqt3OhzMlhSI
8RhbUnjp0Fq7nFIkvyxdHaX+CU3Tn7wUzgalANOBHYO8xlKi6NZJAcZvhbt9
yCMdjraEnRfkDiapHDwqXMEBfpMRI/IoKnY6IAeGEmyKtIDKA2j/VofEKfMN
ntW3KqmVNHGJriHpPiHqxYDJrGHa5BUN66JOHYgX18GXxDWnaBiCYMDA/Xa1
Lf7ykQVGXx/1l7GtxhhgdsUhT9XoKXjw9K+2dDFlzCvllMFNHSqtsFZ0yww1
xgBXMHjEK3OOrjmXBc2qZASzv4pp7BAvTRdvBYFJ7H10kdFqi/vzYRWBoS2p
mNGjWfCuYZqXmkRJftmO3oEvfvL96og/8W56IwKW62xgDp2tI1PndLYBz3U6
IGe2jrnG2ZD8a61Eiq4wvczAo0ImSa8WZWJEHoX1td8t7XFNE2fJSlurAPhC
kWdqBcNq7OJKJP9iD4f/4kprKcIemCijKRoGD1bahw4ExdrpnAxh4FtNW2AE
TvWEpgk4leQETwpQmxKm0bO0zHKqR41pxBI2jyyEpvpRfuWvwaNeWG795RF/
eV1QjYkCrxWsg6LQiqxupBx09XG/PRbIpJ2yB/QIX56+0GiJsg5PmS2pxRfC
hKKRt6SoYlMh+d8dl7Q1HizpHufUZ/QtldOpVgowJa2mLTD8bL+qJa0IBkXe
aRUvr7Gbq2fuGH+ZwxMoOXsCb//7kxSPmiw975SJEXkUFuBGm3iyHamUCaZY
31sbnaDltA0nlqIIpY1lS7VTSZow5wR/mKNDdbwdMYxhUCQurLm52S7hyyN+
0IduyeUN7ZL275MOTItt5lxvtL/pHeB/dyIQHNspUW4ZMRiH55epeRRJ0NF6
taNNxUkE+ICGIXlPL7VgW/cKui9wJbWlfExJ85zZkpqrZ5F2ZeShAOtwTLj8
/jaJ6t8yRSSoQwo5neYrAswgq2oFaTrqo1PPOHK2jhnYeFxR3QBPop7UcgF4
1H9PB6tSTQk5YkQeRdcyiqQzHOtIC6gM9HD466zi6RM9y5LaCRTCFYvFNXSB
cbD00JxrE70v0wxauu8qAszhDlaKzyi5itDMRTVtTKx7vfwaWINHPbvM6quj
ah5FDFDRFTc64A44JUzihHE8RXlDx69X2PzkNbFDdiWA6V9JFzdWXp00quKc
VdxGm4QR23tRedmXqp/Rt5SkHxBIl11cyRwd8/beARb2D2LAVAlgukvwheSL
XSgCzMbmhzvcZuuYr7aIzaxogv+rBDbVzxP8eCYE1sFPhUoQywsj8igwzx9O
Bc3SMh0qdavCwCS0ii5mTvRsYydwonfnnsfHFMYczekbA3RpPh/MTK80iXr5
KRo8waBBcB5cTpuYkccBanmva9r0RUbyLWIMHgVl/vXDV/SVVeju5z2tZ3HU
m3C5P1kAx2SNZewbGxxau/pJy3I/mL7ASt4qgX2NLKiZq2dxbaQ+2hAppewG
qFFn3/ghl4MiUVJpA/jJOqu4uls90F1cgRAGXAglyBpeBVnyrrb+iuljyL45
IEdQpf4jizCX8PrWWcdlVDThJwq9I3jUgrOhdCMwNY+6HyPyKMa+D2+9pKqg
jjMKa6ctMHx0kbEUNeWo7JXSeoaDSTFWdJWDEPAWJwn6iioBlMsZWzpjscmI
qdBQl6X17VM1DKFLE0vl2RoAPGqevuU3x9U8iiRAQv66z0t/IlHHrAJdkK1q
to6ZF9H2GaNhyOeat9RCmbQDyvy7EwGn/UdY0eBRuVdbMWJNHaMm5w4HU7YX
FAXqDqv1sGeGfVxpfHFddXNXD4cH75vLF5Jt883kOzMK+WpzF0FJlIO+AYF1
TPGfd3nAAzIMVWzJLA5PsOh8GFVZkZXriyxG5FF031hnleyaPRxwo+raej7Y
4QZu8MetLlJ04ILSCMiqZmoXNI9eKGA0DPCFay3jmALmE/2uIiAQitxTroyW
ewjWt8U+kW7AJ+eOWuBR0APfShzvqoYiwFRCm6RV5cXiO81d/Z/t99Y1YleF
7SGI6L7ATL04cBul3RfOkXNi2RsbHB7MsKOblTdBnlvdAxJeDTqz9Xa/Y8Ll
tVZxb292xndnaZvN0jJ9da3dD6eCDnlk+KZXEWzhjWnQ2N7L8KgJRWhMakBv
w4MIylZs+Df0w5IL4FEmnqmsOD1hFUbkUXAuXlhhLeF+7+RFVx9XyyBiynyD
Z/Qtk6XqYU0FasZfZo7jByaeME632MsAj7KKZkU/DtBCn/RK8Kh9rvdXsWNa
LjLlDrIqm+V7X/CouXrm359Q8yiSoApFuqWC0CotclWOwFrWM456frkVa60n
k58rtc8lC7o5/He2OD2YfE31VbzcQNcBlqjm8H0Ap2rvGci71uqfWX0+KHel
ecx721yeX27tm0FyvwI2i06CNrtUJWc19ZADPErLIBw8Cr42aVlYhxF51O1+
3iMLjebqWrChL5WCAJfwkEc65R7qmksdW0sFFIXkYdm+ukaahnd0+fQC8KgJ
VVpQHMCj/DOrRiwViOFaZRGLX22xl38V0O5+Km9RzaPIArPRKrpotrZZzcQ3
Zsmid4APf2TeUguWV1qGXn10kdGT2mbVTUo9cqKqKgXkfHnE7z59zrRUmCOV
DzgiRGKxkinig4BTNptOgk4slcY1VmM0MNlnVIPIJMU2iJyMeJBHVQVcwVoA
N3hljR1p6RQFhjCARGFWyNJBgNlQmrbA8K97pTkNYbJ05y21ZMlOKfRq0KWr
IEtbf0mWGL+VDu2YWD6jhACPgur7z8kguV9ZDcmBtx+ed32WlmlK2Q3SskwA
4AC2sVQemVUUKzZ1xwCzzw8eVSiPrpSSgyn5+5SuedIvqQWVQph/HT8fMZtv
koJp1jlT0zRMXXZbruDwhHrGkQ9VVUnJ8SCPqvS/UtnYOVXD8E87VKRJxH2g
Qik6+97b5sKUB5fFF2MKbT2y0Gj+WSmLUvKFg57sSNa7Q+tVKB+qx43NL3rc
wN/XNYp4bLHxfsV0rQKPgnH5Qc2jiALGtLj2FjwLj8mzbw9PJKawFiR8t0sK
aVnGB9bRO1ucwVRTy5Rd24oJfjvs+YtmLpTflH31WX1LJQujUFDBvVudqeIt
RI8XVQ/gUfomUY8vMXGczKVRFIQHeVSF/5Xc6tZpC4z+raJ9OuCwrLe+Wy1q
jMLdkgDaSfNiuMq0c6LL77SDFoLSDHmoULbRhTW/oqPIFNTeHTxqlpYZ2wpQ
P4Ro6+aARxmE5JMWRCIMikTVzV0f7XT78XQwO9uU3Ic+ruBv+71naplGFYxa
51ZBYOrVv7/ddfjRHp3hWPnqOmliEliLPi6VdqreNpE7sMRWmEWDR7Gq3RJL
8CCPuuJXnlTaAGO68HwYaenkD56A0idMtKfs86GPboFNb9Sky0U84ujq50LP
UykGvXdTDLr6uD+eCZ6xxOSkr6KaVt/u583UNMVdFHR9NSQEXIzX19vvmQx7
O+AARbVt/zjo8/o6B3n1eVQ0+rmC744H0hV4lL1VQlcMvj1XzyIiv2bohwK6
GdY7m52VLIxCgUH+6qg/e5KgVQYDfOEqixj2RPOyCg/yqHK/8pCca9MXGa00
V0Y/TWVCJBaXNXS8uNIazGe9dfz4XxgPvQP8j3e5g2NcCMqV/WpsAN2qOJhu
DVN3h6pPwj/he2mKhuGra+1vKKwrDXgUlud8NY8iDfjyfz/gLUUhNSWDLxxM
K7/xwXa3D3e4FSg31kgWUNvXBuGkTkaYrk8rzKIH77Xbo0siXP5op0rFbzBF
+SidHKwiOpklwPxZYxk7RpXmhxkP8qgy3zL3lCuPLjLe4Xh/0tZkB+y1lkHE
VA3DtzY5yYUVgEd9sMMVU8s+TkW2OpmG6TMWG4M+9QzwLaOKptBdYBTam5Lh
URrSxpipIS/ABi2+EPavw6w+0OfyhRH5119bZ//FYb/JshPFYMgSmZJoUScU
ieKL657Ws0i9l0eAkTzilanD1opb0oEJ44GnfNRrElfmZyEwe9dZxbOnSg+r
MAKP8imzji6m5qF35vjfnzzANDAIyaN6w+lZRA7b3JYF4FEf7nCdpW2mMq0b
oWwTSurx9v+yx2O7QxJTGkvRmVDgUbjjgnNqHkUYWCOb7RJ+t96BtelbsJJe
aRUg9mDditsgVRDAW3Y5p8BJOeWvqCPysYH3u9Mp+bsTgfiHSCyG+vrv6WCD
YMXWwVYy8GgbbOKhT3Y7p5CWRaXADCx4lHkkextVk8KDPOqyT9mFoNwZS0wM
J0m4qSRgmltRYVHaZucC5LbfyxMMXgzJ+/sBb1VKHKb7UVIBUdBFz+hbKmF7
nK6rY7zwXKiib6TG2MB8PuF7aY6Oeb8SC25LCDEdvmUbW/qEpukyk6iJlghm
w/rkCgaPemdhWe19oM6tciAWixtu9fxxq8tul5Ti2luZlc3PLbOKL5Fnjyfi
AFkFg4I+2WAjh8gNNYYAHrXJNgE8yozEbirL8SCPKvW+fMQrE8M10aa9bAZz
XPW0nsUel1TSskwCYLiMwvL3uqYW1igj+ISp+7rovJpHEQZdirOYLsU5Qltb
ghDTdapXmseA422xTxTc6zwC9wUuDLwk4aBIMCiC/Ji6sKQcnhBUsG+A3zvA
7+bwMMFu3uaQbf12514fcLImHgOVdLlh/tkQupmL/WqVSDQeDpDVI96Z0xcZ
LZ20nSLZCfCoLXaJ8K9NwgtIy8I6PMijSrwvg8+rXvl3KJDsKpmqHKihIHT1
8aaDR11QwfzQyQWmX+QsLbNs2eqByB2gQ2ssY2H6LaKK8O8eDsWOOvoG6m/1
lN9oz61uiS2q80mvsIwqOuV3aYdTsr5J1H9OBn26z+vdLS4vraKqMs5bahFL
p04QBGieTUwJpjrxJoACIVU5KiK/RkCuF56CALJ6ISgXfpk63lK+AI/a7pAM
HmUUqjoHVfLCCDzK6/Jmu0Q6ObeKtHRqPBTo7OPCuCxW8yjSGBSJ08ob2VYL
Gh5QTFEdSNRf93r946DPhzvcXltnD1702GLjGYtNHl9CfaCv8AdPapvN1jF7
Stf8lTV2+OMfz4SAUEGbHfRINwzJ7yddYwrsxSPlCky8unS/4gCyah5ZpML1
D0mBSwXXpYBHqVhAnVzwII8q9rq8xjIOujQk5xpp6dR4KMDwKE2DcNKCPOwQ
icWVjZ0sLFkM42gZVaR1MULjbMhS48j11vG7nFN+8so4F5hjHlHkGH85IKs6
qbShuLat4VYvcb40GkAIg3OuTltg+Nl+adpIqSEJ+EKRY0IZBvkvezxJy6JS
uJsloUJFfuSIkXhU6VLjqJlaptGFyi66q8bDiY5eikdpGUSQFkQNitM+oWly
NiCHtCAqiEEqGbZhqobhH7aoVOlLVkEwKPJJr2SK25CWRaUAHrXHNXXGYrVy
GAEP8qgiz1LNi+FUv2zVyuNQg7W41TOg5lEsQc8AHwZom0MSaUFUEIMicU51
y5T5Br9eYUNaFpWFcFAUmnNNPchyB3jUPjfwKOPTAdmkZWEdRuRR/zsdPEvL
NP2KsptpqvFwoq2bAx6lbajmUeTRxxX867AfPCnSgqggRGLxlRsdv5pvMEfX
nCdQtQBvloAqN1pSzxS+46tcFD1BcAXCA+5pdPUzNY+6Hw/yqELP0m+PBc7S
Nsu92kpaOjUeCjA8SsdIzaPIg2m9/cVhX9KCqCDE4js32nspHqVjfquHQ1oc
1cSgSJxV0cQM8kSLjKkxBsCjDnmkP7bY+LjCGq1OXozAozxK/nnI50lts5La
W6SlU+OhwM3bFI9if1u3hwFU7xKr2Pe3u5IWRDXR1cebomFAV+jqJi2LakIk
FhfXtjGd6Bs7+kiLozoAj/rJM4NudKJuuHM/HuRRBR4ln+zxAI+qaOwgLZ0a
qg/xnTutXf3qunksAZOV8+JKdWyJQtDN4c3Vs6C81Dq1l6oQiMXi6uYu8CgM
cnVTF2lxVAc8weAx70zwKLAp0rKwDiPyqD9udYbHVKv2mNRQPMCjWjr7wKP0
1TyKBaC0pU/WHF1zrjqARwHoGeC/scFhlpZpZkUTaVlUE9AnzZ19DI8qrm0j
LY7qgG4aRXU1OuSRTloW1uFBHpXvXvK79Q6zdcwwG0lLp4bqY4hHLft/9q4C
PI7r6tahJo5rxw43aaBJmob+NmmaNA1z0jQ1y5ItM8kxxMzMtiQLVszMzMzM
jBYza7WSdrXSrv8zM5IsC1famZ2VsuebL59jSzNv3rx377n3XdAKYHssCpAt
gbxSF6roNrZ3sz2WOYiu3r73D9o+ukY7OLOC7bHMWXR0E4enCrJKLyAZLjkn
gEcds2anO6Q8YyyPSrHJfHaTARGk16UI0lOAcYjFd+paFTxKXtDXP2ASkg1b
vqROcSZCP3h84ddnnOcrabsnFLM9ljkL6vAUZHWOtWBmF1SPWvAoRY/asRiH
R1lnLlqri0tuywIrMJcAHlVL8qiN2goexT6EAyKn2ELwqLTbsmhR/VtDt0C4
4prXfCUtq/A8tscyZ8Ht6Xtpu/GjStpeipYc9IFoXOiR/NDKW/vNItgei9xh
LI9Kts58YIXmY2t1B0RitkenwNwHlQwOHrVZJ5DtsShAlDH0Sy1bsEY7Mrea
7bHMQfQI+jfpBDyyWkvPP5PtscxZdPX2vbPPcr6Stn10AdtjmTsQ9A9oeqeC
R+0zDWN7LHKHsTwq3jL9d0vVn1yvx/bQFPhNYJhHbdENYnssChDld2Lya+Wt
VfGcQW9f/16TsIdXaV1zUzTXYAo8vvDfxxzksE3krEZf/4CObzp41G7jULbH
IncYxaPyHXIjzdPmLdN4eYeJNLcVK1xZCkgGLJWqFu5D4FEcBY9iHyKxOKui
eb6Slm1UPttjmYMgixnGkklPiuRxptDNF35/3hU8Stcvne2xzB2QvcIzwaN2
GoSwPRa5wzCPAoPKs8/Jtc/xN06iOmkKB0TCfhFmD5dASFwQAvy+fphUPQJc
wm5cfCHIf1dvHy5uT19nj6CjW9DU2VPV3MX2mykwOwAeVdlM8KitCh4lBxCL
xeWNndBBhoFZbI9lDgJS9JpbEpTRHmPF4QhTgG5aecOb6KircPrRB9AAyAQs
3W16wWyPhRFAE8GKFInEAyJx/4AIF0mBRvAfkvyQ/IcgP2A+vCHm087rzSsu
q2nsDDRJ9jJMcOTEXr0SBB71yk5T57gim4h8o+AssPob7ikXnRNgQx0wj1Az
DN2oHbBG3efnyx7fnHX55LjD+wdt/7rb4sVtxo+r6kECP7hSE7PN9qwoMDuA
1Vve1DmHt+esQ2sXH7v4hkcy2wOZg6AORyAhN+kosiqYAsz8DdoBRMVI+zi2
xzJ3QGTyBmeTS1d2gazQDmISIvIaEA1fIorqDLGduz6fYdoz7PkZwX+GXEBD
/h8uwYII508ztxfmfH51a1ppY0xBbVBGhVdSqUNMoXlojp5/xk2PlAtOCUet
o/eahMHeV9bwBfn56rTzB4dt39pr8dJ2kyWqeg+t0HwQ13Lieoj87++Wqt+3
XOMRJa35StqP4lqjvYC4dP6gTFwLVXDpLlLRfWyt7hOqei/vMHlrj+WHR+y+
PO380yX31Te8sYbVFK4/BSQDca7XzCXioziKOHO5QGeP4JlNBqcUB08MoK9f
ZBaa+8AKzZXXvdkey5wFNOYuw1CYZrD62R7L3AGIimV4Llkw+a4JQPGcYYYz
ktiMPcbqFdxzkkWRGR6/b/A8i3TsgNVA/nR2Dx5s1bbyYGUX17XnVbVkljcn
lzTEF9ZF5laHZVcGpJd7J992SyhxjC20ici3CMs1Ds4C59HySQPtueqWBOZz
yi72qFUUlsFu47Ad+iFggOtu+a+87vX9ObdPTjj+fb/1KztNn95k8OganfuX
a2JXUi4gMHBcD6/Wgjl5Lwu6S4Eo/vPsJoPXd5v/87Dd12ecvz/jsE7DV+mg
06ajrjtPuOMP1LkeBmYfXeCRWIIBh2dXYfwZZU0FNa0VTZ2NHT14TUU3bQVo
wWCfYg1Fn2K5AAQatj8sL7YHMgcBFeMYUwiJ/d15V7bHMmcBlb3HOAwKca8i
s2wCiO+Mz3/6Jj7GgsY3Dc6BoF51w5tLUp02Hr+mlQeSk1XelFRcD3oDquCe
WOIQUwjyAEqj4ZV62SXxpG3sQfMIMNstukGqWv5r1H2WX/P67yWP7865fn7K
6aOj9u8dsHl7r+WramYvbDN+eqPB4nWc+Upa9y/XIC+C3jxAuXpW4rr1EHlR
VIdgO6u0QHgGOc8g7SGYzzD5GfICaS9QHmJBI4jQHzcbvrHb4sMjIEIuy655
rdfyVzMIOWQRdc4hHmRMzz8TL+IUW+iTcjs0uzKhsC6rormkrr22jYfZEI7g
P6PizHPtc6y0ozHsZVe9WPzKCvymgDWJbYLNxfZAFCAA2/CDw7YK9yATgLaC
EQ0F8a+j9myPZc4CBGC/WQS07S9Gv4nMsmFGNMoXxBcOHmZRwTyUz4eKYa5v
7y5r6MitakkubojKrQ4k+Y99dKFZSA6HDOMZeYylouFHHGOdcX5NzXzeUnUw
E7Ad/BfL+IHlgyRnmN48POzJWT3+edYwk6HIDHGtJSjNknUcsJqXdpiA2Pxt
v/WHh+0+Oe4AevOfi+7LrnqCfYGDgYntNAjZaxJ+yCLyuE30WYc48LTr7sm3
vNIwbKOgLPOwHJuIfIfoQreEEmw08LqQzAq8YFxhbXJJQ2ZZE165tL69rp3H
7cEkiej6BGN5lMmtSEyLsrrCOaCAjICtjX304wU3tgeiAAGI3K/OuCjdVEgA
+tEvEoVkVVIOf7bHMmcBHnXIMgpqfYf+7A4vEY9gRxQ1GvQOUaSITOxq6eot
a+zMrmyOK6gLyqhwjS+yDMvV9Uu/5pZ80jYWRGijdgBM1K9OO//joM0rO00f
V9V7cKXm/ZPwn1HxPCOYD/7+d0vV8WOvqpn9fb/1x8ftvzvnipur3vLbrh+8
zzT8hG30ReeEm54pev4ZZqE5w+dZETlVicX16bcbs8qbC2pawWQqm7l1bbzW
rt7Onr7ePiGNlIYVjOVR+urhRHFpRRikArICt0fw7GaDz086sT0QBQhASsP8
/PGigtbSD6jF+MJaGPUwvdkey5wFeNRR6+gH5buUCpUdNiC6y5H4lO+IzAIj
U8D4pfUdScX1genlICS6vunnHRP2moSraPh9e87lvQM2L203WbyOQziFhhgR
dc51lwuRRGiIBRE+n6c26A8fY/3vqqeKhu82vSCK/1xyTtDwStUnT7IcYwq9
kkqDMyti8mpSSxvzqlrLGztr23g2kfl41tKrnmxPntxhFI/Kscu5dYOI0Nv1
2/CIKiAPgND4807TDw7bsT0QBQjA4FXW8P3kuMNEQaSjaqEM58KMKYQiGLr6
xrl6B68uCS4eGZWKgfUKiGfhocTTyWEQqTrkwDBCkYgYrTwXr6PKc8Goh1Lr
VzSMYAZkka4Ydlt23nUlkads/CFXErU7OroFVc1dGeVNoVmVzrGFhoFZV12T
DllGbtAO+OmS+/uHbJ/bYoTxPzDMjkhq9KjSEC9S0SGDnA3f2mv56QmH/17y
UL3lt9so7LhN9BXXRF2/DHAhl/iioIzy2PyazPIm8LHGzh4MQJo3wruAXGFI
P110p2uW5gzG8qgbV4Px7X41C2d7aAr8VgDB8vZeS1xsD2SOY8gEJsT7sAkM
6dp9byJwY0c3xDI+R20rr7S+PbuyeWQQ6XAQBZULfNwm5lfT8O36wetu+S+/
NpgIA2P5L7vMn9ti+MfNhvgveRk9v9XoT1uNX9xm8tJ245e3G/95h8kraqav
qpm+tsvs9V/MX99ljv/CWMb15h4Laj28s8/qb/ut391v/dlJxx8vuCmp+2zW
DdxrAn0Rc9E5QdM7FQrIOiLPNaE4IK08Kq86paQhv7q1qpnbwu3tJPkbycH6
iOQgAWgYkTeEt4Zqo3iX7CkXnlhS3wEetUhFFyOU8dN/IwBpOWsf9+AKzXWa
fkzcX3xnnH00ypVUUt+eWFTnl1pmHZF/yyfttF2cmkHIyuveoD2vqZn9YY02
lR027EGi3EfDHOlPW41gV/7viuc2vSCsdnXPFFAjz6TS6PyavOrWejxAKOvu
t3hZ39QyDFsRgDEWo3hUtl32lStBZE/nSLaHpsBvBVB2MMFe2WnK9kBmPcAL
IN4pl9FQlOldExi8KLuiOSKn2i2h2DQk56ZH8jHraAjqYf7z9/3Wr6qZPbvZ
ADoIun4wU2ZkLvCqwdSY+fcGUYwIHx2siPLUev1Xd5qBI0Fr4A9/3mGK66Xt
IFEmL2w1hpp4bjPBsp7dbPjMJoOnNuo/uV4P1+OqHFxL1nEeI0NPhy/cE/qF
esoCMgfnUTIlhwpnxagwNirS48EVgwk+f1DReX6L0Rt7qFMM56VXPFW1/CHW
bngkQyX5pNxOKKova+zAtHBJfxfh7CJZFqZu0LvFAMvCHaEEMbd4nbo2Hu33
V+AOWez0olMCVsKaGUX5EuYGOJJo/KgksN+G9u7cypbIoX103T3piFXUJl3C
lfRP0pVErcBhV9L8QVcSsXqxkh9X1fu/X62+P++6QTvgkEXkFddE4+Bsl/ii
sOyqjLImWAG8XiHtcyI9sCkCM8rvX6759VkXtscidxjLoy5cCsTXP2ETw/bQ
FPitAFrs4+MOz25SRIxICsIiHjKHwZdgC2MOIeErm7hxhbVOsYW3vNNO2sbu
0A9ecc3rE9IEhgAfNIFXjmMCD/Ofpzfqv6pm+vQGfaih78+7wYKmysEdtIg8
bRcLma/lk2YYmGUVkeccVwQ2EpJVEZtfk142GERR394Ne1xIR0WUwfLCYoIW
EiSwjVdc255Z3hRXUBuSVemVVGofXWAWmqPjm37VLemUXex+swhwQqjO/172
+OwkWRxmhylY2aIRNAzvS7EvindhQvBnkL3PTzkpq/v+ahZ+2TXJKCjLPaE4
Jq+msKatjcfH6wyzLOo8kThMHD5JnL5PC+/ywAoNDKakrl36WVJgLPCNLrsk
4uOuuE6kAFPuo+E61cPsaNgfO1SYkXDG4utUNnPTbjcGZ1Y4xhTo+WdccErY
Z0pEJYGNv73X8glVvfuXa1DxSA+vujWuK+lfR+yXXvXE7sMe1PJOs47I800p
SyiqK65rb+P1sj09MwSZIlGBd//itDPbY5E7jOVRZy76Q8icdVBUglVARoAQ
++asC0QQEx6AWY17+dJAL8mXoNkbO7pTSho8k0o5/hnHbaLXafoRRHSzAWUF
D5rAZK7NQtIEfmqD/t8PWP9AmsAHzQkT2CiIMIFDsypBgaiKcLC1qawZ6Jfz
TvGgH9AvbE+AtBCT4V4t3J7yJm5OZUtYdqVjbCHHLwPybadhyP+ueP7joA0m
B1NEeboolvXwEMuCunxxu/HHxxxAR3cZhYCt3fRIBtECU/VPKwNlza1qqWnp
Ipxag2eIQ4xryLU1dIYoGordEuOHH1fVw+PACdmenlkJ8RhSNPKQGvMP9nvR
KQGf7z8X3TDbdW28otq21NKGiNxq72SiSDW+oKZXKgjSIcvI7frByhq+3593
/ddR+1d2mj468sSN9HaOjEpavI7z+i9mX5x2wq/sNQ2/6JygH5DpGFMYkknt
Izl1JdECrOGI7CrwqE+OO7A9FrnDWB518oIfxMgl5wS2h6bAbwXdAuF/L3vM
DcU9M1DncaP8S1zyBAHyH8LfMCgLqn+zbuBXp51f2m58//Ihc5jkSxDyYKF/
2WX+0yX33cah192TbSPzYVCDa5U1dEKVTGswUElgC6AWoB8Mva9cAXq5hdub
V90alVvtnlgCJXvJJWG3cdjK617/Pmb/p61GQyzrrjvr4SGPFnWM+MgqrT9t
MQJT/eqM86ob3tv0gg5bRuEmOr7pVuF5Hkkl4TlVabcbC6rbbjd05FW14p64
VXBGRWc3Wb2ZCsW/N66eCq0fiuwSUi0teodKI/JJ5xhfeLcFxnBTDKpHhnBg
MPyeuEQEkaOSBSg6RzE6Mo+AmSkdUel6ZDuPftGIXh4Dk/Xy6L3HUzSY5o+V
DMJfUt+OyQQp8km5DVJkHJR9y3uQFO0wCFHR8PvhgtvL201+t1T99ysJf9FQ
qepbd2O2h0ob3c3rV9GB/HlyvR4+4o8X3DZqBxyxjMI+Mg3J8UwqicobjEqi
xdE6S4HPhw0CHvWRovTZGIzlUcfO+So6PCogS0Barr7hA23VzuOzPRZmQWXx
DMYvDQYvEREX1S1dicV1bgnFHL+MEzYx67X8Pz/l+MI2Y+IEgTSNCbuY5EuY
pee3GIFNbdULhu4wD8sNyqjIrWyZLlmaBGRj9wxoFtjXdN1z9gJ8AB8Iujuh
qC4wo9wpllDc6p4pp2xjwbXWahJa+5+HbF/cbkzFcRGMiwriIiK4tIa9W0Q1
5qHYrXnL1Id7by0is9HxTf+8w+T1X8zf2Wf1j4O24G+fn3T89qzLjxfdll71
xO7AgzbqBGzXD95lGPqraQR42nGbmDP2cRedEiCrMR5t33Q9/0yQQIuwHJvI
PMeYQpe4Iq+kUt/UMjDq8OzK6LwavAJoeWZFM7hccW17eVMnFl5TR09T5+DV
zO3F1drFx9XGG7zaeQJcHd1TXJ3dg+088Ct1bbyqZm5pQ3t+dUvWiHYeGIlf
6m3PpFLnuCK7qIKRvTxuuKdcdkk85xiP9X/YMnKvafhOQ4IUwTT45LjjW3ss
nttiSNZ+vCdmbzhabzBUbyhOD3+PGQZZev+Q7TdnXFbe8N7CCdpvFgFjRMMz
1Tgoyz66wDv5NvhtSmlDYU0bBgyqxvZak2uQJTvqsGgxpWyPRe4wikdl2WUf
OuuNRajhlcr20BT4rQCGtqqW/0IV3YaObrbHQgNGloWhnEvdQ5Hetxs7ovNr
qPilQxZRyhq+/zpq98ymofO4Ef6lRWSgBfjSZt3Asw7xxsHZvqm3YYZD2TE9
fmG/CAoOY8ivbmX6WXMJfQOiZm5PSV176u2GsOwqj8QSy/BcbZ/0i84JB8wj
t3AC16j7Lrvm+f15t8VrOdBHr+8y/8dBoiPGX34xe3G7ybObDKkAeyqgi4zp
IsK6FirfLQRNucWoPhePjoi3n09xNqWh7hikx4xIClh1t4PGQ4M9NTRHMjpc
YCZDPTimvh6826FDc/DOJJ95ZOgIDP87tp3HQ/e286BKPo7t5fHoPeWvR3iK
VHQxYy9uM353vzV2xIrr3tgUFCkCgTQKzLKLygdjDMuuBGErqGkra+wEK8MY
vjqjiIimDeBRySX19y3TwFdgeyxyh7E8at9pL6xtHd80toemwG8FvX392/SC
ZpEDZOQxnGBEZRhuT18Lt5eIw8mqgsGr5Z123CZmk07Ad+dc39xjsUhFZ1T8
0vB53A8XXHcahMAetwgn/EvZFc0sxqOCAYLpYWxptxvYGsPMIBrh7pPb7p8g
1T9ecANtcIgpGPuvGD/WUldPX2tXb0NHT01LV3kj2ae1ujWzvAlfJKGoPia/
JjynivTtlIE/uCYUO8YU2kQOtmrVD8jU9k0DwbjmlgQKd8Yh7rhN9CGLyL2m
Yb8YhW7lBK3XCgCBX3nD+39XPDASkI0vTjnh+py8Pj3hiOuT4w7D17+P2eP6
6Chx/Yu8PjhsN3y9f8iWuA7a4AIt/PCIHX79m7MuP13yWHHNS1ndd4N2wHa9
4N3GYQfMI45ZR5+xj7vknED08vBO0/PPwIAxbNvIfKfYIs+kUp+U20EZRPlr
vGPyUBULGCAD06m1RTpUM0Hn8Dr0fbffOkQiMew48Kj/22fF9ljGh1gshg1I
FDYhc0Bk+ejRPMo2e88pT/AorHBZDkMBOcdwqININBztMDrUQdg/MDba4d5K
ieOnOFF9RaG4i2rbWHq/uxiuM3y3OMyYAgKVzdyk4nrIfLPQnKuuSftMw1ff
8Pn4uMPgSdwKzbv5zkMRqkvWcd47YL3squdek7AbHkT8UmhWZUF1K43ncXQB
L+6TfHvBGu3ovBq2xzIZsIz6RYMnpCAnmMmi2vbInGqXuCIDsq4U2wMcH8Qp
9k0fyFjz0Fy2xzI3gSVhGJiFnQj6x/ZY5g4gFTMrmsGj3thjzvZY7gF0CqQ0
JHNJfQd2PSwIh5jC2PzaHoHs2s2M5VFqJzywx2EmyGYACrCLcdoT3EsbOnsE
TZ09w6EOKaUN8UV1UbnVYdmVAenl3smlrvGkORyRbx6WYxSUxfFLh6V5wz35
kkvidbdkXb8M6AuiZTYZjQD6kVfVUtHEbeb2dA5lObVwe0FFFqzRwb+OzXXq
n4B9TftNR1TPG27l2XtvAT2KI2WUN2GobgnFZiE52JUnbWPVDELAlL487fTW
XsvF6zgPjMh6pqJVF5KepT/vMP38pNO6W35HLKM0vVLtoohg76zypvr27lmU
iojFEJpVBQYYlFHB9ljGAZg8Vgi3R1DR1BmSVWEQmHnEKmrpFY9X1czwIfAV
/rrbfI26r4ZXCtsjHR+9gv7NuoFYObp+6WyPZW4CW9skOBs8StEigUZAguVW
tcxbpvHaLjO2x3IX3QIhzL0rrok/kD7ehSq6f9xsSJ0FK6v7+qeVQ8jLYBij
eFSmbfbWY26PKGlZhMm1rYSdQmZpz+7mhkxDNKbNJX8i2pBdBTpE1WY8YRuz
Qz941Q3vL087v7PP8qkN+oMhDWQNxrtRDSMCG0bGNtwNbxiK4hhbL5GK0MCa
/9NWozf3Wv7zsO3LO0weJPKU3X8xCj1mPdjdwDI8D2QmJLMysaguv7p1KMFc
MNwoZPjiTXpRTqT6dh4oHOwUcD/riHxtsl8V+JvqLf8fLri+f8j2xW3GGOQD
93aqmj8Uv0oVEFiyjvPuAeufL3mAWV1wSjAMyvJILIkrqC2t75gzcapYMwmF
dfiaeDW2x3IPsJLxNdPLGk/YxIDQ4tP8QVnncVXOt+dcD1lEgvTG5NeCsrI9
zClAeF9NwrC6rilyeZgBrCTL8Nz7lmn8XRHJQx+gTYpq2+YtU39puwnbYyEA
adDa1QtlASn99Eb97foh9tEF5Y2dsLfr2nhu8cU/XnCDVXXeMZ7PPJUay6M2
HnGFcoSiYfrRMwYogXVE3hGr6KjcGtBR4SxvFS0N7sn/GsqXp5xILdzeopo2
MJAAss0lxy/jEhHvGrFRO+Dnyx4fHSOKpYC3/36wlNzo5k0gFbDm/nvJY5NO
wCGLqIvOCVdck256pmh5p+n6phsEZsLiA9nGOsHNneOKoHO9U0r90sqCMyrA
yqLyauIKayNza3xTy5xiC81Dc3V80y+7JB63idltHLZBO2D51aEW5DtMF6/j
gJ7NI/JrtIYLVo9OMCe7TeHPz242fGuPxcfHHb456/L18HXGefjCbanry9NO
X5x2+uS4w1923a1COaJ6ntbdPp5kICu43L+POSy96rmVE4TVBTVnHJSNVwOR
SylpAFNq5fXOIrfSjEH1gMP82EbJixDA8gYTBgFer+WPb/fkBv0z9rEu8cXZ
Fc2yb5AhJWDLQPhjJZ+xV9ToYwTgUdaReeBRb++zZHsscwfQNbcb2sGjYPyy
PRYiyNA/reyzk45PrteDMhpXCEBowBiHLjvHPJUay6NUD7tAhUE5MvpcKYGd
YhOZ/+1Zl3W3/Fzji8EcBMKBuarjBvsUjIhqvpv/1dARk18DXQ9uc8ImdpNO
IGxzWGHPbTEcWSllmCBRSdZ/22/97TkXFU2/vabhoOs6fungpT4pt2PI5k0g
81J2tJwu8FKXXBKguK3CczPKm6JI9uUQXWAUlKXumQJ1s880fIO2/9IrniBF
b+6xeGajwXBO05QX9tFzW4zeO2AD8wRaeL9ZBDghxz/DLirfL7UsvrC2oKat
ob1bbsOSZQ8IzOK6dqwcUGW2x0Ls9JauXj3/zC9POy9U1vnkuKNZaM7sLQp9
h+pa4pwAPg+jhu2xzE1AFdhFF4BH/XW3fEXyzGpADZU3dcLahfhldRjidh7/
lF3sgjU6K657pd1unOSHh6nUWYc4RqnUKB6VYZu15pATNK9LXDFzD6ULmCWL
sNxvzrq8f8hWwzMVHKBHIMRfyjhWny4MximRGQcjiwvVtnallDaA55iE5EAC
qxmGLCXrMD+hqvfwiK4EoBbPbzX69ITjyuveOwyCT9gS3S3NQnLcE0rCs6uo
crvcHnk8e8In0/ZNx1v4p5VL8vNUker2bv6912BJw+GL20tcc7jCMEPA9Na2
8cikXZYDeHh8IRj+S9tNFq/jbNQOCEyXaHnIObC7NbxSwaO26wezPZa5CSrh
dN4yDUXLThoBHlXd0vW7pepPrNdjawz9A6KqZq6Sus/jqnq6vhKlwkG5wGoG
lYI9zpzveiyPWnnA8VElbc+kUoaeSDswt0EZFZt1Ah9X5WzRDeL4pUfnVUON
dguEEFn98kGqhsK5741WGq5c3dvX1sXPqWwJzaq0ici74ZEMW1VZwxfW9wvb
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
8UR/2mwJjvJOYT4weypCT/vdee9tZkq0W5aqAc1y1HANcFS+c/6Fi9cfXqK7
5bRSl85kJW8RSZ49UtHJf35iUBAsFfyw1yqaSomg609/Zl1wlEV4PvpA96SZ
k4Vp+oorEC866a6m2NpzchLVetfohzypYeQywQ1otAscBU/hN0t03j/opLAr
+qfdeHylYeG4V9wkfX3hudWPrTAoH6vcahdPuNsq+q3ddgwu50kb87t1ptPd
FyMqB8UUPbnKKGOsDH6KFMtRI0mao06eD354qe6ec0qxNYAVUxL39jnFFT/w
C7FbcCCDH/7R2NGzQieIgKgVBoft5ZLjGr2HU2zxXFWOXfS0j22YAQJHfXna
Q1U7kGlDpqq+/v7Wbv4Wk/AnVhnZRjGczPAuE/NRd8kFrw8PO2u6jze/GZH/
JLF0obph86g5TtEzGIfkPLvGJKmkHv/GXwHAevv6cc8ZSQDSybtXi+E6c3Xo
pi4w/39Pue+1jmbakEECR51wYjlKhgY4Ks85//DZwEeW6h6+MEOm8VlNTuj9
Gtt7Hl6mR+RgCcpC99vWLTAKyXlnnwPgCi6tlvcY9SAmLSr+Ftc1nkKxY1Z0
CRz1vzOeo2zbnBYCnJfUtS2+7Afv3lQ59sIrOD6KklDcq+OX+foOm3FGm1P5
3kGeoydMwGk5AVnvH3Q65phgdj3XK7k8IvdWavntkrrW223czh5hF0+EPgRt
iScU80USeRfnwhXnLOcQY/203VPGJ4sSPr3amMYtPLRogKNiC2uZtkW5JM1R
e0/5g6NOXJo5YaWsJie8yHusotHPz1PV/8c+h7f32P3fL9ogq2dWm9hEytGd
J/doV89R4VybKbmIp7V6BOJvznkt1prGC/34Cv5pN97cafvMGhM3pSnZg3bu
l3YD79fHCuQocv9dK/wgj/FtVAQgXfVNf2279ZifBBqhW1DXCfrwsPOza0wW
qhsuUDd4bAVxPKVhDHL75KjL95o+q/RC0Ks4xhZP+auMpnaukKhppaafMI7w
eCVUX19/ZmXTM2uM5RE4MUWxHDWS7nOUU/72476PLNU7pzXT0sWwmqjQ5ZbV
t72zzx4c9agKZ66qPlmfN2rMcntTFFWS5pHleufckuV6IVbjESDku/PeP1/y
ZdqQyQis0totOOOahAb86THXdGXKpEHkj1Jg3oMB8YWSLSYRy68GjKdMjEBE
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
j8TIlTLCDDCaxHv7HeGBUrvw+sngLv3AbHRi8liwUB4N56jzF0MfXKL7vzOe
croiSPvWnS6M3a9ssxpnZWG0K23fDHUdOdZkbO3mv7XbbmBXJl6N6PyaPVbR
I30eDebtPXbHnRImcS2cPDCjcszoCDTabWYRb+ywBWfKBBo+UWUpY66q/olJ
mYGvTO3NIW6vX8Z7BxxBROjbl2j5wWmKKagpv90OTsM35ZF7EocfPKHEMDj7
1e3WcsrrxSMj2BXsXd6lFl6rmnArmPUEe8kq6gvGHSYnJ1EbSMFRjGy4lvT1
oQVez65W1wkGQa3UDVaqPW6TE0Z5atqkWoFhPOMROAou1UgcBVARiCToNyzC
87864/X+ISZDB4eLqtiFGzu8AJy8rxtTUIuneXMimWpGkkDc606WR1mi5V/V
1EnV5MUl0CmNdze43ESUnbWKJmYARgjuAmDbRRd+dNilqAZPQAR2OmAbiwEi
ffrELk5OQziqwLlARyviN0t0/nlALu8IRkY4lR8fcdllETV6DnlpURtLPzwk
r0qpePpg5idWGQ3EO6HFVjZ0OMQUjfQnZAZvP/Tqk7gcSNIjiah0nFc9WvEC
MgFs5/uHnL8669k2rFtAkw7Lqf7tUt3vzntPokAAWUSmXbooDJXyUcs7bdEJ
YqVvnpo+CO0pDeOPDjurXgsE9wLqwJnwR3ZaEMd+m5iI3Fvfa/rIbxcJUSHX
IJTIAKnYxTV0ZWfdkpnaJzjEjH8ybcbdX9N06AcpNNK1lySoiNxqDU7IwpWG
atqBkUpQGm/qIuLNmrt/LQevUAdhTIGj8O4P5yj0wHgWySW3D9nF/W6d2cPL
9J5ZY2IRzkxunJFExHwW1FAc1a7AGWwyLquBliTqBJIV1j6yXG+Nfmh9K7el
i48xAv18XFFt5o3Gstvt8CjxjODedvFFeCJcgZhKvANfmEq80yfPXNUCYmEo
Fhw1SqQTPnPUIeHNXbYfHnZ+b7+DqnbgDYaSxihSQziq0KXAVDv6gcU6f948
9u6DCamffEn1g7KfXWPiGDuxRSj4pBiyn9QwGmWFaypq6xZg0BwpGkqm0HR3
WUZNDu3QKTnGFI8nWRxeK7xBcMPXG14XEJkUiK9PpR8xCMoG5Dy/1jRnUqGq
OFVq2W2ZRWHwHrZzhWE5N22jCjU9UkBQ357z/tcBx/cPOn1wyBnHR0dcQML/
PeVuHpaHM4xSC2CKoqaRcaMKFBtG0sYV/H2vPYfpDTJ4yv8+7naW1mo7kxP8
yjkqHIXdEDROLl8UXVCzziAUDWz5tQDlKUg6dVEFMqjhXtlK7VAcFfjr/hf0
t4B5dI/osX+86PvAL9oPLtFFd4Sub+pFOWkXFS9B3dguBa45UhtayaihqfaE
ArHktEvSX7ZaoZvFf+HJAlqoLQnzcajpw73Fv1/aaPH2HrtPj7nCiVa5FrjL
MvqSV5plRH5wZmV21Z2Gdm4Xj0As+KEYNTDc0MVWONsh+zjYMLpH00tWdQfT
4oYoUxE8OWo4R9nrx6Mp4mXpm9Ju+KHCmLjTIvK4Y0LZ7Qm/gH2/VoJr7qJ/
jZUIhbqeh+87no2oAwL/a3mnP7nKaBJNlCy0kTfOWX2qFNHjK43gCCQU16Oj
K65thYeOd+p7TZ9J71QCkwVnVsH+yf353V9rEy+SZwg08draxZELoIqbFqYi
zJ9kOsKcmh7Ed1eGTS6t3YLxpMqfuvA29QjEicT2kzC870u0/OSxtIqr4Pbi
FRh/4lx6r45XmBruO5Wskh26l8fBUemVeAswEOdUNZ1yTnx1u/Vvlug8sFj7
aQ3jL097KE/Y8xBRlUeIG7vScPTtOfQKLaj6ThctWVUx0pXUtWI80vJOMwvL
80mtSCqpv9HQgQaTUdEYU1ALxHVPLLWJLIQffckr9bhTwk6LqCVa/u/ud8AQ
hjEFOIfj1W3W/zvjCe/7hFOCXXRRSV0bBqypf1Ni24tDPJEWeHpmGJOfhnBU
kUuBp0kS9Y7TG9xL1cub5N+SDVVmOvqpq50r+PiIy6oJrtChn3GKK55cohJw
lElozvjDfqhlzRc2mME9eW6tyaMqnKdXG09xcoDMV1Dy9l77SZ8BYyteXue4
kqmYMbqAaqddk8hM2ooLKqYKA009PekUhX7vik/6y1stlaGseRtX7hyFb4n+
oaimda91DBzwny76BtNa1QW3Ee8dXyhBt1ZY0wIHBDzgm1oxvHK9vAVL8qqb
qeGer8DhfjzCg35ilSFearfEUtVrgQ8t031wic7fdtm+ucv22TUmTBW5GKeI
xPvZVdSNFUxqrEEj7OaLxpn9WFqdPcInVhp5JdOfQ2/8kvT1YTBKLWtAqzYJ
zT3pnLhWP3TRCXcMNBg69QJomEwWiCUAM3BUaJaSsjRTGsJRxa6FoRZp1Nr9
+OOXFCAiAFKd/rR16FqtIwrw3kXlTyz0gsq/BPKfxIwQLmoUnD2hWX0iIVuP
0CI874JHin5Q9tTD9oisU+H5k55NInKhXM9D1zrRZAsTEjnpl0a8topygcmU
yHfmK/CKIwkj2jfnvA7axTJrBqV2rhAcpe0rr22DeNDwKc64Jj2zxuTfx91o
HI+I0GixpIsvgkePN32LafjrO2wwrODte1rD+MPDzuPc6kKjqGUgylftESiU
o8AJMucl8HO80bhL0fk1Dy/T+906UxAUjqVa/ngX3iZ36ytbKNdwEfvmMquo
xZTRa7WPJEDUp8dcZSaZHPMP/7HPwTQ0dxIXlavwWItrW74+5wWmmvrZCMfW
JWmeqn6g8pU2YFZDOApHgk2W4ktmj6kunujV7dYRuTQHmgLPFp10m0TFYaLG
d0MHhnjPiff5aNucQIKjGNw4TK1mfnl6krsy27kCjHeXvSeQ+XMSIuL/g7In
nadrclc0C8t7aZOFYi43kvgiyRWf9KdXG08u+I124TUBR13zpb+2F254W7dA
1z8TePP2XvuJRk6OIrGESJUQX1R3yiXpv6c8wAO4nxsMw+yii4pqW+XK/6ML
0FLza5y5Ijei4rrNnTyDoOyBzV/UXjCeUFLfyjUJyf3qrOdvFuvgeHGj+bKr
Aeigfrzo45lUNon5GUaE7xKQXnkvKGVSs7hUZvJdllGSCQa1cMkMLcoQyigt
WOWWUPruPod/HXTKo6PIOCD8vHsy0SEr1vvA0xySk0rZNJyj0h1y56jo0RI1
R6OAHB8fcaF34lTc2+dMrM0ZTm7Fv5Mn/P06M72ACS92oDXq+GcSk8/iSS50
Tl3k2mLu5LJbEHHysUUYleRdxIqsfZk/V5Uj19VDaVEbe9UntQ2TLpFZF+48
pWGs+BqXIwkcNVdV/4o3nRxFFRe2jijAe/3CejOz67m8cdQaG1PocoVkaDR4
6ZdLfni7AVGXvFJjCmsZfN2GqI0reGCxDhGoUK/Acrq9fR6JZUu1AtCxZ1c2
5VU3F9W0BmZUbjIOwysGfAIqv7bdGv94Yb35NrMIpS1LPZLAUT6pFRRHTe4M
/URKip43dtjETTA7GY8omBK21SxictelXdSurlMuiWD1zSbhdHXUeLMueKSg
K/BKUcQKZj/5LmPoL6lrc4kvoeX9Rf8gIDL20DwPPJyjMhxzf7/BbJ6aflS+
EuVp6RGIf7zgax1ZQOM5u3iiny76fnfee9Im/XDBZ73hhBO/Uzk/J+000SJi
bTEk55tJfffOHuH3532OOU4madWERAHboyocqwg6n/sowju76ITbNbktYI1H
XTzhak7oJ0ddlGfcJ9Mz6mvRxFFw9vHqwSf6XtPnmTUm1/wyaMnRh7cJ3WNh
Tct595S3dtsDRHdaRClDlP5wwQWDeSPV15CTesm62/864IQXCrCBg2Cn5Zz5
5CrnW3vsdppHGofkPrXamN7INIUJoIhGhe/1zGrjSZ+EmpKCJyWeSNVRDM3H
HOMxmkz6ujQKjlhLFx8D01MaRma0hrRh5LrsnQaOck+Ub+l2cppUXNXYyQnI
wrj/xCqjxVr+U8yfgP4BbnLhrZbD9nFrODSscg46+TCOynTK+9tuW7JapRJV
B8BdXaMfquNHm4dOVqC+OV9N33OEYsFjiqxjm/T/7Z0HeBzV1fc/GwzGNjaY
EggpbwIhLwkJhEAggRcSQgJpIFu2irtxwTbuvfeKVXbVZfUuWd2yZPViWZIl
qxdLsmQ1F1m9bN/Vrr4zM6AYaXc1q53dK2nP73GeBzurmaPZO/f+773n/s9r
X3vrKoeYs376vOz6AzHYXyqEgUzXH/y24htdhdAQgT0MdGUXc2qg23e4bAwH
SKrITqeAbBYlSEff9ErQ2ONqLGNsrnUq4KgW6OEFEsoSarFtPAiJQ8HX2Ng7
j8pQjvpWzzT4+l7f5G0XW2joxVJ96BPLfrHOgz7hZWyZRycVFMI7BSoO+vkz
Edfzb7UOmRhQ5/V0PLk8fmAW3KZ8cf6HK131uQ6I/Ld3BETqkkvAbDG8tc1P
n/tyAny/JQ3tfz8S/vwyZ85HcPg1z0XlG26DgMnTg3k69MAwCXpmseOfD1Du
OmM44/8w0O1A/1B7r3t/QPZc+ppxXPeuI3VUUUDp+3uDx1t5d3rDJf1AwOh1
e1kikFDC7Hdb/ca8KASKIiKnliruoOMBeaYg8k+JJuFADLYxNz4/pfMECjoZ
y/NxX7unGCKqYTDmDNMX2p+N5D4zR+3tEooaYBwhdcJCRTk1id/c4qvFSJ8I
vfTwejI8b8xXUNGLRQW3Wje4pUBXttUzvYIjHQ4tGdTvwaBsEGbv7gwMza4e
DycctSMQy97ZEQBz1Vij5+vSOz4Sp/gStWKpo1/8g+UuN++MO28oNoCOCs6q
nmJ2/ser3PS5DgzlXikVfz0Uxr6sJzP9eXapE1nHcRglL+XX/3qjzzs7Aw1h
Ic7IRdAGfukca4MBWuq0dPbDlPmTwxfpxeQU/X0k4LJCqbz4dtsO78ynFzs+
v9zZNbHEEP3DSB1VHFj2z+MRMGFxvTKOTrlK5IrDwTlDdVv0BARqQV2rnr8j
k2oOOkqnmcvgt7vMeb/c4DXmW+sPtbcYXTDvTLROPwVKI/5GAzRITfWVuIUq
jFLe/PgCuyPBxkjgZIpT/1YPLwg96RfLdvlkwkSSrHXVSKhj3YsdT1wco46S
yBS3W3v3+l0FMbbaKYmrHh6Guc5+8bmogpe/8nhlnadnSvlEyYgWSuR/O3Jx
hgUvKMtIiX8skdNH3khHMUboNICqKWY2/6O3ibRAIvvLwbALSWUs2xPVMRbd
nm3t0Not1PPWYwZ6D5eEkpmWPGvbOAPNBJnZN+gonzSNlT50RUVbxmVV3tni
mf7iCpc3t/rxLhXpv0ytoA3Qrt28C5oBBvqfrHbnXSo03OmSkTqqJKhske1l
+ngOySyRYdBj3A3L89yU2GMKH8OANdLNWyeg6f5pT/BRHY9pMPU+fruF5CIw
Y09kfjZGp5/qFUkXfnNpvZsxFqMGvyvgDjrKOLXCYbjfH5htdlo3bckV0Jm4
JZbNWeTgkVxGJAAt0Pk8jsfDcnX9QRiXQeqcibj+87UeFucvcVUaD0bMboHE
OaHkd1v94C22v1Ro/ErW+iCSyheci4XufZw7Mk0smEUh0FGvrvfU91K0Ge/r
m32g5bP5vJLOPaMqLxg+22EkTFb5oaBrc6wd9vpnGW49lnMdJZEr6lt7tntn
wAxrqV18XIG+y7Mgn2Bw7xJIInNrl/MTYKry6nov6Ci6hRJOAtaEOh1V/pVL
Mgxe8L0Y9NY6AXNPGF84qZ4Mjexel2DuYseTYWPfp2CAr2yLZ9q/dMwyYsz/
DVcukA1MxqD5WR0MH5g0zrlLHAvrHxgusIdhHAsfM7fbYBTlRlvup67gc5yC
yAaYOvHjimZb8fcHGjx7fwzAaPLcMqejobrpKIFYBoPR77f7f3Y0gqtVDgV9
ys8/o/LPB0KfXep0PDR3XNncsQRa2peOiTBXHT9HMicBoKO8Uyummtm8ttFb
/6tRJ5tORp2JzGcjS+AjdzoEs6z4uvoQcgK8Eetdqe1yp3jDGlhxqKNgjgxT
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
QhAEQRAEGRuooxAEQRAEQcaG4XTU/weZu30A
    "], {{0, 305.}, {396., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{396., 305.},
  PlotRange->{{0, 396.}, {0, 305.}}]], "Input",
 CellChangeTimes->{{3.927837323868137*^9, 
  3.9278373252902803`*^9}},ExpressionUUID->"c08b2d37-bf14-4f9d-8431-\
530f1774e0c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Sin", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Cos", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Tan", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["\[Pi]", "6"], ",", " ", 
         FractionBox["\[Pi]", "4"], ",", 
         FractionBox["\[Pi]", "3"], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"FontSize", "->", "Larger"}]}], "]"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"values", "/.", " ", 
       RowBox[{"ComplexInfinity", "->", "Infinity"}]}]}], "]"}], ",", 
    RowBox[{"Dividers", "->", "All"}], ",", 
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[LongEqual]\>\"", ",", "Center"}], "}"}]}]}], "]"}], "//",
   "TraditionalForm"}]}], "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"5de96598-a284-4878-b349-089feb9a9e3f"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      ItemBox[
       StyleBox[
        RowBox[{"sin", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"cos", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"tan", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", "0", ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", "0", ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", "0", ")"}], "\[LongEqual]", "0"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["3"]]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", "1"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       SqrtBox["3"]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "\[Infinity]"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{"\[LongEqual]"}}, "Rows" -> {{Center}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{3.927837334724102*^9},
 CellLabel->
  "Out[191]//TraditionalForm=",ExpressionUUID->"91812c83-b595-472e-92b1-\
140269b417b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualising the Triangle", "Subsection",
 CellChangeTimes->{{3.908337141383889*^9, 
  3.908337151258582*^9}},ExpressionUUID->"e15893ce-fa40-4e6c-88dc-\
bc81f1c5c5ce"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "(", "t", ")"}], "=", 
     FractionBox["1", "3"]}], ",", " ", 
    RowBox[{"find", " ", 
     FractionBox[
      RowBox[{"Cos", "(", "t", ")"}], 
      RowBox[{"Tan", "(", "t", ")"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2d6ffee5-f4ff-4444-9909-11d1afe5b77f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["o", "h"], " ", "=", " ", 
    RowBox[{
     FractionBox["1", "3"], " ", "meaning"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c33450bd-a75f-48d1-813f-a64ff2a0eab8"],
 " a is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["3", "2"], "-", "1"}]], "=", " ", 
    RowBox[{"2", 
     SqrtBox["2"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73bd1525-3a48-43f2-a35c-9a16ac0769ff"],
 "\nCos is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", "h"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        SqrtBox["2"]}], "3"], " ", "and", " ", "Tan", " ", "is", " ", 
      FractionBox["o", "a"]}], " ", "=", " ", 
     FractionBox["1", 
      RowBox[{"2", 
       SqrtBox["2"]}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0a30b4d1-7604-491e-bf88-d86eb7170c04"],
 "\nTherefore",
 Cell[BoxData[
  RowBox[{" ", 
   FractionBox[
    RowBox[{"Cos", "(", "t", ")"}], 
    RowBox[{"Tan", "(", "t", ")"}]]}]],ExpressionUUID->
  "770717f7-9579-449c-998f-28b3b3609bb3"],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    FractionBox[
     RowBox[{"2", 
      SqrtBox["2"]}], "3"], 
    FractionBox["1", 
     RowBox[{"2", 
      SqrtBox["2"]}]]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4cfb359d-8048-4de7-b0d7-3f7598064832"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox["8", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "db56cf06-b0bf-4cec-ba63-a0ade14015b5"]
}], "Text",
 CellChangeTimes->{{3.9083371563711214`*^9, 
  3.9083373749655724`*^9}},ExpressionUUID->"1501b3ed-36a9-4795-baa2-\
dec8c187ddf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   FractionBox[
    RowBox[{"2", 
     SqrtBox["2"]}], "3"], 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["2"]}]]], "]"}]], "Input",
 CellChangeTimes->{{3.9083373545893135`*^9, 3.908337358781901*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"03af8edd-344b-4d78-bb59-b22b810e5f60"],

Cell[BoxData[
 FractionBox["8", "3"]], "Output",
 CellChangeTimes->{3.9083373611791162`*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"9c4f2893-ec1a-4a04-96b8-42932a86950a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Substituting Values", "Section",
 CellChangeTimes->{{3.9029448200984397`*^9, 
  3.9029448230373297`*^9}},ExpressionUUID->"58a808cb-f45c-482d-a2e7-\
caf309f5faf3"],

Cell["finds values of y where x is {...} values", "Text",
 CellChangeTimes->{
  3.902944834659209*^9, {3.9029449102732735`*^9, 
   3.902944938433522*^9}},ExpressionUUID->"141d61b2-9af4-4574-b140-\
317575305700"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "2"]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.902944836589734*^9, 3.902944860479034*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"62a70693-24f9-4882-849a-551057898e83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["17", "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9029448400150223`*^9, 3.9029448610196457`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"7bea09bc-c484-4e33-86ee-3200bc89254d"]
}, Open  ]],

Cell[TextData[{
 "Table, x and y values between 0 and 6 at increments of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "22d4e8fe-784f-4feb-919d-c7e8367f72c1"]
}], "Text",
 CellChangeTimes->{{3.90294486904624*^9, 
  3.902944924476348*^9}},ExpressionUUID->"ada15a42-252e-4385-82cf-\
898976510292"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "6", ",", 
      FractionBox["1", "2"]}], "}"}]}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{3.902944889401114*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"2c5ddbd5-f29f-4a54-8e6f-e2c2903306e8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "4"},
    {
     FractionBox["1", "2"], 
     FractionBox["17", "4"]},
    {"1", "5"},
    {
     FractionBox["3", "2"], 
     FractionBox["25", "4"]},
    {"2", "8"},
    {
     FractionBox["5", "2"], 
     FractionBox["41", "4"]},
    {"3", "13"},
    {
     FractionBox["7", "2"], 
     FractionBox["65", "4"]},
    {"4", "20"},
    {
     FractionBox["9", "2"], 
     FractionBox["97", "4"]},
    {"5", "29"},
    {
     FractionBox["11", "2"], 
     FractionBox["137", "4"]},
    {"6", "40"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9029448900449667`*^9},
 CellLabel->
  "Out[4]//TableForm=",ExpressionUUID->"11e8d159-e08e-4a2c-8a75-c1590fa41593"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rates of Change/Differentiation", "Section",
 CellChangeTimes->{{3.9031297962498245`*^9, 3.903129800878029*^9}, {
  3.905756570916954*^9, 
  3.9057565736743526`*^9}},ExpressionUUID->"2fa8f9fd-fc18-4296-a525-\
2d86c0dde325"],

Cell[CellGroupData[{

Cell["Limits", "Subsection",
 CellChangeTimes->{{3.903130044737214*^9, 
  3.903130045511897*^9}},ExpressionUUID->"5d5f7a59-769d-47e1-a5a9-\
bc3fa4c0c9b6"],

Cell["\<\
Correct syntax when writing on paper:
f\[CloseCurlyQuote](x) = lim  10x + 5h -3
\t h->0
\tthen write = 10x -3 when sub in h (get rid of the lim syntax)\
\>", "Text",
 CellChangeTimes->{{3.9066886815063305`*^9, 3.906688726221243*^9}, {
  3.9066887563575253`*^9, 
  3.906688798626263*^9}},ExpressionUUID->"abfdec1d-e97e-4a53-8adf-\
420a63f0aa63"],

Cell["Limits (Indeterminate means undefined)", "Text",
 CellChangeTimes->{{3.9031298073560944`*^9, 3.903129808837781*^9}, {
  3.903129858655154*^9, 
  3.903129864205237*^9}},ExpressionUUID->"97451ccf-9a01-4e46-8e90-\
7f25cb1e7adc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", "2"}], ",", 
   RowBox[{"x", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298206209307`*^9, 3.9031298322602797`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a520876a-859c-4372-bc69-cde5863209f4"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.9031298339674673`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8540e5f8-adf0-477b-a819-31218b9236b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"x", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298453675795`*^9, 3.9031298520814714`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bfc68625-c2d8-49c9-a78c-b28763ebdf55"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.903129852676125*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9b49e64b-b93a-43c8-818a-519e349f2adb"]
}, Open  ]],

Cell["\<\
Left and right limits (FromAbove for right limit, FromBelow for left limit)\
\>", "Text",
 CellChangeTimes->{{3.9031298770004263`*^9, 
  3.90312993387886*^9}},ExpressionUUID->"9a7891c4-0f0b-42ef-a800-\
e4de985c4b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromAbove\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298884960256`*^9, 3.9031299068558474`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d3f7ecff-5dae-4954-bd4e-c64690e38810"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.903129907566996*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d9f97604-e814-4cfa-a616-ea255e51b792"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", 
   RowBox[{"5", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.903129952308961*^9, 3.903129961647176*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0aa180ce-1c0c-4e43-9a19-68adb2df9069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", "+", "h"}], "]"}], "-", 
     RowBox[{"f", "[", "x", "]"}]}], "h"], ",", 
   RowBox[{"h", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903129969598674*^9, 3.9031300121958847`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c5a167ea-326f-413f-8677-bbfd09558c92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5"}], "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.903129995374934*^9, 3.9031300126208286`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"57ff74d0-8128-4d57-930c-6555ec0259f5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.903130053774686*^9, 
  3.9031300557891474`*^9}},ExpressionUUID->"b5829438-6fa5-4308-98c2-\
5e09f214eb3e"],

Cell["f\[CloseCurlyQuote](x) = derivative", "Text",
 CellChangeTimes->{{3.9031300652742567`*^9, 
  3.9031300737149944`*^9}},ExpressionUUID->"7bdda29d-feb9-4283-a37f-\
5545f7b5f2c6"],

Cell["Finding Derivative", "Text",
 CellChangeTimes->{{3.903130094620001*^9, 
  3.903130098077372*^9}},ExpressionUUID->"227ca1a4-470b-45f6-a27d-\
bda41400e604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9031301051262927`*^9, 3.903130109395194*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"db707a54-3e92-42b0-8b4c-5d43db1c3e57"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.9031301096850057`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6347732c-75c4-439e-8ca4-45d339b64af5"]
}, Open  ]],

Cell["\<\
Inserting f\[CloseCurlyQuote](x) = 0 gives the x values of the stationary \
points (can also determine how many)\
\>", "Text",
 CellChangeTimes->{{3.9059663216607327`*^9, 
  3.905966362449554*^9}},ExpressionUUID->"e8ea4cc4-54d0-4182-9ad7-\
cbf6af6e87da"],

Cell["\<\
Once x is found, sub x value into f(x) not f\[CloseCurlyQuote](x) as f\
\[CloseCurlyQuote](x) will = 0\
\>", "Text",
 CellChangeTimes->{{3.9059663703081284`*^9, 
  3.9059663923800693`*^9}},ExpressionUUID->"9574a2ba-4414-4690-99e6-\
97a4ca1c05f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.905982616663844*^9, 3.9059826201093106`*^9}, {
  3.9059826506753254`*^9, 3.9059826578184114`*^9}, {3.905983153956897*^9, 
  3.905983157681263*^9}, {3.9060492877779694`*^9, 3.906049293518279*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bc3e7645-45a5-4df5-9b71-0fb7640b41a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"l", "[", "x", "]"}]}], "}"}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"l", "'"}], "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
    "Reals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.905982590720085*^9, 3.905982607022565*^9}, {
  3.905982738804281*^9, 3.905982739842413*^9}, {3.9059831737658253`*^9, 
  3.905983174031991*^9}, {3.906049344476022*^9, 3.906049345185381*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"0d2e3e92-ad25-4fdb-af90-11a6e833bb5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.905982736177876*^9, 3.905982741078788*^9}, 
   3.9059828105372844`*^9, 3.9059831743990498`*^9, 3.906049345807706*^9, {
   3.9065884785839643`*^9, 3.9065884857777605`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"f89716dc-a849-485a-8f45-cfbe1afffd57"]
}, Open  ]],

Cell["Do not use /.->Solve because Solve already has arrows.", "Text",
 CellChangeTimes->{{3.905983182726336*^9, 
  3.905983201025586*^9}},ExpressionUUID->"60e75e81-8f1b-44da-96f2-\
77295b22c4db"]
}, Closed]],

Cell[CellGroupData[{

Cell["Chain Rule", "Subsection",
 CellChangeTimes->{{3.9066890962129908`*^9, 3.9066890979746523`*^9}, {
  3.906689144619187*^9, 
  3.906689145829402*^9}},ExpressionUUID->"12a3b430-0ecf-4e14-8b99-\
447013817353"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", " ", "2"}], ")"}], "2"], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e95b9eda-bc00-4291-a64e-cfc799855445"],
 "\nlet u = inner function e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "+", " ", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3b496929-9011-4641-8e97-c9bcd52369a1"],
 "\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    FractionBox["du", "dx"], " ", "is", " ", "the", " ", "derivative", " ", 
    "of", " ", "the", " ", "inner", " ", "function", " ", 
    RowBox[{"e", ".", "g", ".", " ", "3"}], 
    SuperscriptBox["x", "2"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox["dy", "du"], " ", "is", " ", "the", " ", "derivative", " ", 
    "of", " ", "the", " ", "outer", " ", "function", " ", 
    RowBox[{"e", ".", "g", ".", " ", "2"}], 
    SuperscriptBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", "+", " ", "2"}], ")"}], " "}], "1"]}], 
   TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "6405aa3a-ecc2-4686-8d9e-41c558314438"],
 "\nMultiply ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dy", "du"], " ", "and", " ", 
    FractionBox["du", "dx"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "417a6231-5943-459d-8c48-afc58eadf664"],
 " to get ",
 Cell[BoxData[
  FormBox[
   FractionBox["dy", "dx"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d2156e43-5472-4394-94c9-ad57ed22a333"]
}], "Text",
 CellChangeTimes->{{3.9066891099861174`*^9, 
  3.9066893092720575`*^9}},ExpressionUUID->"454407f5-fe21-4154-86be-\
1c3760790a4b"],

Cell[TextData[{
 "Note: if the variable is the denominator e.g. ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "1"}], ")"}], "3"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6402b2a6-fe39-438c-af11-adae468d704d"],
 " make it ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "+", " ", "1"}], ")"}], 
     RowBox[{"-", "3", " "}]], "before", " ", "applying", " ", "the", " ", 
    "chain", " ", 
    RowBox[{"rule", "."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "88bf2732-4fd6-4cea-b22c-0d008135895f"]
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.906689321863122*^9, 
  3.9066893874626107`*^9}},ExpressionUUID->"9f70baaa-4f1e-4422-815f-\
447029885f5a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Normals and Tangent Equations (Custom functions and formula)", \
"Subsection",
 CellChangeTimes->{{3.9057565821266203`*^9, 3.905756583633112*^9}, {
  3.9061519537518735`*^9, 3.9061519638259807`*^9}, {3.9061520439964523`*^9, 
  3.9061520492152348`*^9}},ExpressionUUID->"d5a35c87-f56c-4467-a22d-\
9229457323f4"],

Cell["\<\
Tangent line of (x1,y1):
y-y1=f\[CloseCurlyQuote](x1)(x-x1)\
\>", "Text",
 CellChangeTimes->{{3.9057565915256968`*^9, 3.9057566013862853`*^9}, {
  3.9057566531265497`*^9, 
  3.9057567112108994`*^9}},ExpressionUUID->"2ccb7275-6a61-4939-8f2e-\
4b4eeeb5e5ce"],

Cell["\<\
eqn is the equation and 1 is the x value at which the tangent/normal \
intersects\
\>", "Text",
 CellChangeTimes->{{3.906152056866331*^9, 
  3.906152145297738*^9}},ExpressionUUID->"21e7c24a-a022-4b98-bb28-\
83ed11cb2a35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TangentLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eqn", ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.906151968901057*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"12b0b390-41e0-4d73-a908-38fb7bfbd2fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TangentLine", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9061520166538086`*^9, 3.906152019382639*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"931e13d7-9e67-4e3a-8909-3334dca69e07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "x"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.906152020669841*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1ee8c401-13d1-4a5f-92c0-33332db7e08b"]
}, Open  ]],

Cell[TextData[{
 "Normal lines:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "-", "y1"}], "=", 
    FractionBox[
     RowBox[{"-", "1"}], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x1", ")"}]}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2aecdf48-3960-4fa1-908b-99cdc7e6c4b2"],
 "(x-x1)"
}], "Text",
 CellChangeTimes->{{3.9057566063555746`*^9, 3.9057566091132383`*^9}, {
  3.905756713699462*^9, 3.9057567185500946`*^9}, {3.905756755506663*^9, 
  3.905756773535177*^9}},ExpressionUUID->"700134cf-783d-4aeb-b7c2-\
79a95f528b88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"D", "[", 
           RowBox[{"eqn", ",", "x"}], "]"}]}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"18965a02-5281-4119-a199-e62341d83c99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalLine", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9061520038983707`*^9, 3.9061520110969763`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"2ac53bfc-152f-4aa8-a495-6ae4c4add77f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["3", "2"], "-", 
     FractionBox["x", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.906152011949865*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3bcc01eb-d8a6-45cd-a00f-25fb3de0fd3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"4", 
    SuperscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"v", "'"}], "[", "a", "]"}], 
    RowBox[{"(", 
     RowBox[{"x", "-", "a"}], ")"}]}], "+", 
   RowBox[{"v", "[", "a", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"v", "'"}], "[", "a", "]"}]]}], 
    RowBox[{"(", 
     RowBox[{"x", "-", "a"}], ")"}]}], "+", 
   RowBox[{"v", "[", "a", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"x", ",", "a"}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", "a"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9067472981044455`*^9, 3.906747312041154*^9}, {
  3.906747508759157*^9, 3.90674753302061*^9}, {3.906747715449292*^9, 
  3.906747735023653*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"a2c499dc-82a6-4423-b628-3c9b849cc01e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -2, 2}}, Typeset`size$$ = {
    419.99999999999994`, {205., 210.50033772786452`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`v[$CellContext`x], 
         $CellContext`L[$CellContext`x, $CellContext`a$$], 
         K[$CellContext`x, $CellContext`a$$]}, {$CellContext`x, -5, 5}, 
        PlotRange -> {-5, 5}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`a$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{771., {267.77424324816093`, 275.22575675183907`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.906747534401118*^9, 3.9067475485385695`*^9}, {
  3.906747736648881*^9, 3.9067477388551397`*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"d26d4860-7cd9-49bf-a377-41b8b8d898fd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting Derivatives (Custom Functions)", "Subsection",
 CellChangeTimes->{{3.905796956856308*^9, 3.905796972675157*^9}, {
  3.905966246486597*^9, 
  3.905966249001212*^9}},ExpressionUUID->"35f3d191-83f3-4617-8afa-\
d690117997c8"],

Cell["Custom Function", "Text",
 CellChangeTimes->{{3.905796983178338*^9, 
  3.9057969854956875`*^9}},ExpressionUUID->"252512fb-162c-4798-b40a-\
9057af572f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDerivative", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "df", "}"}], ",", 
    RowBox[{
     RowBox[{"df", "=", 
      RowBox[{"D", "[", 
       RowBox[{"func", ",", "x"}], "]"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"func", ",", "df"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Function\>\"", ",", "\"\<Derivative\>\""}], "}"}]}], 
       ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9057969879278464`*^9, 3.9057969953030596`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"153fee3c-3a34-4fb7-97b7-61fa30175c3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotDerivative", "[", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9057967993428764`*^9, 3.9057968137306604`*^9}, {
  3.905796910027857*^9, 3.905796919341461*^9}, {3.9059832400614634`*^9, 
  3.905983257121241*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5ac6b075-59b3-4537-9a72-fb0c7517f1cf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
zyP+D211VHk=
          "]]}, Annotation[#, "Charting`Private`Tag$17450#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
P+R/APHBgM0=
          "]]}, Annotation[#, "Charting`Private`Tag$17450#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{-Pi, Pi}, {-31.00627288361303, 
        31.00627288361303}}, {{-3.141592653589793, 
       3.141592653589793}, {-31.00627288361303, 31.00627288361303}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Function\"", "\"Derivative\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.90579701037875*^9, {3.9059832411637945`*^9, 3.9059832576451435`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"fb3a8513-8883-445a-909f-13447ae9fc95"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding Stationary Points", "Subsection",
 CellChangeTimes->{{3.90658697955897*^9, 
  3.906586985427451*^9}},ExpressionUUID->"053f0519-a39b-482e-a62a-\
8b04c6f61804"],

Cell["\<\
Inserting f\[CloseCurlyQuote](x) = 0 gives the x values of the stationary \
points (can also determine how many)
Once x is found, sub x value into f(x) not f\[CloseCurlyQuote](x) as f\
\[CloseCurlyQuote](x) will = 0\
\>", "Text",
 CellChangeTimes->{{3.906588548814573*^9, 
  3.9065885553741474`*^9}},ExpressionUUID->"4590b176-1621-417f-8e97-\
57902c919ae7"],

Cell["Finds the coordinates of stationary points:", "Text",
 CellChangeTimes->{{3.906586994577306*^9, 3.90658702822515*^9}, {
  3.9065885420331554`*^9, 
  3.906588544860073*^9}},ExpressionUUID->"a658b784-3164-4599-8a5f-\
5f9952e55c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.9065870155711393`*^9, 3.9065870160797825`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2b1aba01-072e-4b03-a59f-823c63e9ee31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"v", "[", "x", "]"}]}], "}"}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
    "Reals"}], "]"}]}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"908912b8-de7a-4207-9ed5-d41c9d8ea77d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9065870125056105`*^9, 3.906587018810833*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"92d22b3d-f437-4f45-bdc5-42eac997b842"]
}, Open  ]],

Cell["Do not use /.->Solve because Solve already has arrows.", "Text",
 CellChangeTimes->{
  3.906588575762929*^9},ExpressionUUID->"5f03939f-91e0-425d-a0ae-\
234ea7c93abf"],

Cell["Sign Table", "Text",
 CellChangeTimes->{{3.9065883593405285`*^9, 
  3.906588362079232*^9}},ExpressionUUID->"72f446ac-b9c0-4635-9352-\
f95e71eb3e90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.9065883642032347`*^9, 3.9065884010227013`*^9}, {
  3.9065885929912167`*^9, 3.906588597734145*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"6b727f6c-6115-431e-8a6c-143de8e71455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"q", "'"}], "[", "x", "]"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["4", "3"], ",", "2", ",", "6", ",", "7"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.906588410648385*^9, 3.906588442944785*^9}, {
  3.9065885954944067`*^9, 3.9065885956193323`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"7b852792-2f21-4511-98f0-799c77269c3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", 
   RowBox[{"-", "8"}], ",", "0", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{{3.906588429674637*^9, 3.9065884433773317`*^9}, 
   3.9065885995433736`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"6dc729ee-75ff-48ad-a914-136ad3adca0e"]
}, Open  ]],

Cell["or (more fancy)", "Text",
 CellChangeTimes->{{3.9065885844758234`*^9, 
  3.906588588197081*^9}},ExpressionUUID->"a500b708-95c2-4bf7-91fa-\
991fff984383"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"q", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2", ",", "6", ",", "7"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<q'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.906588604244399*^9, 3.9065886742395735`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"dea4e6ff-1ab8-4dfb-bff1-3ea1bb0a7adb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"x\"\>",
       HoldForm], "1", 
      FractionBox["4", "3"], "2", "6", "7"},
     {
      TagBox["\<\"q'(x)\"\>",
       HoldForm], "5", "0", 
      RowBox[{"-", "8"}], "0", "17"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{"x", "q'(x)"}, None}]]]], "Output",
 CellChangeTimes->{{3.906588664943302*^9, 3.906588674795138*^9}},
 CellLabel->
  "Out[85]//TableForm=",ExpressionUUID->"2bfee1eb-6af4-40ce-9d34-\
19a88ddb0eb8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Proportion Rule", "Subsection",
 CellChangeTimes->{{3.906689898984245*^9, 
  3.906689901991103*^9}},ExpressionUUID->"4feb735d-216a-474b-95a2-\
e447bcc29a8e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["d", "dx"], 
    RowBox[{"(", 
     FractionBox["f", "g"], ")"}]}], " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"g", "*", 
      RowBox[{"f", "'"}]}], "-", 
     RowBox[{"f", "*", 
      RowBox[{"g", "'"}]}]}], 
    SuperscriptBox["g", "2"]]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"99bd5605-b53e-4463-bfdb-26d319619c47"]], \
"Text",
 CellChangeTimes->{{3.906689907806095*^9, 3.9066899432145834`*^9}, {
  3.90669006294683*^9, 
  3.9066900652140994`*^9}},ExpressionUUID->"2a39ccba-c4cf-485a-a664-\
e0729ea3cc51"],

Cell[TextData[{
 "E.g. ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"5", "+", 
     RowBox[{"3", "x"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "7"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9a39c315-7b25-4752-9714-ee94765c4abd"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "=", 
     RowBox[{"5", "+", 
      RowBox[{"3", "x"}]}]}], ",", 
    RowBox[{
     RowBox[{"f", "'"}], "=", "3"}], ",", 
    RowBox[{"g", "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "7"}]}], ",", 
    RowBox[{
     RowBox[{"g", "'"}], "=", 
     RowBox[{"2", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "27ba8ee4-5685-4449-913b-7226d86f9589"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"10", "x"}], "+", "21"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "7"}], ")"}], "2"]]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6e0e880a-d681-464f-903d-136b4f69826d"]
}], "Text",
 CellChangeTimes->{{3.906689958331909*^9, 3.906689984367235*^9}, {
  3.90669001845408*^9, 3.906690045512209*^9}, {3.906690107357165*^9, 
  3.9066901443305025`*^9}},ExpressionUUID->"e461d839-b7b5-46b2-9f21-\
b156519e1c68"]
}, Closed]],

Cell[CellGroupData[{

Cell["Newton\[CloseCurlyQuote]s Method", "Subsection",
 CellChangeTimes->{{3.908336455564697*^9, 
  3.908336458596327*^9}},ExpressionUUID->"e596de73-29b1-4e06-bee6-\
c76d769c609f"],

Cell[TextData[{
 "For estimating x ints\n1 Trial: x2 = x1 - ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"f", "[", "x1", "]"}], 
    RowBox[{
     RowBox[{"f", "'"}], "[", "x1", "]"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eae7b576-ba84-4367-99fc-0275bde8f8f9"],
 "\neqn is the function, var is \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] or the x variable in the function, x is the starting \
number\nThe custom function below is only 1 trial."
}], "Text",
 CellChangeTimes->{{3.908336489041509*^9, 3.9083365206407585`*^9}, {
  3.9083367559684563`*^9, 3.9083368007401295`*^9}, {3.908336847988144*^9, 
  3.908336860700636*^9}},ExpressionUUID->"5c1dd1c6-e231-4945-bfb5-\
adddc1e7e533"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Newton", "[", 
   RowBox[{"eqn_", ",", "var_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"x", "-", 
   FractionBox[
    RowBox[{"eqn", "/.", 
     RowBox[{"var", "->", "x"}]}], 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eqn", ",", "var"}], "]"}], "/.", 
     RowBox[{"var", "->", "x"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9083365287824545`*^9, 3.9083365883759336`*^9}, {
  3.9083366246399765`*^9, 3.908336667100564*^9}, {3.9083368198403196`*^9, 
  3.9083368201529384`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"ef60cb47-1b71-4997-b370-ff66db34fdc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"Newton", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", "x", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9083366735136995`*^9, 3.9083366752038727`*^9}, {
  3.9083367315141845`*^9, 3.9083367495157037`*^9}, {3.9083368057121162`*^9, 
  3.908336811886712*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"3ec85671-e156-43ce-9b9f-df875b9be600"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{{3.908336812394812*^9, 3.9083368242664022`*^9}},
 CellLabel->
  "Out[319]=",ExpressionUUID->"17ee81ee-8724-4015-9b56-64ace66a9bce"]
}, Open  ]],

Cell["\<\
Other version:
Input:\
\>", "Text",
 CellChangeTimes->{{3.9083369667735767`*^9, 
  3.908336979266185*^9}},ExpressionUUID->"785ce05d-1396-446c-b65a-\
76b686f5e597"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"f", ",", "x", ",", "nit"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"25", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"5", "x"}], "-", "125"}]}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Insert", " ", "the", " ", "function", " ", "f", 
    RowBox[{"(", "x", ")"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], ":=", "2"}], "                ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Insert", " ", "the", " ", "value", " ", "of", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "initial", 
     " ", "guess", " ", 
     SubscriptBox["x", "0"], " ", "for", " ", "the", " ", "solution", " ", 
     "to", " ", "f", 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], " ", "*)"}]}], "\n", 
 RowBox[{"nit", ":=", "5", "                 ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "nit", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
    "iterations"}], " ", "*)"}]}]}], "Input",
 CellLabel->
  "In[320]:=",ExpressionUUID->"fbeb9494-600b-40f0-abc6-f68a77570673"],

Cell["Algorithm", "Text",
 CellChangeTimes->{{3.908337015074068*^9, 
  3.9083370163320584`*^9}},ExpressionUUID->"55960974-b45e-4932-912a-\
fa87adf7be3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"x", "[", "n", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"N", "[", 
           RowBox[{"x", "[", "n", "]"}], "]"}]}]}], ")"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", 
      RowBox[{"N", "[", "nit", "]"}]}], "}"}]}], "]"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
     RowBox[{"x", "[", "n", "]"}], " ", "represents", " ", 
     RowBox[{
      SubscriptBox["x", "n"], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "value", 
     " ", "of", " ", 
     SubscriptBox["x", "0"]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Approximate solution to \>\"", ",", 
       RowBox[{"f", "[", "x", "]"}], ",", "\"\<= 0 after \>\"", ",", " ", 
       "nit", " ", ",", "\"\< iterations is \>\"", ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"x", "[", "nit", "]"}], ",", "9"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Value", " ", "of", " ", 
     SubscriptBox["x", 
      RowBox[{"n", "+", "1"}]], " ", "after", " ", "n"}], "=", 
    RowBox[{"nit", " ", "iterations"}]}], " ", "*)"}]}], "\n", 
 RowBox[{"Clear", "[", "Dist1", "]"}], "\n", 
 RowBox[{
  RowBox[{"Dist1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"N", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"N", "[", "nit", "]"}]}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{"Prepend", "[", 
    RowBox[{"Dist1", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Iteration\>\"", ",", "\"\<   Approximate solution\>\"", ",", 
       "\"\<f[x]\>\""}], "}"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "generates", " ", "a", " ", "table", " ", "of", " ", "the", " ", 
    "approximate", " ", "solution", " ", "and", " ", "the", " ", "y", " ", 
    "value", " ", "of", " ", "the", " ", "function", " ", "at", " ", "that", 
    " ", "x", " ", "value"}], "*)"}]}]}], "Input",
 CellLabel->
  "In[324]:=",ExpressionUUID->"6e773cbe-8ed6-4a3b-add8-0f787fa44fb3"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"Approximate solution to \"", 
    RowBox[{
      RowBox[{"-", "125"}], "-", 
      RowBox[{"5", " ", "x"}], "+", 
      RowBox[{"25", " ", 
        SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}]}], "\"= 0 after \"", "5", 
    "\" iterations is \"", "2.152384416590143`"},
   "RowDefault"],
  StripOnInput->False,
  FontColor->RGBColor[0, 0, 1]]], "Output",
 CellChangeTimes->{3.908337004305706*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"8b64c615-4d1f-4655-9338-74d2b71b7c69"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration\"\>", "\<\"   Approximate solution\"\>", "\<\"f[x]\"\>"},
    {"1.`", "2.1596638655462184`", "0.9513648267017913`"},
    {"2.`", "2.152399768699919`", "0.002002166197854649`"},
    {"3.`", "2.152384416658661`", "8.93581386662845`*^-9"},
    {"4.`", "2.152384416590143`", "0.`"},
    {"5.`", "2.152384416590143`", "0.`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.908337004321328*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"7e87744b-d0ca-4ff8-88d1-bcb84b2c00de"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Integration", "Section",
 CellChangeTimes->{{3.9278368579321365`*^9, 
  3.927836859593358*^9}},ExpressionUUID->"ee0ed6bb-de6a-4801-a075-\
26d2f2b23a0f"],

Cell["Don\[CloseCurlyQuote]t forget integral dx and +C", "Text",
 CellChangeTimes->{{3.9278382351543665`*^9, 3.9278382530308137`*^9}, {
  3.9319370339053135`*^9, 
  3.9319370361496954`*^9}},ExpressionUUID->"f0b63f11-65eb-45c9-9694-\
fcc1d605ec20"],

Cell[CellGroupData[{

Cell["Indefinite Integrals", "Subsection",
 CellChangeTimes->{{3.9278368667140474`*^9, 
  3.927836872172074*^9}},ExpressionUUID->"aec024a6-29c1-4cfa-82dc-\
8246eab5bbaa"],

Cell["\<\
Syntax: Integrate[func, x]
or esc intt esc\
\>", "Text",
 CellChangeTimes->{{3.927836986997627*^9, 3.9278369939732075`*^9}, {
  3.9279332528671103`*^9, 
  3.9279332571392717`*^9}},ExpressionUUID->"d46f1ed0-1b4c-45ec-a50f-\
3bd61f178039"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox["E", 
    RowBox[{"3", "x"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.927836988868797*^9, 3.9278370207573996`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8baf6a37-85f7-47fc-b8a9-67d53df21fbe"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", "x"}]], "3"]], "Output",
 CellChangeTimes->{{3.9278370101214375`*^9, 3.9278370259889345`*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"63d86f14-e4af-4c80-9e3e-8b3599b56452"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Definite Integrals", "Subsection",
 CellChangeTimes->{{3.9278368773834953`*^9, 
  3.927836881103653*^9}},ExpressionUUID->"27e05726-1fb8-4ec1-b9ed-\
af43870fa93d"],

Cell["\<\
Syntax: Integrate[func, {x, low terminal, high terminal}]
or esc dintt esc
TrigToExp: trig -> exponential, better than trig expand\
\>", "Text",
 CellChangeTimes->{{3.927836906249817*^9, 3.9278369624162416`*^9}, {
  3.9279332628321075`*^9, 
  3.927933265685977*^9}},ExpressionUUID->"94e1b776-1c1d-453e-9a69-\
1d1144de82e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"3", "x"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "//", 
  "TrigToExp"}]], "Input",
 CellChangeTimes->{{3.9278368987899647`*^9, 3.9278368997429385`*^9}, {
  3.9278369649433775`*^9, 3.927836970321929*^9}, {3.9279284664283767`*^9, 
  3.9279284747581387`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"b12a398e-91cf-4254-ab6e-fc1b6c10b04b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", "6"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "6"], "3"]}]], "Output",
 CellChangeTimes->{
  3.927836900200109*^9, {3.9278369665531545`*^9, 3.9278369730097523`*^9}, {
   3.9279284667583847`*^9, 3.9279284751882205`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"2c249cc3-5cb3-4ae3-b79e-0f57fbcd473d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{"3", "x"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "//", "TrigExpand"}], "//",
   "Together"}]], "Input",
 CellChangeTimes->{3.9278369713689384`*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"f8c0e658-f9ad-4d04-9695-7b012c2ce84f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "12"]}], 
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", "6"]}]]], "Output",
 CellChangeTimes->{3.927836890984242*^9, 3.9278369717927475`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"4bf91f7a-df38-4340-9e1b-008d16491100"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Length of a curve and avg value", "Subsection",
 CellChangeTimes->{{3.931937246709734*^9, 
  3.931937254806553*^9}},ExpressionUUID->"30a2144b-3b46-4288-ab50-\
fdf6b6b79ad1"],

Cell["length:", "Text",
 CellChangeTimes->{{3.9319373584388657`*^9, 
  3.9319373594233603`*^9}},ExpressionUUID->"0d552b4b-8e88-4644-87e9-\
ed107471483c"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["dy", "dx"], ")"}], "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.931937365332945*^9, 3.931937386191558*^9}, {
  3.9319796615478*^9, 
  3.9319796946993885`*^9}},ExpressionUUID->"6a9fd571-6b5f-4523-9e0e-\
0f6cc6a49a2c"],

Cell["avg value:", "Text",
 CellChangeTimes->{{3.9319373940568714`*^9, 
  3.9319373958279705`*^9}},ExpressionUUID->"0a9724ba-54c2-4ac5-a3ee-\
bb6ffbad8ada"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"b", "-", "a"}]], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "a", "b"], 
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.931937421689105*^9, 
  3.9319374362953005`*^9}},ExpressionUUID->"d7608195-faea-4939-b59a-\
d7af835ab801"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Surds/Nth Roots", "Section",
 CellChangeTimes->{{3.9059661868910165`*^9, 
  3.9059661992851715`*^9}},ExpressionUUID->"4ce47866-355d-4f18-b6cb-\
04dc5a3961c5"],

Cell[CellGroupData[{

Cell["Nth Root Syntax", "Subsection",
 CellChangeTimes->{{3.9059662133919687`*^9, 
  3.9059662165334773`*^9}},ExpressionUUID->"69afad34-eece-4318-b1af-\
35b67f17c417"],

Cell[TextData[{
 "the 4th root of 3 (= ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", 
    FractionBox["1", "4"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cf27f99b-ff29-4dd0-bbc0-57964544ed22"],
 ")"
}], "Text",
 CellChangeTimes->{{3.905966235856756*^9, 
  3.9059662610196767`*^9}},ExpressionUUID->"c24ce7fc-e6c4-4404-8305-\
512fc0a659e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox["x", "2"]}], "-", 
   FractionBox["1", 
    SuperscriptBox["x", "2"]]}], "/.", 
  RowBox[{"x", "->", 
   FractionBox[
    RowBox[{"-", "1"}], 
    RowBox[{"Surd", "[", 
     RowBox[{"3", ",", "4"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.9059654122106867`*^9, 3.905965417646654*^9}, {
  3.9059654783050804`*^9, 3.905965520456111*^9}, {3.9059655550920086`*^9, 
  3.9059655552668304`*^9}, {3.9059655872451267`*^9, 3.905965599549638*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5c766461-333b-4232-aa0b-86f6aaca4ee7"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.905966219744381*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"dfe80a3d-390f-4caf-b605-255bf309ef06"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Piecewise/hybrid functions", "Section",
 CellChangeTimes->{{3.905360481146332*^9, 3.905360511058983*^9}, {
  3.905360551462373*^9, 3.9053605515775986`*^9}, {3.905360589265071*^9, 
  3.905360591532919*^9}},ExpressionUUID->"5dcb10f0-bfcf-4543-933a-\
fdab3f42f925"],

Cell["Defining and Plotting", "Text",
 CellChangeTimes->{{3.905360670619272*^9, 3.9053606742008815`*^9}, {
  3.905529551069645*^9, 
  3.905529551571334*^9}},ExpressionUUID->"01b03795-c13b-4880-85dd-\
3f7ee22592c2"],

Cell["\<\
(exclusions gets rid of all points at x = 0 -> the weird mathematica line)\
\>", "Text",
 CellChangeTimes->{{3.9055295577749443`*^9, 
  3.905529578151231*^9}},ExpressionUUID->"0c5a950f-911b-4dd3-8a0c-\
867753f442d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", ">=", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "x"}], "+", "1"}], ",", 
       RowBox[{"x", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"Exclusions", "->", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9053605173398466`*^9, 3.905360539124447*^9}, {
  3.90536069124251*^9, 3.9053606949178805`*^9}, {3.905529519970622*^9, 
  3.9055295291867175`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0abe7862-8d39-4b44-bf83-e4a828465270"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlxX0s1HEcwPE7eTgUnWRHN3ZOKQ/DYo3k+70boVSinfqj2XDYWk6keTg1
XXIamvK0mdZ5vpm1RuK2+vy2K9HZPN3S7UJJdUn53bm74Q7Vfu/tvRcnQ5Qi
tKHRaP7//i+VG0Hph9lOuXIjn0lQcvG1iAA7LduVGPJqvHu9joMzTyz0KpXO
BKUPDiiO2s3rZBCUbCybT31TwrMjKD3xj4qD0fEsG4LSAysaj8bpBNswf6bB
92afGw79qTGGtJmB0gXHKrSO2wISKBk4X/5sg3ngKwyr06zSajoOdcmT8D8v
AcvhJY+TT8f6giCXwv4lKI70qBoR0HFBtJyrjl+CyCdq5gqXjosm2883ib+A
Iuei/9nXNLy+EpgYMbEIpabGTq/vu8hesvH0dIEGJDxxMnfEiqqSioZ69mog
tjtKm3rfihgeBhWj5yPYOm8K76VakZP8l/m9dg4q1UVl335bkOvkQtKFuA8g
zRF19/haEOvQ24001izU1GZYA2s2kSCbK5sRj0OTJqE3PN2MHtwolD56MQYZ
n9jtWcFm9EqsFKX8eQchi2Rrg8WE/B5nxsykj8L4cstDY7MJGaBDO81XgnVN
d2twyoi8jycEtTMVkGVfHRfOX0eVibotjmQYwhyvoqz962g1XTouMw7BjnNY
ZMOCASlqxrJlcwPQzNQEGUsNqH+ins872Qcq9jH3wQE9KtucXsTevdDis71v
uUKPEo+4lWN6Fwh9px3ck/VItesnulPXBjv+JZbCVRLlXumS377UDKqAc6YO
BYlsBw4vl3vVQ0swZ21WSiLsmXRqi6gEYahJtyeNRNLRranLPqVQa5I9jwkn
0V+d8jux
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11115#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {0., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.90536053340279*^9, 3.905360539600089*^9}, 
   3.9053607038312902`*^9, {3.905529523215989*^9, 3.905529530167118*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"e83edd9d-70a9-4d5e-b8f0-1a0f9a10e8c7"]
}, Open  ]],

Cell["Other Method (esc pw esc then ctrl enter)", "Text",
 CellChangeTimes->{{3.906687992943632*^9, 
  3.906688012771107*^9}},ExpressionUUID->"9228385f-95b3-4967-92e2-\
b1b5cceed024"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "3"}], ")"}], "2"]}], 
          RowBox[{"x", "<=", "0"}]},
         {
          RowBox[{
           RowBox[{"4", "x"}], "-", "9"}], 
          RowBox[{"x", ">", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"82f84a76-2a42-43a3-a7c3-f6290773a8c4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$41918#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-48.99999428571446, 30.99999836734694}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.906688018395156*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"78eb78fc-8f9c-4468-b6e0-97452522fdae"]
}, Open  ]],

Cell["Limits", "Text",
 CellChangeTimes->{{3.9053606642181396`*^9, 
  3.905360665019024*^9}},ExpressionUUID->"56269205-65ff-411f-8eda-\
3babc32d406a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromAbove\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromBelow\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.905360612959821*^9, 3.9053606492891903`*^9}, {
  3.9053606984241314`*^9, 3.905360701410221*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1486972d-5f3a-4ba2-a9ae-479f447e98b5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9053606291560726`*^9, 3.9053606519058948`*^9}, 
   3.905529536269518*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"febf7d56-fbd2-4beb-b8ae-5f64aa243d21"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9053606291560726`*^9, 3.9053606519058948`*^9}, 
   3.905529536381214*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"af038e62-8411-468e-8af1-68095eb95d86"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Things to Remember", "Section",
 CellChangeTimes->{{3.892104312351118*^9, 3.8921043435346885`*^9}, {
  3.892104445891319*^9, 3.892104512428341*^9}, {3.892104556374186*^9, 
  3.8921045607671285`*^9}, {3.892104623068842*^9, 3.8921046271629186`*^9}, {
  3.8927485440596437`*^9, 
  3.892748545298071*^9}},ExpressionUUID->"8e946f0c-4a99-43df-9caf-\
ec4caaffe258"],

Cell[TextData[{
 "1. READ THE QUESTION CAREFULLY\n2. Exact values unless specified otherwise\n\
3. Round to the specified amount of significant figures\n4. Remember to add \
UNITS even for period etc\n5. SHOW your work\n6. Use sentences when needed \
(e.g. \[Therefore] the number of chickens is 5)\n7. Switch inequality signs \
when divide or multiply by a negative number\n8. Some answers have \
restrictions (graphs and values)\n9. Diameter and Radius are different (they \
may try to trick you by asking for diameter after you use a formula for \
radius e.g. ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]r", "2"], TraditionalForm]],ExpressionUUID->
  "9046f70a-ca5e-4552-bdf7-b617f6f8672b"],
 ")\n10. Remember axes change e.g. t axis instead of x axis (when talking \
about translations)\n11. Be careful of negatives (in brackets, fractions, \
etc)\n12. Remember you can use let e.g. let a = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["x"], " ", "to", " ", "get", " ", "a", " ", "quadratic"}], 
   TraditionalForm]],ExpressionUUID->"2d3c87d1-2e7e-4e12-8751-fc76740d7fe7"],
 "\n13. In Inverse functions, asymptotes swap equations and domain and range \
swap\n14. Use the quadratic formula when dealing with bad values: ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"-", "b"}], "+", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        RowBox[{"4", "ac"}]}]]}]}], 
    RowBox[{"2", "a"}]], TraditionalForm]],ExpressionUUID->
  "61017a6c-6fb7-4a9a-bf55-fbf7f7644f01"],
 "\n15. With domains for x in Sin(x) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"+", 
     RowBox[{"-", "5"}]}], "3"], TraditionalForm]],ExpressionUUID->
  "aca0fd77-1fe8-4865-9a99-e167920dc17b"],
 ", check what quadrant the domain is and whether Sin is positive or negative\
\n16. Inside of logs cannot be >= 0, so when you find solutions, check they \
work\n17. Simplify expressions\n18. May need to use , Reals and //N in logs \
and exponents\n19. SYNTAX e.g. integral dx and +C\n20. FindInstance, FindRoot \
when solve doesnt work\n21. In integration, when finding area unit = y ax \
units * x ax units (e.g. v(m/s) vs t(s): area = m)\n22. >= NOT SAME AS > \
(especially in discrete probability)\n\nFull Function Notation: f: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"domain", "->", 
     RowBox[{"codomain", 
      RowBox[{"(", "R", ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"f", 
      RowBox[{"(", "x", ")"}]}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "+"}]}]}], TraditionalForm]],ExpressionUUID->
  "3f717d14-b75b-4a9f-b126-2715d2ed4201"],
 "2x+1\ncodomain is always R in methods\nPercentage error: |",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"observed", "-", "expected"}], "expected"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "29303aa7-ed54-4164-bb71-b9b9ee217b4a"],
 "|*100%"
}], "Text",
 CellChangeTimes->{{3.892104635183339*^9, 3.8921046397609525`*^9}, {
   3.8921048788153343`*^9, 3.892104923935723*^9}, {3.8921055392933736`*^9, 
   3.892105561063491*^9}, {3.8921056002435803`*^9, 3.892105606675082*^9}, {
   3.892105765401408*^9, 3.8921057744180527`*^9}, {3.892139772388909*^9, 
   3.892139832479582*^9}, {3.893882519888011*^9, 3.8938825693107285`*^9}, 
   3.8938920797628007`*^9, {3.8939927996603537`*^9, 3.8939928195271883`*^9}, {
   3.8999428448762617`*^9, 3.899942864539297*^9}, {3.8999537532528563`*^9, 
   3.899953778482546*^9}, {3.8999599546551743`*^9, 3.899959987221546*^9}, {
   3.899966427265503*^9, 3.899966454097859*^9}, {3.90782519594671*^9, 
   3.9078252607804546`*^9}, {3.91003181173484*^9, 3.910031971295884*^9}, {
   3.9100320102514453`*^9, 3.910032050494976*^9}, {3.910032155272015*^9, 
   3.910032175632785*^9}, {3.9234493562660613`*^9, 3.92344938204723*^9}, {
   3.9234627380008435`*^9, 3.9234627614661074`*^9}, {3.9269846601643763`*^9, 
   3.9269846618460646`*^9}, {3.927838206783329*^9, 3.9278382150990677`*^9}, {
   3.9319370412645645`*^9, 3.9319370741406703`*^9}, {3.932006219046109*^9, 
   3.932006224783272*^9}, {3.9338866169084854`*^9, 3.933886666525284*^9}, {
   3.934941637290267*^9, 3.934941658258746*^9}, {3.9349417067217507`*^9, 
   3.9349417070811863`*^9}, 3.934941806981037*^9, {3.9349483536158624`*^9, 
   3.9349483949608636`*^9}},ExpressionUUID->"88dfd089-e917-4e11-8c62-\
31a8bdf98839"],

Cell[CellGroupData[{

Cell["Starting", "Subsection",
 CellChangeTimes->{{3.9269846798933635`*^9, 
  3.9269846811401587`*^9}},ExpressionUUID->"2349c7cc-d807-4570-9dd8-\
1d7d32ea5206"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Sin", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Cos", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Tan", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["\[Pi]", "6"], ",", " ", 
         FractionBox["\[Pi]", "4"], ",", 
         FractionBox["\[Pi]", "3"], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"FontSize", "->", "Larger"}]}], "]"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"values", "/.", " ", 
       RowBox[{"ComplexInfinity", "->", "Infinity"}]}]}], "]"}], ",", 
    RowBox[{"Dividers", "->", "All"}], ",", 
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[LongEqual]\>\"", ",", "Center"}], "}"}]}]}], "]"}], "//",
   "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.926984656625873*^9, 3.9269846842342896`*^9}, 
   3.926985075123678*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"2a45c67a-4c7a-4620-9b44-9facbb1e60b7"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      ItemBox[
       StyleBox[
        RowBox[{"sin", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"cos", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"tan", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", "0", ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", "0", ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", "0", ")"}], "\[LongEqual]", "0"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["3"]]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", "1"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       SqrtBox["3"]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "\[Infinity]"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{"\[LongEqual]"}}, "Rows" -> {{Center}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{3.926985076154855*^9},
 CellLabel->
  "Out[19]//TraditionalForm=",ExpressionUUID->"6e345b95-faeb-4dbc-984f-\
8ab50bb6d11a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"900c8458-a4ba-4cc4-b18e-42da0fb1ad4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TangentLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eqn", ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"0c3983e4-9847-45e3-a1bc-5cc93cb3aee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"D", "[", 
           RowBox[{"eqn", ",", "x"}], "]"}]}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"06b8f74e-0d7f-427e-8563-76eca513743f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compsq", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", 
        FractionBox["b", 
         RowBox[{"2", "a"}]]}], ")"}], "2"]}], "+", "c", "-", 
    FractionBox[
     SuperscriptBox["b", "2"], 
     RowBox[{"4", "a"}]]}], "//", "TraditionalForm"}]}]], "Input",ExpressionUU\
ID->"832e49a7-e751-4d83-a458-a54c02122c60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Newton", "[", 
   RowBox[{"eqn_", ",", "var_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"x", "-", 
   FractionBox[
    RowBox[{"eqn", "/.", 
     RowBox[{"var", "->", "x"}]}], 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eqn", ",", "var"}], "]"}], "/.", 
     RowBox[{"var", "->", "x"}]}]]}]}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"340a0248-090b-4a62-8ee2-20a9ee4eb027"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDerivative", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "df", "}"}], ",", 
    RowBox[{
     RowBox[{"df", "=", 
      RowBox[{"D", "[", 
       RowBox[{"func", ",", "x"}], "]"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"func", ",", "df"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Function\>\"", ",", "\"\<Derivative\>\""}], "}"}]}], 
       ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}]}], "]"}]}]], "Input",\
ExpressionUUID->"2ff878ae-46eb-4830-9aba-8987da345e8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"eqn_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "max_", ",", "min_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "eqn", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "min", ",", "max"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",ExpressionUUID->"1d12a3bb-2c8d-4862-8d85-6481ffffe226"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "'"}], "[", "x", "]"}], "==", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"z", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9269851883864393`*^9, 
  3.926985200324746*^9}},ExpressionUUID->"c9beda45-734e-4161-8c7a-\
19a899f60b27"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.2 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"dcb6d2c2-072c-46c1-aff2-916ba3ddd176"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 404, 6, 115, "Title",ExpressionUUID->"bf3f62ff-071c-40e8-957e-6654073ad6aa"],
Cell[CellGroupData[{
Cell[1009, 32, 169, 3, 83, "Section",ExpressionUUID->"b65f5c97-4158-416a-a0be-4bce61759dcf"],
Cell[CellGroupData[{
Cell[1203, 39, 181, 3, 40, "Subsection",ExpressionUUID->"53799b5a-5086-4e9c-8cc4-79e82b55cf3e"],
Cell[1387, 44, 1077, 22, 321, "Text",ExpressionUUID->"f502a67b-09c5-40b6-b62c-5ca89b4a9932"]
}, Closed]],
Cell[CellGroupData[{
Cell[2501, 71, 318, 5, 39, "Subsection",ExpressionUUID->"a2fb99b7-2871-4af1-905d-59cbf9324dc4"],
Cell[CellGroupData[{
Cell[2844, 80, 555, 8, 39, "Subsubsection",ExpressionUUID->"6bd20e71-e811-4f4f-a3d1-0f88562c974f"],
Cell[3402, 90, 500, 10, 66, "Text",ExpressionUUID->"a2148367-7004-4ddb-a93c-63ab6250b961"],
Cell[CellGroupData[{
Cell[3927, 104, 303, 8, 47, "Input",ExpressionUUID->"4889bbe2-b297-4470-8dad-60ff90f99d41"],
Cell[4233, 114, 226, 5, 47, "Output",ExpressionUUID->"36badadc-bed7-4cc0-8aee-652d8770812c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4496, 124, 639, 16, 48, "Input",ExpressionUUID->"37b13f3b-2653-4c76-9c9f-3aba21db1958"],
Cell[5138, 142, 329, 9, 63, "Output",ExpressionUUID->"865ac248-26ec-4628-b5c7-f9cf88d62516"]
}, Open  ]],
Cell[5482, 154, 200, 3, 39, "Text",ExpressionUUID->"26d10100-bf78-485f-9034-26ef4efc0488"],
Cell[CellGroupData[{
Cell[5707, 161, 513, 12, 66, "Input",ExpressionUUID->"2f31cd20-6c76-4230-9a2d-a8250cec8cca"],
Cell[6223, 175, 280, 7, 61, "Output",ExpressionUUID->"c14848d3-7a4d-41f6-a3d9-51d026ba36b9"]
}, Open  ]],
Cell[6518, 185, 204, 3, 39, "Text",ExpressionUUID->"5a213a4d-44bf-42b4-a039-4480750c67ac"],
Cell[CellGroupData[{
Cell[6747, 192, 838, 27, 76, "Input",ExpressionUUID->"bfad1bc8-c4b5-42f5-a4a2-103bd048e31d"],
Cell[7588, 221, 235, 4, 47, "Output",ExpressionUUID->"49c18b8c-c8e7-4643-a679-25e9b9e81b98"],
Cell[7826, 227, 433, 11, 50, "Output",ExpressionUUID->"b96b8e7c-e603-47db-a1fd-0bddcc14eb07"]
}, Open  ]],
Cell[8274, 241, 189, 3, 39, "Text",ExpressionUUID->"e272b757-66fc-4767-81b0-1efdaeaa5be2"],
Cell[CellGroupData[{
Cell[8488, 248, 611, 19, 82, "Input",ExpressionUUID->"755ab690-15de-49a6-80fd-0c85408e4bf6"],
Cell[9102, 269, 224, 5, 61, "Output",ExpressionUUID->"bfbf2cc0-ffed-43bd-a188-43d50a11ab50"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9375, 280, 211, 4, 38, "Subsubsection",ExpressionUUID->"88419862-3a76-4db8-aa92-3bb964f892bc"],
Cell[9589, 286, 283, 8, 96, "Text",ExpressionUUID->"69eb115a-9b3c-44ea-b9d5-4c2f66b7971f"],
Cell[CellGroupData[{
Cell[9897, 298, 277, 6, 49, "Input",ExpressionUUID->"de99d67a-5bb7-44e6-8ffc-6d4e2b91aef0"],
Cell[10177, 306, 669, 18, 79, "Output",ExpressionUUID->"a1f6f2d0-9339-41e7-94ac-90afd091a514"]
}, Open  ]],
Cell[10861, 327, 148, 2, 39, "Text",ExpressionUUID->"03deee98-44fb-421f-a03c-ab313fc20c28"],
Cell[CellGroupData[{
Cell[11034, 333, 301, 7, 49, "Input",ExpressionUUID->"6e4ebbdd-ce4d-43bb-a9d5-94b5f41f758d"],
Cell[11338, 342, 226, 5, 45, "Output",ExpressionUUID->"7503754f-df29-42b0-96a5-c0fd48ea2f2f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11613, 353, 403, 6, 38, "Subsubsection",ExpressionUUID->"a92087f8-8549-4e46-8947-7fc7a07013de"],
Cell[12019, 361, 434, 9, 66, "Text",ExpressionUUID->"2f5d9e8b-893e-49ff-97ee-ca7ed0b2a54c"],
Cell[CellGroupData[{
Cell[12478, 374, 476, 14, 66, "Input",ExpressionUUID->"10332cf6-3a8b-4cda-b639-da409c53aca9"],
Cell[12957, 390, 301, 8, 65, "Output",ExpressionUUID->"5bedd143-b18c-4423-98f1-6401c708e7a0"]
}, Open  ]],
Cell[13273, 401, 378, 9, 66, "Text",ExpressionUUID->"db944fb9-dddd-496a-b1b0-4de89267cabc"],
Cell[CellGroupData[{
Cell[13676, 414, 482, 14, 66, "Input",ExpressionUUID->"0c7dc6b5-9d73-4a11-bcb5-22daf5530082"],
Cell[14161, 430, 341, 10, 65, "Output",ExpressionUUID->"a19541b3-8fdd-4544-bd7c-b1a57a8ff17e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14551, 446, 286, 5, 38, "Subsubsection",ExpressionUUID->"824687f3-d4db-4b68-b5bb-0b83850c9393"],
Cell[14840, 453, 330, 8, 66, "Text",ExpressionUUID->"25286814-ef1c-4e33-ab2b-fb2f8a328ac5"],
Cell[CellGroupData[{
Cell[15195, 465, 476, 14, 66, "Input",ExpressionUUID->"5624c4f0-4e2c-44a6-afe8-b8a68cb5ca68"],
Cell[15674, 481, 275, 7, 67, "Output",ExpressionUUID->"ce094a95-aa6c-4d9e-aa15-6fb982f04088"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15998, 494, 283, 5, 38, "Subsubsection",ExpressionUUID->"0e49ae3f-5e45-4d5e-9f34-b731761f05c8"],
Cell[16284, 501, 339, 8, 66, "Text",ExpressionUUID->"0c5023ed-bb40-45ba-a874-a65ebca74bf3"],
Cell[CellGroupData[{
Cell[16648, 513, 273, 6, 45, "Input",ExpressionUUID->"a7897161-4516-4a38-a5a0-5c0d4bce2f61"],
Cell[16924, 521, 196, 3, 45, "Output",ExpressionUUID->"11fa8841-4a1c-47c6-9468-b8b853f21b53"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[17169, 530, 282, 5, 38, "Subsubsection",ExpressionUUID->"40213687-5c14-43f3-817c-c950d1f9a08a"],
Cell[17454, 537, 362, 9, 68, "Text",ExpressionUUID->"33a18c5d-3fff-4ca1-b23a-8676ef2dde51"],
Cell[CellGroupData[{
Cell[17841, 550, 195, 3, 46, "Input",ExpressionUUID->"48d69986-423e-4fdc-ae07-23b17f15d569"],
Cell[18039, 555, 148, 2, 46, "Output",ExpressionUUID->"7a97b750-116d-4e59-8490-9543fac89884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18224, 562, 175, 2, 46, "Input",ExpressionUUID->"56feb70d-e61a-47fa-9a0a-6a1f0ff0046c"],
Cell[18402, 566, 150, 2, 46, "Output",ExpressionUUID->"5ade36a2-ab30-4f64-9f78-fce3a001e9c9"]
}, Open  ]],
Cell[18567, 571, 204, 3, 46, "Input",ExpressionUUID->"1d546958-3bac-4ab0-8319-ed33b1d0b798"],
Cell[CellGroupData[{
Cell[18796, 578, 174, 2, 46, "Input",ExpressionUUID->"a22fd709-0172-40e4-a082-626a6c55c1b5"],
Cell[18973, 582, 151, 2, 46, "Output",ExpressionUUID->"6afbd1bb-8df3-47ad-aba2-7ed52526b117"]
}, Open  ]],
Cell[19139, 587, 422, 8, 70, "Input",ExpressionUUID->"10cdaa4a-18fc-46fd-8ee5-d50954965471"]
}, Closed]],
Cell[CellGroupData[{
Cell[19598, 600, 319, 5, 38, "Subsubsection",ExpressionUUID->"3ace38f1-632a-4bb1-a979-63fa05e24636"],
Cell[19920, 607, 392, 8, 39, "Text",ExpressionUUID->"1bd66e65-8316-4f18-8efd-19572abb2a26"],
Cell[20315, 617, 321, 7, 45, "Input",ExpressionUUID->"ea648de7-ff3f-439c-b3f3-609c88547246"],
Cell[CellGroupData[{
Cell[20661, 628, 203, 3, 45, "Input",ExpressionUUID->"e5c97a6e-ed33-461b-80c1-95f906c94e9b"],
Cell[20867, 633, 168, 3, 45, "Output",ExpressionUUID->"9a5cea25-75b4-4a70-ac18-08406512e16e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21072, 641, 221, 4, 45, "Input",ExpressionUUID->"fa8f79e6-3878-4182-b1d2-22a781b033f5"],
Cell[21296, 647, 214, 5, 45, "Output",ExpressionUUID->"b0b9f00f-2eaa-452d-8301-1241391b32f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21547, 657, 283, 6, 45, "Input",ExpressionUUID->"4b38ca4d-a1a1-4d47-860e-48f7ceb15401"],
Cell[21833, 665, 247, 6, 65, "Output",ExpressionUUID->"d18eca52-30fc-4fb3-9f5a-5a8531882087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22117, 676, 459, 12, 45, "Input",ExpressionUUID->"f6e672a8-d56f-41a6-b3e4-122243c55d8c"],
Cell[22579, 690, 2366, 56, 294, "Output",ExpressionUUID->"b1bd3338-3365-40ad-9ab6-88cb53864be2"]
}, Open  ]],
Cell[24960, 749, 209, 4, 45, "Input",ExpressionUUID->"3aa05163-c967-4bba-8114-fc1f9960c711"]
}, Closed]],
Cell[CellGroupData[{
Cell[25206, 758, 228, 4, 38, "Subsubsection",ExpressionUUID->"3e592ed0-8933-42e6-8b7b-818ce0ee30a8"],
Cell[25437, 764, 180, 3, 38, "Text",ExpressionUUID->"c1c74f16-947f-4a84-bbaa-eb57942cbb53"],
Cell[CellGroupData[{
Cell[25642, 771, 325, 8, 69, "Input",ExpressionUUID->"d4850ffb-3487-4009-8302-5de59e8c45b4"],
Cell[25970, 781, 298, 8, 62, "Output",ExpressionUUID->"da963a4b-df03-482f-8e9a-0a1f630b0a0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26305, 794, 359, 10, 69, "Input",ExpressionUUID->"24d28d5e-cc5b-4f27-84f6-b0551c910e84"],
Cell[26667, 806, 325, 9, 62, "Output",ExpressionUUID->"7cf97288-86fd-4af1-8ec9-7fd3a06bb66a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[27053, 822, 167, 3, 39, "Subsection",ExpressionUUID->"be3916cd-60b3-424f-9ddd-f0a839a00bc8"],
Cell[CellGroupData[{
Cell[27245, 829, 411, 6, 37, "Subsubsection",ExpressionUUID->"f082f1de-2211-4269-a373-96d3154c4b8a"],
Cell[27659, 837, 701, 14, 66, "Text",ExpressionUUID->"f0076813-9c3c-409d-ae1b-5439806662c1"],
Cell[CellGroupData[{
Cell[28385, 855, 336, 8, 49, "Input",ExpressionUUID->"e015b7d4-e35a-4bf0-912a-c8f83ee9b290"],
Cell[28724, 865, 7610, 144, 295, "Output",ExpressionUUID->"9e6a867e-7d9b-4e8d-8764-fdda61edc0e5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36383, 1015, 335, 5, 37, "Subsubsection",ExpressionUUID->"33b6dd24-a380-4a4d-b60b-073cb04e4c68"],
Cell[36721, 1022, 353, 8, 66, "Text",ExpressionUUID->"4208e532-b513-4856-b2a4-d3fd21af3913"],
Cell[CellGroupData[{
Cell[37099, 1034, 508, 13, 49, "Input",ExpressionUUID->"cc4e39f5-ac22-4c51-8b59-eaa67dc6e1ed"],
Cell[37610, 1049, 6555, 125, 305, "Output",ExpressionUUID->"c35695ff-1957-44fb-bcba-f051745e2c43"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44214, 1180, 342, 5, 37, "Subsubsection",ExpressionUUID->"731c5577-0794-4eea-a005-f0567f83b0c8"],
Cell[44559, 1187, 405, 9, 66, "Text",ExpressionUUID->"da041977-6295-4580-86cf-26767c222327"],
Cell[CellGroupData[{
Cell[44989, 1200, 601, 16, 49, "Input",ExpressionUUID->"a259022c-bf2b-4a21-9ba2-be047eb4f99b"],
Cell[45593, 1218, 3838, 80, 459, "Output",ExpressionUUID->"fad4144e-167c-433b-9565-c24e352c2ade"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[49480, 1304, 242, 4, 37, "Subsubsection",ExpressionUUID->"c45b2c15-3604-43c5-80d4-24219fb41269"],
Cell[49725, 1310, 249, 7, 66, "Text",ExpressionUUID->"ac3802b5-0d8a-4cdf-b870-62cd46e7ef37"],
Cell[CellGroupData[{
Cell[49999, 1321, 510, 15, 56, "Input",ExpressionUUID->"14343b19-e5ff-43bd-9dbb-0977a19ece4d"],
Cell[50512, 1338, 9886, 180, 478, "Output",ExpressionUUID->"1744e616-12aa-4121-976b-c0d6fface474"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60447, 1524, 366, 6, 37, "Subsubsection",ExpressionUUID->"0274ff43-971c-4222-bd4a-b7569051ee4c"],
Cell[60816, 1532, 402, 8, 66, "Text",ExpressionUUID->"1a9a9b75-1ca8-45e2-94e2-f71b75f0e1ca"],
Cell[CellGroupData[{
Cell[61243, 1544, 676, 21, 66, "Input",ExpressionUUID->"c60aeda9-75aa-4b75-b45a-887e329afcdd"],
Cell[61922, 1567, 1710, 35, 385, "Output",ExpressionUUID->"578c8b16-8314-4c17-9c4b-59b280d6a3f9"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[63693, 1609, 174, 3, 39, "Subsection",ExpressionUUID->"78b28e05-6202-44bc-9fa4-e5a70079d865"],
Cell[CellGroupData[{
Cell[63892, 1616, 317, 5, 38, "Subsubsection",ExpressionUUID->"8c072f80-99a9-47a7-b07f-2fa2f6022b80"],
Cell[64212, 1623, 346, 5, 40, "Text",ExpressionUUID->"21bb1156-2598-471e-8361-bbca3e711cdf"],
Cell[CellGroupData[{
Cell[64583, 1632, 228, 4, 46, "Input",ExpressionUUID->"e7c11274-f3a5-49e2-9e5a-66dd80e63495"],
Cell[64814, 1638, 194, 3, 62, "Output",ExpressionUUID->"132ce75c-070e-4fa9-ad6a-fb1c18578201"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65045, 1646, 277, 6, 77, "Input",ExpressionUUID->"1046680b-8400-4e9f-a316-ee8c84030f0d"],
Cell[65325, 1654, 229, 3, 44, "Output",ExpressionUUID->"408f08c3-1c66-48dc-82ed-1039a92ec0f7"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[65593, 1662, 168, 3, 39, "Subsection",ExpressionUUID->"64a937f6-8431-4960-8c80-9a19af657591"],
Cell[CellGroupData[{
Cell[65786, 1669, 166, 3, 39, "Subsection",ExpressionUUID->"61b7a619-1e40-4df3-acdf-2c4d9242cd1e"],
Cell[CellGroupData[{
Cell[65977, 1676, 158, 3, 38, "Subsubsection",ExpressionUUID->"235f15b5-c5e7-4460-ae6b-55f7faa66de2"],
Cell[66138, 1681, 353, 7, 68, "Text",ExpressionUUID->"d2e69137-55d4-4899-a47f-b862978af3cd"],
Cell[CellGroupData[{
Cell[66516, 1692, 231, 4, 46, "Input",ExpressionUUID->"1e1920bd-c1ca-44e1-9160-eb247deced1b"],
Cell[66750, 1698, 154, 2, 46, "Output",ExpressionUUID->"4db37fb0-8c76-4472-b864-5b189ade26ec"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[66965, 1707, 163, 3, 39, "Subsection",ExpressionUUID->"bce946fc-9e9b-4bbb-ad61-b48654ec5d15"],
Cell[67131, 1712, 477, 10, 122, "Text",ExpressionUUID->"6ac6ea03-81f2-4271-a813-6b6f7d1deddc"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[67657, 1728, 288, 4, 66, "Section",ExpressionUUID->"66755660-2680-40cb-8735-685f87c94546"],
Cell[CellGroupData[{
Cell[67970, 1736, 158, 3, 40, "Subsection",ExpressionUUID->"4a45307d-a464-44ca-b439-fe348bd84060"],
Cell[68131, 1741, 243, 7, 66, "Text",ExpressionUUID->"b0423dbd-323c-4c67-a870-7cd356f32425"],
Cell[CellGroupData[{
Cell[68399, 1752, 274, 6, 47, "Input",ExpressionUUID->"b74af34b-684d-4875-8cdc-2370649d6834"],
Cell[68676, 1760, 175, 2, 47, "Output",ExpressionUUID->"a1ed4c63-7bb1-4cf2-9490-515811293428"]
}, Open  ]],
Cell[68866, 1765, 194, 6, 66, "Text",ExpressionUUID->"4ba5075f-9310-4fee-8998-2c8db7ab7da8"],
Cell[CellGroupData[{
Cell[69085, 1775, 295, 7, 47, "Input",ExpressionUUID->"89114db3-ab92-4dd2-9ceb-785313363a8d"],
Cell[69383, 1784, 178, 2, 47, "Output",ExpressionUUID->"84a57820-70f0-46b1-aaa8-289cfb077d8b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69610, 1792, 229, 4, 39, "Subsection",ExpressionUUID->"eece97fb-0070-4a2d-8f6c-a2bed64fba53"],
Cell[69842, 1798, 2996, 59, 454, "Text",ExpressionUUID->"e29f4661-1986-4439-ba6e-9500ec383bd2"],
Cell[72841, 1859, 178, 3, 40, "Text",ExpressionUUID->"01f4f8cb-5c7e-48e0-bb19-1e39fc43f63e"],
Cell[CellGroupData[{
Cell[73044, 1866, 261, 5, 49, "Input",ExpressionUUID->"ed9d4dbb-361d-482d-8e19-7bdc9a20cdbc"],
Cell[73308, 1873, 153, 2, 46, "Output",ExpressionUUID->"c22bfb9c-3a5d-4dfd-8bd3-72a9098f5b6a"]
}, Open  ]],
Cell[73476, 1878, 177, 3, 40, "Text",ExpressionUUID->"1ee71ace-9bb3-4b6e-9eed-92090307e5cd"],
Cell[CellGroupData[{
Cell[73678, 1885, 319, 6, 49, "Input",ExpressionUUID->"57fac4c7-8fd7-40d7-8f89-471917092b79"],
Cell[74000, 1893, 238, 4, 46, "Output",ExpressionUUID->"4e583664-f571-45da-bcdb-394a8f7eb691"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74287, 1903, 219, 4, 39, "Subsection",ExpressionUUID->"6cc06257-d0ae-477c-b086-df13d9e0c766"],
Cell[CellGroupData[{
Cell[74531, 1911, 469, 7, 38, "Subsubsection",ExpressionUUID->"06bca0f8-7530-4121-9f50-46d7f15f3c5d"],
Cell[75003, 1920, 591, 10, 66, "Text",ExpressionUUID->"5d1e7c3a-4bad-4dec-a644-1bd76a962015"]
}, Closed]],
Cell[CellGroupData[{
Cell[75631, 1935, 479, 7, 38, "Subsubsection",ExpressionUUID->"b20b7adc-068e-47d0-9037-a70e73666d55"],
Cell[76113, 1944, 572, 10, 39, "Text",ExpressionUUID->"73b765d6-ca05-4f0b-ad05-1e043facd2ed"],
Cell[CellGroupData[{
Cell[76710, 1958, 380, 10, 44, "Input",ExpressionUUID->"2833080d-8509-4e62-864e-ddf5145c89f7"],
Cell[77093, 1970, 3045, 69, 293, "Output",ExpressionUUID->"c32e1f6e-2482-40fc-aec7-c041eb0bf627"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80187, 2045, 528, 8, 38, "Subsubsection",ExpressionUUID->"36f8d0d5-c046-4d76-8894-7c4d765f4976"],
Cell[80718, 2055, 534, 10, 39, "Text",ExpressionUUID->"ff193de8-1dc0-422f-89b6-a91f742ece4e"],
Cell[CellGroupData[{
Cell[81277, 2069, 486, 13, 49, "Input",ExpressionUUID->"a97971ce-5b37-4b0f-95a6-80002c828f25"],
Cell[81766, 2084, 6311, 121, 305, "Output",ExpressionUUID->"d11bcead-f4b1-4de0-aced-582953f43cea"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88126, 2211, 159, 3, 38, "Subsubsection",ExpressionUUID->"96951eb2-8c78-424a-83d5-03d3d9c57901"],
Cell[88288, 2216, 268, 6, 39, "Text",ExpressionUUID->"7df5b235-5861-496c-b4b6-ad0d932f58ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[88593, 2227, 326, 5, 38, "Subsubsection",ExpressionUUID->"f55870cc-0aef-4d26-b654-a092b7313e54"],
Cell[88922, 2234, 287, 4, 39, "Text",ExpressionUUID->"c7aa27af-36c4-4b73-b99b-db0d58b76091"],
Cell[CellGroupData[{
Cell[89234, 2242, 550, 14, 49, "Input",ExpressionUUID->"d99b4ba3-67db-489f-803e-1ab15f5b1a90"],
Cell[89787, 2258, 4738, 94, 458, "Output",ExpressionUUID->"845c5391-75cd-480f-8c3d-37e77998e68b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94574, 2358, 276, 4, 38, "Subsubsection",ExpressionUUID->"12863c79-7a0b-4ec9-89af-592ca358a9b9"],
Cell[94853, 2364, 248, 4, 39, "Text",ExpressionUUID->"6adf873b-faec-49b9-bac6-42e1d04676af"],
Cell[CellGroupData[{
Cell[95126, 2372, 603, 16, 49, "Input",ExpressionUUID->"f8baf995-aba7-4fbd-b52f-559798bebf2e"],
Cell[95732, 2390, 3840, 80, 459, "Output",ExpressionUUID->"a2cfce26-8963-4de3-86c5-f08335f40f98"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[99633, 2477, 308, 5, 39, "Subsection",ExpressionUUID->"d10c7423-4f56-4bab-b175-d85da7be5e01"],
Cell[99944, 2484, 1174, 21, 208, "Text",ExpressionUUID->"393e8fef-36ba-4ecb-bd1d-130c2f7c1868"],
Cell[CellGroupData[{
Cell[101143, 2509, 518, 8, 38, "Subsubsection",ExpressionUUID->"a6f37ad9-217f-44a5-95be-553c7602378c"],
Cell[101664, 2519, 729, 16, 42, "Text",ExpressionUUID->"6da22638-d303-4c1d-9421-7b3a9c01090a"],
Cell[CellGroupData[{
Cell[102418, 2539, 456, 12, 65, "Input",ExpressionUUID->"da923616-9138-4519-a5a2-128c9b4e324d"],
Cell[102877, 2553, 10791, 195, 305, "Output",ExpressionUUID->"116362e5-3fbb-420d-8622-b6989cc76713"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[113717, 2754, 367, 6, 38, "Subsubsection",ExpressionUUID->"d2cc13ef-e398-4e7b-b382-1ac4e76803a5"],
Cell[114087, 2762, 680, 18, 48, "Text",ExpressionUUID->"15edd3bc-8bba-4cc9-a83d-3540c258ed12"],
Cell[CellGroupData[{
Cell[114792, 2784, 479, 13, 66, "Input",ExpressionUUID->"9d0b763e-de73-4a01-a365-248c6695749c"],
Cell[115274, 2799, 13316, 236, 300, "Output",ExpressionUUID->"749fd72a-6d51-445c-a828-f6e7bc24c396"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[128639, 3041, 519, 8, 38, "Subsubsection",ExpressionUUID->"b93b15ea-2d1a-4717-92fd-40d236687c18"],
Cell[129161, 3051, 772, 18, 42, "Text",ExpressionUUID->"97cef482-f24c-41e0-978d-7749496390d4"],
Cell[CellGroupData[{
Cell[129958, 3073, 455, 12, 49, "Input",ExpressionUUID->"068cabae-a6fb-44d6-a0e4-98ee236620e9"],
Cell[130416, 3087, 4065, 84, 294, "Output",ExpressionUUID->"60c190f5-2341-423c-b9e9-285942a3aa1b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134530, 3177, 419, 6, 38, "Subsubsection",ExpressionUUID->"5476705e-45f9-40d5-85a4-03eeaac4d5b5"],
Cell[134952, 3185, 1366, 39, 66, "Text",ExpressionUUID->"8cd24ed3-2ecd-4fb1-b34e-3a9be1ebcc93"],
Cell[CellGroupData[{
Cell[136343, 3228, 533, 15, 49, "Input",ExpressionUUID->"021a84fb-6cde-4023-8c64-d181777af7ba"],
Cell[136879, 3245, 3840, 80, 459, "Output",ExpressionUUID->"879de085-254d-43e0-8b91-4c063587e111"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[140768, 3331, 621, 9, 38, "Subsubsection",ExpressionUUID->"dcdf27fb-8e71-4c67-887d-d703da74d200"],
Cell[141392, 3342, 914, 21, 48, "Text",ExpressionUUID->"4b73a7e8-2a99-4880-8d8d-015c2ca32672"],
Cell[CellGroupData[{
Cell[142331, 3367, 861, 19, 56, "Input",ExpressionUUID->"938ca171-c86b-47e5-b092-cc4034a59f17"],
Cell[143195, 3388, 10016, 183, 478, "Output",ExpressionUUID->"a0295b2c-0c68-4754-b03f-03377b5693c1"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153284, 3579, 175, 3, 66, "Section",ExpressionUUID->"891d6cd2-77d6-48ae-85c8-1de616df17e4"],
Cell[153462, 3584, 248, 7, 68, "Text",ExpressionUUID->"95f937b5-bd67-414c-b9c8-eef8c00a4d8c"],
Cell[CellGroupData[{
Cell[153735, 3595, 165, 3, 40, "Subsection",ExpressionUUID->"6d6c9bd9-7c42-40d6-97dd-4709de432bee"],
Cell[153903, 3600, 27103, 468, 345, "Text",ExpressionUUID->"ed19e867-480d-4e2c-8aba-13ec07933d70"],
Cell[CellGroupData[{
Cell[181031, 4072, 167, 3, 38, "Subsubsection",ExpressionUUID->"88305daf-f105-486f-9dd3-1d6abd818a77"],
Cell[181201, 4077, 325, 9, 37, "Text",ExpressionUUID->"8a04927b-de26-4716-85fe-599f643d6659"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181563, 4091, 170, 3, 38, "Subsubsection",ExpressionUUID->"e1a1237e-7892-4c8f-9508-0fa305991d5b"],
Cell[181736, 4096, 369, 11, 37, "Text",ExpressionUUID->"7284293f-7c08-40d7-857e-1d404b9d9973"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[182166, 4114, 181, 3, 66, "Section",ExpressionUUID->"b7a553ba-c4f2-4ca1-94ef-8e0032c26152"],
Cell[CellGroupData[{
Cell[182372, 4121, 182, 3, 40, "Subsection",ExpressionUUID->"f89873ca-d831-4a18-a00f-a677189d2537"],
Cell[CellGroupData[{
Cell[182579, 4128, 227, 4, 38, "Subsubsection",ExpressionUUID->"55ed0a99-dc35-4f4a-a4e5-ebeef7213a75"],
Cell[182809, 4134, 67473, 1113, 312, "Text",ExpressionUUID->"4c7fcc96-32f0-4eab-83d6-e3b8e473c8cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[250319, 5252, 173, 3, 38, "Subsubsection",ExpressionUUID->"6e19ab5f-33d2-4135-a307-b1dfed1fd66e"],
Cell[250495, 5257, 91542, 1507, 197, "Text",ExpressionUUID->"8efb0619-afdc-4494-9df4-d87a1af57341"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[342086, 6770, 163, 3, 39, "Subsection",ExpressionUUID->"391307df-353b-403b-902c-06c8d0c2e933"],
Cell[342252, 6775, 4145, 101, 656, "Text",ExpressionUUID->"003e99ca-2d1f-419a-86c0-11ddbeb0f66b"]
}, Closed]],
Cell[CellGroupData[{
Cell[346434, 6881, 220, 4, 39, "Subsection",ExpressionUUID->"87c7f327-80ad-4abb-9d98-fef5957b055f"],
Cell[346657, 6887, 81260, 1412, 930, "Text",ExpressionUUID->"1bfd3f8e-b555-411c-a00f-59c07342e368"],
Cell[427920, 8301, 1041, 35, 124, "Text",ExpressionUUID->"403500ac-c354-4fc1-80e4-d72e25d1375e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[429010, 8342, 362, 6, 66, "Section",ExpressionUUID->"d431406b-ed18-415f-acc3-90d0abd6758b"],
Cell[CellGroupData[{
Cell[429397, 8352, 225, 4, 40, "Subsection",ExpressionUUID->"a86b051e-81e9-49a5-aade-893420f0d77e"],
Cell[429625, 8358, 1148, 21, 398, "Text",ExpressionUUID->"9844d18a-c8e1-4ae3-95da-8b42cb3557e3"],
Cell[CellGroupData[{
Cell[430798, 8383, 657, 18, 90, "Input",ExpressionUUID->"526144ef-75f0-49ec-929b-3fb5da11cda1"],
Cell[431458, 8403, 250, 6, 62, "Output",ExpressionUUID->"a2dd0c77-4714-4b8f-8db0-4487e728765c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431745, 8414, 677, 18, 90, "Input",ExpressionUUID->"7c304de8-2d22-4216-bcc1-73955aca88ca"],
Cell[432425, 8434, 224, 5, 62, "Output",ExpressionUUID->"d8ffe999-2da6-4461-bcad-e8d6991f4e69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432686, 8444, 433, 12, 69, "Input",ExpressionUUID->"d06a6942-1d26-4325-9fe1-2743a05c51f1"],
Cell[433122, 8458, 213, 5, 63, "Output",ExpressionUUID->"b86b964c-d143-4651-b839-01b8e057c1d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433372, 8468, 305, 7, 49, "Input",ExpressionUUID->"e3635f8d-8c14-495a-90f5-ae19d490dc07"],
Cell[433680, 8477, 279, 6, 46, "Output",ExpressionUUID->"65770c35-e1df-471c-a7b0-df86175821c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433996, 8488, 374, 10, 49, "Input",ExpressionUUID->"be0d3390-26f5-4067-b806-dddc08767527"],
Cell[434373, 8500, 334, 9, 59, "Output",ExpressionUUID->"8415b44f-51eb-438d-99fc-1b8b59b4dd52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434744, 8514, 283, 6, 49, "Input",ExpressionUUID->"460e2685-0e9e-44fe-80b6-66405025d206"],
Cell[435030, 8522, 245, 5, 46, "Output",ExpressionUUID->"7287bfdb-3156-40d8-83b3-79acc7c851ce"]
}, Open  ]],
Cell[435290, 8530, 200, 3, 41, "Text",ExpressionUUID->"21a2ce49-dd1f-4f59-8163-a2b2e81f59dc"],
Cell[CellGroupData[{
Cell[435515, 8537, 669, 20, 75, "Input",ExpressionUUID->"465954e1-9ab9-4af9-9c05-3160c298e13f"],
Cell[436187, 8559, 13434, 274, 473, "Output",ExpressionUUID->"99e20772-0484-4e8f-81f8-8a23addac10d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[449670, 8839, 174, 3, 39, "Subsection",ExpressionUUID->"ed7b4262-7164-4676-8736-5e83d0b03638"],
Cell[449847, 8844, 870, 20, 152, "Text",ExpressionUUID->"ba1bd007-ff4e-48e8-88c5-ee6b2b7adb75"],
Cell[CellGroupData[{
Cell[450742, 8868, 471, 12, 72, "Input",ExpressionUUID->"ed3cf368-03bc-4b39-a078-95138de332a7"],
Cell[451216, 8882, 169, 3, 46, "Output",ExpressionUUID->"4bcd451d-03cb-48b8-b409-e65c83895191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451422, 8890, 1158, 28, 164, "Input",ExpressionUUID->"ff0b53e5-eab8-4cfb-b559-85730e4ef7ec"],
Cell[452583, 8920, 265, 6, 46, "Output",ExpressionUUID->"c5de3ac5-76ee-4539-a268-b3df2e90898c"]
}, Open  ]],
Cell[452863, 8929, 239, 4, 40, "Text",ExpressionUUID->"f76991a3-f494-4837-989b-c14f7e711bca"],
Cell[CellGroupData[{
Cell[453127, 8937, 344, 9, 66, "Input",ExpressionUUID->"0c9c657c-1bf9-451b-be8e-983caf1a9345"],
Cell[453474, 8948, 269, 7, 62, "Output",ExpressionUUID->"28210e8a-8b0b-42b9-8099-423dc26e06d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453780, 8960, 388, 10, 46, "Input",ExpressionUUID->"b997f89a-cd5d-47da-93a8-c617f2b590d0"],
Cell[454171, 8972, 323, 9, 63, "Output",ExpressionUUID->"4b92f074-c978-4dd2-852f-ff0a7067c59c"]
}, Open  ]],
Cell[454509, 8984, 1000, 21, 205, "Text",ExpressionUUID->"3fa7c095-bead-46ae-81f7-c30e1ba88bcf"],
Cell[CellGroupData[{
Cell[455534, 9009, 265, 6, 46, "Input",ExpressionUUID->"61b2dcaf-bff4-4e4d-a43a-e856a08ace7b"],
Cell[455802, 9017, 147, 2, 46, "Output",ExpressionUUID->"0912f8b2-0d31-4913-9823-ef9514b55f62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455986, 9024, 322, 7, 70, "Input",ExpressionUUID->"2aad29d8-a869-498c-8961-75df8b9d3584"],
Cell[456311, 9033, 151, 2, 46, "Output",ExpressionUUID->"f9cb115b-0675-436f-b301-7c2a80909967"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[456511, 9041, 274, 4, 39, "Subsection",ExpressionUUID->"3781ba73-7a99-4a44-bcf9-ea71b4ebc8c0"],
Cell[456788, 9047, 920, 22, 233, "Text",ExpressionUUID->"c460f7aa-7024-4bcd-91dc-89b73598ecff"],
Cell[457711, 9071, 492, 9, 96, "Text",ExpressionUUID->"fd7cfa82-4e38-4aeb-995f-3404ccce2b6d"],
Cell[CellGroupData[{
Cell[458228, 9084, 335, 8, 49, "Input",ExpressionUUID->"9457a79d-4008-48ae-82af-fe431d7b0774"],
Cell[458566, 9094, 290, 7, 46, "Output",ExpressionUUID->"655dfaa2-359a-4c33-a931-627f8c369604"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458893, 9106, 420, 12, 66, "Input",ExpressionUUID->"9f3ab0a7-0f11-488c-8900-743705c105e8"],
Cell[459316, 9120, 318, 8, 62, "Output",ExpressionUUID->"cab46975-f43c-4acb-a405-5d415fe3b5d3"]
}, Open  ]],
Cell[459649, 9131, 1011, 28, 79, "Text",ExpressionUUID->"3b7a8803-0b17-4bde-926e-7ec01997ff29"],
Cell[CellGroupData[{
Cell[460685, 9163, 529, 16, 93, "Input",ExpressionUUID->"0fca5a28-6219-4582-9fdd-f411dfd6bfa3"],
Cell[461217, 9181, 169, 3, 62, "Output",ExpressionUUID->"819560b4-c0a8-4d0d-8ca3-1a36f7d5f41e"]
}, Open  ]],
Cell[461401, 9187, 338, 9, 67, "Input",ExpressionUUID->"a88aa8ea-d030-408b-9373-5400889735a8"],
Cell[461742, 9198, 491, 13, 96, "Input",ExpressionUUID->"f024c159-afef-4f0a-bf61-cc755e5fd9c4"],
Cell[462236, 9213, 254, 4, 41, "Text",ExpressionUUID->"e7b850b7-fd5d-4ed4-b0e6-375ba926c4c5"],
Cell[CellGroupData[{
Cell[462515, 9221, 589, 18, 72, "Input",ExpressionUUID->"3efb4e90-e3ad-4fc1-a82d-46d6200cf1b6"],
Cell[463107, 9241, 559, 18, 62, "Output",ExpressionUUID->"0aeea161-317d-4c39-a4d3-9ab0e01dd602"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463703, 9264, 491, 15, 78, "Input",ExpressionUUID->"37f4f375-5ed6-4a65-89fd-45ede59d079f"],
Cell[464197, 9281, 196, 3, 62, "Output",ExpressionUUID->"c79396f5-ceb9-44d4-82bc-773f907e0b10"]
}, Open  ]],
Cell[464408, 9287, 339, 9, 67, "Input",ExpressionUUID->"fb95814e-35a9-4206-bd74-fb953bf2bb2e"],
Cell[464750, 9298, 480, 14, 96, "Input",ExpressionUUID->"0dc22b36-c497-436a-8f08-a6c9c61c1312"],
Cell[465233, 9314, 175, 3, 40, "Text",ExpressionUUID->"2b99b458-7657-44c7-ad37-51e52f937550"],
Cell[465411, 9319, 830, 25, 95, "Input",ExpressionUUID->"0915ae92-3816-4004-8cd3-29a598030121"],
Cell[CellGroupData[{
Cell[466266, 9348, 243, 5, 46, "Input",ExpressionUUID->"78a41290-f95b-4c75-b8de-37dd016b084d"],
Cell[466512, 9355, 355, 11, 59, "Output",ExpressionUUID->"7cf99966-0dc7-4830-94ba-2ceb8472ac97"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[466916, 9372, 174, 3, 39, "Subsection",ExpressionUUID->"4c854834-a900-4e23-a4cb-9d2d131a71d1"],
Cell[467093, 9377, 569, 12, 205, "Text",ExpressionUUID->"f0836b6f-7352-43db-8dcb-8ec772ae7d3f"],
Cell[CellGroupData[{
Cell[467687, 9393, 552, 17, 49, "Input",ExpressionUUID->"31cb9373-bea6-4d02-9dd8-6974fe4b0427"],
Cell[468242, 9412, 966, 32, 62, "Output",ExpressionUUID->"76aeb419-850e-4f00-b58b-240b80b4ac2f"]
}, Open  ]],
Cell[469223, 9447, 1296, 42, 74, "Text",ExpressionUUID->"0b4ccf13-66b2-4c46-a27e-f9bdb091c3f6"],
Cell[CellGroupData[{
Cell[470544, 9493, 669, 20, 75, "Input",ExpressionUUID->"2934c7b6-9997-41f3-989c-d66a5cd8da19"],
Cell[471216, 9515, 13437, 274, 473, "Output",ExpressionUUID->"a74890ab-e0fa-41f2-889c-19aac4443b77"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[484702, 9795, 189, 3, 39, "Subsection",ExpressionUUID->"1c6845db-1adc-4b3f-a5f2-3b58625713f5"],
Cell[484894, 9800, 256, 7, 68, "Text",ExpressionUUID->"ed8dcb46-a392-4ca9-b897-8eec06c2797c"],
Cell[CellGroupData[{
Cell[485175, 9811, 878, 24, 93, "Input",ExpressionUUID->"68f8cef0-bc8e-49c0-b250-fa4466889de3"],
Cell[486056, 9837, 368, 9, 46, "Output",ExpressionUUID->"facc0ba2-9cd3-4b89-bb76-a395929dc200"]
}, Open  ]],
Cell[486439, 9849, 296, 7, 68, "Text",ExpressionUUID->"9b323f36-837e-48b8-8cf3-6368ee1bdbc9"],
Cell[CellGroupData[{
Cell[486760, 9860, 1054, 25, 116, "Input",ExpressionUUID->"1302b5a8-38c9-4a59-9a6d-f2cc14d73fe5"],
Cell[487817, 9887, 271, 6, 62, "Output",ExpressionUUID->"f95ee249-247a-4d6c-83b1-7c7409349743"]
}, Open  ]],
Cell[488103, 9896, 489, 16, 45, "Text",ExpressionUUID->"717deaa4-30a4-4aed-a42e-64ffccf9439f"]
}, Closed]],
Cell[CellGroupData[{
Cell[488629, 9917, 164, 3, 39, "Subsection",ExpressionUUID->"cdf82907-7a39-4261-ab44-4817fb2cbccb"],
Cell[488796, 9922, 163, 3, 40, "Text",ExpressionUUID->"8a7cdd36-5406-4561-baa1-c56a4b4c2488"],
Cell[CellGroupData[{
Cell[488984, 9929, 269, 7, 46, "Input",ExpressionUUID->"e6279769-5f73-4d82-8d76-993e445247e2"],
Cell[489256, 9938, 162, 3, 48, "Output",ExpressionUUID->"ff086ef3-d711-45aa-aec3-5c8e516eefe2"]
}, Open  ]],
Cell[489433, 9944, 560, 18, 68, "Text",ExpressionUUID->"f6f9bb86-93ff-43e8-aac7-1deabeed759d"],
Cell[CellGroupData[{
Cell[490018, 9966, 715, 20, 98, "Input",ExpressionUUID->"a2698e7d-c0fc-4629-87e3-0c28ee927136"],
Cell[490736, 9988, 783, 24, 69, "Output",ExpressionUUID->"edd144fe-e137-435d-80cc-2ca26ff78e77"],
Cell[491522, 10014, 369, 11, 48, "Output",ExpressionUUID->"7c5b3dc2-8366-4b19-a086-8da9c2ce087c"]
}, Open  ]],
Cell[491906, 10028, 818, 28, 41, "Text",ExpressionUUID->"ba99cc50-ed30-41d7-b02f-02e950078cee"],
Cell[CellGroupData[{
Cell[492749, 10060, 797, 24, 102, "Input",ExpressionUUID->"ff46eebd-2dac-4032-8de8-2432f0a96cc2"],
Cell[493549, 10086, 165, 2, 46, "Output",ExpressionUUID->"17528669-9c6a-4d75-8784-3d56279c07b9"],
Cell[493717, 10090, 1771, 34, 380, "Output",ExpressionUUID->"22c1bc52-a85c-489d-ae3d-49751c2bb451"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[495549, 10131, 164, 3, 66, "Section",ExpressionUUID->"f5ce02db-af3a-4a97-a119-5aab62e2f581"],
Cell[CellGroupData[{
Cell[495738, 10138, 168, 3, 40, "Subsection",ExpressionUUID->"f8e81e89-7ebf-408c-b0aa-ad1018ebd0d8"],
Cell[495909, 10143, 445, 8, 68, "Text",ExpressionUUID->"67e83fd9-f52e-4b46-a853-2822fc027c67"],
Cell[CellGroupData[{
Cell[496379, 10155, 422, 11, 46, "Input",ExpressionUUID->"12502d0a-b697-416f-9160-442f3509fc5d"],
Cell[496804, 10168, 319, 10, 49, "Output",ExpressionUUID->"86fb64f7-903e-4f91-9a9c-fb63ca8fea63"]
}, Open  ]],
Cell[497138, 10181, 299, 7, 40, "Text",ExpressionUUID->"d24518ed-1baf-4ea7-b797-8df776b97713"],
Cell[CellGroupData[{
Cell[497462, 10192, 365, 10, 46, "Input",ExpressionUUID->"5610ea00-3397-4e55-a1bb-d55b4186105f"],
Cell[497830, 10204, 200, 5, 46, "Output",ExpressionUUID->"0ad6453f-7f03-4ff2-b1c5-825a2e92ae97"]
}, Open  ]],
Cell[498045, 10212, 282, 6, 40, "Text",ExpressionUUID->"0dff5f96-92aa-427e-b3cf-e461d3c151d7"],
Cell[CellGroupData[{
Cell[498352, 10222, 364, 10, 46, "Input",ExpressionUUID->"ce4d5eea-4fb5-41f2-abc6-9e95bce619e4"],
Cell[498719, 10234, 219, 6, 46, "Output",ExpressionUUID->"dc621201-8cb6-4513-b0ec-86abbd0666ba"]
}, Open  ]],
Cell[498953, 10243, 363, 8, 68, "Text",ExpressionUUID->"8919e327-622c-4024-8dd6-bb5f77f56fab"],
Cell[CellGroupData[{
Cell[499341, 10255, 615, 20, 46, "Input",ExpressionUUID->"fa657af9-962f-4bde-a21c-461ecf02f00f"],
Cell[499959, 10277, 271, 8, 46, "Output",ExpressionUUID->"bcaaba07-cdb1-4933-a860-32c55b4a47a5"]
}, Open  ]],
Cell[500245, 10288, 240, 4, 40, "Text",ExpressionUUID->"09741766-bf27-4d11-a90a-43e7429780b5"],
Cell[CellGroupData[{
Cell[500510, 10296, 668, 21, 46, "Input",ExpressionUUID->"2351169b-9e64-4ea2-baf3-d1d351984856"],
Cell[501181, 10319, 433, 13, 46, "Output",ExpressionUUID->"5f37f107-9445-4838-a0c8-4ffb8fbf4ffb"]
}, Open  ]],
Cell[501629, 10335, 169, 3, 40, "Text",ExpressionUUID->"ab591c0e-0e40-4601-88b6-6cd493b21dea"],
Cell[CellGroupData[{
Cell[501823, 10342, 295, 9, 46, "Input",ExpressionUUID->"91b20ef1-8ab8-4eb2-9e2f-392c5e7473b7"],
Cell[502121, 10353, 284, 9, 66, "Output",ExpressionUUID->"9abe7b62-d0b6-49a7-bf20-f060f1a36621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502442, 10367, 208, 4, 46, "Input",ExpressionUUID->"86bcfaf6-110a-4747-9f14-b1d8b87284ba"],
Cell[502653, 10373, 175, 4, 46, "Output",ExpressionUUID->"8b233120-b15a-43c8-acfe-6581ceed674f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502865, 10382, 359, 10, 46, "Input",ExpressionUUID->"f5231bdd-4232-4437-b86a-60e9d76a4422"],
Cell[503227, 10394, 175, 4, 46, "Output",ExpressionUUID->"68a723a4-9518-4c8e-a274-0fe55db4697c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[503451, 10404, 223, 4, 39, "Subsection",ExpressionUUID->"cf83b068-105f-44e7-a194-5571a67509a9"],
Cell[CellGroupData[{
Cell[503699, 10412, 633, 19, 49, "Input",ExpressionUUID->"77f36110-e8ae-4d07-bdf0-bfd0648569dc"],
Cell[504335, 10433, 362, 10, 46, "Output",ExpressionUUID->"684d32bb-4894-4470-936d-6a4a6d1a1f8e"]
}, Open  ]],
Cell[504712, 10446, 227, 5, 40, "Text",ExpressionUUID->"18bf33b9-1233-4591-8848-75024f25d0b6"],
Cell[CellGroupData[{
Cell[504964, 10455, 343, 8, 49, "Input",ExpressionUUID->"51119fb5-b32b-403a-984c-2b97e67eaf52"],
Cell[505310, 10465, 243, 4, 46, "Output",ExpressionUUID->"a942e61b-f330-4576-b8d0-bb7e6a9eee86"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[505602, 10475, 157, 3, 39, "Subsection",ExpressionUUID->"27298394-c5e8-40a8-8572-a8d9ed8d0f47"],
Cell[505762, 10480, 179, 3, 40, "Text",ExpressionUUID->"4987dc61-a319-4077-912b-dc3b8f41fbdb"],
Cell[CellGroupData[{
Cell[505966, 10487, 579, 17, 46, "Input",ExpressionUUID->"df86d032-cb29-4ffa-8a25-5cdbc5447421"],
Cell[506548, 10506, 7123, 135, 302, "Output",ExpressionUUID->"84793247-4abd-4b02-bca8-7ca1fce3965c"]
}, Open  ]],
Cell[513686, 10644, 299, 7, 40, "Text",ExpressionUUID->"37bc4c64-4e46-4230-a130-abff9e2ee44a"],
Cell[CellGroupData[{
Cell[514010, 10655, 721, 23, 46, "Input",ExpressionUUID->"2c1b8a25-a5c9-46d1-bebf-6d61be0bd27f"],
Cell[514734, 10680, 7078, 133, 291, "Output",ExpressionUUID->"21c1c12f-bc19-413c-9ffa-17cbdba05e4f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[521861, 10819, 171, 3, 39, "Subsection",ExpressionUUID->"ae2679df-35ba-4967-9896-208c9941dc1a"],
Cell[522035, 10824, 290, 4, 40, "Text",ExpressionUUID->"7a24d4ad-58e6-4374-970f-01a148ec8f58"],
Cell[CellGroupData[{
Cell[522350, 10832, 600, 14, 49, "Input",ExpressionUUID->"03fb0fc0-4689-42be-b67b-10895c75ce87"],
Cell[522953, 10848, 336, 7, 46, "Output",ExpressionUUID->"e4e35bc8-aa01-499e-8fe6-046c20d1f808"]
}, Open  ]],
Cell[523304, 10858, 234, 4, 40, "Text",ExpressionUUID->"feaf1e9d-097f-4cd0-9d06-a6a387c539d9"],
Cell[CellGroupData[{
Cell[523563, 10866, 541, 14, 49, "Input",ExpressionUUID->"8e506cb1-d3d2-41a4-aeaa-a153421ba11d"],
Cell[524107, 10882, 363, 8, 46, "Output",ExpressionUUID->"957667b4-2be1-40b4-8fe4-95a2dbeac088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524507, 10895, 665, 18, 49, "Input",ExpressionUUID->"ea65b9b1-671a-4f01-b0a8-78821ac22416"],
Cell[525175, 10915, 7130, 135, 302, "Output",ExpressionUUID->"d3fe0851-0b27-481b-9548-a05cf6a0f318"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[532354, 11056, 162, 3, 39, "Subsection",ExpressionUUID->"53dd8be2-017d-4482-8cb4-653cb7afcdf8"],
Cell[532519, 11061, 254, 7, 68, "Text",ExpressionUUID->"84874eea-56d6-460b-870d-a0f773e7baae"],
Cell[532776, 11070, 1662, 52, 152, "Text",ExpressionUUID->"91a07faf-aee2-43c0-b179-db452a463d79"],
Cell[534441, 11124, 155, 3, 40, "Text",ExpressionUUID->"e08a730b-9ddd-49d3-9609-22191b93759a"],
Cell[534599, 11129, 440, 14, 40, "Text",ExpressionUUID->"ccac6a55-1f29-4404-a1df-89f1f0aabf7a"],
Cell[535042, 11145, 1127, 37, 71, "Text",ExpressionUUID->"9261fac5-41ff-41cb-b667-996e836d4438"]
}, Closed]],
Cell[CellGroupData[{
Cell[536206, 11187, 176, 3, 39, "Subsection",ExpressionUUID->"7915f749-a773-4290-aebf-b6dc8ff54bd8"],
Cell[536385, 11192, 155, 3, 39, "Text",ExpressionUUID->"d31ae610-fbc4-43f1-bb14-7879c2f8ac65"],
Cell[CellGroupData[{
Cell[536565, 11199, 993, 31, 116, "Input",ExpressionUUID->"29f3e934-7aca-479c-b0da-5a3d78015a7b"],
Cell[537561, 11232, 350, 9, 63, "Output",ExpressionUUID->"fe959d4d-579d-4977-8b9b-185ea8f78d7b"],
Cell[537914, 11243, 938, 28, 89, "Output",ExpressionUUID->"8e5e0566-e81e-4142-bab9-0618ff8c3cb8"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[538913, 11278, 166, 3, 66, "Section",ExpressionUUID->"f6cd9d47-3fe7-48b7-8432-dab5e1e6a0ca"],
Cell[CellGroupData[{
Cell[539104, 11285, 200, 3, 40, "Subsection",ExpressionUUID->"7703d0c0-e28f-42aa-b6dd-ef0bbac4df2d"],
Cell[539307, 11290, 270, 6, 40, "Text",ExpressionUUID->"91dcef87-0764-4fb3-8549-155299dc8dfe"],
Cell[CellGroupData[{
Cell[539602, 11300, 452, 12, 49, "Input",ExpressionUUID->"63d7b82f-c152-49b4-8704-119939ceb0cb"],
Cell[540057, 11314, 569, 16, 49, "Output",ExpressionUUID->"92f25bfe-e15d-4150-9117-118eaed10904"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540663, 11335, 441, 12, 49, "Input",ExpressionUUID->"f012d704-0778-4ff8-86be-712ec4b01fcf"],
Cell[541107, 11349, 444, 13, 62, "Output",ExpressionUUID->"74dea701-ead8-4120-a516-2aad36ba8cdc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[541600, 11368, 176, 3, 39, "Subsection",ExpressionUUID->"b23bdd34-0aa5-4034-9670-270224c5e2b0"],
Cell[541779, 11373, 453, 13, 68, "Text",ExpressionUUID->"8af3dab6-5377-4dbe-aee1-eed29a62ce28"],
Cell[CellGroupData[{
Cell[542257, 11390, 334, 8, 70, "Input",ExpressionUUID->"0adf8a2f-59f4-4dc9-abd2-0cb9166a2f66"],
Cell[542594, 11400, 301, 7, 46, "Output",ExpressionUUID->"308578a2-6bad-47b2-a577-4414bd1eb543"]
}, Open  ]],
Cell[542910, 11410, 196, 3, 40, "Text",ExpressionUUID->"6912e0b3-90ec-4831-b4fc-b9f11a502b2b"],
Cell[543109, 11415, 269, 6, 67, "Input",ExpressionUUID->"37fd7ab3-21b6-4564-82ee-126a7f5f9de7"],
Cell[CellGroupData[{
Cell[543403, 11425, 239, 4, 46, "Input",ExpressionUUID->"10ee7250-1daa-40ea-a465-3d854f9e035a"],
Cell[543645, 11431, 218, 5, 62, "Output",ExpressionUUID->"7ba29fad-19af-400f-9344-acd504e4fb50"]
}, Open  ]],
Cell[543878, 11439, 188, 3, 40, "Text",ExpressionUUID->"e82a6a86-7992-4f57-ba3d-e3baacae75d9"],
Cell[CellGroupData[{
Cell[544091, 11446, 468, 13, 93, "Input",ExpressionUUID->"3b481e94-289f-460a-9340-338476574ae8"],
Cell[544562, 11461, 440, 11, 74, "Output",ExpressionUUID->"3b8a08bb-831f-4dc7-bf8f-975a1f47b5bf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[545051, 11478, 253, 4, 39, "Subsection",ExpressionUUID->"9c27a164-2dfd-4b07-831d-87772195918f"],
Cell[545307, 11484, 382, 8, 95, "Text",ExpressionUUID->"023f5b42-fae9-4089-8d06-3f73a5a6984d"],
Cell[CellGroupData[{
Cell[545714, 11496, 597, 18, 67, "Input",ExpressionUUID->"16bfb872-4a8e-432c-bdf2-3842b9dc8110"],
Cell[546314, 11516, 10643, 196, 307, "Output",ExpressionUUID->"7b22ef8b-2354-4311-9442-a9092e828790"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[557018, 11719, 219, 4, 66, "Section",ExpressionUUID->"725ba91f-08ac-4669-a56a-581b41638ca7"],
Cell[557240, 11725, 220, 5, 40, "Text",ExpressionUUID->"ec615760-1b3c-469f-8f44-1fd6f425b6d7"],
Cell[CellGroupData[{
Cell[557485, 11734, 222, 4, 40, "Subsection",ExpressionUUID->"3fb71a6f-22bc-4c75-a8fa-f2739a6fd39b"],
Cell[557710, 11740, 1643, 49, 95, "Text",ExpressionUUID->"890073e6-f29a-434d-8df1-d931ffc83eff"],
Cell[559356, 11791, 303, 8, 46, "Input",ExpressionUUID->"12c4f5f7-d70f-4fab-aab5-76b1a3e6c337"],
Cell[559662, 11801, 245, 4, 40, "Text",ExpressionUUID->"f126b09b-cbed-4373-b94e-f0f1f35ba814"]
}, Closed]],
Cell[CellGroupData[{
Cell[559944, 11810, 171, 3, 39, "Subsection",ExpressionUUID->"a56e7dc5-4ed7-49bb-bcbf-d365945a4949"],
Cell[560118, 11815, 510, 10, 68, "Text",ExpressionUUID->"405e1422-fa72-46a5-a1c3-5dc30ee26cd3"],
Cell[560631, 11827, 379, 10, 66, "Input",ExpressionUUID->"04eef557-2ddd-4196-834d-0f284e9dfa88"],
Cell[561013, 11839, 402, 12, 38, "WolframAlphaShort",ExpressionUUID->"5ddd7e90-a172-4179-99e4-3ba12b0a0a1c"],
Cell[561418, 11853, 230, 4, 36, "WolframAlphaShort",ExpressionUUID->"3d051426-9a83-4eb6-af56-ad1ac6e40495"],
Cell[561651, 11859, 176, 3, 36, "WolframAlphaShort",ExpressionUUID->"d5ea913f-b1cf-4f67-8cad-ea92a8e0dd37"],
Cell[561830, 11864, 158, 3, 40, "Text",ExpressionUUID->"be607d1f-069d-4b3c-b5bf-c43821d2b245"],
Cell[CellGroupData[{
Cell[562013, 11871, 227, 4, 46, "Input",ExpressionUUID->"6a2c0bb8-dc04-4fb7-9d13-2360313faf0e"],
Cell[562243, 11877, 151, 2, 46, "Output",ExpressionUUID->"a89ee955-4b49-494e-b763-fed95bf54263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562431, 11884, 308, 7, 46, "Input",ExpressionUUID->"0b2cc864-40bd-4263-a6ae-81d3c9a88fcd"],
Cell[562742, 11893, 227, 5, 46, "Output",ExpressionUUID->"6b1c211a-f71a-4bdf-9246-b48072e68c0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563006, 11903, 312, 7, 46, "Input",ExpressionUUID->"7ada2720-d5e4-44b7-838e-c698b7d53634"],
Cell[563321, 11912, 226, 5, 46, "Output",ExpressionUUID->"6c58623e-6ba2-4ce5-ace7-4501cff9d8c5"]
}, Open  ]],
Cell[563562, 11920, 177, 3, 40, "Text",ExpressionUUID->"678346b6-c16f-4ce3-a20f-be1a75db6b73"],
Cell[CellGroupData[{
Cell[563764, 11927, 701, 21, 49, "Input",ExpressionUUID->"fab9251f-7b56-4aa1-bc01-80c6131d69a0"],
Cell[564468, 11950, 151, 2, 46, "Output",ExpressionUUID->"27f4a7b7-0de6-41a3-97f7-a3a8d8f45603"]
}, Open  ]],
Cell[564634, 11955, 144, 3, 40, "Text",ExpressionUUID->"b1686846-d2ec-4d3a-8c41-05b9378cfa7d"],
Cell[CellGroupData[{
Cell[564803, 11962, 689, 21, 49, "Input",ExpressionUUID->"8da0a28c-a2da-4f42-8da6-514b94dab723"],
Cell[565495, 11985, 149, 2, 46, "Output",ExpressionUUID->"4f4e93d5-4aa2-44a0-96e7-c41a063c3bf0"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[565705, 11994, 170, 3, 66, "Section",ExpressionUUID->"69cc2540-418b-4119-8016-bd44759351ae"],
Cell[565878, 11999, 930, 25, 240, "Text",ExpressionUUID->"5443c897-94a1-4e31-b816-585bc4b266f7"],
Cell[CellGroupData[{
Cell[566833, 12028, 180, 3, 40, "Subsection",ExpressionUUID->"fa7ac1d9-36be-45da-9b27-c103e079a221"],
Cell[567016, 12033, 272, 7, 68, "Text",ExpressionUUID->"022562d6-49c4-4193-b8cc-1fc3e4273bd8"],
Cell[CellGroupData[{
Cell[567313, 12044, 387, 10, 66, "Input",ExpressionUUID->"7752045a-22e9-4b94-b1ac-643d93f4acf0"],
Cell[567703, 12056, 629, 19, 62, "Output",ExpressionUUID->"0ad65673-e2d7-4cc9-a1c8-4bb0bf3aee89"]
}, Open  ]],
Cell[568347, 12078, 369, 10, 66, "Input",ExpressionUUID->"24bf226e-965c-455e-869a-3abdad568938"],
Cell[568719, 12090, 162, 3, 40, "Text",ExpressionUUID->"ce891770-91f1-4fa3-ade1-804c4a296bfb"],
Cell[CellGroupData[{
Cell[568906, 12097, 435, 11, 46, "Input",ExpressionUUID->"1dcd30b5-b35c-408b-8277-54922fb756e4"],
Cell[569344, 12110, 455, 10, 56, "Message",ExpressionUUID->"c8f80323-e57f-425c-813f-13ce2c7dabdb"],
Cell[569802, 12122, 297, 6, 46, "Output",ExpressionUUID->"c4a808ae-b39b-4f85-934b-af6e1f6710aa"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[570148, 12134, 153, 3, 39, "Subsection",ExpressionUUID->"7234e6f8-fd86-4acb-9bb4-a0a311a4f0e1"],
Cell[570304, 12139, 180, 3, 40, "Text",ExpressionUUID->"cdb29106-43e1-479e-ba11-a75fb9ad87d8"],
Cell[570487, 12144, 309, 8, 63, "Input",ExpressionUUID->"123142b4-6241-451f-94b0-8fa012aa4058"],
Cell[570799, 12154, 148, 3, 40, "Text",ExpressionUUID->"048aac65-6388-40dc-8542-0f07c526b2cc"],
Cell[CellGroupData[{
Cell[570972, 12161, 203, 3, 46, "Input",ExpressionUUID->"688ef06e-cd22-456e-b8c5-71eff5403695"],
Cell[571178, 12166, 149, 2, 46, "Output",ExpressionUUID->"eb512866-fc9c-455e-85fd-f4fe99c83820"]
}, Open  ]],
Cell[571342, 12171, 158, 3, 40, "Text",ExpressionUUID->"5fa186d4-fea9-4a36-824c-0b72fbf62f58"],
Cell[CellGroupData[{
Cell[571525, 12178, 353, 10, 46, "Input",ExpressionUUID->"66de6a50-d443-4a0c-b283-8594cd50a70f"],
Cell[571881, 12190, 400, 11, 46, "Output",ExpressionUUID->"33aa439a-af9c-49e7-9750-dafba174bab2"]
}, Open  ]],
Cell[572296, 12204, 166, 3, 40, "Text",ExpressionUUID->"a79ab09e-8bb2-4c7d-bad3-5e4237f1626c"],
Cell[CellGroupData[{
Cell[572487, 12211, 264, 5, 46, "Input",ExpressionUUID->"8d3fd99c-4f81-4467-b4b0-8c7df71b35dd"],
Cell[572754, 12218, 155, 2, 46, "Output",ExpressionUUID->"25c5c890-fc7e-49f8-9e50-be09736952f9"]
}, Open  ]],
Cell[572924, 12223, 160, 3, 40, "Text",ExpressionUUID->"e9b38b90-dddb-493d-85c3-62c320a7a930"],
Cell[CellGroupData[{
Cell[573109, 12230, 318, 6, 46, "Input",ExpressionUUID->"4c1df50c-3ffa-4757-b676-f889f4ea5a40"],
Cell[573430, 12238, 363, 10, 70, "Output",ExpressionUUID->"4a9d22a3-de28-4379-b899-6fd70b33d765"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573830, 12253, 426, 7, 46, "Input",ExpressionUUID->"e103c1ca-e1f2-49d9-97be-019da0a5737a"],
Cell[574259, 12262, 281, 4, 46, "Output",ExpressionUUID->"6e009477-c6f1-454a-8664-d9160dbf2303"]
}, Open  ]],
Cell[574555, 12269, 564, 16, 44, "Text",ExpressionUUID->"767099b6-e531-4e9a-a726-010fe927d66b"],
Cell[CellGroupData[{
Cell[575144, 12289, 309, 8, 63, "Input",ExpressionUUID->"57328953-2227-48db-9373-8f0152cdf6c7"],
Cell[575456, 12299, 279, 7, 62, "Output",ExpressionUUID->"78ae9ad0-1d7f-4865-9667-329c5478ea69"]
}, Open  ]],
Cell[575750, 12309, 326, 7, 68, "Text",ExpressionUUID->"86e5a28f-86d6-46eb-abe8-bc5c031fa242"],
Cell[CellGroupData[{
Cell[576101, 12320, 1155, 35, 145, "Input",ExpressionUUID->"d370b985-de70-4eb3-a897-37af3a101a89"],
Cell[577259, 12357, 11372, 220, 295, "Output",ExpressionUUID->"05b96d3c-421b-4aef-90b8-5f3d7d241c51"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[588680, 12583, 241, 4, 39, "Subsection",ExpressionUUID->"a8f23039-92c5-4f02-849c-cb123c33ef21"],
Cell[588924, 12589, 1247, 41, 190, "Text",ExpressionUUID->"655e0a46-fad3-471c-8571-43c48864d1f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[590208, 12635, 182, 3, 39, "Subsection",ExpressionUUID->"031e296d-56d8-4671-8c4f-389574273a2f"],
Cell[CellGroupData[{
Cell[590415, 12642, 441, 14, 56, "Input",ExpressionUUID->"c6fba2a6-cdd9-4287-8d77-e2616a125db5"],
Cell[590859, 12658, 1266, 42, 103, "Output",ExpressionUUID->"d5547d76-5a6c-45c1-834f-e5476e4c0b95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592162, 12705, 510, 15, 56, "Input",ExpressionUUID->"e8aa9f83-a1ec-4a20-ac2d-e4c41f5388e7"],
Cell[592675, 12722, 680, 21, 62, "Output",ExpressionUUID->"e6583be8-26db-458f-aa2b-84e65cce064b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[593404, 12749, 162, 3, 39, "Subsection",ExpressionUUID->"85bc5fec-ea19-4d5a-a962-05965204f280"],
Cell[593569, 12754, 158347, 2602, 394, "Input",ExpressionUUID->"c08b2d37-bf14-4f9d-8431-530f1774e0c3"],
Cell[CellGroupData[{
Cell[751941, 15360, 2002, 55, 206, "Input",ExpressionUUID->"5de96598-a284-4878-b349-089feb9a9e3f"],
Cell[753946, 15417, 5916, 184, 226, "Output",ExpressionUUID->"91812c83-b595-472e-92b1-140269b417b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[759911, 15607, 172, 3, 39, "Subsection",ExpressionUUID->"e15893ce-fa40-4e6c-88dc-bc81f1c5c5ce"],
Cell[760086, 15612, 2182, 77, 180, "Text",ExpressionUUID->"1501b3ed-36a9-4795-baa2-dec8c187ddf7"],
Cell[CellGroupData[{
Cell[762293, 15693, 347, 11, 93, "Input",ExpressionUUID->"03af8edd-344b-4d78-bb59-b22b810e5f60"],
Cell[762643, 15706, 175, 4, 77, "Output",ExpressionUUID->"9c4f2893-ec1a-4a04-96b8-42932a86950a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[762879, 15717, 168, 3, 66, "Section",ExpressionUUID->"58a808cb-f45c-482d-a2e7-caf309f5faf3"],
Cell[763050, 15722, 211, 4, 40, "Text",ExpressionUUID->"141d61b2-9af4-4574-b140-317575305700"],
Cell[CellGroupData[{
Cell[763286, 15730, 449, 12, 90, "Input",ExpressionUUID->"62a70693-24f9-4882-849a-551057898e83"],
Cell[763738, 15744, 244, 5, 62, "Output",ExpressionUUID->"7bea09bc-c484-4e33-86ee-3200bc89254d"]
}, Open  ]],
Cell[763997, 15752, 372, 10, 44, "Text",ExpressionUUID->"ada15a42-252e-4385-82cf-898976510292"],
Cell[CellGroupData[{
Cell[764394, 15766, 413, 11, 66, "Input",ExpressionUUID->"2c5ddbd5-f29f-4a54-8e6f-e2c2903306e8"],
Cell[764810, 15779, 1045, 40, 360, "Output",ExpressionUUID->"11e8d159-e08e-4a2c-8a75-c1590fa41593"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[765904, 15825, 229, 4, 66, "Section",ExpressionUUID->"2fa8f9fd-fc18-4296-a525-2d86c0dde325"],
Cell[CellGroupData[{
Cell[766158, 15833, 154, 3, 40, "Subsection",ExpressionUUID->"5d5f7a59-769d-47e1-a5a9-bc3fa4c0c9b6"],
Cell[766315, 15838, 354, 9, 122, "Text",ExpressionUUID->"abfdec1d-e97e-4a53-8adf-420a63f0aa63"],
Cell[766672, 15849, 231, 4, 40, "Text",ExpressionUUID->"97451ccf-9a01-4e46-8e90-7f25cb1e7adc"],
Cell[CellGroupData[{
Cell[766928, 15857, 304, 7, 49, "Input",ExpressionUUID->"a520876a-859c-4372-bc69-cde5863209f4"],
Cell[767235, 15866, 150, 2, 46, "Output",ExpressionUUID->"8540e5f8-adf0-477b-a819-31218b9236b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767422, 15873, 276, 6, 66, "Input",ExpressionUUID->"bfc68625-c2d8-49c9-a78c-b28763ebdf55"],
Cell[767701, 15881, 160, 2, 46, "Output",ExpressionUUID->"9b49e64b-b93a-43c8-818a-519e349f2adb"]
}, Open  ]],
Cell[767876, 15886, 226, 5, 40, "Text",ExpressionUUID->"9a7891c4-0f0b-42ef-a800-e4de985c4b86"],
Cell[CellGroupData[{
Cell[768127, 15895, 335, 7, 66, "Input",ExpressionUUID->"d3f7ecff-5dae-4954-bd4e-c64690e38810"],
Cell[768465, 15904, 158, 2, 46, "Output",ExpressionUUID->"d9f97604-e814-4cfa-a616-ea255e51b792"]
}, Open  ]],
Cell[768638, 15909, 290, 7, 46, "Input",ExpressionUUID->"0aa180ce-1c0c-4e43-9a19-68adb2df9069"],
Cell[CellGroupData[{
Cell[768953, 15920, 389, 10, 67, "Input",ExpressionUUID->"c5a167ea-326f-413f-8677-bbfd09558c92"],
Cell[769345, 15932, 238, 5, 46, "Output",ExpressionUUID->"57ff74d0-8128-4d57-930c-6555ec0259f5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[769632, 15943, 161, 3, 39, "Subsection",ExpressionUUID->"b5829438-6fa5-4308-98c2-5e09f214eb3e"],
Cell[769796, 15948, 181, 3, 40, "Text",ExpressionUUID->"7bdda29d-feb9-4283-a37f-5545f7b5f2c6"],
Cell[769980, 15953, 160, 3, 40, "Text",ExpressionUUID->"227ca1a4-470b-45f6-a27d-bda41400e604"],
Cell[CellGroupData[{
Cell[770165, 15960, 249, 5, 49, "Input",ExpressionUUID->"db707a54-3e92-42b0-8b4c-5d43db1c3e57"],
Cell[770417, 15967, 173, 3, 46, "Output",ExpressionUUID->"6347732c-75c4-439e-8ca4-45d339b64af5"]
}, Open  ]],
Cell[770605, 15973, 264, 6, 40, "Text",ExpressionUUID->"e8ea4cc4-54d0-4182-9ad7-cbf6af6e87da"],
Cell[770872, 15981, 256, 6, 40, "Text",ExpressionUUID->"9574a2ba-4414-4690-99e6-97a4ca1c05f6"],
Cell[771131, 15989, 424, 8, 46, "Input",ExpressionUUID->"bc3e7645-45a5-4df5-9b71-0fb7640b41a9"],
Cell[CellGroupData[{
Cell[771580, 16001, 572, 14, 46, "Input",ExpressionUUID->"0d2e3e92-ad25-4fdb-af90-11a6e833bb5a"],
Cell[772155, 16017, 370, 7, 60, "Output",ExpressionUUID->"f89716dc-a849-485a-8f45-cfbe1afffd57"]
}, Open  ]],
Cell[772540, 16027, 196, 3, 40, "Text",ExpressionUUID->"60e75e81-8f1b-44da-96f2-77295b22c4db"]
}, Closed]],
Cell[CellGroupData[{
Cell[772773, 16035, 211, 4, 39, "Subsection",ExpressionUUID->"12a3b430-0ecf-4e14-8b99-447013817353"],
Cell[772987, 16041, 1831, 55, 165, "Text",ExpressionUUID->"454407f5-fe21-4154-86be-1c3760790a4b"],
Cell[774821, 16098, 912, 28, 74, "Text",ExpressionUUID->"9f70baaa-4f1e-4422-815f-447029885f5a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[775770, 16131, 315, 5, 39, "Subsection",ExpressionUUID->"d5a35c87-f56c-4467-a22d-9229457323f4"],
Cell[776088, 16138, 266, 7, 68, "Text",ExpressionUUID->"2ccb7275-6a61-4939-8f2e-4b4eeeb5e5ce"],
Cell[776357, 16147, 231, 6, 40, "Text",ExpressionUUID->"21e7c24a-a022-4b98-bb28-83ed11cb2a35"],
Cell[776591, 16155, 729, 22, 70, "Input",ExpressionUUID->"12b0b390-41e0-4d73-a908-38fb7bfbd2fe"],
Cell[CellGroupData[{
Cell[777345, 16181, 259, 5, 49, "Input",ExpressionUUID->"931e13d7-9e67-4e3a-8909-3334dca69e07"],
Cell[777607, 16188, 296, 8, 46, "Output",ExpressionUUID->"1ee8c401-13d1-4a5f-92c0-33332db7e08b"]
}, Open  ]],
Cell[777918, 16199, 588, 18, 74, "Text",ExpressionUUID->"700134cf-783d-4aeb-b7c2-79a95f528b88"],
Cell[778509, 16219, 744, 23, 70, "Input",ExpressionUUID->"18965a02-5281-4119-a199-e62341d83c99"],
Cell[CellGroupData[{
Cell[779278, 16246, 260, 5, 49, "Input",ExpressionUUID->"2ac53bfc-152f-4aa8-a495-6ae4c4add77f"],
Cell[779541, 16253, 297, 8, 62, "Output",ExpressionUUID->"3bcc01eb-d8a6-45cd-a00f-25fb3de0fd3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779875, 16266, 1747, 56, 164, "Input",ExpressionUUID->"a2c499dc-82a6-4423-b628-3c9b849cc01e"],
Cell[781625, 16324, 1894, 38, 531, "Output",ExpressionUUID->"d26d4860-7cd9-49bf-a377-41b8b8d898fd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[783568, 16368, 236, 4, 39, "Subsection",ExpressionUUID->"35f3d191-83f3-4617-8afa-d690117997c8"],
Cell[783807, 16374, 159, 3, 40, "Text",ExpressionUUID->"252512fb-162c-4798-b40a-9057af572f58"],
Cell[783969, 16379, 1112, 30, 93, "Input",ExpressionUUID->"153fee3c-3a34-4fb7-97b7-61fa30175c3d"],
Cell[CellGroupData[{
Cell[785106, 16413, 452, 10, 49, "Input",ExpressionUUID->"5ac6b075-59b3-4537-9a72-fb0c7517f1cf"],
Cell[785561, 16425, 23414, 436, 310, "Output",ExpressionUUID->"fb3a8513-8883-445a-909f-13447ae9fc95"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[809024, 16867, 172, 3, 39, "Subsection",ExpressionUUID->"053f0519-a39b-482e-a62a-8b04c6f61804"],
Cell[809199, 16872, 367, 8, 68, "Text",ExpressionUUID->"4590b176-1621-417f-8e97-57902c919ae7"],
Cell[809569, 16882, 235, 4, 40, "Text",ExpressionUUID->"a658b784-3164-4599-8a5f-5f9952e55c1a"],
Cell[809807, 16888, 276, 6, 46, "Input",ExpressionUUID->"2b1aba01-072e-4b03-a59f-823c63e9ee31"],
Cell[CellGroupData[{
Cell[810108, 16898, 360, 11, 46, "Input",ExpressionUUID->"908912b8-de7a-4207-9ed5-d41c9d8ea77d"],
Cell[810471, 16911, 244, 5, 60, "Output",ExpressionUUID->"92d22b3d-f437-4f45-bdc5-42eac997b842"]
}, Open  ]],
Cell[810730, 16919, 172, 3, 40, "Text",ExpressionUUID->"5f03939f-91e0-425d-a0ae-234ea7c93abf"],
Cell[810905, 16924, 154, 3, 40, "Text",ExpressionUUID->"72f446ac-b9c0-4635-9352-f95e71eb3e90"],
Cell[811062, 16929, 403, 10, 46, "Input",ExpressionUUID->"6b727f6c-6115-431e-8a6c-143de8e71455"],
Cell[CellGroupData[{
Cell[811490, 16943, 427, 11, 67, "Input",ExpressionUUID->"7b852792-2f21-4511-98f0-799c77269c3e"],
Cell[811920, 16956, 298, 6, 60, "Output",ExpressionUUID->"6dc729ee-75ff-48ad-a914-136ad3adca0e"]
}, Open  ]],
Cell[812233, 16965, 159, 3, 40, "Text",ExpressionUUID->"a500b708-95c2-4bf7-91fa-991fff984383"],
Cell[CellGroupData[{
Cell[812417, 16972, 675, 19, 67, "Input",ExpressionUUID->"dea4e6ff-1ab8-4dfb-bff1-3ea1bb0a7adb"],
Cell[813095, 16993, 962, 28, 88, "Output",ExpressionUUID->"2bfee1eb-6af4-40ce-9d34-19a88ddb0eb8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[814106, 17027, 163, 3, 39, "Subsection",ExpressionUUID->"4feb735d-216a-474b-95a2-e447bcc29a8e"],
Cell[814272, 17032, 632, 20, 49, "Text",ExpressionUUID->"2a39ccba-c4cf-485a-a664-e0729ea3cc51"],
Cell[814907, 17054, 1410, 49, 107, "Text",ExpressionUUID->"e461d839-b7b5-46b2-9f21-b156519e1c68"]
}, Closed]],
Cell[CellGroupData[{
Cell[816354, 17108, 180, 3, 39, "Subsection",ExpressionUUID->"e596de73-29b1-4e06-bee6-c76d769c609f"],
Cell[816537, 17113, 735, 17, 130, "Text",ExpressionUUID->"5c1dd1c6-e231-4945-bfb5-adddc1e7e533"],
Cell[817275, 17132, 600, 16, 84, "Input",ExpressionUUID->"ef60cb47-1b71-4997-b370-ff66db34fdc3"],
Cell[CellGroupData[{
Cell[817900, 17152, 508, 12, 84, "Input",ExpressionUUID->"3ec85671-e156-43ce-9b9f-df875b9be600"],
Cell[818411, 17166, 199, 4, 77, "Output",ExpressionUUID->"17ee81ee-8724-4015-9b56-64ace66a9bce"]
}, Open  ]],
Cell[818625, 17173, 173, 6, 68, "Text",ExpressionUUID->"785ce05d-1396-446c-b65a-76b686f5e597"],
Cell[818801, 17181, 1266, 34, 176, "Input",ExpressionUUID->"fbeb9494-600b-40f0-abc6-f68a77570673"],
Cell[820070, 17217, 153, 3, 40, "Text",ExpressionUUID->"55960974-b45e-4932-912a-fa87adf7be3b"],
Cell[CellGroupData[{
Cell[820248, 17224, 2885, 83, 267, "Input",ExpressionUUID->"6e773cbe-8ed6-4a3b-add8-0f787fa44fb3"],
Cell[823136, 17309, 571, 16, 60, "Output",ExpressionUUID->"8b64c615-4d1f-4655-9338-74d2b71b7c69"],
Cell[823710, 17327, 622, 14, 167, "Output",ExpressionUUID->"7e87744b-d0ca-4ff8-88d1-bcb84b2c00de"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[824393, 17348, 158, 3, 66, "Section",ExpressionUUID->"ee0ed6bb-de6a-4801-a075-26d2f2b23a0f"],
Cell[824554, 17353, 247, 4, 39, "Text",ExpressionUUID->"f0b63f11-65eb-45c9-9694-fcc1d605ec20"],
Cell[CellGroupData[{
Cell[824826, 17361, 170, 3, 40, "Subsection",ExpressionUUID->"aec024a6-29c1-4cfa-82dc-8246eab5bbaa"],
Cell[824999, 17366, 247, 7, 66, "Text",ExpressionUUID->"d46f1ed0-1b4c-45ec-a50f-3bd61f178039"],
Cell[CellGroupData[{
Cell[825271, 17377, 281, 7, 52, "Input",ExpressionUUID->"8baf6a37-85f7-47fc-b8a9-67d53df21fbe"],
Cell[825555, 17386, 263, 6, 68, "Output",ExpressionUUID->"63d86f14-e4af-4c80-9e3e-8b3599b56452"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[825867, 17398, 168, 3, 39, "Subsection",ExpressionUUID->"27e05726-1fb8-4ec1-b9ed-af43870fa93d"],
Cell[826038, 17403, 333, 8, 93, "Text",ExpressionUUID->"94e1b776-1c1d-453e-9a69-1d1144de82e9"],
Cell[CellGroupData[{
Cell[826396, 17415, 508, 14, 52, "Input",ExpressionUUID->"b12a398e-91cf-4254-ab6e-fc1b6c10b04b"],
Cell[826907, 17431, 448, 12, 68, "Output",ExpressionUUID->"2c249cc3-5cb3-4ae3-b79e-0f57fbcd473d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827392, 17448, 417, 13, 52, "Input",ExpressionUUID->"f8c0e658-f9ad-4d04-9695-7b012c2ce84f"],
Cell[827812, 17463, 341, 9, 69, "Output",ExpressionUUID->"4bf91f7a-df38-4340-9e1b-008d16491100"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[828202, 17478, 179, 3, 39, "Subsection",ExpressionUUID->"30a2144b-3b46-4288-ab50-fdf6b6b79ad1"],
Cell[828384, 17483, 153, 3, 39, "Text",ExpressionUUID->"0d552b4b-8e88-4644-87e9-ed107471483c"],
Cell[828540, 17488, 433, 13, 77, "Input",ExpressionUUID->"6a9fd571-6b5f-4523-9e0e-0f6cc6a49a2c"],
Cell[828976, 17503, 156, 3, 39, "Text",ExpressionUUID->"0a9724ba-54c2-4ac5-a3ee-bb6ffbad8ada"],
Cell[829135, 17508, 362, 11, 67, "Input",ExpressionUUID->"d7608195-faea-4939-b59a-d7af835ab801"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[829546, 17525, 164, 3, 66, "Section",ExpressionUUID->"4ce47866-355d-4f18-b6cb-04dc5a3961c5"],
Cell[CellGroupData[{
Cell[829735, 17532, 167, 3, 40, "Subsection",ExpressionUUID->"69afad34-eece-4318-b1af-35b67f17c417"],
Cell[829905, 17537, 373, 12, 44, "Text",ExpressionUUID->"c24ce7fc-e6c4-4404-8305-512fc0a659e5"],
Cell[CellGroupData[{
Cell[830303, 17553, 590, 15, 69, "Input",ExpressionUUID->"5c766461-333b-4232-aa0b-86f6aaca4ee7"],
Cell[830896, 17570, 149, 2, 46, "Output",ExpressionUUID->"dfe80a3d-390f-4caf-b605-255bf309ef06"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[831106, 17579, 268, 4, 66, "Section",ExpressionUUID->"5dcb10f0-bfcf-4543-933a-fdab3f42f925"],
Cell[831377, 17585, 214, 4, 40, "Text",ExpressionUUID->"01b03795-c13b-4880-85dd-3f7ee22592c2"],
Cell[831594, 17591, 226, 5, 40, "Text",ExpressionUUID->"0c5a950f-911b-4dd3-8a0c-867753f442d4"],
Cell[CellGroupData[{
Cell[831845, 17600, 1018, 30, 72, "Input",ExpressionUUID->"0abe7862-8d39-4b44-bf83-e4a828465270"],
Cell[832866, 17632, 4884, 98, 317, "Output",ExpressionUUID->"e83edd9d-70a9-4d5e-b8f0-1a0f9a10e8c7"]
}, Open  ]],
Cell[837765, 17733, 183, 3, 40, "Text",ExpressionUUID->"9228385f-95b3-4967-92e2-b1b5cceed024"],
Cell[CellGroupData[{
Cell[837973, 17740, 1960, 56, 69, "Input",ExpressionUUID->"82f84a76-2a42-43a3-a7c3-f6290773a8c4"],
Cell[839936, 17798, 8372, 157, 294, "Output",ExpressionUUID->"78eb78fc-8f9c-4468-b6e0-97452522fdae"]
}, Open  ]],
Cell[848323, 17958, 150, 3, 40, "Text",ExpressionUUID->"56269205-65ff-411f-8eda-3babc32d406a"],
Cell[CellGroupData[{
Cell[848498, 17965, 592, 14, 70, "Input",ExpressionUUID->"1486972d-5f3a-4ba2-a9ae-479f447e98b5"],
Cell[849093, 17981, 203, 3, 46, "Output",ExpressionUUID->"febf7d56-fbd2-4beb-b8ae-5f64aa243d21"],
Cell[849299, 17986, 203, 3, 46, "Output",ExpressionUUID->"af038e62-8411-468e-8af1-68095eb95d86"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[849551, 17995, 364, 6, 66, "Section",ExpressionUUID->"8e946f0c-4a99-43df-9caf-ec4caaffe258"],
Cell[849918, 18003, 4379, 89, 787, "Text",ExpressionUUID->"88dfd089-e917-4e11-8c62-31a8bdf98839"],
Cell[CellGroupData[{
Cell[854322, 18096, 160, 3, 40, "Subsection",ExpressionUUID->"2349c7cc-d807-4570-9dd8-1d7d32ea5206"],
Cell[CellGroupData[{
Cell[854507, 18103, 2092, 56, 192, "Input",ExpressionUUID->"2a45c67a-4c7a-4620-9b44-9facbb1e60b7"],
Cell[856602, 18161, 5915, 184, 226, "Output",ExpressionUUID->"6e345b95-faeb-4dbc-984f-8ab50bb6d11a"]
}, Open  ]],
Cell[862532, 18348, 147, 2, 47, "Input",ExpressionUUID->"900c8458-a4ba-4cc4-b18e-42da0fb1ad4e"],
Cell[862682, 18352, 663, 20, 48, "Input",ExpressionUUID->"0c3983e4-9847-45e3-a1bc-5cc93cb3aee5"],
Cell[863348, 18374, 720, 22, 48, "Input",ExpressionUUID->"06b8f74e-0d7f-427e-8563-76eca513743f"],
Cell[864071, 18398, 474, 15, 71, "Input",ExpressionUUID->"832e49a7-e751-4d83-a458-a54c02122c60"],
Cell[864548, 18415, 422, 12, 69, "Input",ExpressionUUID->"340a0248-090b-4a62-8ee2-20a9ee4eb027"],
Cell[864973, 18429, 1020, 29, 94, "Input",ExpressionUUID->"2ff878ae-46eb-4830-9aba-8987da345e8a"],
Cell[865996, 18460, 600, 16, 71, "Input",ExpressionUUID->"1d12a3bb-2c8d-4862-8d85-6481ffffe226"],
Cell[866599, 18478, 972, 32, 116, "Input",ExpressionUUID->"c9beda45-734e-4161-8c7a-19a899f60b27"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

