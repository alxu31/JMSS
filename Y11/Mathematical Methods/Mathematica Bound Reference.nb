(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1434853,      28168]
NotebookOptionsPosition[   1373012,      27144]
NotebookOutlinePosition[   1373554,      27163]
CellTagsIndexPosition[   1373511,      27160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[" Methods Bound Reference", "Title",
 CellChangeTimes->{{3.8847977592265573`*^9, 3.8847977677066784`*^9}, {
   3.8847984187094736`*^9, 3.8847984268047614`*^9}, {3.884983706303461*^9, 
   3.8849837118116508`*^9}, {3.8890353227209015`*^9, 
   3.8890353707541656`*^9}, {3.8890354704355745`*^9, 3.8890354742349534`*^9}, 
   3.892098560195339*^9},ExpressionUUID->"bf3f62ff-071c-40e8-957e-\
6654073ad6aa"],

Cell[CellGroupData[{

Cell["Usage Guide and Syntax", "Section",
 CellChangeTimes->{{3.889035502367718*^9, 
  3.8890355086527047`*^9}},ExpressionUUID->"b65f5c97-4158-416a-a0be-\
4bce61759dcf"],

Cell[CellGroupData[{

Cell["Syntax", "Subsection",
 CellChangeTimes->{{3.8847979820868607`*^9, 3.8847979834397078`*^9}, 
   3.884798105088069*^9},ExpressionUUID->"53799b5a-5086-4e9c-8cc4-\
79e82b55cf3e"],

Cell[TextData[{
 "Basic Operations + - * /\nShift+Enter to execute\nCtrl+/ for fraction - ",
 Cell[BoxData[
  FormBox[
   FractionBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "de7a9d0e-f84a-4701-9da1-a16d26dbd079"],
 "\na^b for exponents or ctrl+6 - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "83db3e23-918d-45fb-a265-fcb8971b719d"],
 "\nCapital letters for first letter of each word in a command\nSquare \
brackets surrounding the contents of a command\nDouble == for solving\nSingle \
= for defining variables\nSquare Root - crtl+2\nEscape -> deg -> Escape gives \
degree \[Degree]\nEscape then other things such as pi then escape for \
symbols. "
}], "Text",
 CellChangeTimes->{{3.8847979950628357`*^9, 3.8847979972583065`*^9}, 
   3.884798103422901*^9, {3.8849826488891783`*^9, 3.884982806640939*^9}, {
   3.8849841109010878`*^9, 3.884984129576795*^9}, {3.8852489194735637`*^9, 
   3.885248930221566*^9}, {3.886698466294701*^9, 
   3.8866985181604896`*^9}},ExpressionUUID->"f502a67b-09c5-40b6-b62c-\
5ca89b4a9932"]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebraic Commands", "Subsection",
 CellChangeTimes->{{3.8847978885005646`*^9, 3.8847979148039207`*^9}, {
  3.884797973526967*^9, 3.8847979758828115`*^9}, {3.8849815995225563`*^9, 
  3.884981604534984*^9}, {3.886721778026148*^9, 
  3.886721781132621*^9}},ExpressionUUID->"a2fb99b7-2871-4af1-905d-\
59cbf9324dc4"],

Cell[CellGroupData[{

Cell["Solve/SolveAlways / FindRoot / FindInstance", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849817311818748`*^9, {3.8849825850543766`*^9, 3.884982641818141*^9}, {
   3.8849828236560698`*^9, 3.8849828338954062`*^9}, {3.8849828785365567`*^9, 
   3.8849828958996663`*^9}, 3.8853368801552067`*^9, {3.887068772281933*^9, 
   3.887068778214839*^9}, {3.9011301980995393`*^9, 3.901130207096084*^9}, {
   3.9319368829504185`*^9, 
   3.9319368905040207`*^9}},ExpressionUUID->"6bd20e71-e811-4f4f-a3d1-\
0f88562c974f"],

Cell["\<\
Solves an equation or system of equations for it/s variable/s. \
Solve[LHS==RHS, variable]
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849817311818748`*^9, {3.8849825850543766`*^9, 3.884982641818141*^9}, {
   3.8849828236560698`*^9, 3.8849828338954062`*^9}, {3.8849828785365567`*^9, 
   3.8849828958996663`*^9}, 3.8853368801552067`*^9, {3.887068772281933*^9, 
   3.887068774475274*^9}},ExpressionUUID->"a2148367-7004-4ddb-a93c-\
63ab6250b961"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"3", "x"}], "+", "10"}], "==", "40"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8849829108110805`*^9, 3.884982928084865*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4889bbe2-b297-4470-8dad-60ff90f99d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "10"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849829311205654`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"36badadc-bed7-4cc0-8aee-652d8770812c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "==", 
      RowBox[{"15", "-", "x"}]}], ",", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "10"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852325369138126`*^9, 3.885232537710123*^9}, {
   3.8852329766978045`*^9, 3.885232988179308*^9}, {3.885233305536162*^9, 
   3.8852333195068083`*^9}, 3.8852334717648134`*^9, {3.886179853952256*^9, 
   3.8861798890451884`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"37b13f3b-2653-4c76-9c9f-3aba21db1958"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["5", "3"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["40", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886179889730319*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"865ac248-26ec-4628-b5c7-f9cf88d62516"]
}, Open  ]],

Cell["SolveAlways finds values of parameters so that lhs = rhs", "Text",
 CellChangeTimes->{{3.9011302400394197`*^9, 
  3.901130253081301*^9}},ExpressionUUID->"26d10100-bf78-485f-9034-\
26ef4efc0488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveAlways", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", 
     SuperscriptBox["x", "2"]}], "==", 
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9011302282880673`*^9, 3.90113023382498*^9}, {
  3.901130451139427*^9, 3.9011304902269773`*^9}, {3.931936958077336*^9, 
  3.9319369900558963`*^9}, {3.9319370225889945`*^9, 3.9319370226736217`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2f31cd20-6c76-4230-9a2d-a8250cec8cca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.931936969150485*^9, 3.931936990420435*^9}, 
   3.9319370229685493`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"c14848d3-7a4d-41f6-a3d9-51d026ba36b9"]
}, Open  ]],

Cell["When solve doesn\[CloseCurlyQuote]t work, use findinstance", "Text",
 CellChangeTimes->{{3.9265484985104437`*^9, 
  3.9265485073434706`*^9}},ExpressionUUID->"5a213a4d-44bf-42b4-a039-\
4480750c67ac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", "0.1"}], " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "4"}]]}]}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "1"}], "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", "0.1"}], " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "4"}]]}]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.926548512717564*^9, 3.9265485535759974`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"bfad1bc8-c4b5-42f5-a4a2-103bd048e31d"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.9265485310886335`*^9, {3.926548568489662*^9, 3.9265485994426327`*^9}, 
   3.926548630296968*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"49c18b8c-c8e7-4643-a679-25e9b9e81b98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "0.0004578908921716661`"}], "-", 
     RowBox[{"1.3944496615494408`*^-17", " ", "\[ImaginaryI]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9265485310886335`*^9, {3.926548568489662*^9, 3.9265485994426327`*^9}, 
   3.92654863045321*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"b96b8e7c-e603-47db-a1fd-0bddcc14eb07"]
}, Open  ]],

Cell["FindRoot good if you have an initial estimate", "Text",
 CellChangeTimes->{{3.9319369441711664`*^9, 
  3.931936953103883*^9}},ExpressionUUID->"e272b757-66fc-4767-81b0-\
1efdaeaa5be2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "5"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", "3"}], ")"}], 
     RowBox[{"Cos", "[", "x", "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}], 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931936907848033*^9, 3.931936936228437*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"755ab690-15de-49a6-80fd-0c85408e4bf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "3.4886109309384037`"}], "}"}]], "Output",
 CellChangeTimes->{3.9319369378049283`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"bfbf2cc0-ffed-43bd-a188-43d50a11ab50"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reals", "Subsubsection",
 CellChangeTimes->{{3.8849936950767026`*^9, 3.8849937310074053`*^9}, {
  3.8870687949518986`*^9, 
  3.887068805077388*^9}},ExpressionUUID->"88419862-3a76-4db8-aa92-\
3bb964f892bc"],

Cell["\<\
Add on to solve to limits solutions to real numbers only.
e.g.
Without Reals\
\>", "Text",
 CellChangeTimes->{{3.8849936950767026`*^9, 3.8849937310074053`*^9}, {
  3.8870687949518986`*^9, 
  3.8870688003505707`*^9}},ExpressionUUID->"69eb115a-9b3c-44ea-b9d5-\
4c2f66b7971f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", "x"], "==", "4"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.884993741160771*^9, 3.884993766010277*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"de99d67a-5bb7-44e6-8ffc-6d4e2b91aef0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    TemplateBox[{
      RowBox[{
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}], 
         RowBox[{"Log", "[", "2", "]"}]], "+", 
        FractionBox[
         RowBox[{"Log", "[", "4", "]"}], 
         RowBox[{"Log", "[", "2", "]"}]]}], 
      RowBox[{
        TemplateBox[{"1"}, "C"], "\[Element]", 
        TemplateBox[{}, "Integers"]}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849937665598803`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a1f6f2d0-9339-41e7-94ac-90afd091a514"]
}, Open  ]],

Cell["With Reals", "Text",
 CellChangeTimes->{{3.884993790213231*^9, 
  3.8849937917806*^9}},ExpressionUUID->"03deee98-44fb-421f-a03c-ab313fc20c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", "x"], "==", "4"}], ",", "x", ",", " ", "Reals"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.884993800818676*^9, 3.8849938228663545`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6e4ebbdd-ce4d-43bb-a9d5-94b5f41f758d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8849938239281387`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"7503754f-df29-42b0-96a5-c0fd48ea2f2f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simplify  / Full Simplify", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884981736298419*^9, {3.8849837289659624`*^9, 3.8849837420028*^9}, {
   3.8849839825790777`*^9, 3.884984015929104*^9}, {3.8870688273726273`*^9, 
   3.887068849265868*^9}, {3.9319368786549487`*^9, 
   3.9319368814591813`*^9}},ExpressionUUID->"a92087f8-8549-4e46-8947-\
7fc7a07013de"],

Cell["\<\
Changes an expression to a more simple form, usually collecting like terms \
and taking out common factors
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884981736298419*^9, {3.8849837289659624`*^9, 3.8849837420028*^9}, {
   3.8849839825790777`*^9, 3.884984015929104*^9}, {3.8870688273726273`*^9, 
   3.887068828725691*^9}},ExpressionUUID->"2f5d9e8b-893e-49ff-97ee-\
ca7ed0b2a54c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884983816330469*^9, 3.884983830787821*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"10332cf6-3a8b-4cda-b639-da409c53aca9"],

Cell[BoxData[
 RowBox[{
  FractionBox["7", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8849839673250656`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5bedd143-b18c-4423-98f1-6401c708e7a0"]
}, Open  ]],

Cell["\<\
FullSimplify - Similar to simplify but sometimes goes further to make it \
possible more simple.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825671844263`*^9, {3.884984020586495*^9, 3.884984073871112*^9}, {
   3.8849926716945252`*^9, 
   3.884992673074299*^9}},ExpressionUUID->"db944fb9-dddd-496a-b1b0-\
4de89267cabc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884984048859175*^9, 3.8849840529397106`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"0c7dc6b5-9d73-4a11-bcb5-22daf5530082"],

Cell[BoxData[
 RowBox[{
  FractionBox["7", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "x"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8849840535417986`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a19541b3-8fdd-4544-bd7c-b1a57a8ff17e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expand  ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825696977453`*^9, {3.884992697880679*^9, 3.884992724566984*^9}, {
   3.887068859230013*^9, 
   3.8870688652695484`*^9}},ExpressionUUID->"824687f3-d4db-4b68-b5bb-\
0b83850c9393"],

Cell["\<\
Expands out any brackets then collects like terms.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825696977453`*^9, {3.884992697880679*^9, 3.884992724566984*^9}, {
   3.887068859230013*^9, 
   3.887068860315713*^9}},ExpressionUUID->"25286814-ef1c-4e33-ab2b-\
fb2f8a328ac5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "2"]}], "+", 
   RowBox[{"3", "x"}], "+", 
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}], "2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884992726769435*^9, 3.8849927328048744`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5624c4f0-4e2c-44a6-afe8-b8a68cb5ca68"],

Cell[BoxData[
 RowBox[{"14", "-", 
  RowBox[{"7", " ", "x"}], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["x", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.884992734525873*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ce094a95-aa6c-4d9e-aa15-6fb982f04088"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reduce ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884982571337373*^9, {3.88499282614894*^9, 3.8849928510652795`*^9}, {
   3.88706888247943*^9, 
   3.8870688869930286`*^9}},ExpressionUUID->"0e49ae3f-5e45-4d5e-9f34-\
b731761f05c8"],

Cell["\<\
Reduces the statement to solve inequalities and find domains.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.884982571337373*^9, {3.88499282614894*^9, 3.8849928510652795`*^9}, {
   3.88706888247943*^9, 
   3.887068883994392*^9}},ExpressionUUID->"0c5023ed-bb40-45ba-a874-\
a65ebca74bf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", "x"}], "-", "1"}], ">", "11"}], "]"}]], "Input",
 CellChangeTimes->{{3.884992853288394*^9, 3.8849928740957756`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a7897161-4516-4a38-a5a0-5c0d4bce2f61"],

Cell[BoxData[
 RowBox[{"x", ">", "3"}]], "Output",
 CellChangeTimes->{{3.8849928653319693`*^9, 3.884992874798915*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"11fa8841-4a1c-47c6-9468-b8b853f21b53"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Clear ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, {3.884992899120445*^9, 3.884992943520293*^9}, {
   3.887068891742505*^9, 
   3.887068896913669*^9}},ExpressionUUID->"40213687-5c14-43f3-817c-\
c950d1f9a08a"],

Cell["\<\
Clears the variable within the square brackets if that variable has been \
defined
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, {3.884992899120445*^9, 3.884992943520293*^9}, {
   3.887068891742505*^9, 
   3.887068893317236*^9}},ExpressionUUID->"33a18c5d-3fff-4ca1-b23a-\
8676ef2dde51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "2"}]], "Input",
 CellChangeTimes->{{3.8849929546344748`*^9, 3.884992959664875*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"48d69986-423e-4fdc-ae07-23b17f15d569"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.884992960437477*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7a97b750-116d-4e59-8490-9543fac89884"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.8849929629150686`*^9, 3.8849929759902945`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"56feb70d-e61a-47fa-9a0a-6a1f0ff0046c"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8849929764940815`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5ade36a2-ab30-4f64-9f78-fce3a001e9c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.8849929794449368`*^9, 3.884992988763646*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1d546958-3bac-4ab0-8319-ed33b1d0b798"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.884993000261648*^9, 3.8849930013775167`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a22fd709-0172-40e4-a082-626a6c55c1b5"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.8849930034215155`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6afbd1bb-8df3-47ad-aba2-7ed52526b117"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clears", " ", "All"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.892098592714657*^9, 3.8920986000997243`*^9}, {
  3.892139948724556*^9, 3.8921399578642707`*^9}, {3.899939032703908*^9, 
  3.8999390344431763`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"10cdaa4a-18fc-46fd-8ee5-d50954965471"]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining a function", "Subsubsection",
 CellChangeTimes->{{3.8861800794145107`*^9, 3.8861800951598825`*^9}, {
  3.886180148754488*^9, 3.886180171555252*^9}, {3.886180459253895*^9, 
  3.88618045976757*^9}, {3.8870689200975227`*^9, 
  3.887068934350787*^9}},ExpressionUUID->"3ace38f1-632a-4bb1-a979-\
63fa05e24636"],

Cell["\<\
Defines the function, in this case f. Can be used for plotting, solving or \
other things. \
\>", "Text",
 CellChangeTimes->{{3.8861800794145107`*^9, 3.8861800951598825`*^9}, {
  3.886180148754488*^9, 3.886180171555252*^9}, {3.886180459253895*^9, 
  3.88618045976757*^9}, {3.8870689200975227`*^9, 
  3.8870689254126296`*^9}},ExpressionUUID->"1bd66e65-8316-4f18-8efd-\
19572abb2a26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "x"}], "-", "3"}]}]], "Input",
 CellChangeTimes->{{3.8854852947135296`*^9, 3.8854852994700003`*^9}, {
  3.8854856045101275`*^9, 3.885485607090886*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"ea648de7-ff3f-439c-b3f3-609c88547246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8854856222803326`*^9, 3.8854856230653744`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"e5c97a6e-ed33-461b-80c1-95f906c94e9b"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.8861801072493315`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"9a5cea25-75b4-4a70-ac18-08406512e16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8854856265647287`*^9, 3.8854856312129936`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"fa8f79e6-3878-4182-b1d2-22a781b033f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "+", 
  RowBox[{"4", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.8861801103939533`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b0b9f00f-2eaa-452d-8301-1241391b32f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.885485754218193*^9, 3.8854857582039995`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"4b38ca4d-a1a1-4d47-860e-48f7ceb15401"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["3", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886180198251274*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"d18eca52-30fc-4fb3-9f5a-5a8531882087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8854857601018715`*^9, 3.8854857702515535`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f6e672a8-d56f-41a6-b3e4-122243c55d8c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf9kNokQO7pmq4vgh7uz9P1UtwV6jwAYOXN7/o
z32236fK7K/3csEDLrtuc/4Ne7B/4rsyp/2iAgcKVq7/ISh8eX/MK+26I0d4
DoSlKS+8VLNzf6qZkNbZ6ZwHjp+52WUcvMPeJDno+JkqtgNWugc3BUy/bL9p
i/9lbSnmA0xlondSJB/Y/+t8pTz72f/97DwBjUnvntn//Ly+bq7gz/3ND645
Fy1+a18rr7mnN+bT/g2z2wLqPn20d5j4dC+b2Yv9+YtSBJ6EfbXveHOr5r7H
1f1xWbNk2xt/2B/w9t382GCDfWdgmaXxnN/2Hj2bTs98eMeeRWTqs/pf/+wF
AkJm/X/52v766dYPLfyMDjH64oeE7b7Yh1Ynmc06zOQQ8rbzZgbfb/sc7tdK
56JYHG6IXXOds5XBQX71sWlsr1gd7MJ6dXmvMDtU73AO5p/N7vCtoH2ZnBm7
Q8GynG1m+pwOD3xu5uTGcTnwMJkn6T3lcpBgyTsSc4rXwTU3ZKrWZB4oLeAg
sVM231WFD0oLOUwq6phocJ0fSgs7QOJFAEqLOAAAA0W/vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$12306#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.9999997959183675`, 4.9999997959183675`}, {-5., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8861801999109926`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"b1bd3338-3365-40ad-9ab6-88cb53864be2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.8861804808492193`*^9, 3.886180482700224*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"3aa05163-c967-4bba-8114-fc1f9960c711"]
}, Closed]],

Cell[CellGroupData[{

Cell["Breaking fractions apart", "Subsubsection",
 CellChangeTimes->{{3.8945645773428288`*^9, 3.8945645820119133`*^9}, {
  3.894564621352712*^9, 
  3.894564625784216*^9}},ExpressionUUID->"3e592ed0-8933-42e6-8b7b-\
818ce0ee30a8"],

Cell["Separating and simplifying fractions", "Text",
 CellChangeTimes->{{3.894564682635897*^9, 
  3.8945647008343296`*^9}},ExpressionUUID->"c1c74f16-947f-4a84-bbaa-\
eb57942cbb53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    FractionBox["2", 
     RowBox[{
      RowBox[{"3", "y"}], "-", "1"}]]}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.8945646431293745`*^9, 3.8945646633354063`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d4850ffb-3487-4009-8302-5de59e8c45b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox[
     RowBox[{"2", "+", "x"}], 
     RowBox[{"3", " ", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.894564671261834*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"da963a4b-df03-482f-8e9a-0a1f630b0a0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     FractionBox["2", 
      RowBox[{
       RowBox[{"3", "y"}], "-", "1"}]]}], ",", "y"}], "]"}], "//", 
  "Apart"}]], "Input",
 CellChangeTimes->{{3.894564706070572*^9, 3.8945647084424706`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"24d28d5e-cc5b-4f27-84f6-b0551c910e84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["1", "3"], "+", 
     FractionBox["2", 
      RowBox[{"3", " ", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8945647088192186`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7cf97288-86fd-4af1-8ec9-7fd3a06bb66a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphing Commands", "Subsection",
 CellChangeTimes->{{3.8867216039247627`*^9, 
  3.886721606614643*^9}},ExpressionUUID->"be3916cd-60b3-424f-9ddd-\
f0a839a00bc8"],

Cell[CellGroupData[{

Cell["Plot ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, 3.884992899120445*^9, {3.8849930624146185`*^9, 
   3.8849930903807917`*^9}, {3.8849931236425223`*^9, 3.884993127339635*^9}, {
   3.8849932032973523`*^9, 3.8849932823239884`*^9}, {3.8870689819819536`*^9, 
   3.887069008684623*^9}},ExpressionUUID->"f082f1de-2211-4269-a373-\
96d3154c4b8a"],

Cell[TextData[{
 "Plots the graph of y=__: Plot[RHS, {variable (x), lowest value to display, \
highest value to display}]\ne.g. To plot the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "e8e0f7b1-752a-4bf6-97ea-c3f58828b104"]
}], "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, 
   3.8849825733275776`*^9, 3.884992899120445*^9, {3.8849930624146185`*^9, 
   3.8849930903807917`*^9}, {3.8849931236425223`*^9, 3.884993127339635*^9}, {
   3.8849932032973523`*^9, 3.8849932823239884`*^9}, {3.8870689819819536`*^9, 
   3.887068983446745*^9}},ExpressionUUID->"f0076813-9c3c-409d-ae1b-\
5439806662c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8849934347638335`*^9, 3.8849934496787443`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e015b7d4-e35a-4bf0-912a-c8f83ee9b290"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
f/UFhZxXp5HR//Uh6P/7kP8BcSByBQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$10614#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 99.99999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8849934520735273`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9e6a867e-7d9b-4e8d-8764-fdda61edc0e5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotRange ", "Subsubsection",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, {
   3.884993464326903*^9, 3.8849935136511073`*^9}, {3.8849935641016645`*^9, 
   3.8849935707618637`*^9}, {3.887068986188518*^9, 3.88706898703603*^9}, 
   3.887069018861909*^9},ExpressionUUID->"33b6dd24-a380-4a4d-b60b-\
073cb04e4c68"],

Cell["\<\
Add on to Plot to choose what y-values to display
e.g.\
\>", "Text",
 CellChangeTimes->{{3.884797923712126*^9, 3.884797959413474*^9}, {
  3.884993464326903*^9, 3.8849935136511073`*^9}, {3.8849935641016645`*^9, 
  3.8849935707618637`*^9}, {3.887068986188518*^9, 
  3.88706898703603*^9}},ExpressionUUID->"4208e532-b513-4856-b2a4-\
d3fd21af3913"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "30"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8849934210670257`*^9, 3.884993421563891*^9}, {
  3.8849935202679214`*^9, 3.884993555321372*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cc4e39f5-ac22-4c51-8b59-eaa67dc6e1ed"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
emEe98+DaJrC3JEyuhn9///7HzpOAbw=
       "]]},
     Annotation[#, "Charting`Private`Tag$11114#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-30., 30.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.884993557640934*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c35695ff-1957-44fb-bcba-f051745e2c43"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ContourPlot ", "Subsubsection",
 CellChangeTimes->{{3.885248373693714*^9, 3.885248381138712*^9}, {
   3.885248412230218*^9, 3.8852484239579506`*^9}, {3.885248517259935*^9, 
   3.8852485256379175`*^9}, {3.8870689917387094`*^9, 3.8870689926211834`*^9}, 
   3.8870690267620564`*^9},ExpressionUUID->"731c5577-0794-4eea-a005-\
f0567f83b0c8"],

Cell["\<\
Can plot any relation \
ContourPlot[LHS==RHS,{x,xmin,xmax},{y,ymin,ymax},Axes->True, Frame->False]
e.g.\
\>", "Text",
 CellChangeTimes->{{3.885248373693714*^9, 3.885248381138712*^9}, {
  3.885248412230218*^9, 3.8852484239579506`*^9}, {3.885248517259935*^9, 
  3.8852485256379175`*^9}, {3.8870689917387094`*^9, 
  3.8870689926211834`*^9}},ExpressionUUID->"da041977-6295-4580-86cf-\
26767c222327"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852484201082544`*^9, 3.885248507551423*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a259022c-bf2b-4a21-9ba2-be047eb4f99b"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885248513997242*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fad4144e-167c-433b-9565-c24e352c2ade"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AspectRatio ", "Subsubsection",
 CellChangeTimes->{{3.8852491359726567`*^9, 3.885249164580577*^9}, {
   3.887068995400653*^9, 3.8870689963736305`*^9}, 
   3.8870712385979867`*^9},ExpressionUUID->"c45b2c15-3604-43c5-80d4-\
24219fb41269"],

Cell["\<\
Use to chose the aspect ratio of a graph.
e.g.\
\>", "Text",
 CellChangeTimes->{{3.8852491359726567`*^9, 3.885249164580577*^9}, {
  3.887068995400653*^9, 
  3.8870689963736305`*^9}},ExpressionUUID->"ac3802b5-0d8a-4cdf-b870-\
62cd46e7ef37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    SqrtBox[
     RowBox[{"8", "-", 
      SuperscriptBox["x", "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"14343b19-e5ff-43bd-9dbb-0977a19ece4d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/wFhsD9e
       "]]},
     Annotation[#, "Charting`Private`Tag$22015#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.828334362058351, 2.8283074717772876`}, {-1., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885249168169199*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1744e616-12aa-4121-976b-c0d6fface474"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate ", "Subsubsection",
 CellChangeTimes->{{3.885249416482438*^9, 3.8852494256880083`*^9}, {
   3.885249905343692*^9, 3.8852499128948283`*^9}, 3.8852500098533244`*^9, {
   3.885258407250436*^9, 3.88525841966006*^9}, {3.8870689987584352`*^9, 
   3.887068999561429*^9}, 
   3.8870712466086283`*^9},ExpressionUUID->"0274ff43-971c-4222-bd4a-\
b7569051ee4c"],

Cell["\<\
Goes around another function to add a slider for a variable.
e.g. in a graph\
\>", "Text",
 CellChangeTimes->{{3.885249416482438*^9, 3.8852494256880083`*^9}, {
   3.885249905343692*^9, 3.8852499128948283`*^9}, 3.8852500098533244`*^9, {
   3.885258407250436*^9, 3.88525841966006*^9}, {3.8870689987584352`*^9, 
   3.887068999561429*^9}},ExpressionUUID->"1a9a9b75-1ca8-45e2-94e2-\
f71b75f0e1ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SqrtBox["x"], "-", 
        FractionBox["1", "4"]}], ",", 
       RowBox[{"x", "+", "k"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"c60aeda9-75aa-4b75-b45a-887e329afcdd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -1.04, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -5, 5}}, Typeset`size$$ = {
    360., {114., 119.04607696121224`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{Sqrt[$CellContext`x] - 1/
         4, $CellContext`x + $CellContext`k$$}, {$CellContext`x, -5, 5}, 
        PlotRange -> {-4, 4}], 
      "Specifications" :> {{$CellContext`k$$, -5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{802., {145.134033203125, 150.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8852584263871837`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"578c8b16-8314-4c17-9c4b-59b280d6a3f9"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trigonometric Commands", "Subsection",
 CellChangeTimes->{{3.8867218034896755`*^9, 
  3.8867218076929855`*^9}},ExpressionUUID->"78b28e05-6202-44bc-9fa4-\
e5a70079d865"],

Cell[CellGroupData[{

Cell["Trig Ratios ", "Subsubsection",
 CellChangeTimes->{{3.8866987139889483`*^9, 3.886698765942551*^9}, {
  3.8866988688795166`*^9, 3.886698876396013*^9}, {3.8866990176580715`*^9, 
  3.8866990178194685`*^9}, {3.887071282904318*^9, 
  3.8870712889616365`*^9}},ExpressionUUID->"8c072f80-99a9-47a7-b07f-\
2fa2f6022b80"],

Cell["Sin Cos Tan (Radians is default) Arc is the inverse.", "Text",
 CellChangeTimes->{{3.8866987139889483`*^9, 3.886698765942551*^9}, {
  3.8866988688795166`*^9, 3.886698876396013*^9}, {3.8866990176580715`*^9, 
  3.8866990178194685`*^9}, {3.887071282904318*^9, 
  3.887071284107184*^9}},ExpressionUUID->"21bb1156-2598-471e-8361-\
bbca3e711cdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"30", "Degree"}], "]"}]], "Input",
 CellChangeTimes->{{3.8866987452377863`*^9, 3.8866987579331675`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e7c11274-f3a5-49e2-9e5a-66dd80e63495"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.886698749365651*^9, 3.8866987582975483`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"132ce75c-070e-4fa9-ad6a-fb1c18578201"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"ArcCos", "[", 
   FractionBox["1", "2"], "]"}], 
  RowBox[{"\[Pi]", "/", "180"}]]], "Input",
 CellChangeTimes->{{3.88669887843623*^9, 3.8866990043249135`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1046680b-8400-4e9f-a316-ee8c84030f0d"],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{{3.886698885623428*^9, 3.8866989313482676`*^9}, {
  3.8866989789472113`*^9, 3.8866990061397552`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"408f08c3-1c66-48dc-82ed-1039a92ec0f7"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["Quadratic Commands", "Subsection",
 CellChangeTimes->{{3.8892148714979796`*^9, 
  3.889214875082842*^9}},ExpressionUUID->"64a937f6-8431-4960-8c80-\
9a19af657591"],

Cell[CellGroupData[{

Cell["Other Commands", "Subsection",
 CellChangeTimes->{{3.8888770987184596`*^9, 
  3.8888771006208773`*^9}},ExpressionUUID->"61b7a619-1e40-4df3-acdf-\
2c4d9242cd1e"],

Cell[CellGroupData[{

Cell["Binomial", "Subsubsection",
 CellChangeTimes->{{3.88887711454767*^9, 
  3.888877117099816*^9}},ExpressionUUID->"235f15b5-c5e7-4460-ae6b-\
55f7faa66de2"],

Cell["\<\
Binomial Finds the amount of combinations for Vlaues n and r Binomial[n,r]
Below shows the possible combinations of lottery numbers. (1-45, 6 numbers)\
\>", "Text",
 CellChangeTimes->{{3.8888771278829174`*^9, 3.888877134494507*^9}, {
  3.8888772358818684`*^9, 
  3.888877300468035*^9}},ExpressionUUID->"d2e69137-55d4-4899-a47f-\
b862978af3cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"45", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8888770482126083`*^9, 3.888877057503593*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1e1920bd-c1ca-44e1-9160-eb247deced1b"],

Cell[BoxData["8145060"], "Output",
 CellChangeTimes->{3.888877058093738*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4db37fb0-8c76-4472-b864-5b189ade26ec"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Common Errors", "Subsection",
 CellChangeTimes->{{3.884981610859003*^9, 
  3.8849816142552137`*^9}},ExpressionUUID->"bce946fc-9e9b-4bbb-ad61-\
b48654ec5d15"],

Cell["\<\
Within the solve function you must use == instead of =.
Variables already defined when trying to solve.
Mistyping an equation.
Put a space or * between variables to avoid creating a new variable. \
\>", "Text",
 CellChangeTimes->{{3.8849816235493603`*^9, 3.884981640079008*^9}, 
   3.884993857076682*^9, {3.8849938887318363`*^9, 3.8849939274526253`*^9}, {
   3.886611360703947*^9, 
   3.8866113758745017`*^9}},ExpressionUUID->"6ac6ea03-81f2-4271-a813-\
6b6f7d1deddc"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions, Relations and Transformations", "Section",
 CellChangeTimes->{{3.8890355275572987`*^9, 3.8890355385720854`*^9}, {
   3.8894132370367746`*^9, 3.8894132374171934`*^9}, 3.889464447896866*^9, 
   3.889464515278248*^9},ExpressionUUID->"66755660-2680-40cb-8735-\
685f87c94546"],

Cell[CellGroupData[{

Cell["Even/Odd", "Subsection",
 CellChangeTimes->{{3.927090513169834*^9, 
  3.9270905164122143`*^9}},ExpressionUUID->"4a45307d-a464-44ca-b439-\
fe348bd84060"],

Cell["\<\
Even: f(x) = f(-x)
symmetrical in y axis\
\>", "Text",
 CellChangeTimes->{{3.9270905243764267`*^9, 3.9270905340111847`*^9}, {
  3.927090585825656*^9, 
  3.927090594449214*^9}},ExpressionUUID->"b0423dbd-323c-4c67-a870-\
7cd356f32425"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "==", 
  RowBox[{"Cos", "[", 
   RowBox[{"-", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9270905388965*^9, 3.9270905556407185`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b74af34b-684d-4875-8cdc-2370649d6834"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.927090547802125*^9, 3.92709055589188*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"a1ed4c63-7bb1-4cf2-9490-515811293428"]
}, Open  ]],

Cell["\<\
Odd: f(-x) = -f(x)
ref in x and y same thing\
\>", "Text",
 CellChangeTimes->{{3.927090567163663*^9, 
  3.927090584485341*^9}},ExpressionUUID->"4ba5075f-9310-4fee-8998-\
2c8db7ab7da8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"-", "x"}], "]"}], "==", 
  RowBox[{"-", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9270905972189794`*^9, 3.927090605030827*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"89114db3-ab92-4dd2-9ceb-785313363a8d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.927090602620698*^9, 3.9270906052994637`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"84a57820-70f0-46b1-aaa8-289cfb077d8b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Domain, Range and Notation", "Subsection",
 CellChangeTimes->{{3.8851628099903407`*^9, 3.8851628131477594`*^9}, {
  3.885319672730954*^9, 
  3.8853196840033035`*^9}},ExpressionUUID->"eece97fb-0070-4a2d-8f6c-\
a2bed64fba53"],

Cell[TextData[{
 "Domain - The domain is all the possible values shown on the x-axis.\nRange \
- The Range is all the possible values shown on the y-axis.\nSet Notation - A \
notation that includes a collection of elements. \ne.g. If x was any of the \
integers from 1-5 it would be notated as x \[Element] {1,2,3,4,5}.\nOther \
Terminology - R is a term meaning all real numbers, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["R", "+"], "means", " ", "all", " "}], TraditionalForm]],
  ExpressionUUID->"9f123ea0-37f7-45f8-8128-2ad50a7aceb6"],
 "positive real numbers not including zero, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "-"], TraditionalForm]],ExpressionUUID->
  "55cd995d-e118-494f-9742-8bb92c1f95c8"],
 " means all negative real numbers not including zero. You can use this to \
notate domain and range. \[Intersection] - Means intersect/and. \[Union] - \
Union/or. \[Element] - Means element. \\ - Means without.\nR Notation - If \
there was a graph of a truncus with no transformations, the Domain would be x \
\[Element] R \\ {0}, the Range would be y \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "+"], TraditionalForm]],ExpressionUUID->
  "44f138ae-445a-406d-a97c-2b195b1727fc"],
 "\nInterval Notation - Pronumeral \[Element] [ or ( Lower Bound, Upper Bound \
) or ]\ne.g. x is larger than -2 but less than or equal to 5. x \[Element] \
(-2,5]\nFunction Notation - {Pronumeral: Lower Bount < or \[VectorLessEqual] \
Pronumeral > or \[VectorGreaterEqual] Upper Bound} \ne.g. x is larger than -2 \
but less than or equal to 5. {x: -2 < x \[VectorGreaterEqual] 5}\nFunction \
notation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", ":", "D"}], "->", 
     TemplateBox[{},
      "Reals"]}], ",", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], "=", 
     RowBox[{"(", 
      RowBox[{"insert", " ", "rule", " ", "here"}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"7d2435c3-7948-41bf-b41e-57c8ba658ca7"],
 ", Where:\nD = the domain for which the function works\n",
 Cell[BoxData[
  TemplateBox[{},
   "Reals"]],ExpressionUUID->"ac57ad3b-aca7-4b21-9f14-d5c7bc39ecdd"],
 " = the co-domain, the set of all possible outcomes of the function."
}], "Text",
 CellChangeTimes->{{3.8851628176218405`*^9, 3.8851628180716114`*^9}, {
   3.8853196882647543`*^9, 3.885319784727414*^9}, {3.88531983430651*^9, 
   3.885319847127679*^9}, {3.885320029702746*^9, 3.8853203570182505`*^9}, {
   3.8853203931700144`*^9, 3.8853204036507974`*^9}, {3.885322028919468*^9, 
   3.8853220306044636`*^9}, 3.8853229602648363`*^9, {3.885322996150053*^9, 
   3.8853231208292456`*^9}, {3.885335537046091*^9, 3.885335733678158*^9}, {
   3.8853357697799253`*^9, 3.88533577646941*^9}, {3.885335810832468*^9, 
   3.8853358723448153`*^9}, {3.885335992717436*^9, 3.8853360077626743`*^9}, {
   3.885336049422246*^9, 3.8853360499892535`*^9}, 3.8880072020370407`*^9, 
   3.8880072454690576`*^9},ExpressionUUID->"e29f4661-1986-4439-ba6e-\
9500ec383bd2"],

Cell["Finding the domain of a function", "Text",
 CellChangeTimes->{{3.9065686880440445`*^9, 
  3.9065686923916287`*^9}},ExpressionUUID->"01f4f8cb-5c7e-48e0-bb19-\
1e39fc43f63e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.906568671418163*^9, 3.9065686802683516`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ed9d4dbb-361d-482d-8e19-7bdc9a20cdbc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9065686818261347`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c22bfb9c-3a5d-4dfd-8bd3-72a9098f5b6a"]
}, Open  ]],

Cell["Finding the range of a function", "Text",
 CellChangeTimes->{{3.9065687648725624`*^9, 
  3.9065687719330444`*^9}},ExpressionUUID->"1ee71ace-9bb3-4b6e-9eed-\
92090307e5cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.9065686990415244`*^9, 3.9065687148683057`*^9}, {
  3.906568756759185*^9, 3.9065687577846*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"57fac4c7-8fd7-40d7-8f89-471917092b79"],

Cell[BoxData[
 RowBox[{"y", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{{3.906568707054757*^9, 3.9065687126965475`*^9}, 
   3.9065687582663813`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4e583664-f571-45da-bcdb-394a8f7eb691"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Types of Relations", "Subsection",
 CellChangeTimes->{{3.8851641565692053`*^9, 3.885164166264103*^9}, {
  3.8853366837196226`*^9, 
  3.885336685003051*^9}},ExpressionUUID->"6cc06257-d0ae-477c-b086-\
df13d9e0c766"],

Cell[CellGroupData[{

Cell["Functions: ", "Subsubsection",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
  3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
  3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
  3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
  3.8874086387177896`*^9}, {3.8874088191608734`*^9, 
  3.8874088233795195`*^9}},ExpressionUUID->"06bca0f8-7530-4121-9f50-\
46d7f15f3c5d"],

Cell["\<\
Functions are a type of relation that are either one-to-one or many-to-one. \
The vertical line test can be used to determine if a relation is a function. \
\>", "Text",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
   3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
   3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
   3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
   3.8874086387177896`*^9}, 
   3.8874088191608734`*^9},ExpressionUUID->"5d1e7c3a-4bad-4dec-a644-\
1bd76a962015"]
}, Closed]],

Cell[CellGroupData[{

Cell["One-to-One (Function): ", "Subsubsection",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
  3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
  3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
  3.8853367945514097`*^9, 3.885336837936643*^9}, {3.887408623286769*^9, 
  3.887408626704818*^9}, {3.8874087976320953`*^9, 
  3.8874088002719812`*^9}},ExpressionUUID->"b20b7adc-068e-47d0-9037-\
a70e73666d55"],

Cell["\<\
Each x-value maps onto a unique y-value. Passes the vertical and horizontal \
line test. \
\>", "Text",
 CellChangeTimes->{{3.8851641755921326`*^9, 3.88516422719681*^9}, {
   3.8853364703303037`*^9, 3.8853364705153847`*^9}, {3.8853366313740025`*^9, 
   3.8853366314656744`*^9}, {3.885336689812993*^9, 3.8853367138611083`*^9}, {
   3.8853367945514097`*^9, 3.885336837936643*^9}, 3.887408623286769*^9, {
   3.8874086561744757`*^9, 3.88740865661462*^9}, {3.8874088045508223`*^9, 
   3.8874088069368477`*^9}},ExpressionUUID->"73b765d6-ca05-4f0b-ad05-\
1e043facd2ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "+", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8851642578631315`*^9, 3.8851642834500866`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2833080d-8509-4e62-864e-ddf5145c89f7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H9QE3QYx/GxWG0OQX4zmmzsa4jLAX5ZcAy6PYa7cRZIENjppTTBI4Ig
4QwPtUh+iHalwOAEdgUSwe2SrjuRuGpPgaJixFWOCCxtCiJe8RvyWEQ9/fG5
17/vvz7BpvyULKFAIEhc278em0icXV1lSGphvMRvYXSFIamFpA2/LV36iyGp
BWVMgTN/jiGphW9PVYtvjzMktSAOGw7C7xiSWqgtynj+nUaGpBasLoWtgmiG
pBZEWUYue0WFZCR4/3w5t+VsMJIcUnobDmy5rkRyG5T8+WzuGYcCv14Kiro6
EwHdbzXkdO4KwrHYxIvDmyMgqTpN+fc5OZJhYLR8lZTwMBDJrdDWf8ReuFeG
5NOwr6zW9/t2fyS3wPGMxy5Ivf2QDAWBRmGLL/dBMgR+OX2u0nrTC8lNIF+X
3TH/nCeSDF5/Ri0alXtgV6D53bz3g+FA9K/tvb1SJBWgLtatvtEqRlIOzbdS
+45sFyEpg4lS3zhjgBBJP+gxhxrupzttt3bWqoqsXhAxOTIfblm0ke6wo2dU
4kyftpFiKOjoXPb0dti6f9q9crLKBdIPsuYfjl6z1Y0ktGv3L+r7b4yciky9
qm+S1egO2h16neabz5PrHfqh1yR15T03bMLDvmOZsmm960N19zU+bXvCLbnU
9Mei3j3gI+HlMaftxG17/KHzTj0pws8aK5KPz7pARvT65pW7UsxvydxwN10E
pCfuy2nYWFkqBtIHq148HBPZJAXSH119zONvP3IHMhCHB8qnyzw84UK99I5E
EYRpJaaohl4vIJWYK51SDe7xAVKFCuuVuscf+ALJsKQ7PtWj0R/Ip7CgLbcr
KlwG5GZ0E0abwu4FAhmKhryXzOoaOZBqDPhiY75hUxCQW7H60MmzEcMKIDWY
UrFLY+lSQqvbh3t0eeGo3luW1nosGMgItI9LWmrSVEBuw0HTve1eCgYkxzuu
nyybVQxIjvNt2Z2yEAYkR9nUlDxYw4DkmFk4uxQey4Dk+OjE6qeJuxmQHEM+
lgVWfcCA5BhjHB1yq2FAcnxhsqnyTB0DkuObGuVCvYUByfHLiyFDbVYGJMeU
K5EVff0MSI5Z2QtxCQMMSI7F6y7NDQwyIDlaknSv/niTAcnxvh3ifncwINd6
i4VzWRNrvf/Jcf2TfR2TDxiQHPl+o//MDAOSo8FFMli0wIDk+PL562XLywxI
jjmG92KPrjAg+f+/xYDk+A9Hvj2Q
       "]]},
     Annotation[#, "Charting`Private`Tag$7373#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-18.99999918367347, 20.99999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8851642844163437`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c32e1f6e-2482-40fc-aec7-c041eb0bf627"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Many-to-One (Function): ", "Subsubsection",
 CellChangeTimes->{{3.8851642977487392`*^9, 3.885164303168159*^9}, {
  3.8853361523696027`*^9, 3.885336160242159*^9}, {3.8853363010916157`*^9, 
  3.885336326814618*^9}, {3.8853364663009033`*^9, 3.885336466826342*^9}, {
  3.8853366286565323`*^9, 3.8853366287997465`*^9}, {3.885336840369223*^9, 
  3.8853368527514105`*^9}, {3.887408653561244*^9, 3.887408665224209*^9}, {
  3.887408838246831*^9, 
  3.8874088416537447`*^9}},ExpressionUUID->"36f8d0d5-c046-4d76-8894-\
7c4d765f4976"],

Cell["\<\
More than one x-value maps onto the same y-value. Passes the vertical line \
test.\
\>", "Text",
 CellChangeTimes->{{3.8851642977487392`*^9, 3.885164303168159*^9}, {
  3.8853361523696027`*^9, 3.885336160242159*^9}, {3.8853363010916157`*^9, 
  3.885336326814618*^9}, {3.8853364663009033`*^9, 3.885336466826342*^9}, {
  3.8853366286565323`*^9, 3.8853366287997465`*^9}, {3.885336840369223*^9, 
  3.8853368527514105`*^9}, {3.887408653561244*^9, 
  3.887408663424346*^9}},ExpressionUUID->"ff193de8-1dc0-422f-89b6-\
a91f742ece4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", "1"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853363341034517`*^9, 3.885336417687493*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a97971ce-5b37-4b0f-95a6-80002c828f25"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9H9lRqEg
       "]]},
     Annotation[#, "Charting`Private`Tag$4631#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8853363733892994`*^9, 3.885336419322116*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"d11bcead-f4b1-4de0-aced-582953f43cea"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relation:", "Subsubsection",
 CellChangeTimes->{{3.887408858058188*^9, 
  3.88740886237766*^9}},ExpressionUUID->"96951eb2-8c78-424a-83d5-\
03d3d9c57901"],

Cell["\<\
A relation is any link between x and why values. Functions are all relations, \
but not all relation are functions. \
\>", "Text",
 CellChangeTimes->{{3.887408866445883*^9, 
  3.8874089056077256`*^9}},ExpressionUUID->"7df5b235-5861-496c-b4b6-\
ad0d932f58ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["One-to-Many (Relation): ", "Subsubsection",
 CellChangeTimes->{{3.885336451793765*^9, 3.8853364980493746`*^9}, {
  3.8853366249459963`*^9, 3.88533662607271*^9}, {3.887408679668807*^9, 
  3.8874086855742445`*^9}, {3.887408908107992*^9, 
  3.8874089103321314`*^9}},ExpressionUUID->"f55870cc-0aef-4d26-b654-\
a092b7313e54"],

Cell["An x-value maps onto more than one y-values. ", "Text",
 CellChangeTimes->{{3.885336451793765*^9, 3.8853364980493746`*^9}, {
  3.8853366249459963`*^9, 3.88533662607271*^9}, {3.887408679668807*^9, 
  3.8874086819509845`*^9}},ExpressionUUID->"c7aa27af-36c4-4b73-b99b-\
db0d58b76091"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853365006189275`*^9, 3.8853365791162353`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d99b4ba3-67db-489f-803e-1ab15f5b1a90"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxdVglQk1cQ/iNYiaVyeqDWq1UZqgiOFRF0nxYsXvWgojKjIhVFq9J6VwTx
wFqxttoqYCng0RpUcCJoEYGNpUWCqCDWgyhEQDklEI4chFDy3v9nRh5kNvmP
t293v93vGx0ctjSkD8dxST0fk2XLkcR6zHErqRAR2cF0PJjuQAqP58iP54jI
8YiBr1adsydOnS5/354tImPnnvp47il70ppvNU7vJSKRt47uu3XUnpyVesRL
PUTkN//mbf1X25P5psc+FhGx53dTW9fakSKf8K3FKRyZR6/bEY3vlw2NMRy5
Erph3jW0JQPg8vyiQI4Eq+KGPvOyJes2BfV840j5zS2Km1tsyLaAyNkJp7vh
wOePH+e6DiDK8f+6e9p2w2+v0HL2tQ+I7d631dOLjDCens+anGg/J505xQhf
V+32Wfj2fXLO8W41edEF3fNHtZXJxWSOS4i7X6YBvlGYHIjJsXS1Q+VVA/jv
H5ahuCImwSJ5rJ/EADWvHbMTDoqJM93XAL+ajj/XisTPCOqIet4JNfXqYf13
9SNFX3wVaLuqE26Zjqt4j4xyC5c1ijohcGPe5FjsSzaS4OEJgXp4+uP+sA9n
9SVRE3/xHWCrB1YDSz4vOniYeWi/fpAFGWko/WtPqhbGUb99SJ11QK11gBZ2
pXA7Urg+ZGiqcXCqUQPdcc6vVT+JyJjwqibn6xoQ8q4bFqLp+Yf3E1VWiSqO
eAb4egT4asCpJ5pYf45k0XN2QAXNbzeErjetDohvqW8LyTbCDsmK4uEuHdB9
dends5e6oEo8zHF4fjsIeVi+zLTaQZb186B7H+lhacVziWpzGxQllXeNjdaB
xOtZ2A33NrCi8enAgto2EPx6Sx28pA6tkK7MHFmyux38R36udD2qBpXxdOxU
/3bwPJmlLNitNr8XR/HZArtu9Jdfi2yFshdOUZV/tEAixZsaFtC4WyAz7kHw
9JgWUMbsnVSf02y+rqV4a4Z8Fw+HgR0qs1Vvv/wwZaYKinVuNXkJKnCh8TUC
Fz3tExjdBC7+iaMzDjSACxwZX37+LdRTPNSZn5uzKilt0dMaOLfywYQNZxog
h8b3BjCtISutoR66NNaFYZ9VQ0RVyoWvt9dB7jQnnxGZlTDBsViq21oLi+j5
XkEnrVcN4BqxhUOxEhYmdxgaJ9XACFovpXlfN+r3BQTS/L+GO1mjzjy1UMDM
u9N6/qrBhubrObxHbTXk0feeAKH5rgLdh/4W4Xcfw5Ss2vMxrpVwkebvkfkc
y6gtAa2pGw4rofTleJu/FfchoXHMen1BOTyk++XDXMmh6ZJDZVCRL/bY450H
XrP+2VV7+RmMo+eVmf02lUarhg/JgFKtbu/6/0pASv1dN/tRaXcapkemgrrB
9OUBeND3k81+lqvcpM534sGw6Eay34U8CKT3o6CG3r8JXf3WvFHe2wexETsl
1wbcADbPCrypWdxnBvsdxX5HPfXm3ln8c8J9s+WvJxuzR/H7+7L9seQ28/89
84/9uNzsJMtoWDFxe5po3y1cR+M7Be40vjs4MCe04o0yDhwDmsoWYx623mbx
JbH40HpT1LfhI8/DedfJfpv6F+Dgrabrf4KW4qcQx1YcGdyCEpBv3rDA2akI
Q2URlhq7q5D8Ur+7oeI+RvD5nMHyiYctUipHW2bAkwnuM0PKSlDI00OT2+ZH
aMnX5wqrDxby9ZvI6odC3u9R/2VYSPEuhyEMd6iIU1y6eOc+cDZyJ/GTchTq
qGN4wWM8nj5jeMJGHm+TGN5QwMUshkds6TatZ6CntgrTeTx7MjyjgPeVDO/4
Ad8PUtYPeDLvWMypEiWEee/cscW1Bnv1E1by/ebD+g07+H7cw/oRe/Ur/sf3
9wjW36hOstPW/dAAy9X2SyRn36LQ992H6XxAK0OuqjNXBYZOalGYN200H824
yjumbcmJFvi0Nuf3R1nNeJKfV3PYc3iw76AVQQfaIVJfdykpUo3CfMyh9VJj
AT9P/2TzFL+l5dSBr49ptaGcn7/L2PxFYT4HsPmMosTSxmVpXaAYcrYpCNux
17xHO54PMphfrEtMb5U3c2TPlzlrjbM1KPCJlvEJsvkqIj+ZxqtEg/d5vhrB
+Ap78Rk+5vkukvEdrub5cDPjQxT4MpvmX4/VPJ/eY3yKvfgWX/B8PIbFiUt4
vg5ifI0Cn//A+BwtFjC+92N8j6G8HkhmegAFvWCk9TRiEq8nHJiewP283qhg
egN76RFc+65ekaXyesaG6RmZoHdaKR44mdW7ekiWSeO3IxHbMq211ZzsNK+f
/FjeZft4fRXP9JWsl/6SneD12VCmz2T4rn6T9dJ3sv8B5wPh/A==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159}],
         FontFamily->"Arial"]},
       RowBox[{
         TagBox["x", HoldForm], "\[Equal]", 
         SuperscriptBox[
          TagBox["y", HoldForm], "2"]}]],
      Annotation[#, HoldForm[$CellContext`x] == HoldForm[$CellContext`y]^2, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885336580602683*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"845c5391-75cd-480f-8c3d-37e77998e68b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Many-Many: (Relation) ", "Subsubsection",
 CellChangeTimes->{{3.8853365915215273`*^9, 3.885336622519339*^9}, {
  3.887408696091364*^9, 3.8874086985938516`*^9}, {3.8874089122609687`*^9, 
  3.8874089150418463`*^9}},ExpressionUUID->"12863c79-7a0b-4ec9-89af-\
592ca358a9b9"],

Cell["More than one x-value maps onto more than one y-value. ", "Text",
 CellChangeTimes->{{3.8853365915215273`*^9, 3.885336622519339*^9}, {
  3.887408696091364*^9, 
  3.887408709360359*^9}},ExpressionUUID->"6adf873b-faec-49b9-bac6-\
42e1d04676af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8853366390363417`*^9, 3.8853366413151045`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f8baf995-aba7-4fbd-b52f-559798bebf2e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8853366420869727`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a2cfce26-8963-4de3-86c5-f08335f40f98"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Function Transformation Summary", "Subsection",
 CellChangeTimes->{{3.8849941057959833`*^9, 3.8849941166599584`*^9}, {
   3.884994151486394*^9, 3.884994152835699*^9}, 3.8851627715022783`*^9, {
   3.885249303399956*^9, 
   3.885249304384212*^9}},ExpressionUUID->"d10c7423-4f56-4bab-b175-\
d85da7be5e01"],

Cell[TextData[{
 "a, n, h and k are used for transformations.\na : af(x) : dilation by a \
factor of a from the x axis\nn : f(nx) : dilation by a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "n"], "from", " ", "the", " ", "y", " ", "axis"}], 
   TraditionalForm]],ExpressionUUID->"c53973fc-b206-44bc-9e38-9607e42f875b"],
 "\nif a is negative : -f(x) : reflection in the x axis\nif n is negative : \
f(-x) : reflection in the y axis\nh : f(x-h) :  translation h units in the \
positive x direction\nk : f(x) + k : translated k units in the positive y \
direction"
}], "Text",
 CellChangeTimes->{{3.885163753642596*^9, 3.885163773658988*^9}, {
  3.885163954955003*^9, 3.885164000004383*^9}, {3.8851640374968443`*^9, 
  3.885164056238515*^9}, {3.8851649232796297`*^9, 3.885164926363267*^9}, {
  3.885250404730568*^9, 3.8852504074566307`*^9}, {3.88525046055737*^9, 
  3.885250477328845*^9}, {3.8852505788784885`*^9, 3.8852507881090364`*^9}, {
  3.885319492147496*^9, 3.8853195634464064`*^9}, {3.885400435802524*^9, 
  3.8854004524518776`*^9}, {3.8854034686501374`*^9, 
  3.885403550369244*^9}},ExpressionUUID->"393e8fef-36ba-4ecb-bd1d-\
130c2f7c1868"],

Cell[CellGroupData[{

Cell["Hyperbola ", "Subsubsection",
 CellChangeTimes->{{3.8849941751315207`*^9, 3.8849942697055674`*^9}, {
  3.885162844192851*^9, 3.885162891661003*^9}, {3.8851631702053814`*^9, 
  3.885163171098216*^9}, {3.885163313895297*^9, 3.8851633258556776`*^9}, {
  3.885163712100057*^9, 3.885163742002314*^9}, {3.8851649282350807`*^9, 
  3.8851649343043175`*^9}, {3.8852504886006203`*^9, 3.8852505017662125`*^9}, {
  3.8874089376550303`*^9, 
  3.8874089516796913`*^9}},ExpressionUUID->"a6f37ad9-217f-44a5-95be-\
553c7602378c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["a", 
     RowBox[{"x", "-", "h"}]]}], TraditionalForm]],ExpressionUUID->
  "8ba322e5-a66a-42c4-9f29-86183dce2da4"],
 "+k - asymptotes occur at x=h and y=k"
}], "Text",
 CellChangeTimes->{{3.8849941751315207`*^9, 3.8849942697055674`*^9}, {
  3.885162844192851*^9, 3.885162891661003*^9}, {3.8851631702053814`*^9, 
  3.885163171098216*^9}, {3.885163313895297*^9, 3.8851633258556776`*^9}, {
  3.885163712100057*^9, 3.885163742002314*^9}, {3.8851649282350807`*^9, 
  3.8851649343043175`*^9}, {3.8852504886006203`*^9, 3.8852505017662125`*^9}, {
  3.8874089376550303`*^9, 
  3.887408939299449*^9}},ExpressionUUID->"6da22638-d303-4c1d-9421-\
7b3a9c01090a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885163211324757*^9, 3.885163295439809*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"da923616-9138-4519-a5a2-128c9b4e324d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7318#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.885163237817893*^9, {3.8851632688624697`*^9, 3.885163296529621*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"116362e5-3fbb-420d-8622-b6989cc76713"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Truncus ", "Subsubsection",
 CellChangeTimes->{{3.8851643869251366`*^9, 3.885164437610298*^9}, {
  3.88516493724627*^9, 3.8851649382441196`*^9}, {3.8852505098494453`*^9, 
  3.8852505098494453`*^9}, {3.8854032919561925`*^9, 3.8854032936077414`*^9}, {
  3.8874089604123163`*^9, 
  3.8874089662835436`*^9}},ExpressionUUID->"d2cc13ef-e398-4e7b-b382-\
1ac4e76803a5"],

Cell[TextData[{
 "y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "(", 
        RowBox[{"x", "-", "h"}], ")"}], ")"}], "2"]], "+", "k"}], 
   TraditionalForm]],ExpressionUUID->"02a25dde-913f-46a6-bd1f-758bce61ce8e"],
 " - asymptotes occur at x=h and y=k"
}], "Text",
 CellChangeTimes->{{3.8851643869251366`*^9, 3.885164437610298*^9}, {
  3.88516493724627*^9, 3.8851649382441196`*^9}, {3.8852505098494453`*^9, 
  3.8852505098494453`*^9}, {3.8854032919561925`*^9, 3.8854032936077414`*^9}, {
  3.8874089604123163`*^9, 
  3.8874089620687437`*^9}},ExpressionUUID->"15edd3bc-8bba-4cc9-a83d-\
3540c258ed12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["x", "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885164444594262*^9, 3.8851645438090696`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9d0b763e-de73-4a01-a365-248c6695749c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJwdlnc4FQ7Ux6/NtS8yo1yVLSNJ6ZwGUUjKyCtKRCoVEhn9qotIUnIlZEYy
kj3KqMiIZIfsvTKuvd7e9/xznu9znvPH+eN8ns9Om5vGdvQEAoGDjkD4v34v
7qzUHa1mIPx/SWHKa5c98pHN8JjEkrF8koz3Zua1kaUF1O6vryX6SeJJHVfb
cy4toBB0/0Vt3U4cn3WN8zrVCjqu+7hEPHdg0YmF0pD8VjBlUyd6lkpgYPSd
7kRyG0xJNgpGRYijnJ6baN1aG2STKG8+e4rh+pvFA3327dBsUZuZ9EAUf9Dc
zBea2uGltMnovpcieD32btj2tN+wh07EcKNTCA8tLmUrC3XAyds6bUXcQsih
796oTemAS/1CHLsNBDF9yZ3bybIT2lP4B971C6CPwYrCw6pO2JaRlpRxQAAN
Ezz0qWpdcOx5hfGhV/w4bXgvoITjD6if1yaoOfJhSeJqcqP7H+gsJqw0dZEw
ePVe5fDgH/CxjXG7YkJCpSRPBu7P3dCiq9knaMaLBT4lJR/Ue8GqjPQnWIYb
Y1M26wqv90LLKd2JXxe48HHz4T9f43uBbe1+XXUEJ5rLlq61cfXBpEsRyWQP
B6LJFrH/eB/UD3HF73NnR+n/QGTyXh+4+bP62f4k4kpLqQZhpA+uIset+8/Y
sJ9A0CVu74dy67FbPUusWCOHZvxn+4GjvVDyjh0rvn5Qdke6tB8epzNbnD3N
gpoK5VlG4QPwUm4xltWcCfc1t1JLqgfAl37wavUEI+71nLwnvz4AZsvXqIUP
GXF3teAx1kuDIMQnNva+kAH57JyaSmWHIEzWIz9Xlx65OCj5CheGQL7sqFTN
HB0SsyMiI58NgaSEZqZ6DB0S6Cou36UNQUyEXuiXTQJORonSFEuGQeteSTpD
+haMHFNuj5oZBr36C0bmklvQP67ziUgegcBeuV+qkZvwW8OZMuw/AvNn/iJL
+AZUNlfxvzkzCnhaSUAkZw3KPbuX2SmjMC5lc4R6dA0+SdK6PPL+ZXe10Mqm
Vci6JfHWRHQMbOs2daY2ViCGw20f59AYbPaI/SbfXIbX2U+EPQXHQXm9/C07
7zJQLeI2RvXGQe+W/zhX7hIEvftR8S1jHDrDc72lGZbA/TjZ1Mt9AjQE7hay
5y2Ay4SG5vj7Cdjr2/VN0X4BnF4Yipv/mYDtjDSPdeEFsOv1GFY9Ogk7eB4G
OlBoYOzV4DbBPgUavEaKhtfmwYA8bHH+8BSIJFPPBEvPg27N2uHvt6bg3ezO
M1Ijc3BYaA9LQssU/NlvuqDgMAdyOd7hFjHTcJcWceaH+yzQuwl02QrPgELb
gJ1l5F+wuPi+sUBtBubH77huV/4LWSehmsNoBraaOYvnqqbBRuJqXo7fDGj9
PaKasDkFX6o+hTDSZqDeW+1lzn+TIJJ9xt+cexbE2Qqb0nZNgnP0sHea7CyU
OvXeMf0xAZLOPNfOXZoFM2dL71DxCXgkaqudWD8LxqT++9EtY9DFtHJweWwW
bJaFT7L4j4HazFMVfaY52Pf36pOWA2Mw+C1fgnZwDk7KsOzzSRiF407sq8dS
5kA0yDdZym8EGMuzMgYezcOO9fc/Ix8OgWXqibf7Y+ahU1liV6fOEOSEdUU+
KZoHlw+1YiSOIbB1ZA5QnZ0HzoOkpjMRg1DBZ3H5kRUNlMpY9waVDID45vT5
Ng8abP59ZbUWMABuo4+M5MJokGoYYnPQdAB2f07XaqqlwSCpqVlsth/8rtAJ
kQ8sAMtw7dd5pX7oNqJy3T23AM8b9BTv0vWD+kE5ptqbC6Cu8W0mtakPhrlN
5pyTFsB0yuCp6L8/1Sl89+ML3yI8nHlyNK++F1g4jB7YTC9CZHHTOTvpHjDf
Y1GmzrYEManKzOs93fD+qO0WUWoJCNv56IJfdYOhh7t39vklYLW1anvO0Q3U
4VgPxoolcLggmRy71QW7y2dvJ0Uug6KB+Pxlrk5w71rLvJe3DP3JXZXfmjqg
ZolpxvDXMvDx6xsPRHSAk6KI0xLzCkjecB7Ul+6AvMijjrrOK8AcmjjkZfAb
tN1CbcZ1VyE7lVmzI68NqM+j40our0LCFH1bkV8bjKYl977wWQW3/nELBbM2
CBootjqYswofzrEtlKy0QrPRoEWQxBpo0D4vmmq3gq3cvrOKi2ugM+v+PITW
DHk68IKedx1eZPtGhP5oBlYbvV+tcuvw/Wb/e9a3zZD26sLp+5fWwSHzgfJR
s2agMfmdavixDluGavcqyprgUW/rMeeEDbjZlqlQlNQI3YWnbrh/2gAp1FW6
7N8ImqFlVJ+WDeBkM5q0cGiEGe33Y4Esm6Cu9+iBilwjWKV6P0u4tgkSC40X
r+T8Ak03qc5m1S2Q14uX5GluAOrpCMZO/S3IPeB8XaWwAWaluRT77LZgYUHx
98s3DfCuc+m/qfAtsL5Mmdnm2ADbjtTuZl7fgklHlvBVhgZYYTpQKGpDQCWB
viRN33pIcp6ve+NEQJ/K499+mdbDuZ70/p2eBBTkzb3eKF0PmQWSHNIvCWih
JWjPXl8HV65xWKtVEjDU9Odhze110NzQw2ggS4fydySzn9TVQmakn5HPP65m
l2bE1zlVQy2f3wg3gR6n7ZsMKbrVMPzE1yeOkx6ZWKwUn0tWg5gXJe2bND32
Rps/SmmrgseWD1nZrekx2iJ/X6F2FVzc7lMWXkuP7SsBxb57v4NnmLeZzG96
5JAVcVXk/g5UTu/pomF69NGL6BWfroQfG55i3XQMqOorkdiUVgka3R7uUhoM
WDOZIHxXoRJ4Yu7s/ZjIgH8F9r8hHKwAOcE7349mMWCi16xdzfYK0HnmatVc
yoA6HXGGDYQK8LrvErTU8W9f/svc0+/fYNT69qgWLyNyra5wlpp9g7IdN2Jr
vBlxI3tnkMvDr3Az3pZn0JQJVQW3blhvlEOwR0RU8GUmPKJSdUxwtBwyjOql
D9xiQuNs7u+0xnKY3tx/JDiACQMdFFwlUsrh+v+wO2t8YsKjdx3mZczKwZE/
qyloJzNuIoWhtrAMrvhtUfdNMmPHjoTw04ql4HdBjdy7zIyP+TfjFtlLIUnt
6odAJhZ8dIrTsHWsBIb6G7/3iLOgfs6HSK2kErCFpOWAMyxIKcTqNztL/nFP
36I7799cvfyWtuRnsHJ8vd3/ASval/eoKusWw9pvtvrZp6xI16zxJla+GF7p
efhYvmZFNU2hogO8xfBL2rxHOZsVwz4E5490FMHxEYG4rkFWtGUar5e5VQQy
ts+lVHTZUClcWpEuvhBoFx7L/eEiYmDK58XlHQUQUrfUeUKUiLcjglOIxAJQ
0LIPytpDRPPg3RuH5vPhipjOlD8SsfGLYAh9ZT787mD4oOJMRAvzwErijXwo
Mbuv8riFiEPuDqe6yvIg4IzbAdUodrTaoyLO5JMLL37IXk9LYcd2Hbdwkau5
EHWi582ufHY8deFioOG5XMjU0mUUamRHLluzWR65XGiXEfm5zsKBLDTSrZXf
OSBNX2Jb6cKB73erGUtr5UBlFlPI+VOcyEnWaggRzIYGhaIvjeacqMjat8nB
nA0d75wWTl3hxImn0YfiaFkw/abN4vADTtT51rSPtzELtj1J2UXO58QSQz4H
YnAW2F02KJ6U5MIXAZkGWsQsYOQPG76/yoVxi+XRoaSPQJr24SKxcGOBdfd4
GeNH2FnloJ7Ix43p9VOrm4uZcNjrkF+VPDdakfqX0jozwWNwYBevNTeuWrR6
1b3NhOkcFbv4r9xIu/5MjKiVCZOyo7dtdHhQw6rnVPBUBtAE//im6vNguGrB
w4KWDFhjbIygGfOgS070oc3PGUDsKS73s+bBI55fQzqDM2BP6DPeVHce7Gq/
r/hbOQNs1tQ/zr/nwdV0+d5PXunQVus7Q+H+55XDI3oiu9Lg5eFobZNtvJjm
dNIjjSsNjD/mvN61nRdzHjy/cX45FeqpA8crZXlRUoqwRv8jFSovHYlg0eFF
zTmiYIhrKuQtrR8J9OLF3G6HWqea90Alu4Y+G+PFHiJEKj9OgXPUJ6PWM7zY
FuO+8tM1BUhsCVp7l3jRsWP4IuVSCgRP/xppYCRh1mvVSsWDKeBXqHSItIOE
8kPLZ/3+vgO30xODL01JWEqqD5ayfAcmnjbqr7+S8KPbhwG948lAjeZnXqr+
59G6Nc8D1ZKhtbSy5WwDCb8bKu/vlEoGU0a5O5x/SOjQ9JM3jSkZzJ/OZ/+3
SMK+nYnZbFVJYBFDUbaX4UMUT/GPP50EF78myas948NBmXgou/oWrrNPSNZb
8OMTbzPHkooEmPAoYmS/xI+5S9tD3xYmgONowPAJe35sWvVvDE9PAPsK6ffl
LvxonKBuHR2WADb3ryjnBvHjzSI2TbkrCXB+vg+iSvjxx81Qfx22BNDpbLd0
lBTA6PpBgpRZPEikVlKZxwVQPYQqscwVB+diCgprZgTQw//tWVfGOAgMfd8V
vCSARSZPtFZXYoHmGSwpyLQNiUIyDOShWKjRN83Ys2Mb5gtWsY8Ux4Lb9FCF
ruk27Ges21C8Fgt1ykwLgV+24VUJW4/+2BjwLDh2ljtSEEOiPhqS7KNBxbJh
xjpOEAv15mwumEXD+JZlcGayIOrHVrDlnogGixNu1WdyBPEo86vfAdLRoNn6
Dl7WCaIf3RJX1XgULM9zygsThFBtlMH5ye0ocFNqZyTbCeF3YeHQVv9IuJV0
PU9dSRg7i00JC80R0P1TNIxLXRitsmaHZyojwGClxmX4kDC++/pJZbkgAmT1
ZZSpJ4VRne9VlXR0BAzODqUu2Amj0PhCOM+VCDDTso7LiRLGeAvV0zMrr+Bw
85kgFaIIrnDfS4iReQUc9PttFIdE8DbGPr6aRIXCuwxnhydE8IYXV7tYJBWu
TP089mZOBF3PM71uf0aFsnaHXVwEUVyhzJ696kH954WvR6dERJFpujpvWp8K
HZabTulGorgrVZ70cCEM3uVXeMp/EsUZ0u25UP0w0L5xLkw2VAzpAy/yVPO8
BKHC7Te1pcRRSXiwMJb1Bbxwfvx8b5sEEhdrmcRlQsDY77RCdN4OfFcknJF4
9inI/g/FJNF75z8+j1ZxfQ+E1mG2+FATSbQdWMQGq8dQbzN0hCRBxoKGC6YV
9n7Qx5i8HCZJRoXb28hPrP2AluTwQXg3GSsktt01MfMD4YkJsZ0KZJQivk1e
0vEDW5e5JaWDZFy0/1p/e7cfrD7aSjcwI+Pbkn5LzWFf2P1WWCTgGRlL3O8a
MV/1hQMnOhs4Qsm41sLaYHrJF/THovxDqGT8deOoc+p5X7itsGMhPJqMXWwt
pEsnfeFT7u6GpFQy1sqKOm/I+YJxparft+9kHJRqFl/+SwE7h4VDurVkrLPv
dgwYpYA7MX++tp6MrJnnU8X7KBBtqHmpqYWMp0KdNs81UmC0FQ/1D5BxiCYb
M5NDgVV3+nm7ETJ+kavAuHQKcIp+SxkbJyPvRFKZSRIFVKxPCM7O/suPLIxq
wimgTcdW77pAxiiRUovAEAqYJ9RQlpfJqJMdomEYQAFH7aCDXuv/7osRHxF4
SAHvEYO5rS0y+oYUXe67R4H/BeBS4uA=
       "]]},
     Annotation[#, "Charting`Private`Tag$7868#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-1., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.885164467336825*^9, 3.8851645444166813`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"749fd72a-6d51-445c-a828-f6e7bc24c396"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Square root graph ", "Subsubsection",
 CellChangeTimes->{{3.885164589731572*^9, 3.8851646110813646`*^9}, {
  3.885164648672707*^9, 3.8851646792842255`*^9}, {3.885164804096723*^9, 
  3.8851648470769224`*^9}, {3.8851649417004504`*^9, 3.885164953231406*^9}, {
  3.885248902379532*^9, 3.885248912547525*^9}, {3.885250515133539*^9, 
  3.885250515133539*^9}, {3.88540328220465*^9, 3.8854032851227503`*^9}, {
  3.8874089723489676`*^9, 
  3.8874089810187364`*^9}},ExpressionUUID->"b93b15ea-2d1a-4717-92fd-\
40d236687c18"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"y", " ", "=", " ", 
    RowBox[{"a", 
     SqrtBox[
      RowBox[{"n", "(", 
       RowBox[{"x", "-", "h"}], ")"}]]}]}], TraditionalForm]],ExpressionUUID->
  "23373a23-a844-4ea7-b664-fb5750025428"],
 " +k - start/end point at (h,k)"
}], "Text",
 CellChangeTimes->{{3.885164589731572*^9, 3.8851646110813646`*^9}, {
  3.885164648672707*^9, 3.8851646792842255`*^9}, {3.885164804096723*^9, 
  3.8851648470769224`*^9}, {3.8851649417004504`*^9, 3.885164953231406*^9}, {
  3.885248902379532*^9, 3.885248912547525*^9}, {3.885250515133539*^9, 
  3.885250515133539*^9}, {3.88540328220465*^9, 3.8854032851227503`*^9}, {
  3.8874089723489676`*^9, 
  3.887408978158684*^9}},ExpressionUUID->"97cef482-f24c-41e0-978d-\
7749496390d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.885164684720046*^9, 3.8851647930178075`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"068cabae-a6fb-44d6-a0e4-98ee236620e9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HDNjDQcCH976ZXF9ncRjrUpMN0cC/weCrAhj
       "]]},
     Annotation[#, "Charting`Private`Tag$8133#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999775510204}, {-1., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8851647381139545`*^9, 3.88516479368124*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"60c190f5-2341-423c-b9e9-285942a3aa1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Circle graph ", "Subsubsection",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248621933689*^9}, {3.8874089926235223`*^9, 
  3.887409002249263*^9}},ExpressionUUID->"5476705e-45f9-40d5-85a4-\
03eeaac4d5b5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "h"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "k"}], ")"}], "2"]}], "=", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],ExpressionUUID->
  "25e1515d-db54-4571-b6e8-328ee10f3ec6"],
 " - centre point at (h,k), radius is r\nOther Form - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"2", " "}]], "+", " ", 
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", "hx"}], "-", 
     RowBox[{"2", "ky"}], "+", "c"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"58080df8-50b4-4863-b4e9-92f0fc795cb4"],
 " (where c = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["h", "2"], "+", 
    SuperscriptBox["k", "2"], "-", 
    SuperscriptBox["r", "2"]}], TraditionalForm]],ExpressionUUID->
  "d28c96a2-a6c7-4194-9306-2c73aebd5561"],
 ")"
}], "Text",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248621933689*^9}, {3.8874089926235223`*^9, 
  3.887408998835838*^9}},ExpressionUUID->"8cd24ed3-2ecd-4fb1-b34e-\
3a9be1ebcc93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "+", 
     SuperscriptBox["x", "2"]}], "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"021a84fb-6cde-4023-8c64-d181777af7ba"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxllnlIVFEUxs2gGiQl+kMqihZJWq2kQluOS5vZapEGLbbTYhZBEClGFBH0
TwaJNW0kiBFIWZYaniIiKiPTySI1c7Lc5zHaFEqTOe+cb6LXZeQNc9+995zv
/s53HLc9PWlXYEBAQG7/n+85f8b74Ir71RzX6J0SkebiIpv9sc1eySVptcVp
tS5uLvZ9ecVvuuf3fwwOuRT/7OS3x7zlSvm55HyDu835Mj6W4XSffW7w7uie
lqabRZzoneTJdxgcYI6Hjzb1HfSWeQyOlHnC/FNZT1jfm2vuT1t1/zdyPlXq
+XckPkJ8kRI/LdL4xyRkhyVkOyi1qi767HIXR2WOKFy1tYZuV+e42753ssO9
Ji7lwQeKClq5b+GJTg6buGPWxB0faYVvWVgnvzPPqyXPtSNB3uYOvpn+PN62
rZ4WX7gUkrqng58MCh216cBn+mS+185LzHWN5Ino64roa+MB4YcCww85acJ4
32jjpacydycaThrYlTK65GUrjzPja6KyM8cfnjnewkFVY4dWjf1KgaZOLRxJ
U5MGXf1GUfLkX32+0UzD5D0ulnUULvtw/uXSgsulrfRzWkPXtAYnuyUOzaeR
P0ic9Eri5ljJg+5KXtwteVKj5K35dFKM6MKzRSdqEt1YdaRo0ZWXmMNFk0V3
jpV7oEXK1b0hPfuPOly02tz3Ld+Te6Pe4Nx5O12VXBDjI8+gkkDb6Z+FFdxz
5Pr5i2QQuEv3bOj/GNSbk9WTk/WCO2b2bhx6x6AU88sTbsi4kt3+2iBwOGTt
l8Frvxi03j59nX16ESt3VDAyam9T3g2uybIv2Ow1yMIlJcg8Yf14WU/YH5zi
/Dg5nw5rfPUSHzglcIv88iQ/Qv4O5VjrjuYpx8tUT3BcqHqHK8dz9T7qlGPc
V6xy/EPvExzH633fUo7BQ4VyrNwSOL6lPHULT+CUwK2FR5qjvOKJ3/GehXf/
vjjHUj/+uBAn4kYeyOtTnW90+HWALtAJukFH6AqdoTvuAfdi8Ruyid+R+h1Z
/IqC//Wz/7iKUz9crvNj1D83634Wf6Ua9V/EgzpCXaHOUHeoQ9Ql6hR1i7qu
Vb1Q9/AB+AL0hm/AR9TPWP2MVomf8W+36Wd+H4Ivwadw//Ax+Bp8Dr4HHwQn
8En4JnwUvgqfBTdJFedbd01p59L8Zcmxzr++DJ+Gb8PHlRu/z6MPoC+gT6Bv
LBWd/X0FfQZ9B30IfQl9Chyhj6Gvoc+BI/RB9EX0SXCEefRVrIffoQ+jL6NP
gyvEh76OPo++v1jzA1cFmv8K5UrriuuVqzrVD1xpXbLWKVv0B0cMrkL1Pocr
VwP0vhOVqwfKA7iy8MLqM/4nfsd7WId9sC/OwbmIw8I7lwtHvEa5Qh7IC3ki
b+gAXaATdIOO0BU6Q3fr/19/ALI+OKY=
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        StyleBox[
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153}],
         FontFamily->"Arial"]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ]}], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8852486261502495`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"879de085-254d-43e0-8b91-4c063587e111"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Semicircle graph ", "Subsubsection",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248666567751*^9}, {3.8852486998701525`*^9, 
  3.885248718342806*^9}, {3.885248775190827*^9, 3.885248775190827*^9}, {
  3.885248883132225*^9, 3.88524889637088*^9}, {3.8852492562594957`*^9, 
  3.8852492614052567`*^9}, {3.887409009183489*^9, 
  3.8874090159897118`*^9}},ExpressionUUID->"dcdf27fb-8e71-4c67-887d-\
d703da74d200"],

Cell[TextData[{
 "y= ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["r", "2"], "-", 
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SuperscriptBox["h", "2"]}], ")"}]}]], TraditionalForm]],ExpressionUUID->
  "def0d643-c7e9-4ff1-834e-f95b86c496a8"],
 " + k - centre point at (h,k), radius is r"
}], "Text",
 CellChangeTimes->{{3.8851650238475475`*^9, 3.8851650403576927`*^9}, {
  3.8851650892242203`*^9, 3.8851651334070883`*^9}, {3.8851653850762672`*^9, 
  3.8851654889393473`*^9}, {3.885165983790073*^9, 3.8851659886760635`*^9}, {
  3.885248615942566*^9, 3.885248666567751*^9}, {3.8852486998701525`*^9, 
  3.885248718342806*^9}, {3.885248775190827*^9, 3.885248775190827*^9}, {
  3.885248883132225*^9, 3.88524889637088*^9}, {3.8852492562594957`*^9, 
  3.8852492614052567`*^9}, {3.887409009183489*^9, 
  3.8874090119056816`*^9}},ExpressionUUID->"4b73a7e8-2a99-4880-8d8d-\
015c2ca32672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"8", "-", 
     SuperscriptBox["x", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "5"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8852487947178717`*^9, 3.8852487959434433`*^9}, {
  3.8852488289434996`*^9, 3.8852488308566165`*^9}, {3.8852488759525614`*^9, 
  3.8852488818653994`*^9}, {3.8852489586881847`*^9, 3.8852489825575895`*^9}, {
  3.8852490379921646`*^9, 3.885249040302639*^9}, {3.8852490769045744`*^9, 
  3.8852491100559072`*^9}, {3.885258223171713*^9, 3.8852582233434753`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"938ca171-c86b-47e5-b092-cc4034a59f17"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$22385#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.828334362058351, 2.8283074717772876`}, {-1., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8852490410995407`*^9, {3.885249095302803*^9, 3.885249110714418*^9}, 
   3.885258224014792*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a0295b2c-0c68-4754-b03f-03377b5693c1"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear Relations and Equations", "Section",
 CellChangeTimes->{{3.889035549913274*^9, 
  3.889035565939006*^9}},ExpressionUUID->"891d6cd2-77d6-48ae-85c8-\
1de616df17e4"],

Cell["\<\
Tips/mistakes: 
- When solving questions for values of m in parallel or perpendicular lines, \
look at the gradient only\
\>", "Text",
 CellChangeTimes->{
  3.8894645753467894`*^9},ExpressionUUID->"95f937b5-bd67-414c-b9c8-\
eef8c00a4d8c"],

Cell[CellGroupData[{

Cell["Linear graphs", "Subsection",
 CellChangeTimes->{{3.8866990786276646`*^9, 
  3.8866990808789415`*^9}},ExpressionUUID->"6d6c9bd9-7c42-40d6-97dd-\
4709de432bee"],

Cell[TextData[{
 "Converting radians to degrees: \[LineSeparator]degrees to radians: Multiply \
by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "180"], TraditionalForm]],ExpressionUUID->
  "e5008493-5eb0-4872-b6cc-656ad795aeb9"],
 "\nradians to degrees: Divide by ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "180"], TraditionalForm]],ExpressionUUID->
  "8946aebb-970c-49e4-af1b-918f72eeb296"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QlUTev/P/CbpCIVKkIyNchMKFPIrGTKkESSIZEpGaJMFRWRoVKqi5Ix
hMgsktzmKJUGFc2TUNH9v389639W3waXSif5vNa6VvecffZ5NvXu8zl7P8/u
ttRo1vJmf/3110YB/DFL12Tshg26W2eL4n80125ctWKt/rIpazfpr9DfoLSU
Fw8O5/nrr7/x3/99/S8hhBBCfkBZWVlJSUlRUVFeXl5GRsaHDx9ycnLwCLfH
RQghPy04ONjFxcXHx+fBgwceHh5Hjx7dv3+/ubn51q1bN23aZGRkZGBgsGLF
irVr11pYWAQEBJSWlnJ7yIQQUj1UaMiowsLC1NTUsLCwO3fuODs7a2pqSktL
DxkyREVFRU5OTkJCQkhIiJf3/z4DqaR169ampqa5ubncPg5CCKksMTHx6tWr
9vb2O3fuXL9+/bJly2bOnDlixIguXbrw8/NXDTQBAQHEnbCwMP5UVlaePHmy
mprarFmz3NzcPn78yO2jIYSQ/4GI27Vr16BBg8TFxZs3b14p0HjKtWvXbuzY
sUi/jRs3omCzsrIyMzMbNmzYxIkTz5079/z586CgoNDQ0IyMDG4fDSGEVPbk
yZPx48ezTEPl1rlz54EDB6qqqs6bN8/AwGDatGlt27bt27evk5PTu3fv8vLy
iouL0duin0Wxt2jRori4OG4fASGEfE9ycrKrq6uxsfHmzZv37t3r7OyM7vXx
48evXr368OGDu7t7r3JeXl6cl5SUlNjY2CD9FixYEB0dzcXBE0LIj0BqFRYW
fvz4seoZ0ps3bw4dOhSBduTIEc6D+fn5GzZsQO2nrq7+zz//NOxgCSGkPqGo
GzduHC8vr6mpKXpV9iDycNOmTUi5IUOG3Lhxg7sjJISQukCphoINgbZmzZrs
7Gz24NevX9Hb8vPzi4mJ2dvbl5WVcXeQhBBSa69fv543bx5SbsmSJQkJCZzH
HRwcJCUleXh4jI2N0e1yb4CEEFIniYmJurq6/zdretassLAwzuPXrl0bNGgQ
Hp8/fz6dgCCE/L4yMjIMDAyQZhMmTHj69Cnn8cjIyDlz5uDxAQMGeHt7c3GE
hBBSF+hGN27ciDRTVla+fft2xcd37dolLCzcunVrfEFTHgghv6nS0tKdO3c2
a9asT58+Fy5cqPiUj4/PkCFD/m/VL01NlHbcGiEhhNSRra0tCjYpKSlnZ+eK
jycnJ+vp6SHlunbt6uDg8PnzZ26NkBBC6uLUqVPS0tJCQkI2NjYVH0eZh6d6
9OhB5yAIIb+1S5cu9evXj4eHZ8eOHZUmR8TFxWlra7Ny7tixY0VFRdwaJCGE
1Jqfn9/IkSP/bx3+jRsrXRpXXFzs5uYmJyeHZ2fMmBEaGsqtQRJCSK0FBARM
njwZOWZgYFB1baW0tDTUeO3btx82bNjNmze5MkJCCKkLzvQHXV3dxMTEqhu8
evXK2trazs4uNja24YdHCCF1lJeXd/DgQSUlJQsLi8zMzGq3KSzXwAMjhJD6
Eh8f7+vri6Lu27dvP/va4uLi7OzspKQkvDwsLCyoHPrcXzFOQgj5RcrKyj59
+pSRkfH27dvw8HB/f//r16+7ubkdOHBgy5YthoaGS5YsQds7c+ZMNTW1adOm
HT9+PCcnh9ujJoSQapSWlqKHTUhICAkJefjwobe3t7OzM5pZY2NjAwMDHR0d
RNn48eMVFRW7desmJCRU9eY4fHx8yD0q5wghjcfnz59TU1P/+ecfZJq1tbWR
kRHSTENDY+zYsQMGDOjSpUvLli2rphkPD4+wsLCMjIySktKUKVNQyy1dunTN
mjVmZmb37t1D7cftwyKE/NGQQmg/Hz9+7O7ujlxatmyZuro6Mk1UVLRqoKFm
69Gjx9ChQydNmjR37lw9Pb1169bt2LHDzs7u7Nmzvr6+z58/j4qKSkpKyszM
pLlghBAuKikpSUlJ8fPzs7KyQsE2btw4xJegoCAn0Fq1aiUnJ6eqqqqpqYna
bO3atdu2bbO1tT19+vTNmzefPXuGNEtOTs7JyeGsoE4IIVxXVlaWnZ0dEBBg
b2+PSmzkyJHt2rXj3GO6a9euKioq8+fPR79paWnp6emJGi8iIiIxMTErK+vL
ly/cHj4hhNSosLAwPDz877//Xr9+PfpNSUlJJFuzZs2kpKSmTp26YsWK3bt3
o2l98ODBq1ev0G+i2OP2kAkh5Eehr0SCzZo1q2fPnnx8fPz8/LKysjNmzEDi
ubi4BAYGpqWlUalGCPl9sds6CAkJ9e/ff+7cudu2bfPw8AgJCUH60Z25CCG/
DlpIpE1AQMCvnjaVn59/7do1W1vbK1euREZGFhQU/NK3I4QQxtvbe8KECZMm
TTp27Njbt2+/fv36ny/5XK4BxkYIIXUXHx9vYWHRq1ev7t27r1y58vr161lZ
WTVtnJeXd/v2bXNz89OnT9c0m54QQhqbDx8+ODs7jx49WkxMbOjQofv27QsJ
Cak6XyA5Odne3n748OEtW7acN2/eq1evuDJaQgiphYKCAhRpurq6HTt2lJSU
1NDQcHV1RfqxZ9GfvnjxwtjYmN15QVZW1s7Oruoql4QQ0piVlpZGRUWhG0WI
IcrQw+7ZsweP5OTkoI2dPXt2u3bteHh4+vfvf/To0dTU1IYcG2L27du3t27d
Qqd8//59apYJIbWG+Dp+/PjgwYN5eXk7deqkra29efPmUaNGCQoKCgsLT5gw
4cyZM9nZ2XV8l6ysrIcPH0ZERPznlmVlZQkJCSdOnNDR0VFSUurZsyc6aysr
q7i4uIqbIY0RgBcvXnz58mXdh0cIadpyc3O9vLymTJkiKirKz88vICCAEk5M
TAw5gzqqXm6e9erVq9WrV+/bty8/P/87m3369Mnf33/NmjVdu3ZlU8DwxYwZ
Mw4ePIjSruKWjo6O8vLyffv2VVNTQwkaFBT08ePHuo+TENJUIV4uXbo0bNgw
zsR5OTk5Jyen+rrILTY2FlUi8iokJKSmbVDvoTxD9SgiIoIBSEtLz58/38HB
AS9JTEx8/fo1yjlO5N67dw8h3K1bN2zZvn37adOmofxLSkqi640JIdXKyMg4
fPgwuy0g065du1mzZl29evX71deP79/AwKB79+5ubm7VBhHqSWdnZ9RmeOuW
LVsqKysfOnQIFeDnz5/T0tKQYPPmzUNOnj17Flti+y9fvrx58wa9NkpQNve/
R48eKAKRfnSTCEJIJSiiECO9e/dmWTF9+vQ+ffrga3SvSBsXF5e6f/iPUNq2
bRsfH9/69eurfoyG3OPcmBWRhRLOx8eHpVleXh6ijJ0fgREjRmBLzgvRpT5/
/nzr1q0yMjJsJToVFZW///6bvZYQQgCZg86UxRoizsLCIjg42NXVFXHRqlUr
PIinUObV/RyrnZ2dqKgoSq/AwMCqY0AGtm7dukWLFpqamtiALU6CbPT29mZ9
dIcOHTA8pO7ly5fZq0pLS9HDhoaGRkVFobFVVVVlrW7//v0xfgo6Qsi/5X0i
SrV+/fohHHr27ImIS05O/vf/X023aNEiZAueQqW0e/fuSmc5f5aXl5eCgkKn
Tp1QmyGgKj4VHx+P92LnGk6ePMl5NiIiYuHChSgpBQUF0a6eOnUKEcdGyC53
0dfXNzMze/v2LQaMXlVLS4utNoySD+Onz+gI+cNlZGSgikPlwyLOysrq3bt3
nGdRTYWHh6PEYhcGS0lJIQPT09Nr/Xb3799HfYhdGRgYVNrPhw8fVq5ciack
JSUNDQ2fPXtWWFiIXtXa2hqpyFLrxo0brMBDBr5588bGxgY13tChQ5GK7I5d
eNbf33/OnDktW7ZEFWpkZJSSklLr0RJCfnf5+fmo4thncb169bK1ta0YcRwo
nI4cOYKQQW6gmqpLORcZGYluFG+noaGBprjiU8XFxe7u7uzch5iY2MSJE5Go
KPnQhLICD2PgnAQJCgpCTnbp0gWttKOjY8VJuBU7XBzUuXPnaj1aQsjvDvUS
woSXl3fw4MEnTpzgzO2qCl2tn58fyqo6nm9FHKFOY5+bXblypdKzaWlpBw8e
lJeXZ2cZkHWysrJt27bl4eFZsGDB69ev2WYY55YtW9CWIuIcHByqnhbBu5iY
mCCTcWimpqa0Sichf6bPnz+j4+vbty+KqwsXLvzIPZrLytXlTdFpIscQXCIi
Ivv376+6+Pn79+/d3NzmzZsnLS1d8Y6ESkpKqOvi4+MxgEuXLmHYfHx869at
q+nMr7OzM/prvHbNmjU0LYKQPxNSDoXZ4cOHw8LCGrLauXHjxpAhQ6r9aI4z
sFevXjk5Oc2cOVNcXJyTdci99evXBwYG7tixAxGHdhXtdk3vgpd37NgRr1q1
alVdPkgkhPzWvpRr4DeNiIiYM2cO8gchhoCtaTOUefb29uz0bsdy7Dq61atX
o9LD1wMHDvT29q72tSjwNm3aJCAggKbV3Nycpn0RQhpSVlYWukjE1KBBg65d
u/adLS0sLPj5+dmpii1btvTq1YtVdKyZlZOT8/T0rPoq9KeOjo7slIqiouL1
69d/2aEQQkg1vn79evToURRpoqKipqam35lS4ebmxibsDx8+3MbGRl9fX0xM
DP/bvJyIiIiZmVleXh5n+9LS0vj4+EOHDrE5Ytg/svE7p1QIIeQXCQkJmT17
NpJKWVn59u3bNW2Gfha9LS8vLx8fX79+/Tg3qpYshy8GDBiAwAwODkYX7O/v
7+TkpKur2717dxZxWlpaL168aMjjIoQQ5tOnT+fPnx86dCiyaO/evTXdNKew
sBCbqaqqCgkJ/VXBqFGjxo0bh+hjVzJPnz4dmTl+/Hh0skhOtj4J4g65V1xc
3MCHRgghTE5OzqVLl9avX3/hwoXv3BoMQXf//n0TExMWYgICAuhhrayszp49
q6mpyc5NVITYVFFRsbCwCA0NpYgjhHAXUigrK+s/F68rKyvLyMhAYebm5rZ/
/353d/eEhAQEI9peS0tLZN3kyZNR2qmpqS1duhSPPHjw4Eeu/SOEkMYvOzs7
MjIyICDg0aNHQUFBSUlJVe9BRgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhFRUWlqal5eXnJwcERHx5MkTb29vFxeXo+Xs7e0Pl7Ozszt06NDB
gwcdHR2vXbsWGBgYHx+fm5uL13J7+IQQUllxcfH79++DgoIQaMePHzc3Nzcy
MtLV1Z09e7aqqurAgQOlpaUlJCTExcXFxMTatWvXtlybNm1ERUU7deo0aNCg
KVOmLFq0aO3atRYWFmfOnAkICMjOzub2YRFC/mgoujIzM0NDQ5FsVlZWy5cv
V1NTGzBgQIcOHVq0aPFXbQkJCcnIyEyaNGn79u2+vr4ZGRncPlBCyJ+lqKjo
zZs3N2/etLW1NTAwmDFjBpJNRESkYlK1atWqe/fuSkpKU6dOXbBgwcqVK42N
jZFapv9rRzk8paenp6Ghge1R13ESEvtUVlbeuHEjUjQlJeXr16/cPnRCSFNW
UlKCqLl79y7KNi0trWHDhqHx5MSaoKCgrKwsMk1fX3/Lli3W1tanT5++detW
YGBgdHR0WlpaQUFBcbmS/4WCEE8lJSUFBwdje2dnZ3S7CD1FRUVEJdszGl7k
5Pnz59PT07n910AIaYJycnIQVkePHl22bNnIkSM54cbHxyctLT1hwgRdXV1E
k4eHBzZ79+7dp0+fysrKav12X758Qej5+PggLfF2oqKieK/mzZv369cP4Ymn
6vHQCCF/MqRNTEyMp6fnpk2bpkyZgl6ShZuAgEDv3r3nz5+PDtTNzc3f3z8x
MRHJVu8DyMzMROloZmY2fvx4MTExvHW3bt22bt0aHh6OIrDe344Q8udAvr15
88bR0XHBggXy8vL8/Pws3zp37qyuro6cuXDhwuvXrz9+/NgAg0El+eTJExMT
kx49emAMHTp0WLx4sZ+fX2FhYQO8OyGkiSkuLo6NjXVyctLS0kLhxMJNXFx8
7Nixq1atQu69fPkyNze34QeWnJxsa2uLGpKdhB0zZsyZM2fy8vIafiSEkN8U
8i0uLu7kyZMLFy7s3r07y7cuXbpoamra2Ng8fPjw/fv33L1eNyMjw8XFZfjw
4WiZMbYBAwacPn2aKjpCyH8qKSmJj493dnbW1taulG/Hjh2LjIz8FZ+51U5+
fv61a9cwMPYx3ejRo2/fvk2f0RFCaoLaLCEh4dSpUzo6OuxTr0abbxxfvnx5
9uzZvHnzBAUFW7VqtWjRorCwMG4PihDS6CDfEhMT3dzclixZ0rNnTx4ensaf
bxxorn18fEaMGIExt2/ffuvWrXR5CSGEA/mGTDh9+vTSpUtlZWUr5tvRo0cj
IiKKioq4Pcb/htbVxcWFnYxAl21jY0MTwQghkJ6e7uXltWzZMnl5eV5e3t8x
3zgQawg39kGigoKCu7t7Y64/CSG/GhLs5cuX5ubmffv2bd68OZJBSkpqzpw5
v2O+caAoRbuKphWHM3v2bBwIt0dECOGOtLQ0Z2dnNTU1FghNIN84/vnnH3V1
dXbF8qFDh+jCEkL+NPipf/bsGQoeOTk5REHr1q1HjRp18ODBJpBvDI7i+PHj
Xbt2xdFNmzbtxYsX3B4RIaThpKSkODg4TJo0ic2v79mzp5GR0d27d7kyeeHX
iYmJ0dLSYudbLSwsmtjREUKqlZ+f/+jRo40bNyLZ8OMvJiY2efJkJF5SUlJd
VgtpnIqLi0+dOiUjI4MjHTt2LA6c2yMihPxC3759S0xMtLe3x887W7OoV69e
pqamAQEBTfgzK6T3ihUrWrRo0bZt2x07dmRmZnJ7RISQXwLN2u3btw0NDdn1
FR07dpw9e7a7u/uHDx+4PbRf6+vXrxcuXOjXrx+OWklJ6datW9weESGknpWW
lr5588bW1nbEiBFCQkL8/PyKioqWlpZhYWGfP3/m9ugaApLc2NhYqBxa9ffv
33N7RISQepOdnX316tWlS5dKS0ujmOnatauenp63t3dWVha3h9agfH19lZWV
8TfQt29fLy8vuk8EIU0AfpBRwtnY2AwZMkRAQEBYWFhFReXw4cOxsbF/4F1N
kepmZmZt27bl4+PT19dPTEzk9ogIIXWSm5t748aNZcuWsRJORkYGndqDBw/+
5LUlHz9+PG7cOHbZjLOz85cvX7g9IkJILX38+PH06dNo0Fq2bMkuFHF0dExJ
SeH2uLgMyW9lZdWhQwcE3fz586Ojo7k9IkJILT19+nTixIn4WZaXlzc1NX3+
/HkTvlDkpwQFBampqeFvBiXu0aNHa7o5RXp6+tWrV728vGjVJkIaoW/fvh06
dKhNmzZ9+vSxt7en84kVIe0PHz4sJSWFoNPQ0AgODq52Mz8/v/HjxysoKGze
vDk8PJxOVRDSqCDlbG1tkXKGhoa0rlpVkZGRc+bMYVcMWltb5+fnV93m0aNH
Y8eOZffuWbx48ZMnT+hDPEIalVu3bmlra585c6bpzdiqu0+fPjk6OrJLo9HX
o7uvuk1ubq67u/uQIUN4eXlbt26tqan5+PHj4uLihh8tIaRa6FKDgoLevXvH
7YE0UnFxcTo6Os2aNRMTE9u1a1d2dnbVbfLy8s6dO6ekpMTDwyMiIrJw4cKA
gIA/8AocQsjvqKSk5PTp0/Ly8ijnRowY4efnV+1mBQUFZ8+eHTRoEDZr06aN
rq5uSEhIAw+VEEJqJyUlZc2aNYKCgsLCwiYmJjVN5kVF5+rq2r9/f7Z4Cwq/
P23OCCHkN/Xt27erV68OHjyYLcyCKKvpxhA5OTlHjx6VlZWlyf6EkN9LRkbG
jh072CKiU6dOffDgQU2Xz717944VfkJCQhs2bEhLS2vgoRJCSO08f/58ypQp
nKVEnZ2dq21dUfhdu3ZNUVGRFX5eXl4NP1RCCKlWUVHR06dPg4KCqj09imfP
nj07ZMiQFi1aIMEGDRqENrba/aDw27JlS+vWrZs1a7Zt27Y/ZMUqQkjjl5yc
vHHjRnSmNZ01yMnJuX79+tq1aydOnKilpXXv3r2adoVKr3PnzghDbIxX/bIh
E0LIT4iMjNTU1FywYEFMTExN26Ahff/+/bNnz0JDQ78z4ff06dM9evRAyhkY
GNCkEkJII8Gm50+ePDkgIKCOu/Ly8lJQUEDKLV++nE5AEEIaibCwsJkzZ3bp
0uXgwYN1uU1henq6mZmZhIQE61irnS5BCCEND3FkYmIiKCg4bNgwT0/P2gVd
UVGRm5tb7969EXGysrLu7u401YsQ0nhcu3Zt8ODB/Pz8CLojR468efPmp86Q
pqSkODk54bU8PDxt2rTZvHlzamrqrxstIYT8LDSbNjY27MRB9+7dFyxYYGdn
9+DBg6ioqPfv39e0pFJhYWFMTMz169c3btzIbloN48eP9/f3b+DxE0LIf0pO
Tj5w4ICcnBwLq44dO6qoqGhqaq5YsWLbtm3Hjh27ePHi1atXL1265OXldebM
GTyCPhd5qKioKCIigpdISEioqamdO3euoKCA20dDCCHVSEtLc3V1XbhwIVtZ
jqN58+bt27fv27fvoEGD+vXrp6CgICsri0f4+Pg4G/Tv33/37t1BQUE1TQEj
hJDG4PPnz2hCkXVr165FncbWPBcWFv6rOq1aterdu7eGhsaGDRtQ49EFcoSQ
38XXr1+zs7Ojo6OfPHly4cIFW1tbY2PjVatWoXvFnwYGBoaGhkg2S0tLPBsc
HJyVlfXt2zduj5o0Wfn5+f/884+Tk9OJEyeioqLom43UO3xTFRQUvH//PjU1
FX+mp6ejbMvLyyspKeH20EjTh+86hJu6unrnzp0lJSWNjIxevXrF7UERQkj9
QBWHiGNLFzLIOnt7e1oLghDSBHz9+vXu3bsqKioVPw3m5eUdPny4jY3N48eP
aVVqQshvLTY2duXKla1bt6565ktCQmLcuHFmZmaBgYFFRUXcHikhhPy07Oxs
a2vrLl26INPk5OTYsjkKCgqdyrGsExMTmzJlyunTp2mZL0LIbwdF2tSpUxFl
3bp1s7KyioyMRPc6ffr0adOmWVpa6uvr9+rVi2Udijp0r9weLyGE/JwLFy70
6dMHITZ37tyoqCg8kpiYaGdn5+rqmpmZ+e7du1OnTg0dOpRVdAcOHKjp1kuE
ENI4HT58uG3btgixdevW5eXl4ZHS0tKMjAxOc1pUVIRt2NrU2trasbGxXB0v
IYT8hC9fvmzbtq1Zs2YCAgJ79+6taRWvoKAgNLBIuYEDB3p7ezfwIAkhpNbS
09MNDAwQX1JSUi4uLjVthtbV0NAQmwkJCVlbWzfkCAlphMrKytDvJCYm0oUH
jR/az4ULF7IiraZ7xv1bfh527dq12Ay97ZEjRxpyhIQ0QqGhoaampkuWLEFr
Q3PTGjn8MsK/FJvp4OTkVNPE1devX8+fPx+bDR48+Pr16w08SEIalYKCgr17
97JPs5cvX05LGTdynz59srS0bNOmDQ8PD3pSdKbVbnb//v3Ro0fj31RDQyM4
OLiBB0lIo8L5pQ+TJk2q6W5leeUaeGykWrdu3VJSUsK/V013l8vJybGwsOjQ
oQP95iIEHj58OHbsWJZysrKyHh4eVbdJSko6cuTIyZMna6ocSEN6+/bt4sWL
2bLVtra2le4CjGLv3LlzgwYNwgaSkpL4h6tp3X5C/hA3btwYMmQIS7mWLVvu
3r276g+Fv7//hAkTxowZ8+DBA26MkfyPz58/HzhwoF27dvgnU1RU/PvvvzlX
ypWUlDx+/HjatGm8vLxCQkK6urrssmFC/mTe3t4DBw7kzPVeu3Zt1ZmPaIvQ
HImJiVlbW9OF9I3Bs2fP1NXVW7RowcPD079//82bN585cwad7LFjxxBxbdq0
wT8lSvS7d+/SbTEJ4UwX4qRc1Ztis1oOYYhWiFKuMUCXeuXKlYkTJ6L8xr+a
gICAjIyMkpISZ7Y+/k3d3NwqNbOE/Jk8PDw4tyeD9evXVz3L4Ovri5+gJUuW
JCQkcGOMpBpFRUX37983MjLCb59WrVpx/gVRcquqqtKHqOQ3hV7y8ePHKKjw
7f3hw4d6WeTf3d29W7dunJ+RTZs2Vb3XmKenp7y8vI6Oztu3b+v+jj+itFzD
vNfvC98A7969u3r16o4dO/A7CP9Ay5Yts7KywjcJLbhEfjv4kQ8NDd29ezd+
Tffq1UtFRWX16tWXL1+u2l3+LPzSZ9O6GRMTk0pLapeVldna2oqIiCxevLhh
Uu7169dHjhxxcnKi0vEHofzG31VcXFxycjJ1qeQ3FRUVZWBgIC4uXnH5a7Qq
jo6O1TYmSMXi4uLvFHvYICsrKyYmxszMTEJCgu2zdevW+/fv//r1a8UtUdoZ
GxvjWV1d3cTExPo/tv+FRgyh2qFDB5pmTsifIy0tzdzcXFJSkl3SNmPGjFGj
RrHZCr179z527Fh6ejrbEgGFILp27RrCasuWLcePH3/27FnVeo8tQYZqcMGC
BUOHDuUsrK2goODl5VVpY5QHS5cuxbN6enr4+lcfLGoSdjHYgAEDKOUI+RMg
uM6dO4c0Y8tf29jYhISE+Pn5rV27VkpKCg+igT18+PCHDx9QdOFxlHyDBw8W
FRXl4eHp2LGjlpbWo0ePKu4Q9duOHTt69OjBzs21atUKZeF35j4EBgZOmTIF
zyIVG+AD7fj4eB0dHXaW8MKFC7/67QghXJeamrpq1armzZsjuDZv3oy67t/y
z8piY2N37dolIyODQJCXl0fx5uTkpKqqyi4tQABqaGggl9D9RUREcPb25s2b
TZs2If1YZiIqly1bxu4gACiiKn0U9uXLF1dXVxSQfHx8O3fuRBf8q4+3sLAQ
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
HcePH3/o0KGaJrgxSHjkvIeHB7p47v7TYyQYf2Bg4P79+1Ha8fHx4SjGjBlz
8ODB6OjopvrLlzSk3NxcNG6PHz9uqt9Od+/eXbhwoZqa2rp167y8vJKTkyst
Vvy7Q5rZ2NjIycm1bt16woQJ+Nre3v7s2bPf7/vevXu3fft2vGrp0qUVl3zh
IlR3Fy9eRHPBLiDv0qXLihUrAgICGn8PTgh3ofEJDg4OCgrKzMysl/v1NCqf
P392dnaWkZFp06bN/Pnz79+/j0d+5NO5iIgItjALOkREYsOM9j+hrnv16hV6
WEVFxRYtWggLCxsZGTXAOvmEkEaLs4rU2LFj/fz8fvyTxqioqLlz57JzzZaW
lo0q/1HUoepm0/S6d++O0pQ+oyPkz1RQUHDw4MHOnTtLSkqi/vmpKKi4XIyx
sXFj+1T206dPrq6ubLnC0aNHI8AbVQ4TQhpGSEjIjBkz2Ezhf/7556dey1la
EFauXPnhw4dfNMhaS09P3717NwK8devWhoaGDXavXkJII1FaWurg4CAlJdW2
bVsLC4tqV5f6jpycHLZWAyxcuDA2NvYXjbMuQkNDZ8+e3axZs27dutnZ2eXm
5nJ7RISQhoPqa9WqVcio4cOH37lz52df/vnz5y1btrCU09DQQFn4KwZZR1++
fPHw8Ojbty8GOXHixKdPn3J7RISQhvPy5Uu2nvySJUtqcRayrKzMysqK3ZFt
8uTJ31kpmrsyMzO3b98uKioqLi5ub29Pn84R8ue4evXqwIEDeXh4tm7d+v0V
UGvi7u7OVuGbMGHC98skRGJqauqlS5eOHj16//79qku4FBcXFxYW/qK5JOxI
MU4jIyNqWgn5cyBwUN7UZaFjPz+/ESNG/GcziLYRdSPa2379+klISIwdO/b6
9eucZ9kVbseOHduwYYOnp2d2dnbtBvMdYWFhM2fOxDjnzp1b08qEhJAmBsXb
tm3bmjVr1rdvX5RYtdtJcHDw9OnTkR5jxox58OBBtdsgxB4+fKilpcW5pRre
FC0kW4oB7eT58+fxLJuCqqKiUtN+6uL9+/crVqzA/sePH1+LJcIIIb+jtLS0
uv/gcy4M7t2794ULF2raRk9Pr9KN29avX5+Xl5eQkGBtbc25bSW0adNm//79
tWufvyMnJwe9KvY/atSoWiz3Sgj5HSF8NDU18YM/b948NIy12wln3oSIiIiN
jU3VD/Zzc3ORY+x2ukgzhAxLOXSvqOUQjH369MH/CgkJycvLs3Lu+zeDqx3O
RS+1O5tMCPkdcU6w6urq/uwJVgRURkZGfHy8j4/P5MmTWRm2YcOGqucUUCWq
qqqyaVbIGXV1dXZzImdnZzx7//79RYsWycnJSUpKImzZbR+nTp1a7zfR4NxK
SUlJ6datW/W7c0JI4xQaGso+kEfOIK9+/IUfPnxwd3dftWoVXohE6tKlC0u5
xYsXV5pcUFxcbGtr265duxYtWiDf9PX12VIh+BoZ+2/52sthYWGo61Dmbd68
md3eqFevXufOnavfg33z5o2WlhZ9LkfIHyUmJobdGhItJxrPH3zV+/fv7ezs
2ORQHh4eXl5e/MlSruppVs5tQbp16zZp0iRZWVl8LSMjc+zYMc6E2ZSUFOQb
CsKLFy9u374dediqVas9e/bU7zLRvr6+ysrKeHcdHR2a50XIHwJdKnrVn7o7
T1FRkYuLi7y8PLv395IlS4YPH87z/3Xq1OnEiRMVV94LDw+fNWsWu/sk+2gO
tdyuXbvY4pwlJSUosfbu3Ttu3DjEWmpqqqurq7S0NDZbvnx5PS5pjjdiJWXL
li3Nzc0b26oChMEvvocPHwYHB3N7IKTp4Ezv+s5FIJVwTlgg4pAbQUFBbLa+
dDl8gR1y5uzjm/b06dODBg3i3LkbObN27drY2NhPnz6hRz5z5gwqK+SkiYlJ
XFwcXvLo0SMkHrZUU1NjLW294FxGoqCgcP78+fraLalfqLHx7bF79+4mdiMV
wkVIoXXr1uFnX1FRseI1ujVBReTk5MTSbOnSpcnJyffv32d3pFUvxz714tzK
DcmJB4WFhVnE4QvE6YEDBzw8PPbt26etrY3M6dOnD76r0TuzFTuRdYsWLcLG
eBwNbH0d6fPnz9kpkunTp1Op0GjhFx9+6+HXKF22TepLcXHx9u3b0Wl27tz5
5MmT/7kyMOdijC5duiDuUCCZmpq2adNGSEho27Zt+Bo51qFDB/SemZmZ2P7m
zZvIQNRvrVq1YinXt29fZWXlXr16iYqK4k1nzpzp7OyM/XDeorCwEHUdLy9v
69atLS0t62W2F44LjTCbhrZ69Wo2NtIIJSUl4bfnkCFDfHx8uD0W0nS4uLhI
SUnx8fGtX78+Kyvr+xtzTiWMGDHizp07t27dUlJSYtdm+Pr64hH0nqwMc3d3
//jxI1pXb29ve3t7ZKmGhoaMjAw/P7+4uDi219LSOnLkSGhoaNW1nhwdHTt2
7MgWrKsYgLWGnRgaGuIYsdvjx483sRt2NCXs85C6zMQhpKp//vmHzc/6kZuG
FxQUbNy4kV3thjYTwYgqrm3btjt37swqh+BiZ1GxN7SrnEosNzc3JCQEjSrK
s2PHjiES0aLWdArg3r17o0ePZks51b27RCGHpGWfDU6bNu0HT7IQrrhx4wYK
OVVV1cePH3N7LKTpyM/PNzMzQy/Zvn37Q4cOfX9eFRIDjS274E22HL4YN27c
o0eP2AapqaloV7EBGlJ0o1evXq20+seP3DEHAcgubEM0YQ91PEDUk0hjQUFB
1JAWFhZ064dG68uXLwcOHGjTps2CBQuio6O5PRzSpHBuNaujo/Of1waHhYUt
XLiQLSgHXbt2rbT6blxc3JYtW1DsCQgIjBkzBmXbz44nOzt7zZo12LmkpKSD
g8NPH8//unbt2uDBg2n9zMbvzZs3+NZq3rz5pk2baGksUr+Sk5P19PRY7XTp
0qXS0tLvbPzx48c7d+4sX7581KhRM2bMOHr0aEJCQsUNUKrFxsaiLFRXV1dT
U6tFMYbf6Vu3bsV4kJOovupyH9X09HS02MhkFHL79u2jQq7Rwnedq6trz549
5eXlPTw8aJlTUr9KSkpOnDiBNlNISEhbWzs4OPj732P4hkTBdvfu3ZCQkMLC
wmq3KSgo+Oeffx4/flyL+90g1iwtLRFxnBn9P7sHDh8fH0VFxR9Z4ZNwF37V
Llu2jIeHB9+BjfPuIeR39+rVq1WrVrVt2xY1j6GhYa3XJ6kvjo6OaFfZur45
OTm128n79+83bNjQqlUrVshRE9SYXb58uX///p07d0Z3UO+LbhHyb/mFc8+f
P0ffikBAvBgbG3P396mXl5eCggJSTl9fv3bzvL5+/Xrx4kX84NAnco1fRkbG
xo0bUb3TNdvkl0Ifim8wAwOD9u3b41eqqanp27dv6/KZWF14e3sPGDCgdktC
MeiAUJ3y8/N36tTJxsam6npQpPG4ffv28OHD27Vrh5Kb5naRX+rbt2+RkZHr
16/v2LFj165dkXi+vr6/4hYM/+nMmTMyMjJIuRUrVtTuwmAUcmxxzpkzZ4aG
htb7CEl9ycrK2r59u4iIyI9PpiakLlC8xcTEoJDr3r27kJCQsrLyyZMnGz7o
Dh48iG97ZNSmTZtqOsHxfRg2qriePXs6OTnRCiSNmZ+f38iRI4WFhbdt2/af
s28IqS9JSUkuLi7oFpWUlIyNjdH9NeS7c2bXot/cu3dv7SZkoSg9dOjQqVOn
6n1ldVKPEGv4lYrfaPh9WotLKwmpC0RNQkICvvECAgKqTjWtu8/lqn0KpSNb
E0BSUtLR0bHWb1FcrtYvJw3g7t27KORatmyJX6YZGRncHg4h9SY6OtrOzg5t
6YsXL6o2pOHh4bNnz66vGV6k0WKFnKio6A8u/EXIb4RNyu7QocPUqVMPHz6M
7pLz0RkKORsbG7aE3axZs5B43B0q+XVQyI0aNUpAQMDIyKheFp8hpPGIi4vb
s2ePnJwcW2R4zpw5e/fuvXjx4rVr13bt2tW3b1/WrlpbW9N1BU0Vfp3t2LED
hVz//v0vXbrErWuWCPl10tLSHBwchg8fzmZysQU2Bw8eLCYmxu5MraOjQ1eA
NGH3798fPXp08+bNV65cSWeISFOVn5/v6+u7Zs0aRUVFzqrpbPG65cuXP3r0
iGb6NFUo5Hbu3NmmTZtevXp5eHjQuqakCUOfkpKS4uPjs3v37qXl1q5de/z4
8ZiYGPrOb8JYIcfDw1PruS2E/HYKCwsTy2VlZdHlH01bZmYmu11Iz549XV1d
v7/SFyGE/F6QaZcvX2brmi5atIjdnpIQQpqM2NhYPT09fn5+eXl5d3d3qtsJ
IU1Jfn7+4cOHu3btinZ169atdI0cIaSJefTo0bhx49CrqqqqPnnyhNvDIYSQ
+pSamrp582ZRUVHUcqjoaMU/QkhT8unTJxcXF1lZ2ebNmy9evPjNmzfcHhEh
hNSnkJCQGTNmoFft37//+fPnS0pKuD0iQkidFBUV4efa39+fVhP6t/wCuX37
9klKSoqLi5ubm9PfCSFNQFRUlJGR0fjx421sbJKSkv4tv49tQkJCeHh4ZGRk
XFxcSkoKfvYLCgqafFVTWlp65coVdoHclClTAgMDuT0iQkg9ePXq1fz585s1
a9atW7cVK1bs37/fxMRER0dn1qxZc+bM0dbW1tPTMzAwWL9+PYocT0/PgIAA
hOGnT5+4PfD6h0hnF8j16NHjxIkTtVvfnhDS2CCvjh492qVLFxQw+AFv1apV
8+bN/6qOkJCQvLz8pEmTlixZYmpqeubMGbS6eXl53D6C+pGVlYVqtmvXroKC
gqtWrUI1y+0REULqAedWaJ06daoYaK1bt+7Xr5+KisqwYcP69OmDn31RUVFe
Xl7OBshDWVnZGTNmbNmyBQUeCsLfurpDP+7m5sZWCxw6dOj169dpBQZCmgb0
aJs2bWrfvj1+ulHO4Qe8Q4cOLOWGDx++Y8cOLy+vixcvIgEOHz68devWxYsX
T5gwoWfPnih4OHEnJyc3b968Y8eORUVF/Y5Z9+XLFx8fn5EjR+JwcGh2dnZ0
fy5CmgYUMEeOHGEruqMVtbCwuHHjxr59+1hJg/509OjRDg4OaWlpbPuPHz++
ffvW398fvaqZmZm2traysnK7du1Y3GE/c+fOPX369O8VEWVlZS9evJgzZw5y
GwXtzp07aZ1MQpqMly9fqqurs7VA9+7dy6ZqIqOQVJMnT27Tpg2eQluKH/yw
sDAUPBVfW1RUhDrw9u3btra2enp6I0aMaNu27e94/4uYmJg1a9Ygq3G8BgYG
0dHR3B4RIaTeODs7I98QTahkIiIiOI8jwZ49e2ZkZMTKPPSwKNLOnTtX7cVj
xcXFSUlJd+7csbKy0tfXR9+ampragAdRJ8nJychw/CW0aNFCQ0MDR/3t2zdu
D4oQUj9Qm23fvp2Xl7dVq1Z79uyptKI7+rj4+Pj9+/crKCgg6Pj4+Pr3748u
NTAwsKY73iIbU1JScnJyGmT49SA9Pd3GxqZHjx44QCUlpStXrtCy9oQ0JfgZ
R4PGPm8/c+ZMTducOnVq/PjxoqKi2FJcXHzKlCnHjx9PTEz83Wue3NxcR0fH
Xr164bh69+6NsrbJXBJDCGFiY2O1tbXxMz569Oj79+/XtFlhYeGTJ09MTEzY
vRqhe/fuiMcbN25kZ2c35IDrEcpONOBsjgNC/uDBgzSTi5Cm5/Xr1/PmzcOP
+eTJk58/f/79jdPS0lxdXWfNmtWxY0e8BE0uWjxLS8uwsLDfrssrKSlBqk+a
NAndOp1UJaQJ49RyaEj9/f3/c3ukGTJt//79ysrKLVu2xAuReDNnznRxceFc
atL4oYpDxM2dO1dYWLhNmzarVq2ik6qENFWJiYm6uroIKxUVle90rJWgS715
8+bq1avZh/bsUpPNmzc/fPiw8X+ulZ+ff+nSpSlTpiDi+Pn5NTQ0nj59+rt/
wEgIqUlqaury5cvZhKYbN278+AsRC0hIBweHqVOniouLYw+ioqJjx449dOhQ
TExMo123JCsr69SpU8OGDePj40PKqaurI65/x5kahJAfVFhYuHXrVvzIS0lJ
OTs71+LlgYGB5ubm/fr1Y/NbpaWlFy1a5OHhgfxsbAXS+/fvjx07xuZ0IJkX
L16M4pMijpAm78yZMzIyMgi6bdu2FRUV1WIPGRkZ586dQ7ixJU2aN2/ep0+f
VatWeXp6JiUlNYZ7NBcXF0dEROzevVteXh4j7NSpk5GRUXBwcKOtOQkh9Sgs
LGzmzJn42V+yZEmtFxpCXERHR9vZ2Y0ZM0ZERIRdQqygoLB06VI3N7f4+Hgu
3sY0MzPTy8tr3rx57NRw165dt2/fjra6rKyMW0MihDSk/Pz8HTt2CAkJKSkp
+fr61mVXeXl56AFNTU1HjhzJsq5Zs2YoFLW1tZ2cnBAslabB/mrI3tevX1tZ
WQ0YMIAtl9e7d29ra+vExMSGHAYhhOsePHgwadIkCQmJLVu2pKen13FvqJ38
/PyQnKjr2OR96Natm5aW1sGDBx89evThw4dfvW4bSse3b9+iZV68eLGUlBQG
gKNTV1d3d3ev+wESQn47BQUF165dmzFjhqqqKr6ol31mZ2cjPHft2jV+/Hh2
EpZFzdixY1esWOHg4BAUFJSbm1sv71VRYWFhaGjo8ePHdXR0+vTpw8/Pj/eV
k5NDhfny5Us610DIH+vz58/+/v7m5ubXr1+vx90ix7BbCwuLqVOnspU5mc6d
O0+bNm3z5s0ot8LCwlD+1f1EAHIVhaKlpeXMmTNZ/caZdYt++Te6aJkQ8oug
i0QU/IqGLi8vLzAw0N7eftmyZZw16NgKw/Ly8rNmzVq9erWVldX58+cDAgIS
EhI+fvz4I6cGEIxItri4uBcvXuC1JiYm48aNExMTYzvv2LGjmpoaQu/58+d0
hxpCSAMoLi5OTk728/Pbv3//woUL+/fv36pVq4r3mOjdu/fkyZMXL15sbGx8
9OjRS5cu3bx58+7du48fP0b6od9E1RcZGYkv8LizszPa4TVr1mhra6NQVFBQ
YDPOmjVr1rNnTy0trSNHjmDL/Px8bh83IeSPU1RU9ObNmytXruzcuVNTU3PI
kCGcBdUZHh4eCQmJfv36DRs2bNSoUajQJk2ahMIMreicOXPwBR5HTyogIFDp
XjzY1YoVK9zc3GJiYugjOEII16HQQm1248YN1F2bNm3S0dGZOHEietiKNd53
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
6dKlfv364XG0unFxcQ16YIQQ8v9dvXp10KBByKIJEyY8ffq0ps2+fv369u1b
Kysrzn2xORfaIdYOHTrEmlN1dXU8iC3v3r27cOFCERGR5s2bb9iwoab8JISQ
Xy0xMVFXVxcBJSEhYWlp+f0pFZzTstC6dWvEV0pKCh4PDQ2dOXMmO+s6ceJE
HR2dUaNGsZOzvXv3Pnfu3Ldv3xrqgAgh5H8UFxc7OTl17doViTRixAgfH5/v
nA+NiorS1NT86/+Tl5dHgv1bfq7BwcGB088yfHx8qBLt7e3p1AMhhLtiY2NX
r16N7lJQUBAl2f3792u6jjczM9PQ0JCTY7y8vFu3bmWXjiQlJdnZ2c2ZM2f0
6NFycnJ9+vRBRXfx4sXvT5IlhJAGUFpa+uTJExRp6DGRdStXroyJialpy2PH
jqEt5QSdvr4+Z1WT7Ozs8PDwe/fueXp6XrhwITo6uqSkpAGPgxBCavTlyxd/
f39jY2MNDY29e/d+Z+W6iIgIFGmtWrViKTdv3rxXr1415FAJIaR2vn37lpaW
FhwcjN4TNVtNmxUXF9++fVtVVbV58+ZIuenTp+MlDTlOQgj51diCmQsWLFBW
VjYzM3v37h23R0QIIfXs8+fPkZGRvr6+0dHRtAo6IYQQQgghhBBCCCGEEEII
aZL+HyWSIv4=
     "], {{0, 157.}, {209., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{120.5, Automatic},
   ImageSizeRaw->{209., 157.},
   PlotRange->{{0, 209.}, {0, 157.}}]], "Input",ExpressionUUID->
  "16085d77-35ae-4944-bb7b-54938f7b05f0"],
 "\nWhen finding the angle a line makes with the positive x-axis, if it has a \
negative gradient, you must subtract that angle from 180 to get the right \
angle.\nDistance formula: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["y", "2"], "-", 
         SubscriptBox["y", "1"]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "2"], "+", 
         SubscriptBox["x", "1"]}], ")"}], "2"]}]]}], TraditionalForm]],
  ExpressionUUID->"34c47020-8fc2-457f-a7c5-ba6ab038dcfe"],
 "\nGradient: ",
 Cell[BoxData[
  FormBox[
   FractionBox["Rise", "Run"], TraditionalForm]],ExpressionUUID->
  "90e01b8a-f0ae-49ed-807f-42414253c057"]
}], "Text",
 CellChangeTimes->{{3.886699096956606*^9, 3.886699192785263*^9}, {
  3.8867369663345847`*^9, 3.8867370251729403`*^9}, {3.886737352237273*^9, 
  3.886737352514721*^9}, {3.8867965604886513`*^9, 
  3.8867965931014047`*^9}},ExpressionUUID->"ed19e867-480d-4e2c-8aba-\
13ec07933d70"],

Cell[CellGroupData[{

Cell["Parallel lines", "Subsubsection",
 CellChangeTimes->{{3.8867369305462155`*^9, 
  3.886736932166446*^9}},ExpressionUUID->"88305daf-f105-486f-9dd3-\
1d6abd818a77"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["m", "1"], "=", 
   SubscriptBox["m", "2"]}], 
  TraditionalForm]],ExpressionUUID->"0217b2f5-4d9a-47f1-bc54-a7c0b9a7c6df"]], \
"Text",
 CellChangeTimes->{{3.886737068521684*^9, 
  3.886737071648363*^9}},ExpressionUUID->"8a04927b-de26-4716-85fe-\
599f643d6659"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perpendicular lines", "Subsubsection",
 CellChangeTimes->{{3.886736937457196*^9, 
  3.886736939012989*^9}},ExpressionUUID->"e1a1237e-7892-4c8f-9508-\
0fa305991d5b"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["m", "1"], 
    SubscriptBox["m", "2"]}], "=", 
   RowBox[{"-", "1"}]}], 
  TraditionalForm]],ExpressionUUID->"d7aece26-beff-40e6-8cae-ca8e2ad19c31"]], \
"Text",
 CellChangeTimes->{{3.8867370591396947`*^9, 
  3.8867370652815557`*^9}},ExpressionUUID->"7284293f-7c08-40d7-857e-\
1d404b9d9973"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Probability and Counting Methods", "Section",
 CellChangeTimes->{{3.8890355729661217`*^9, 
  3.8890355761850767`*^9}},ExpressionUUID->"b7a553ba-c4f2-4ca1-94ef-\
8e0032c26152"],

Cell[CellGroupData[{

Cell["Basic Definitions and Information", "Subsection",
 CellChangeTimes->{{3.8874007296663675`*^9, 
  3.88740073740357*^9}},ExpressionUUID->"f89873ca-d831-4a18-a00f-\
a677189d2537"],

Cell[CellGroupData[{

Cell["Sample Space and Events", "Subsubsection",
 CellChangeTimes->{{3.887400784774577*^9, 3.8874008113854723`*^9}, {
  3.887400867038417*^9, 
  3.8874008697425814`*^9}},ExpressionUUID->"55ed0a99-dc35-4f4a-a4e5-\
ebeef7213a75"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdcFNue7zsv3M+dN3fefXfemzl37mdm3n1z9kn77OM2bHNWxACIkgRB
QESMYABFAVEEFRQDOeecc845hyZKhqaBzk3nVIFX1U1ooAlG2HPW9/Pf7qZq
1VqrVq361ar/qqr/v1+5q33tf/2bv/kbm7/F/tE2e3TM2trMTue/YX/o3bG5
ef2OxdUzdx5YXLew3nvlf8MWHvxf/uZvxrH/8N+eH97PAAAAAGBTgkk0UGkA
AADYtACJBgAAgE0OBEEbXQUAAAAAKAeTaDCcBgAAgE0L8EsDAADAZgaTaB9v
r42uBQAAAACUo1SiWSLRnoQoYMCAAQP2nU0nJ00Cw0s0WSwWL1mComgvhQAM
GDBgwL6/SWHJEolW6pfe8HoCAwYM2F+nLVHplWYPN7yewIABA/bXactVOsDP
F6g0MGDAgG0SW6LSSiUaqDQwYMCAbZQtUWkMAZ8PVBoYMGDANoktUWlMooFf
GhgwYMA2j4HZQ2DAgAHbzLZcpYODAtel0lMt4c25+llxp9Pjr1fk5xLbvlaV
OgdK/jkstHT8q2UIDNhnW/tg2ZX8VL+hDeiNBd3FlRPgLAC2VKWVSrRSlU6s
Sfi7wMDr1QUfGvOOxwT8U0xy09TC2p5Pr8n8Jp19xX8fGFSioNKr5LbOgj6j
PsCAYeaWG/6/+3j+W3o+Ydmqb9upyK3XE/yjR1o2vAWAbbgtnz3kcDjrUWnb
jLAdWTny33UD5Rfy0uom2nunmt9VJO+NC90aH3W/sUK2tt2vOiNsuEo7NWJH
Yqx3f5NrWdLuuIiLZQWdZGxt69PS1OKPhScSw3enJIQN48qsqNKNI1UX0iK3
xUUalxd0La5ABiFfJTH8L7F4Vk14Vu3WhRm+HUVH4kJ3JceHDDTLk8U2Zx/H
ksWEXSwvbCHLt20PqUvfGRt6MC0xpL9Jniy+JedQfNiupJjXnXUbflCAbRLr
IbfsCfe/Vp71twFBs3eL5Bbb3IRAQum55Iht8VHPCLWLN2lPbck5mhC+KynW
qbOhh9L+tjT+XsdsV6ztzDasKuvGz5dSjeSI7fFRN2tK5WeBU2lq7WCJRlL4
L4kxz/ANCUG1Kf/k67UzKfpBS9WGtwOwjbUlKo1J9Dr90mmNaf8Y4HssK8Wp
sSRreLYf+lXE/yYqxqejwq8h418DgxImsYXtdhnBv4kIf9la9iAv+j8FBGiU
5AW25G0J9n3W34L1ed0or/8eHfehvcypJOHvQyIwcZ5X6e7xGtXIgEtVhaGE
Et2k4H1lFZ1zpXcTy/8UGuzQUhbZUXo6NlC9shIr6ESU/w/xcb4d5c4lcf8W
HVdNJrR0Z/1zWBhWdASheGeYn1EjrsCxNUn/Hh3jSSh/W5X8/0VG508RKggZ
v42MwJIFNOf8LjT4bX/rhh8XYJvBGrsz/i0utZZUrxrifbVVJshTzWdCff4l
JgbrLT71af8YFBpJbJ9PX92b999Dw582l/o35vyLv9/b3sbY+sS/jUypxW4z
yc1Xon0s22qbBst+DPKzqisObivEeqx5WwN2LdCL8vqXyGi31jLX8qT/7I9f
EYp68v+nn8/9usKEwcYNbwdgG2tfMntY0Vd+MT3yf4b4/R9+vhplJe1kQsNo
Q1p/XfFwfd5AxeEQvxckgkylg3aU1WDDg8rOvP8SFFQ6jvXqNptkP83mJlyl
I70vduCq2DNRu8vPO6m/cV6l81vS/yEsPL2/Lnewzrc29T8FxFbODoYJ3WMl
vw3wM6gszBqsrxlvld17Yirta1QvO5XIzafC/R0G27tJjRn9taXDDfmDdZeS
go6WlmFrdeMDTRvlQ6A289QIl/4Wq4SAIwW5WCmY6ScEnSyv2PDjAmzjjdxi
GeNt3FSN/U6vjv6vsWkN5FmVvtJQKUvTtjvU90nvvGuu3T3Tf1tBId6RBmrM
Yny1a8qahyr/q7dXYH9LQ3/J/+kXmDXWFlaT9A8RcUkDeGfzKI/5L0m5nbhK
+5j34Pl0j1T+xtcnaai5h1T1F38/4PEA1qtMpcNDQ9aj0hXD9dUkvF8RJlpS
W7L+s59f7khLTF3qb4L8diXF6ObE/7v/gkofqcZv4qq68v5rcHCFbOGjVP85
lfa9PyAbjZAbTgd6JfY1zKt0Ul3K3wcFXcxLNpLZpYK8BvJ8BdoLe0sNM6L+
JdDn/woMvN1aL1Npv5tt8oFHm06Mn0VXW2t/wY8hfn+Iizqfk/hzmJ9cpVWj
/W+2KoxPyC2GkX5/SoiVl2KUm/ysvfYzWhLYfzBrHCj7O29P9ZyUq0VpJrlx
f+fj7drbIldpq+ZqWZq2vWGLVPpRotfvk+LmO9Krjtpecuu9OC/1qvKAyrh/
zSgkUAjeFXF/Hxq+0KurymUq7ftgCD8Luker/sXXJxGoNDAFW6LSSiVaqUrr
xweqFBfLf9f3Ff0//v55oy1XkgNPVFRhgtw+XPo7v3WqtNeB6rpubJORin/z
9UkZbJ5X6equnH8MDauaxHtvZnv27+LT51W6safAoqoIH0KT257kRvwxObNb
NpZWK8d1GOvh24MD3o62eeaG/Jyd3Y0na9GImVXp6ynBp0tL8HzITWdjQlyH
W19lBu/Jz5MPyO9nR5k3ApUGRgiqiv+/Y+MxiZZZ6oFw36NFhauqNCG8JOz3
ObgUY+JsmxZ6pxl3Kbf2ZvxzVPSR6KBXMh1Obkr/b2Ex1bJendSQtL2gtFu5
Slf/7O8XBVQamLLZQxaTuR6VzmjO+NcgbJgaeSQp4l+DfLenZzRPEZwLon4T
EXm7NO1YUvT2CL+D+WmFY61rqvS/RoZcLEpTjQ/+ITGldlJh9pDcbJ0e+tvE
+FslqTsjgy63Ns7PqnePlGwNCziek3q3NPUv4YGGtdilAR9L/4/IcOPidJWY
wJ/S0zsphJz6xN+EhpqVZGgnh22PDPx/Y+MDR9urunL/EBakW5iukxz6Y0pq
K4XQNVK2KyLwZG7ajbzYH6Ki4xU8jcD+Sm2q8Wykv8PAQk8ob0n+h/Doismm
VVS6dazql/CAEzmp1/Li/kdYWMywfIKj9UC4zz/Fxsunv3tIdVqxgTvTk24V
Jf0xLMhNNjuzXKV7yY0Gkb7H8tLfdYExw1+7LVFpTKLX75dun2gp+FgZ2VVV
RmzpkI1yu6faygaqY3trGybbWoiNsR/rseVYsmbZyKGH3NZAaume27YFn1LB
PR4PBloL+qrTBhrap+Suj7aG8dlk3eS2+pHa+I+19aTWJQ8+ESZa8j5WRnRV
VY63yvq/zOPR0lDUV5k+1DiXVXvNcG1Ud1UdqZUw0ZzaW90uq2c7qTmtu2Ih
GZbbZEt+X1XmcGPrJJBoYHjPaZrrq3NL2hrHWzrJhBZSy3y3aSa1EMiLNuyY
bM3vq04dbGxR6EitpJYmhSefsdOkYrAmub8OW9gzl0DeM7FysVK6ZL8JE00J
3ZVyvyKwv2bb4HcPZSptO/RVhBFXacu2pg1vUmDAgAH7irZcpaMiI76fSlPa
EtqLcya+zvA1qr04cxQMPIABA/YfypaotFKJ/pYqDQwYMGDAVrPls4c0GhWo
NDBgwIBtElui0phEg2/iAQMGDNjmMfDlUmDAgAHbzLZcpeNiYoBKAwMGDNgm
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
Bxoq5eKFcuHxWDX9Z3jGnBQV3efYSZB3Z4ezTKXLn6piKo0dNF/DX8Jw5zma
6XDOrhQ/h4o8r+r7DaIKHo+mmGcH1R5E3zxoZuUgL9cnqQZhdKr+uLVjQvjZ
zVIf5vjAu2ThbxQZynodVTK4LCFSmeTbxWBNs1iB97RdSql88SK3EUzt2f7D
70t6cEEQ00sPbNUmCLArI++N2cW0NvJnV+8/Kp8k0TNrqTTU+0HtZvDc8YDE
4oVRwueqtFoFZUGlZxCOy6kdcfHBGkd0BbBcQREeT6REpaczjuw1GZGVL20N
OXrOStEvLalxO3fbB7vlZxDbbC6onDSyg6Q9J0/dnpirOiwWL1Jp7HJ285zt
u/hHMaPYzma/vXLJr3e2eERMjLLQtAmTJ1vml0aHoq2M7IOy3j6t9zC65xUc
5B6Db6io0hqYSksirx1zjmuYbTiRaBWVrgh1fpXUyRdTdM6Yzas0yu3W+vPW
pjE82VKVhidunz7VNVcpKZ8/n9W8SuOzq33Vd3WOHdO2p4vmd3pBpZvDHh7X
d5AvbUhy3HclerlKQ/1+auae80ef3pb985ajYyx8wa9MpVFxtqNpU/cIcWxs
bKjjxqGfHwSX4ctXUGmEVqux9wyVJ/8b75BYFwu01Hxe1BdX24ctKX2q5pA7
PJtaypdKv45KZ82pdLHX1Qs+A4oqPZTvc1T7iZfh7rcZ7fKcsU61tkojrCjf
Dx7v38+bf0iKQGFCSDhRePWS/fyf7P68vKZhJc+JoGyvOwZmJqaYnd637bjW
Zb/yRQ4iVEDU/ePv8gkUWcVop3erN0yj4unxc3oOJOG3evTpV83Q4PJL4Uqg
A766f9F7O38Dk+9xS8s+EzuNCdH2GuaeM9KP6vuOeKXXTY4Pp4aH99Hm9QrJ
eKTmUIJ3rVS7s9b5ohnoo/HRUw008VRXptoBzVYBOiPIP3FGrtIkzaOGPXKV
PnSmXK7SBl5YoRL28MXzdwboE44aeyy9soaJxJrcpKJBQX/UPT3rgMU15dpo
nfhQOoH9bAt9eM+zUK7SqZ1i7Jpd+sLEN69nvC9rmCNBxVQ7Ix0qIrY4uc/G
M2N8glSWHN7URx9ItVF3Kp0fWZIrfQ8eNhqS7fnHfO+fd2kVtvSP9jbFRiTx
BlOPHzxXMsCakTJNj+/yLlsURxIV9RmfOPgmdQDht+sdVYlplz35Ju24ePTc
JJ676L6aSh4XHUl5cOTM1QrCEPFjc0xqGcof0frhB1ylRYOGP21pXlBpyV2N
Q751dMZgycnDhp38uTMO4QQY7bninsmD4PYUm+36XtNiaXP0XdXntcgMHG6t
pnE34OPIeFt5ZlzZ8HzdpL1+py65YmeFMPcFYVIIcfsv7djTT50/atIH508m
juAyKxwt1VbR6MMft0MSXt0IbJqeQSavqJ5tk6m03YUToZ3SGemA9sHDb5Or
pybGMqMiOge6Tff89DajDYaFaQ9UDT0axNJfxwT+dH/xxXvJc3MB6Gjc7V+O
Xx/FLl7wkLqK2SCm0sJx1X1GvfPtBNNent99/U3S4BixoSAltw/3Yw+VBW89
pN1HxQ/QeNmbXcfMilrxDhMYlMOWUKxPH22Q4O4C6zPHyxTm++CxqNMXnuL3
e8yEYzqYXCM1joeveRcJOFO+Vw5YRrahMxIfgx2huNsfzbDTsC3EZ3+KPM31
vPtkKn28QHYRzvayd88fGYy7dfTsrepOrFM1RqdVIYwOlT/9TCAJVtxzVNBW
X1NbvWCNzV2LDtq8X3pmZqI177GTb3lVTU11ZXZiLE/EyYwObxlfmnnMYwO5
x4PWXxcanSWE5FtLa9y0H4eW415EapneTW8OAvzSK4JJ9Pr90pPdZQ6XtbS0
r4TnN6G4k4roYWthcv35IHsq2PH2pau2/WykPd1T58wpTR3zqmHW/Ia8qa7n
V3Wuu0QP97U8tdC7+jSaIZCWBNurnT7/Pr3a3dYqLqexNOaFvsGt3KaPbdm+
l7QuhhS2DlXFX9bV9c9uk/BGnt2yeOUZ4O/p0cvEhZwxUG589rSaml5ADgGR
Uv0eWxhefVjeMaHYofjERidrm6jY6PchOfhjvShUEPT8nq1LeLBfYG4nJk0T
3Um2L4ILsmMCooqx9NTWNLNzZ9Q1dKOrRkT0YW9bU93L9nV9lNnsEEZCQOTs
b5ib7npL/eQp07tuY7JeWRHlqq2hed3G86H1/YCUqiVilBkdI/dhxkSmyB8w
7ikOwfbRJ7OltybJQlfnRVSNBBHHvLh9RvXUpTvuJDY01Zp14aymR3z1QGPq
xXPanskN8xOIeX52Ghq67zM6nlzTtfPKmS9FMt1nY6Ktq2/+IdL7nsO7usZ6
j4cmuuYuPWQOf6rr7gWNM6c0XoQWz6eXClmp7la6hneK28fFFe+fvA3NT497
HdUknfNLD9ekXtfXeuSZPi3FhZrUmnHj7vOIYM+wtHrsNqQ1P8hUy8AjraK3
JvOWoba9T44URrpyA3SxYs4Zl/TSsE3YfblXtDUMzR9FeT968jaSNK0waty0
SClBT26YWnuMc3D1hEWcLH87Pc1zjz2TO7I8jbRN46o6OzI/XNQySqgdmt+I
Taw311ZXU9PxTG2Wtx/KH3V8kiJ/XB2VCiKdrmMd5vLd1wwJTGrLtNC+4JZY
3VefZqGj55pQL5LfgUCi0iB7PSOr4tbBIv+HegaWpT0UiF5nrqWObdgUZ/f0
bXhrS4W1gba9f/rQx7bn13TN7ENHBzvf2ZgaWfvSOcKyiBfXbVzDAr2isxtl
OYrDnt04o3ra+N57MlfakRuoe07rQ2QB67OfApc0m8tVWkJ6aaGrdVZTbvc9
y2F40vai6hWX/CUqm+/jEC27ge3NDzx15mwHff5WTuT/7LFvVLzHE7uPVHwh
UOmV+BbvHiIwhKyrqVEIwnsniq4nNQpDsGI6FIFhZK2xGYpC8KI02EbwQuVk
2g0veMxkea5YmSX1hCBIcYF8U6X7Mr9wrT1F8TxXTSHPBZbtFFbi0sSyHZhR
WgqKLGmKpVXEEkBrPXOGIshahxZZfJzkhwnLfI2cf/2gsr6luGRxWy3twOtn
tleu6zSRtf/icrFO9VnFKgMavKdvulJ2I5UpmT38FVbiA/XiUG/uookPFJJK
5xuFR24/dTv01/Ua0fcBk+ic7KyNrgUAAPhVgJJ6Glr6ycoGEyiFSl/lQgLx
GKSVB/EoJOhrqeijrCzyf8UAiQYAAIBNTn9f30ZXAQAAAADKwSQafBMPAAAA
Ni3gy6UAAACwmcEkOj/vE7+LBQAAAIDvBZBoAAAA2OT0dHevnQgAAAAAGwEm
0cAvDQAAAJuW7zN7KOHSRqe4c3/BbPaKXypHYck4kbLyC3iokEFictd40VjA
mJKu8YocMs3mrrwWGunuoogR8uiY8NNDDgEAAMBXBJPo4qLCb1oEPFn80ClY
/tViGrHXz/aiumu70heGh6pTHlvfszBQO3LyUtngUhVFheQEP0+Pt24X1U85
RdavpJ7c0aqLJ8+Qeco+by6dcLp8/vxZTS1N/Yp+JfH+ID41xc/VJySxc4SK
v5Irmnr64DkJfKMLAABsHN9aojGEBQ633i+84Vjua3FGuUrDaZlF8uXeNzVM
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
yw833mTMrxyuiVLZ9sMVj6LPzl5I7qobwPtaouMlc/d1xhtdjLjhnKopfZUD
hLBeqW1N7CFjP8eqfG5EjsKc8YaWIXnrjtXG/7TzHuPrn65wd0GwicnbT93s
of6lMhoCi6ne/uGFxSWlJSUZb80dgpa2DCrsuWNqiTccKnh23WJwqRCg1aGP
rkSPYvvYlvrm1M0w/rLzREwfTnO9dtLISf6nlNZlcvxUH10Ec/pvq2n0sJaF
c0Lhwc6G6yf3+3XNjuAg0XRbddiRgyZDymUIZRE/+jy4qGEZKVuPduSFpFW2
dzaV2Roc13QoxLo3Kuq5clCdyvvMk7iivGztRDCJzcHbaU6lsSWSIbKwwMtS
2yGTOkkcHZsQyM40FBLSKeTxcRJfslAfFJZM06ksoZg6QRyfxOMIirjMiSkq
go0s2PSJSaoURUU8NpnKFPGYYyMjDK5IzJ8eHx2hyUKxMEfCMJWm0yZHR8fZ
Qrxw7G6FSaNOkEgMDp5AxJumM1jTZNIUS6hQqJhBpVDJkzQmD8WHFtP5L/RN
HSOoNMbCXZYoV+WcHZNJHhkZY/LE+DWQN01h8liUiUk6H2taNlYMhTxJpkth
VMxnkcZJXKFUwKaTSBMcoRSFxNSpKbFUPE0j06cFFNLY+CQDWiw4WGrK1CS2
j5Dsbkgq5FJptKkpMovNEYjxJuKzGTQqmUyhczg8KYKP8JkMJpNG4yn0B1gi
pFFoEhTbnEch0wQCNnF0hM5ZFKcGu7tl0Bl0KhlrtCWaJ+Riu0GdojDxuqEI
i07Hi6Sxsb8gsQBbJWJTiZP0oaqo7dvMeyeZ2JGERVwqFWu8KbZAKsuBRaUy
+Azy2Ng4R7S4p6FSPHfyFJnOwRpWKuaNxljoOSZTaEvHNcVeVnMqDfW2EuQL
O7Pe7dV6y1eoMdaqDCp5nDjOFUnlfzPoNPLUFI05zeXjJxQk5tHm2pCPtSEK
sRl0FotBXzVwz9rAzNeae0/eCcN+ciZLPV+bbttvOCKPmokK4l5aup3+8aa/
/GRBsRalULBKUaV4Z0KEHCaZJWRMjVOwHohIsPpPkCa54oUGQCUc9+vqjikj
00I4xcnE/HUBlTQ2SpwUyrqLBOvAdDoF60vYXTssYWEni0h+stAXHUpJi9Yp
0ykeCztHaNN8+TIOi4G1zwSZiVcE5b49h6u0mM8uczc09Wul0NnzOYzXJ/20
8+4wBTuPiEwefjpLsN5IoXFok5NYZ8DOKSoZP45UFlZvEd7Jp7giiMegkCbw
HzOwmEKmCiUSJnWKy+dSSHj15KcSe6w5u5Pxqe19R/tSFX5jMOctQSVRt85l
dXGXJEO59bqHzrZSBbCY9vim1dTSq4zI5fze0HF8qbC/ZMufdw9QlARgGst8
cWpOpbEut0v9FRffAs56pHovdVRZ7aCXhirzKo0j7TqrspJK45QHWM+pNNTb
3CZf2FPg/Yu6Gx7ZFeq32HdiivM5g01Moj/JL72g0jIwld5/3io5r8zukppN
AP6mefBb345xamu8taZVuGCufwgYY66Xjujff5GTl3JZVbWQiYgYFdonjDhY
72c2XDhpOCSRdBW5HzmiFZpcUJ9od0bPIigys7Uk6KTeU2zkgKn0zoNa7z39
n5ir71OzJQnRzoKQikHKSHWI+tnrDDEt6L72Ka1rvl5Ot/xq5/tkittDv+J+
GoV4T/98WBUJEbFznHRNHMPpdCaioNJH95x85e7rfk97n8p1ApEUaa+rYnDv
vbPtlec5Y0WvXfyzaZTxSCt1h4gq3nD13h+3NoxwmR05+3ce66OIUWg60Pou
gzL6xFhV5+bLkopifVWVBMJC7DApb9LJK2uCMhZw47R9+ggKUd7evTlBo4fb
Gmka3s9qoUnH8x899aOR+s1UD1g+8ellClNtDCp6aX3V2cFDc2KIQE2F/icP
6/dB8Dgh5czBEy/9YkqiH580esFbOIfR/jgbl/RWWk+e3tkbbPHCCiYh6enb
ZDp16o6Wqk/+ILM7xtQ5i0HteahznsQV1cc6HzhwwiMwxOS6W31x+J+3Xv1I
npawhx4bXe4eJfdXRGpqWlBFkorAhweO6ASnlb67rWXhnLTQIVBp6RuLgKwW
6njvffUjERWDkJg/Gn5Z+0kKjcFaWaUVemCYnWXciKIWJfr7txKp/Vn2Zy08
+CjSGXIjpqKruyBo774T3lEVMzDdy8q0n0SJd7Y4rWOZ0kChVvq7RtaxaCTn
oKovHCfCYh5PiJ+YmErHd3TeU9tu4duM5clujXMMqfqg/me5SvP7Ux56ZFBp
5IIPV8zdC7m0Ye97mqqmDu8dLB945MTct2obmiyNdD6m7zY9d5ajUp6z8fGn
qWNsIYKp9PEL1ulFVXe1VZ7HtiJirqW2SdkwvTnm4ZPUQQFj9JXsZMnNSzFV
VS1SvNZJWs4fOOrmFVkS56SqbYutQah5V20DGfRhxzP76kemF1RawCl11bvk
005jchRV+g8/nnT1DXpioX3w9FUql5niZnngkJ5/8OtbztEd2d428R1U6oT/
Q8MHMb18Up76MYNBIcQdSjypfouKh3sWub6PpFO77xz5yxVr15ysKPWdBxqJ
bLzdJKIlHlsJixjg4+OrYCFJSwfJuEpPL2wG8cjahi40JTIG18U+37L94JWb
Tk2yO53FiF11t9vkc/B0E/W7/ri1a4y9PAtFlc7zsDh4PVZ+B93mbXjIOlNZ
X/gSlV6gNtrxevQwvpOYSu//TJX+1NnD5SqtZZeBqUlb5ONzN/xRbpXJDaeM
9PSUeB9DXauuhcs4kmmnbl+MXW3RlMfn7MrEM5JWPRV9Wcv2G6rqDcK4U+XE
mXv4VRAePXvUsFeCiRNX+9C5OhaKqfRuvXfYKErKHjm3/c8pJSX3z2mmpqVn
pEVaGhhnTcJ9UXe1rLwXVVRMOKdpSZN18L44uxNGT/E7I/eLV18t9nqJco+r
PcAHcqj4jsZe14ROarHDybsJEH6fRTM7uCOrE7+yo9yGkwcuELi86Mu73ub1
oMJB0+1b4tqmBKMVbtHdWCFB93WsI3uwlD43zjrE9sxnP5Rma/0hFGuQsDf3
L9yPZn9MUTlpgo2eODU+Z02dsQRtfldNHGOwfc53UH8SWY3dW/he2GP7IYXK
4gwoihw8bHxSB4/dDhMNVC/0YH0HpescN+he6EToVHN228T0RGe6xi6VCc6C
F+elmVkeCd8hYltl1zibP9FU2DbJJHXcPbO3nMyDxvJOHNbhy4ZEE42pP22/
TYNnmhOdj9+Kl+Utjrp59E7yKK3M+7iuLfY3p+zdqUvPFtqPMXj8F60OmRLw
Gl4d0X2O/0i9pv9SiWdguUqj/MF3Lh8U4wOj/AZzMxusxTJSg031bjTTp2x2
/6mgm4wK+k137+unCqDh/KMHz02LEG5zxCmdB1jBw+lOGpfs2sY5Y8TVwlx+
EphKJ3SP14bbbz9kiJUZ4+nVx+N4yFUaZr48vSWLgAdNFjMHj+84UDIs6oq/
e9KhBMa9c+U7ztqlpqcnBn/Q1bk0Ql8Y172zOOVagg+AMZU2cy3EftR7XzOy
i0EhUVZqAYXNKgy7f9q+AJPejMfqDiUsrDGSH2nalymMDLGx9AljMt6CPFMV
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
cpyIrWJxhcMfeybpvE/dC8BXBJNoBp2+djpRqaV9wNgUheB1YdsFt0kKuSHV
1SnrY8orcx3HnG/4UXhYWhv3fK/WO3mUKojHXU9ZEupHlS0/lfQrjzO+FiiX
963kXTrZ/OZNyLf+QjMM8ZCvdEhElGrNXSpk3qcqw68TVJT7xn2SD5HqEs/e
jyZOUqKfmxw570QkU/I87z+OG1g7BwUQSBBzdYdzQc+n1gKRClMeqd1JWxpl
XsIdv6i61z+i8pNyg4iFJpccpfL+gCJc2tDpXT955/ZjSxCpyM9a+4zZBw4e
IA/ljzTs+MMf/PIJEghBIUHYbQ2NG28EYhgRj9+6/fQTYkUAvjbrkmgMScvA
KB4xlhRmuNXIC1MxWMjO72QUeFl+W5WemenO8ZSr9PRA+R1zV+E6CkM44+pb
//J5Ks3oTLEOVBLc/NcCND344pYZU/C1ZLpD/69HpaGpuwcPXnHNpA10E2TD
gkz3q0d134hQTMIGi6o+9Ru/cN79fZ+h0hjlr3SWqzTWr4cq4xt7aJ+UlaQt
Rt3IdX5gICAm7dlt0jf7oQjpY+299qnj8lWUjpzf/3ZvF1UWwQ0S2mjsc4yo
l60RWRhfp4P4PBtKZHjY+hPPq7QcTKXVbnq+f3xb44xuUgse23qwqSjY+4ON
xaXAgu75+2QhczTA/qZrVp6lrkZQJak5Pz7gg+sti9s53Uz0/2fvPPya1vrH
/7f8vs+914kLlaUg2wGyFHDjREUUZagsZamAbET2XrL33ntD2buU0kIL3btN
0l/aMqqiolevPM8971devEp7TnKSnLxz8klyDsIrSYrKLcjzefRikkLJC7I7
bZ8nYBKSfB8b3E1Ea9OapUWJLhcOKpkGvy+irVWYhjj3s+b3xyn8PP+Hplee
DC3yObjm527BdLrE0uFR8fcvmZ687LPEgYVscll6XLCPy11b93Eqf66r8OaV
BwUlSffMTz4OLl5fHZiJf3VJTcPSKa20bbwi5Iyued3kQkOih57OlabpFRax
76bZw3kau70wISAs8u0LB7+YErZcMADhkfOTY6LfBVy7cH+AwBRxyHkRb95H
RLx46hRXPgghyGTzB+vbD/kwMlKbdPOGbUN22HWjky9i69CsCy1p0fEfMiID
M6fkri6F1Mxw34zsDDvrJ504NhOPcb1hHBYRfdnk/CSTWpeXGuL74sqFe/14
xnqO1kRXhb1H/QMj5qj8oZr0t6GRQd7PPYIymJAY4S+mR4YX5Wc7vkxmwsLe
/PeZeYXhHq+a0athiFWTkxL82v3q5QdDRBZ6MdxTGPPufXTUOw9txX+NpcUI
Y7KxeZiw/v+GpVnzvtYmF12zluYwLtfO3n5dwORDLWl+bukYEW8lOzrkHbqX
7R6k1w7LyUxiaYeYVN8nN8+cNO8msNAdMNpYGB0ecP/GnfTmWXRxdUmBITGp
AY63CvqJaAYatiswMDwuKvLpRU2JpRFB04fInKLigOdefTQEgYTjRPonJRbS
idiPWaR+1Oz92NIwJtBI80ECnclkMZnMpbqTiqda1sb5bE95slPXh8CQ/ERd
Gtc9pFg4KhvtDlj6N4Mq+rvuHn5u6bNPMtCrotaox2YPE8TQwpNXmWwudwVX
rrL//OBa304ILIi3Pv44Hyfg82bas69ETXO43LZMr4PHn1DYrTet3NDzN6s9
b4oGT7WE7r2ciEphrDZcwSCItWFp8WRpqLqhh3xbGuFiLmkazqH+YTSZnryO
2humVn4oGZC2pfcU969AXNzVv/6veojclPQ6cYbF5XITnpmdcSkTCbGW2qa9
LCEsnDPRvTwhNwAsMdP6gr9kPFyYRTQ7cqhkkC4kjx/fpdg5z+fjex8kzNHa
wi3vB0hWDBG+vqblnLs28CIiLHtyorAXPcbh/libzK75+ljHK2EYtLwQtdtE
8Xj3Ckc4V6Z/4jxqadFC6Snty0yhSEgoOGNgK0DYr41O5PZSIDqpcJy9Xhho
oeLaNWd0tUpdjV3iWyDW4kWV/Ql1swI+F//hfmLVMJfLbnDRMPMs3cgyVa6q
fGaFA7MHswxN7SWjkSOipMenrsfPCDrfXbGPRovXXVxOEUzaaBsssUW8iY4W
gmgh/VZ6wxg6t6qn6uZvaoltaTpWUaidYEa3yb+nLf0Z65ZGmagL2Wf2Dq2H
XVluao+K0SpTX5iKF0H1r8zdEprFkqGHcebHdSuI6xUUKrNTefqhRwRB3QHn
7ydP0Ps+XHXJQ4+OsWwvldPWqGLvmF3voSO00XCTp/mwcOGZoS5WMgwlXO5+
VmJpAcba+Aa66TmYmj7SppZElpui3ZydXTcml5jqOfkU9LZYkzsRq5mhRcej
/zG8ePPxw0fodMtQVcncfe1YFgZfUdSytJH9ZHNRd/cxO8JqC0TwyOoe7t9y
a2I78r3vHn5uaVnEYzDN1fBWmGgq4oJdRF9vr3QaWh8sG60faba6b3slLYHW
RPurYW2yNAOYcQHES3G/dlzPMq5iRISI5Sz97puWRmtprtdl67RZQm24xVkj
n7qlCj/vQSq0EfGASI/2/7/i3vnIB+ci22Sl6h2eWoKh+Yt65qMSOTPMNc/1
b2Zp9Kqv5dW5B8GlpPEGe6vjXlndfVVp03yk9s2VC08TZIlLAu+a2K72goJw
8Zf27u6cWxcaEnFPxz5fdvOIF2Jx6HUrGSZWG0gtDS9VGOpZSZKyawz0bwvE
CL4p+oyGpp1XHE3w0RqSp7qzi6uibE46vK9DeMtXVA/l91HRhcVePBCYUiFb
o6GZjYfe1y3dneSse+G1bLTzrmy3AybhCI/46uZZPbM7pQNEBBG2xj9TPX7a
N6mGD3Oizu0Oz6handssuSLMxvxttyTrvyri8RnylhasjOntUmzF0kvDbE7s
1Zogzacn5iAQy+WUckD+kDQ54mqp4VEwv5Z7I+IxEX/jSvhge6KzsUNir6zm
D0+g3/OWJ4rziptKPfUepjOGi1SPWcpGnF+NeCCCsmDbo+pnQ7PbBT94LwP5
8OpRQNmM7B/2TNOhv/Z2YqVXXjA39OJx64BC2U8wpc1QUb1ddvtHLCpzOGbm
XbW+zDxfe//yqf+iu97/Y6CKptG+4zb01y0N4eK0z72kSKUnpM0SV9YvvjYs
3ZHmqHY/WyZbDmmcwyFRKMz+ksjThw986CRILH0pQWLpmrBPLV2GWvrlJ3Fp
YnfOAeVbLj5pvTXRqqcdnid0wvJx6VVL42NtTzvk46VZoaWJMaHwa5a2XLU0
2jJvMDG+mxHlx1ooNbvmFBseh345EGere9VTVmOLA+9d9W2SJUZ4hBsH/kpq
lB4RCLRI5aQ6mxp71EvaIAg/5JJK+hT9y5YW4fF0ymyn63XDU64V68VhjRfe
uO0mkralP7Y0P8VK0Tm5WZYMN7XRfFq39GShr+pJaz4kKSlq6RP2ZTCFuMKk
V8V5qh3SbZ5bWVhg4jryrPSPO6f1JFxUeJHZIVuPuYm58tB72vdSJGb4d1u6
wP/muqXRa6XqZ1pOvp7vUxpyH6j5eDzO6VpG93rIRQ278ApZCteLp6I6mWu5
P7V0d4q7zmVfvjT6wFwhoma8fe52Hw2ijYWflFpaUVEHR5PsfNTStqilYfrS
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
zrXo3LpynFUcajbOXRuWFk8W+Opd9ERbku9tjczt4xGIF5TSKBLO26odap+T
2Iy3NKq850D91Nrdaklb2kh69ufZn9Gr4iAd/uZ3AwplP4beM3gU0sSveGLm
JvmG0vjylH02LIaKHLRfVM2JJapcvKl00NY3i8YXfOnGMoxef34Mmcbe+Bnh
N8Y7vy6eks+d+9IqePDT2Bok+rSNnuV2LfSzZLKZMpYJNRkh5qZW1cNLn/88
VhLpXzgmv0SEM+H64Mkkfds0CLbA9757+LmlZXHpwTRXw1thopFAU/v0tfVH
N/b6Sfdrlmb25yipX0YtDeGrTqqbsoSCW6eNa9baVZ/vMrHE0qlylj6FWpo/
XqF4+PQnlpbFpXtibC3s41lT0Ye1n8rGlBU0+Whfe72JpQt8lS7HSK/6xUL2
Ypy3rY7WmeiK8c9rpYi1FUsL+wrepeTXzjQmH9O7K7O0ttEdPcUT1aNkiTBf
nXYvGlrbWgIRjOB7Sx+YaZpcfzElF7xZszQnyFTBq14aCYQpz1V2F9SNr2bF
5Rsa2a5vJhF1TnP/nsIBmvQ/voW6TtWiMAu1dL3E0r1vzWzTJJYeyXpy1qcN
llhaN2xcYukVTKnCgStE3qqloelEE6vXa3sTFgoFMkvDtGHDvUdGF2V3zxE+
/6Oz2GCR30Fjv9TA4EE6zKWOqe/XbZdtdH7DyRM3NrN0j+5+lSnyb3jm4SvI
LI2wpqzV9j6Oio7JbhEja5bmYS/v+DO7Dy+WuGvlvNqh7G7KUObjs6/a0X02
2568xzRi9b4LgiDwhg3kLS2LS/dE3b/gmIhA/Oywtzm1fWOt/npOJTJLa7vU
oTm7c12UnlRtammENX5HX29kGZOUGXPjrCVuNLVhdFHMHbfcva9yalmSgD6v
t1+hYmjtYl8a8ZDGpfkOBroVHKjYSf+q1wfZj5mul+97l25maR2vutXgMxvX
+dLaTNvgds/K5ooTrGCrKyqr5KaGPqzc79BYbdztkKaNzDDJ6cJ5/DeDzTDJ
4YLlwubJoKGmAn8vj7fv0iaXmB//hNAn6nPKOz/JBxEbHtl6rPB/b3Dt+0AV
3d3VufX02GjLfZZB64dlRcgDU1dJWxqT5mJwM1TMbdE6YlA+ushmM0aqU7ux
66FpUcQ1tahpFl8gmmqK2aX3BrX0bGPyqqX7cmRtaWheZmnY66rOnTdFdBZn
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
pTkloa4eJ4xmR5e2Jt3Yuu1x24hLc2KPHQhIAlcl9kWHmEersQVRxN7ev2ie
q9+LLAQd49LtmYFOa4OAE3QUxLzPbqRl3XTf/0Av7Fs0fWnH4KiRlb45teN5
uxbfuE5ndoyiGsWpb4NrCYxnh9ZdfFPt6NL9Hw56XopGhMR5//NDLc12uTRB
XBo11sc9Sypsrkq9O23TS42DS0vb08e6tOW85/okkmroGPW2MsJ0lH0r1pYO
iG88zgPXi8ScG+tuVWiGC8FkQUddWty8zmnJhC6NCvM3eBwfF5iqSQmLLWql
J59ZdyZqrEtXLJp7kDbepYfi0hpO9IKl5wpSH7vtfyMfOReW0U57MCiltzX4
4Xzq0mpu+6XtbovdNqU0Dah7C+fO9xQ4/EnZXHr+ar496zUR5zY/btWMnBEU
G3Hpmrfnd1yOHzlZyEhFQNU31y7yj6jCVXvU5eXb/OwuvbFZM+bYeQmnd113
eFu0iXP4h7+GVpHxXFQEeHlefOfg0tpXXl/k0n0hm3YGTOTSup4d0+Zn4y5t
Nacf+enQy4pPXRqsIpWGu86Y6Xn4FkU+4X2F33BpRtzpnz/j0prel+tPR6mH
TpkWMY9uv+DOpsWXyvBS1HJjFiw4xjIBl579smN8n3YilzZGHV7q9wUu3R9+
wPMzLq0WNLquucRSD+XNgExOqPpX7h7iLg1opTP/Lbr+3+wurZbz/yOF2G2/
U6JVCv+a3N0CMm6S/CWJQLCXZnlP308lDPxgqqjM+WW2nrHSgIiMnwnaI02j
Lm1FiwK9/mfGLqbW8vHCanf/MrupYG1PvHyi2i2CWvd5br/p0qWvznldyQIZ
T72zb9+9vNEVqKm9X2LRSbJf+Tstv8RTUU+ucyeCrZkIe7/OpdF3Z7yCW7Qj
Lq2uvOu64TwPD7upBlo6Rh+G0dAbNUasvyFt+1KXIoHG0aWrI323PGyUtoZv
9r4Odm6sfQBc2qRkrZ/90+sCkv3XWDeJ1ZB0c67HZYk90GGQszv5o6067e6B
Y09KQX7CT24Y79LhNpe2yGgrf/yfj9V0q92l3eaPcWluc8TcLS/Afyy58tlv
uTR213vl2Ve1uGCROuX2k5kaeGDt8Yd5ZAn4TK8Lne5yjKmyB8iNok7GoKNL
r8VdutRWmI4ujek6ty9alkSU4WHB7jayuPqx16lQsHlDyaV19ibj6NILP+/S
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
qD//lpFDIBAIZDL5/wMnGF4=
    "], {{0, 237.}, {361.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{361.5, 237.},
  PlotRange->{{0, 361.5}, {
    0, 237.}}]], \
"Input",ExpressionUUID->"823ed475-ef68-4c6f-9496-a513f57d5147"]], "Text",
 CellChangeTimes->{{3.8874008194120884`*^9, 
  3.8874008432564616`*^9}},ExpressionUUID->"4c7fcc96-32f0-4eab-83d6-\
e3b8e473c8cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Complementary Events", "Subsubsection",
 CellChangeTimes->{{3.887401725891118*^9, 
  3.8874017288563433`*^9}},ExpressionUUID->"6e19ab5f-33d2-4135-a307-\
b1dfed1fd66e"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8FMfZ/2PjnrjGjuP0xMk/iVNd415iMAbiGDDGptpU00GiiQ6iNyGB
hChC0ulO/dTv1Pv13quu995vd6/s6r97AiyKXztxXpc3+/1gsE57s88888z8
npmd3f3l4vUzl9/6ne98Z+Nd6F8zF219Izt70bb3HkB/eH/dxpWfrFu2dMq6
Tcs+WZb9/OIJ6IcD6H9E9Hjs/0dxcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBw
cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwvloQBAYSSVcMHIlATjAdhxH46zbp
5sDpNBgdtvjIek+TPcKJfkPNxMHBwcHB+UaAIOlU0hKMsh3+Jp3zrNyaK7EV
ajxka4gZAM0Q/E3TUSSVgPy27F7pqy2iScOm/dbk123RvwcciMXl3gjLB7rh
0W9pHb4i4HQUBASuECMAORMw8nWbg4ODg/OtAkklEx6f+xhd8lwd8+5y2nfK
aLeUYX/fWcV/ZsB01AL44dHU123leJAkBLgNMxrYD5bRH6NqlukTX7dF/xYw
1KsY+YgifrrH3JRAArh6fTYwFBUb9ZNqOU8MOWrcEJ4U4eDg4HxxkBSod9jX
Uzi/qmLcRaDdWkafUM64t4J+Wznt1nL6XSTub6iarfakJYl8c4To/4bQI6Cv
iCn9axX/caqxLoH4vzn+/caBRAO+Nr7kIQLj+z22Chcu9Dg4ODhfHNjt85I4
kl8QaXeU0x9okL7NsOTrvI0mzwWRenob9xEC/a4qwW+GXJ3hZOQaJUKSqVQA
gEyxRCCFpG4QKQRB4MyfsZ/AZMoHJBwQfPXINAzHwIQdSEXT1+wEQL+R+eJo
5kA4nkh4gIQLgtPXnPvzhB6BIwBkiyWcUBq63rbLho2ZBiNwGMA2JITTVzMZ
JJFI+sCkJwF/1joGAsNAImGLgDYwHYOvT4GuqTsCg8mkNw6ZgWv3PCBI0GHO
6uY/VMH7BcVQDcEeGEFu9HAcNIQBbMtEAgbg684yOt7DQCLpiWMeTmZcN2ZD
+lNPjjPumqa5OailIARZohDqwPj1571S8ug1JV9tuGsX1lFXpYNxyBJLoP5M
fFacZIqCYTgOQtZY0puAQWT8MSmt1Xaom31bOf3+bluZE4SuPQuMNUfSHgEM
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
Ev+RSLujSvCrAddALBX9Hx9y7/T7yTL9kj7M7c+1if5GkbzZq1kmdDUG04H0
+G/CCr1xJ03+Wrv0tS7lZK5vOJwExpeUglR2VxFPM6tL8jJFhMbJ81TZ1EH9
ZmWAP/ZUYSRp8XlPD0mndEpfH7bkm2P+jNCnwp4zXM27HdKpg7rNpoQz8zal
WDTC1Bo/7ha/minqpT7dOmUIbW+r231eoJnbLX2Jgm0XfKYNC5V3ho27NEF5
YhTA1+1xcHBwrgOBYxBkCcdlIdBz+YHkn3loKpX0xUBtJOFPj974Upt/7/Tj
dt3zH+pyDERTwcy7WswA9rT2f+EkCByOA8YIaAJS8ZutU39ZQxE4DiWMwbg+
lgpf+1Kef7UgKJl0RwBlCHQlYGjcO28ACLJGAF004btyMzh2jzkI6UOACYKB
z3slO5qTpGEYSqdiAfuWHsHPCIxHmuRz9QnbF3sLIYJ+FwT1IRD1fDj9ZVoX
e6lNIBrXRSAbmAa/VElIOpW0R+IjEcgBpccFJ5JKpwIxUOmPKsPor65/+w8O
Dg4OznhgBEliAoG9kO5/HpUzUoJgN6J/3pFfmJsIfRRBUjBq0r98QzSc+VYS
/hIq/D+XjzoqDaPV/zzJ/RwQrII3cXimIS679+qx6IeJNJL8fIcjTn+wXWXc
LtAv6eL/tprx3WrRCzRHH4jEv7C1qGGJ/4wDsZQDK+rLx0nGV2hR1/lqLBSh
NJopIZk1GhwcHBycbyY3EfqbXnrG+TwQnc2RNyj4NZn7o0rGA7XCl4ctZ2xg
ABnFr1nj4ODg4Hx9YM/eoY9YchnqD2n6JZKAAkxDn/8tnBtBnD4/WayZ1auc
OahZKbCX2WKftQcPBwcHBwfnKwQOAZAxFFeEAHU0Ff9fW3j/P086lfJH40J3
hB9MuBJwEt+WhoODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OD
g4PztYBc4fqfkRsPGvfTV2zl/03+7zjy21eTb53B3ySuHx++Lhu+vcV/Gb4J
3h/H127M127Av0GmCb8Ss9HThJxaiYg2NDw4NDxM42ndZp16RMQYHhr7hCs3
efwQnALDbgWdyxgeHuIIZRqjw6hiULsZGp0jij+I/t8FHoUBv0HEHWSwhDo3
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
cnXtNT2KBKVVh8/mncqraO/raaXmL5ozde664y3dapOdU5oz+fU1+Z2dmlgq
qHezy06Wi2RK9kDt+VM7jxQ39w0OUMq3L1g695Nlh1qVYYehbfu6WYuWbSmq
E0kVUhpp3ZQlW4vRbhN3SEylH0+ZvutUE28kCgTMEv7xGSsPtLQKbC6DWkfr
H/LC0RuFftWahVmFzSK5ZkTcuGfOyqxD++vV8ajL2bH/QEETOsiGTCxJyeq/
L7hAkdp9fhm39vC6ae+uqdIq3FDSwZH1152qlLocjPpTR/OPFRPaegY7aoo+
mfTenO37q7jmTyMFToSUotajq1949uPDFPKQQtpLrD3wyctTj7aOeL1xvbj1
Qn729oPdFlMIjPnUnPpTucs+mneCIXVGE+N8KCEdLMwrOEVs7+tuppz66IMp
czfkUfptyXFCb417VfqOE9mb8y/VtHd31lQcz1r45tvz81k8tVFNyT+5evaL
C05TWRKlhtNauG3LvNnzjnUOC9VaaSPh4KbVC3eel0esjAvFJ04dPVND6eno
bzi2btqbCzZfLB/Q2CUd1Sufn7jwUEH1oFQyMEg+vOjZt/aQVUJHUNN9sWDZ
25P20bk6Xxw0STrKTixee3DYZfLZFQIRj6sKjLuvAVuOs0slhfNmz87JJTF1
QCxs4rRsfGPGxzv2XugSS5nC3oI1b/xjRwmdZhvX1xDAwWuhFB/aSxRrPEDM
I2Q2lBWdqOg0xz18QuG+Q0fOUjiuWCoRcvJK8rJXZ+84R+KZAwbKqflvLF57
+EidUCnnjQwdWDXtw/W7S6oZSrWYISle8MGCg6dbRKawxcAs2/XmH+bnlJW0
S1XiPmbdzlnPTt96uqmNp1YxWntOLH595sk6nsluYtAqT6xendei9LhjsaCh
v/vijiUzVhzp0EtV/U3H16yYPnflRT5TohE3Hjq0YcPCTVXCxOi4i5fYlQ7P
QMGZs9XEHm3Yo7FXLp29vJAwoHaGNIruU2ue/fOi/eSqfrl0oKb5yPK/vXmA
LHPYLIzB6jPbtp3r0of9QMzLJZTnLJ9y/dJ9Gk64ew7Ny8rauataEYiGExFB
8+Htx08SqgTuWCIes7Pr96/atPHg4Qa5L+oWn1+8eW9JSZfG7xArKlZNf2ne
ptMtvWqJgtuQt3pTAbGtrbujoXDn9nnvvvJRSY/BbRkuLt627t0VJSx/NADB
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
JfEx3UnxV7/68PfffuOXO7ih5hCGO1PvXD/65edHrtwLeRaXVdcNJ1FYa9Th
GP+P/+eP//nN5ZjaxlnkanvQxQ//5w+/PX07tXOCKzarMR2BR09/9MnXp+49
LWkdwS+1PDp5/uM/fHrkqn9k2vOKiGuf/+GTTy/dT28bW17CV96++Nnvfv/B
6WuRNYNrAMm8NjJ9DrWD155+1S+2GDK5+cYdYh+gppR0SH7are9PfHnkxJVH
T6MSc+rAfaR1+XZLqcgwFU/SkovyxwTWF6vs1otw/W2x17//40ffnLl173F0
anFbD3xtS8HAlt67deTD33xy9lJkzTyTNpF69dpXv/vdV9dupg2TZQZ6x9On
Zz799LPvzz0qKB8m9CTcTUvPKewcn57o74u9dOdZUw9WoJLTueOFdy5ENKCF
m2/LzPO5HU4lc20oPfb60W+/+fF6OhRJl2mtLp/PaVNRqKNJtz7+zD+urQfD
EWzMo0rvnvzj2ScVkzMUEhVel3Prh/Pnb9x+GBadUlzZObPEM5hde2J7XrdL
SYRVx0b5Xzr/462HjyPi89qHMGy+UqHmLIwXPI1JKq/tnZiZgY53NxTWwla3
1FIRHl4f8/j746eTp+cYYgEN2p8TeOmrCw/riXjeFgtRWx1649tjocWLfK4K
O1oaEXreL7Cgf2hydqyrtqG+s2OKLDSatZvonvgrt67evZcNXROpTdsLQ3kh
wVcvXrz2ICQyKbWwZXCBwRJtiwjDbSHffn0mpnAAT+ezNmZr08/8/vidwvpp
GpuDW+5JvPXBB34pI1Aim44e7Ey8eer4eb+7j8NiMovqhsfxmzqbijWcHHPt
+rXAopZVoUZBHky67Hf1waP8ceq21EGpTPC7+SA4vRSCWdmy/FR2xOc2WSQr
sxXRySnF5W2jMPgUrKemtG4Cw5JK5Hz6VG3Bjc8+v5BUPohjyvdfo/eYNLyF
yZzbfucuXvN7EByZkl3a1jvP3TY6wcM4h1S0Mpx1/WH9Ao9tABWxz2lwbMPb
428HXP7x8s1HodFpGaWdUDxfsM1fn67Jv33kg0t5nYssDhMJex526+ujV3IW
FnlazlxzU6zfiWvJFd1IolCrAxWX1+PQyYkd1eEBz5KfN2CkJt9ulFCzSR7M
z/I/8ccv7qUPr1GU+8rfeYxSPry+9umlD794XDhBoSz2TXQeoCf+Pn3uVStY
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
YYunPqi03kL0u8l4Q2DWvVtDm5zIvPHRwwHwAppRKt7AL8CmZueWFlrjnwXH
heSMb2jfQfQej9OgZC1jkXAEfG68u7b8wbc/Zs+jOWowbhN963QGZksLhu08
grnlpvijV8un6QKR+tXMaLRG+x7PcZfoJ/KfJIZnFC+Bi+Ok1ReFRoends8I
N3DpR87fyauZ3th1vt07PuVM5rUnYemZvQjRO4le0BW6j+hTzx4N7YPTFC7P
NnepMe37I5E9AqrsYCaOU81izncVpZW1dvUNDA31VafnPLr84ZGUPoZC/hdO
6b0Oq0WnVNt8YEKd1yIVLvc0RV/+9rd/uleCnOdaQKLntB8g+ktfPn2OYnDd
bi1zHpZ85kjYAJI0M12bnhSQVElxvLr77vN5VCYZNPe8f3bD1CxX9XoeDRar
Y9+w3kL0u8l4YNa9e5s6Xpbtd+nRgJ4vw47kJ6WE5TdTd9OBXzxQZ9BbXHsi
tF63TSVG1Zc/C3hw+9GTlJp2JFtsdpsxVT9L9PzWggdP43P6d4neaplOiHyc
AhA9DyB6p55Ycj04urgEyt5L9B4ZgdoVe+w3N4rmN9ng7QmfS8NXdNy+fDE2
b4jIlv5VRD+1m4w3D2bde2Tcxaa8i0eD2wVrk3X1makPk/rISq3yp3fVm16k
/P064WT0puQ8expYjlE7vWAepNftMBr0chVgD3t2rCxIXlHso0ux7U1FHWSJ
2uBkrUAK4875RY3KuBowhxvM0LDqxFKdw0L9WaI3jb8g+pGDRA9G5k2rjW19
KBhRuZtt69pxLHY88wsJyipE6t86Yq/H5Xa5nD9TWM0thE1WJPmfD+8YLCyf
XOutzKpIfHg9s6uiYJi+Dd6QfU30xD1EH/gm0ZMRtfHRN4NjoTKVBSzO5gW4
zGbSm61e288QveX1MDzbmLXm6G8/D6ldFvItXi9Ycsph12vNFuZ06dPIeyGP
G2jWFwnMFuJSV1bwmSdlZKsI8Oj3Ef2TF0Rv9XhMeoNdy6VN15aEXD179Er4
AJ+lcu4neqvNbtXJtiX4ruqwC+d/eBBVPrnMpou7AKLPbpwDiR6YN5NO69Ay
CYMFGfcuXboYFD+tUvxUdcVn9VhJnSGn7j8pKpnkvzzCNMDakyKiwyt6OAaf
A79L9N1vEL3Xadjm94dFJzZ0wNkqCWmzN+r4ufzXRB+xh+jp7yD65wDRXymn
iXSviD7y+tn8lYNEP1uUGRwVljWI0e0KAbAyFo1Bp1W99qA8Wvr0ZNqVj46n
d69t7+pbh0FCGgj87GHWEASPwkMLw47dzlnSCY1e58bIRFHkiesVc7tEvwES
/Z1bz+kA0VPaohLDIkMqFmXg1gArItqtVqOUqcTkP/j2bGQVfG7rhcxa9eOx
0U9SEwGPfuv9iB4xOJL/7NLNwnGFQ+vaNSAdJmDxpDqPTmeyaYUCwmBrwq0z
n3wbVDWP2rTum6d3Ez3qbUTvsTs3mgtCIuLy+ufUoN/s9YH12zz7ExgBoifs
Ej10P9EPHiR6uXSlt788PTh7RmB3m3CVJfGpoT8R/V2A6PGCgwJisSpXR6L9
02pnpoC/W5+DRB67lruP6IUviF6IwjVEHz0W30GViu27tRRdNodOrNA5ra/D
pm8QPfUl0cO32dTSsz9eiskbIPLA0LkHMFUROf4xCUXF49htgOg/OZ3RvUpU
/J2I3muVEuDItsY2plO/m5nqFi4SakP/9IeASvz2iy0ELi6grjxvcoRDxmNg
x6eYZrdt93c+x7aU3Bj1xe8uRnZDCIpdj/4Nov/iTaJHzNQlRPs9jhmVKc3u
l5rKsiUVQPPOn4ouGB3bMLtBMvZ6nUa1Wqc32PYO4hXRF4+zla88epDoN34i
+hsviB4/VhAZE5hcgNKCd6nAXWc1G3UypXHP5QqXF1RUDi1naaY25unVH49f
yhzkGsULVZXxsQDRU50A0VsJNU+SohN/MdGDwdLhlHO/O5EwsE5SgnLm1gq0
PXdv3MmpGH/l0X/ydqJ3i4jM5pAvz+QBRA9sFhnpZdb9QaKHNTYkPrvztB6u
cVk9u9vTpjfrlHL9gZKtvyJ41ejamqibp68lVuM1cqvHqV2nLqOGx2mG3U1i
Y48MFQSeO/sgvI3DU9s9Xi0P1Vzuf+yLayW9RJHM7rRKGSxEbydGI1fT4JV7
ib6tJiYmCCB6m8Vpmap+eDcutX2Q49rZre74UjK8Vrt2HZqZ1T9PoelfhJAB
KmCNZ90PfRgT18t92306t15Ioa+t4liat9+2cwrIY2WJZ7/77k5xP2WbRx6G
5D88fS4wvk+4qQZDlR4xkdUR/tXJ9M5dotcxkbOZP34R2DW3oXC4NsiTJWHf
+oEqVKeiQQqybp0+er8SytCqrRYNi0Can5nhmW0mJBi6j6vrfhG636jPDoiI
yRncS/Q+M4sNL3zw0SfXY3tG1mQ6q06zRZlsG6fLZGujBYVPHlwK76U7dmw+
QPZmYA25Dx43LRvcWlpLBRi6f0n0681PokGiX9WbdMSRMYZEqrDoRAToSKqf
XymBLDSDRF8aefRa9bzCbHCwNmjUJfQ2YE8YZYvt8ZF5hR3DBKq0N/jU+bRa
JEPkduvlYsLIGFunU5s1PGRrR3rwjeqNbc1PkROPz62n1D4Iufcsunp+c3d3
uZitVam5qSVT61azz4FrenQpLqurh7q/bpHPahDj+gK/uJ/U1Y+TmkWE9cag
b05ldeEFco9LToH1Rxw/lTiNZmt3iR4xFH7kdOLkAlOznw3sHFhtVdj1i4Wr
Wzqbx+fgIZrqIq6dzX1N9Bm3boYM6baZo43Pbt++EZXQQwOEwO1QMObhKASW
an79LJeCtDEQf/rDCxkQOkUD3u9W82DFFy/kDawQRNS1scLI41cTplWbOoeW
0Nmd9PDo1TKkyqr32hnQkrLwOzfKSAqzTTlfVhTid/ZmahVGpnG4LBLiChY7
g1nXy2Yr/Y7ej21uw8hdYOhet1H3MCmnuQ5gVzGNVraP6AcefHAz40XoXiKm
vCR6HBWLaoq7c+yiXwlmddtkd+ql68S53hGs1oaDz9OZLInNpOavzmecDy0c
ha6q983TXik1AMp4N3S/h+ib4g8Svc9p1k8nRd4MCS0YXQZnCTCjhDyeWLi9
rwqCi48i1j796Fj2MEOu9PhcQjSlOeLjIxkDNClgsGmoE+MZ1z960I/lMLCd
qVmhIUH1dPCMfi4/NyL2cdYoXac0TkQ8vJ2U1YXlunzevUVKbCI1pS7i6IXk
ZjRabJRSJtsDv7mUiVhkq3jIxrpo/1MZ6BdE7zOsr4/n3P3sa7906Oy6GnAS
dFt0ZGMnRqTfUx3Ot+OkTeQ9SQz7iehrC0Ojw1J7FzUyEzbz6Xm/qJIxhNgN
hu4dpK5nwXkVg2MsnnyjJfLT71I6VnBS0HDb++67ofvQI2ez27A8mcetYy/M
pp458oroOUsNqW8jercCPT/SW1k3v+3wvYiPeNWrtIGks787nQrl0sGYgtth
Vm0Rlhhig/ZgIp9bQZmbKYlLg4mF+l0jxi1VrHckfP1xQM7U9LrxZej+89OA
qnpB9FsTqRf3EP100mmQ6GkM0khR9q3TR+5VjK5rQE3FJpLmRsdIpJ7Q7/1v
RCQ2LTCMgKlqlmN6YIs0osC+dxCuzXl8zdOPT+SMsBRKj0O42N0SfuFExovQ
PUj0mQDR9+v5KjGxPTnp5pWLEe1LcpvJ5dSzllbmYCMkk+t1SFBt1hLGxtgS
idaiY6yM1aVff1iOU7Pnaqpjn9151oG1ehwO0Wz+/bCQuJgupmM3dL+P6KcS
IoOS4+vmXxA94W1Ev+OSide6Mo8D22oSRte5ARaRMUm5Zx7njEDXFDbFGmso
6eTHYU1EwRthpR03oPxbn3z1XXoHQSB1O6VrEz1hx8+mze2G7kGiz7kAEj2F
MjtS8OT22buP6lZ4OqfToREQl+ahs0Tjzj+0dNffEz6Xioztzo67cf7stUeh
z5IzCmtbR5bwm/oXNAoQFhFSm/UkuWHdogTTSF0mERHfFn/31Cm/O0GhMak5
pY1tI2iawizjjHck3r576f6TRhJfpWSO/v/t3XdfW1fCL/pXc8+9Z54zT5lM
2mQyk8Qlce+94d4wGAw2mGZMM5iO6SB6LwKECpJAgIQEkkC9o96Feu++WziO
wcaxnXJmxrO+n/VHYkDaWtrSb6+y18rNOH38wLm8ZpbG7l0ZSD93+8LNO2Vj
GKrS4l9fIS/isskXZurvXziaVDG6xDFDF8ThSNBuFCAa7hw88v3R4+l9ZKXT
G9xYs1AbWEftKcy/eftWTh/F/XyLxZuiHgMdDn909XghiaZ2euxsynBt+tWc
HpHb5IPOJbtpBQ5/eOh//nQuq4e0tCrh4ZrLz3/937szG9FLzJWx0dIbhz7Z
cbl6dk6ypuETcPWpF/fuPn722s3Eh4/LO/qnmXKLSUOrzT299+TZh/lwnm5N
wetPvbXv8Kn4ynbmmven+5fDTquMiC6Kizt07NTZq7fvZeeVdw4SZRqHz66m
EnvLHyfdz2nFYGZnMIOtXbDuTpzI6lsTjz1KO3ny6KUnrStKs5E1knXszLFL
lwrgSyLpzNOkuu4xxAJtcWq4K+9hKU4lUSgkyMrKm0c++y6phiCWmJZm4J3P
Ctoml9g8+nDTk+rWvjmWWmqZzb+08+jNtPJmLJ1IoWKfJFYO4PBU+jy8o/1p
cfm82fyqZzh2a5JTjBmueJSb9aS8D0tZnEXAqlq6kCia3GKTysnPHu7/+/G4
nLxBtszk3dAcDLiNnJms708ePnfpblFNXUVr8fUdnx66UzKMJVNW4BU5hz79
4nQpDM+TKoSMiercQ5/85fTTFixf4/Bv+O4L6Sm93WnH/no4o7xzikhfmGzO
und425eXW1AstVyIhz+9eWH77kP581SxcGGgpPD68f37z15NTMt8XFbXPTXL
1m68nykasFolhOG8mw+yq+r6UPhpJLqvobhyhCg0WbxG+UJ37cUf9l7IyMir
binPyEu+vHN/Wh1RoXB4VHOw1tQT3x7PrumdJlNx4825D84e2nv04o07KZlF
jR0oOkfvCPr0QkRFaUb249K2QewsGT/UWlbTO7XClGu1yxM9t7/+2957hb1k
jlwinGnN2/3/bT9fXDfJFK9SqUPZZ//PH05lDo1Q+Kz5fljqiR92Hr1w9W5q
ZlF54+AYUWT0+xY7nra3tvXMUJnUmcHshKpR6pJqQxMs5DCLJ1+dpUKVdKG7
68HZv352MR/DZysEC93QKbTri/O1GJ7ppwUFo9D36+oELON2/K207KYxLB6H
Hh/D0yQS06a5RRHjMncoc+8n+xKLWnpnqAuorv77h//wn+cfD9OWZWIW8lnx
uW/+Y1dO2+zKTE9hydX92w4n5VW3ddWnJZ47e/R0ZtU42UktSz999vKtXOi/
l1WeV71uQaNdMlh44JsTZ+Lv5jc0VJZU3vj268OpeY29zcUp947u+PL8szGq
Qu8KhEL2NSFuJOvkif1Hz8TdTk7PL6nu7MXy5Da//9VkPL9NMtKQePTs0ZvJ
bUyt3cTrT0s6cvzY9bIOltptZeMasvOzCwsbRnHzs7MjdbV1/YgFsda1ZpFN
Vh78y7mbufntBIrQ6Hn5aQ17zHrq8HD6/s++uJjZPru4uiqY7aw6/+Wnhx83
YlhiMWm+4/65Tz89loPGcK2uF6dZJBQyMgkt6Rn30pMrCVLoqi4SOy4TZwJe
HPfN//qfIw/7R2h6i9toECHqLh7PaqUsyl67tT5i503PPb1yNKGksmMciZvG
T3R0liTHXcxtnRavmu0uLYXS9+D4f35+IatnkCpVcPGEp+f//l9HUprxs2Ix
bwZWeuqLPx/Oa8Zy+MxpfMNP31Tpj8vb+/BMmdksw1YW3jx98vCpC7dSM3KL
K1vGZ1hq/aabKqE3nc4eyNj76f7EJ61daMxA/aMHh/72ybkGOE0uExGQ1Qlx
327b+2iWKDEpVyZGim+f2rXv+MU7SWm5T6o7h/BMiXVD12rYYNMgK5JLeuBz
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
    "], {{0, 143.25}, {506.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{506.25, 143.25},
  PlotRange->{{0, 506.25}, {
    0, 143.25}}]], \
"Input",ExpressionUUID->"a6168307-c227-4423-aec9-8aa14eb3b8cc"]], "Text",
 CellChangeTimes->{{3.887401734396344*^9, 
  3.8874017439821215`*^9}},ExpressionUUID->"8efb0619-afdc-4494-9df4-\
d87a1af57341"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Probability", "Subsection",
 CellChangeTimes->{{3.8874005852060285`*^9, 
  3.8874005892353325`*^9}},ExpressionUUID->"391307df-353b-403b-902c-\
06c8d0c2e933"],

Cell[TextData[{
 "To show something as a subset: A\[Subset]B means that A is a subset of B.\n\
\[EmptySet] = null set",
 StyleBox["\nRules of probability for finite sample spaces:",
  FontWeight->"Bold"],
 "\n- Pr(A) greater or equal to 0\n- Pr(A) less than or equal to 1 \n- Sum of \
probabilities of all outcomes = 1\n- The more trials, the closer the outcomes \
get to the theoretical probability\n- Addition rule: Probability of A or B \
both occurring is calculated by: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Pr", "(", 
     RowBox[{"A", "\[Union]", "B"}], ")"}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", "A", ")"}], "+", 
     RowBox[{"Pr", "(", "B", ")"}], "-", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"e6ead322-b3b2-4d00-ac53-5427b3da7cb0"],
 "\n\n",
 StyleBox["Complementary events\n",
  FontWeight->"Bold"],
 "When 2 events have no elements in common and together make up the entire \
sample space. The complement of event ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", " ", "is", " ", 
    RowBox[{"A", "'"}]}], TraditionalForm]],ExpressionUUID->
  "6a9ded8b-4aff-4cc2-8aed-9f442217a812"],
 ", this consists of all outcomes in the sample space that aren\
\[CloseCurlyQuote]t ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "177c45a4-76eb-4364-b3aa-e2b22c1d024c"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Pr", "(", 
     RowBox[{"A", "'"}], ")"}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"Pr", "(", "A", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "6799a695-ba26-4f3e-b088-16b17470c4ee"],
 "\n\n",
 StyleBox["Independent events",
  FontWeight->"Bold"],
 "\nEvents which are not conditional, one occurring does not affect the \
probability other.\nPr(A\[Intersection]B) = Pr(A)*Pr(B)\nPr(A|B) = Pr(A)\n",
 StyleBox["Mutually exclusive events are different to independent events. \
Mutually exclusive means the 2 events occurrence can not be simultaneous",
  FontVariations->{"Underline"->True}],
 "\n\n",
 StyleBox["Conditional probability \n",
  FontWeight->"Bold"],
 "Pr(A|B): Probability of A given B has occurred ",
 StyleBox["or",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"n", "(", 
     RowBox[{
     "events", " ", "of", " ", "A", " ", "contained", " ", "in", " ", "B"}], 
     ")"}], 
    RowBox[{"n", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "f0559717-299b-4643-8ac9-9745af5fdcf6"],
 "\nFormula: Pr(A|B) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"n", "(", 
     RowBox[{"A", "\[Intersection]", "B"}], ")"}], 
    RowBox[{"n", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "4bdea3e2-1bc5-44da-8d4e-52b46ea9ed14"],
 " or ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"Pr", "(", 
     RowBox[{"A", "\[Intersection]", "B"}], ")"}], 
    RowBox[{"Pr", "(", "B", ")"}]], TraditionalForm]],ExpressionUUID->
  "90d17d42-7b98-4835-b3f7-65f1309663ac"]
}], "Text",
 CellChangeTimes->{{3.887401566254399*^9, 3.88740171359007*^9}, {
   3.887401773828429*^9, 3.8874018544700327`*^9}, {3.8874030726260653`*^9, 
   3.8874030839071503`*^9}, {3.887403471005041*^9, 3.8874034736857777`*^9}, {
   3.887403515624259*^9, 3.8874036005214725`*^9}, 3.887820674177083*^9, {
   3.8878654638011894`*^9, 3.8878654784393616`*^9}, {3.88786553656616*^9, 
   3.887865550530443*^9}, {3.8878656096288204`*^9, 3.887865614093236*^9}, {
   3.8879055066577826`*^9, 3.8879055431504793`*^9}, {3.887905905760565*^9, 
   3.8879059251820836`*^9}, {3.887906088849724*^9, 3.8879060952361813`*^9}, {
   3.887906750330102*^9, 3.887906789449065*^9}, {3.887907095968182*^9, 
   3.887907110363709*^9}, {3.8879072459339857`*^9, 3.887907254012206*^9}, 
   3.8879083340159464`*^9, {3.88790843167552*^9, 3.88790843517689*^9}, {
   3.88790861695821*^9, 3.8879086280743856`*^9}, {3.8879464299218655`*^9, 
   3.8879464786064715`*^9}, {3.8879466175031967`*^9, 
   3.8879466340880632`*^9}, {3.887946718483472*^9, 3.8879467224734983`*^9}, {
   3.8880053498982496`*^9, 
   3.8880053514136815`*^9}},ExpressionUUID->"003e99ca-2d1f-419a-86c0-\
11ddbeb0f66b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualising probability ", "Subsection",
 CellChangeTimes->{{3.88740079833145*^9, 3.887400803798812*^9}, {
  3.887410543420563*^9, 
  3.887410544774949*^9}},ExpressionUUID->"87c7f327-80ad-4abb-9d98-\
fef5957b055f"],

Cell[TextData[{
 StyleBox["\nTree diagrams\nVenn diagrams\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
BAKBMBT/B9l595w=
     "], {{0, 118.}, {90.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{90.5, 118.},
   PlotRange->{{0, 90.5}, {0, 118.}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"a6d79fb2-c83a-4fb2-b6b9-4a5ccaa945d1"],
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 144.5}, {98., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{88.5, Automatic},
   ImageSizeRaw->{98., 144.5},
   PlotRange->{{0, 98.}, {0, 144.5}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"7a4ad89a-84da-481e-8bdd-de5b39517b66"],
 StyleBox["\n",
  FontWeight->"Bold"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
WWHxN0bgQ9D6N8Vl9DzMwc5TdPUPJvo1Xbtf6+EOuS0aT6m1XXcOSWHxv/fX
8AJBcEheBf5PrvGjFxwm+oEuev1xL8ht0XjKbXd3pmYrLL6RDxpD1ddZLp8K
tYbw24MxoxccJvrVnwljntbjSVafSuWufR3xqQqL//XRRKxezW1WJuX1hM8c
okef+QMT/Wp9zzeePwm5LRpP1f4DbS8SFRYfNFKgqYJcGI0H1H6CUVdJhYt+
J4LGp357HdteKtbvS7d4wnjU7zdOMaMv0gsT/eoDwhv8fSC3ReOp2LG3I1Hx
3I9/eCZm0sZb41tWT/jcMXr0gsNEP2bozfrjnpDbovGUb93dmZ6jsPio4+iU
cTf0KKwh/M45dvSCw0S/phsPGW6ukNui8dCsbHsIih+9mXEq9SVxvF14ySnP
/Yu7flx46crCl1rbQW6LxkOebq7MpBfbSGJA/PiZ7jKUyCzsogtZoxccJvqJ
OF2kaeaQ26LZ9GY8zp+r1JS/8IyabbfG20031ydpR18pmPIHE/0A+fNWctOj
IHdGg2m5Hlxh76ZM2QkMjukpNOTCaDbLQ1NeFCh43AA++lXuc2+5FgS5MxoM
w92NdfWuMmUfEIlBL72kdlxNuPr6aHw9hzd6weGjHyviPsPNDXJnNBjaelvl
17ya5o8ZT6OPnLLcP7spGHfI4KRfD55Ssm4r5M5oKgJaEum7RWKlT+zu+5ST
4+Ixt6FcS89aHpatsNTw0U/M7QM/r4GCOMjN0Ui64+8ULlqv/Lm6lVO37rJ+
r28wPPZ3U/3iyxWWGj76ASrsXZtCzkBujkZSfeBg46VI5cvexRN94Ro3Pm69
FTMIX7nH17T1KSw1rPTrIVCo5laQm6N+eKRo0rTFY31Rtf19ituTNMjlUT/n
EzNWhCu1yhys9ANQzTdynkZA7o+aYZ7xpbv4jPV0lbB6/s8zobRO78e/M04l
oUtblCky3PRrfviy3G4P5P6oEzDoKPhxVV+Rsqs8DeenoMxwjH7Pun9KyDby
QSt8xHIIuOkn4Q2QZyzpy34KuUUqp+1eePEaO9XO2IsC1vxz+v3I2/ormND0
aiXLCzf9AHX+F2qPHoHcIpVTam3XFo1W7YyJJdJ/eCbGUvT1AiCuLBcMoLj8
10qWF4b6Cdmt5BlLdfaiXs2m5caFwsUbpCJlz/9IrmEZc86g9fSRc8uwFO+Y
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
MpCGDgEBAQEBAQEBAQEBYbzw/00dXsE=
     "], {{0, 74.5}, {106.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{106.5, 74.5},
   PlotRange->{{0, 106.5}, {0, 74.5}}]], "Input",
  FontWeight->"Bold",ExpressionUUID->"ed7b9488-8cfb-4a33-aa02-18b6bd2899ff"],
 StyleBox["\n\nKarnaugh maps/probability tables",
  FontWeight->"Bold"],
 "\nAn alternative to venn diagrams. Imagine a venn diagram, it can be \
represented by a Karnaugh map:\n ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkpF9LX798+Tw98/nNNNom
Qwj1Ze7rzPvPU28/ffqMdtxDQkLaKL1//GyqpesVtek5peFpOXk8r/zBzYKx
xIw7ESnD/jEDbiG9Nt7d5s4dJtZt+pdadS626pi16Vm0G1l2X3TutfEacA0e
9o0ejUgai7/54Eb+eF7Zk1LSM1L9ywbWBK/t/cPHX+eQg61dzybf0Xqe3WaM
pdcOxxMHwsq6fW93uOa02We0WKbxzFO4polNZ+NYRrEsw1jm6SiGfhTjTAzT
+BrLJI59PqHJLIlzKYVndYPnmNXikdceWNQVVdmbUjV0q3G0rOle74OJz1/Q
pktISEjf19fPn9/eezjR1PKkhDgWd3PAJajd0LJF8zxf6Qz3uB5XRocjqd10
VIMtrsY+osqR0uIeP8lT0uWr6bdonWnTM24zPNdlerHrgnm74flWPeMWbUO+
2mm+ii64G0daq+moOvuwKng4R1KLI6PDldPlKRq0aJxr17/c5+B3J/r640Lc
awbv7Z17X95/gP2XEEbNzX0df/m2puNxMmXQI7f9UgoHOL9uBF3Zv17as+aY
e7W4a9VBJ/I+R9Iee5KoLXGXDUHEmrDDCrfDCi9ig99lhxd1JOx1Iex2wO+0
w47ssMaLWON3WhN22xLE7Ih7HUgHHMmHnSlH3aokPaplvWs1QhpBvoBksb3Z
HFLanUe72zzy8u2Hz7D/EkhISBA09/HT7MjYK1rTo4KK0ciUPjtfUB00a5zj
KZzmHNMCucBT1m09ZdR1+cqgr/udqICxhLD7adGPsuMfF6Y8LbvxrOLmM3zG
c2LWC/Ktl1U5r2rzXtXnv268DQD/eFmb97I6B9wE7gDuBu4MHvKkKHU8J+HB
jZixxLC7UUHD/p7dllZt+iZ8FT0QKE0Smjx5/Wb1s2265r1WniOhieM5JS/r
mTP9w5+nZ2D/tTZbX+a+3n06TWx+GEcYcMluu5jcZBjL0gmnKfjVAUvfa0/a
aY0HWSDmRDjmR9KKqTJIrDK7UWOTU+tZVBda2RBDakypacxsoBYwqcVsWgmb
XtpEL+fQK7j0Mg72b3AEHC9g0sB9wD3B/YMrGtwK6iyzas5fr9GLr1KLpIh7
EXc7YLkDAgiEkZRnjWpgg0E042w8G5Qwfrc7MupGGL3PJmc/wv5rISEhbZRA
TDytqBoJvIYFhJoJKB+AVzcd0+Cf0Gs7bdJjbT0S6HX/ehRweOD2L2tyX9MK
pzhlb5orp9vwMx2E2S7SbA/5bR9lDcz2Uma6SeBJwFO9aamc4pZP0Ite1eU9
J916Wp7+ID1mJMSn184WFCnNavocKc2mI+qgGGk+Ydyqc3HIO+JxEX66dwj2
329jNfZsJqdx1Cmr1TCWqR1GO+5TK+5SBaqGnTZ44N6HPUkq4ZSLN2pAKNxs
wLIApACxmV7bzmjsZNC7mew+Jn+A2TrE6hhhdY2yeu+yB8bYg/f+FHAruA+4
J7g/eBS3n8nqZdK6mQ2djJo2Bp5PL2sCyUIHrwWSyDCpWi6IvN+NAAqW3TaE
/Y4kUNqAGkc/kmGW2BRU3FXb8fgLusyIhPTr68PT5y8bmGNxN7suOoGY4Ehp
cyQ1Wk8Z9jnYjYb5Psy49qwiHfg2cO8JRtEUr3y6nbC2UPgZQJS84VdMMItB
kQLKE1CYjN+KvxMZ0O/s0GZwliOr3XRMk3/CqPOszWhEynNK47uHj2D/XddH
r6Y/lHMe+BR0nE9gg5iQ8qgWsyPusiVI+ZNPJ1a5FtTdqMPSAbg3nkevbmMw
urFQ6Ln7oyxYX8Br8QaYjV1MSgujkosVKUUsWhy50TKrViOaAoJslw3hgBMZ
VECGMcyr13nXCANNgy9g/12RkJBWoS/v3k/yOx5mFfU7+rdqm4Jqgn3oRLO6
frel5d1rwSAjQAUB/Bm49EwncfMDYkUh0kUC1c0kqwRk2TNcxr3E8D572xYt
A/YRNa7MqRbN872WHvfTcl8z+Z8mp2D/vVenj5/m6jqfhJX1XErl6Ecx5Lxr
9zmQdljjDroTDBOrk6sbS9igfGCAs31w5t9zZ/PSYeV0jrBASQIKHByPXsyi
B5Q1qEZQxJwJID7EXatOBDacjWM7ZLak1Qz33J+E/fdGQkL6vt4/evK0jDzs
H9Oma8FTOtN0RJ2npNtpenE4yPtxYcoLSvYEvehNKw56HKyB6TY8yLiXVTlP
y27cifDvMr/MV9FlH1blKZxu1bk44BH6qKDi7Z17sD+BH+n51IdkyqB1Oh+c
jSv61R90Iu+0xos6EFQiKN7FDbeZNHAO39jJ6BplQU+E1dIyyKppY5Rz6LcZ
tCuZdaBE2mVHELUjSrhVa4RQQQHlntteyX3wFY3AQkISBs3NvWZwR4PjW7TO
cyS1OTJarXrGgx4uD27GPidmvW4smOKVr7kPQggB1cdrauEL0q3x7IQhH/c2
w/Pc4zpNEprN6meHvCNe1NC+zL6F/ZF8I1LLuFNmi14k/ahb1W5bwk5bgoQP
8UJaTWIVtawJu9zEH2D9uN/hVwG8C2YPE5RIoFCKJjaeulZ1wJ0oYo3fY0+S
86k1TWgKL+/pf4jqDiQkOJodvvMwq7DL1J4nr88WV203PH8nMuBZ5c2XtXmT
TaVCe9FpvZjpJk1xyl7V5z/DZ47Fh3aamjcd0+DK6rbpXbqXnPWmqx/up3Pn
2XQUrg+cY8v71onZE3dY448Hk32K6wuYdAKfTu9mdv6CBcXKaR9m1Xdg3R/5
DJp1dq24F3GHFeGQM1kzhApKrduMsS9zqOpAQtoMfZ6efV7VOOgZDs6rm46o
81X1B1ydnhSlvqrLB2fg0J0cCtOtuNcNBU8r0od83Pga+uxDJ/gnjPod/J9W
UD48f7mZn877T19Kmu7ZpjefDKcddqHssMKDM23z9JobdVRyC1ZQ9G+JgmLl
gPfL6mXiePS0WurJWIqoIzYZRMar5mwcO6Cos2X01WZ+OkhIv5XedPTeS8ps
0zXnyp5qktLsNLMYSwh7Qc6eZJfM9sL3bWEA1B0vqrIf3IjpuWrJkdPmSJ1s
PWl2JzJlgtOy0Z9O59jr4JIeo1iWrHctcMVddgT1KEpIRX0Fl87oFtKO7M0E
/AXq2hmlTXSvonopf9JObLAuWS2o8ep1Xmb9KIjajf6AkJB+E3159/5JKanP
zpevYsQ+eKLl5JkhP4+nFTdfN96ebsNDd2khZKaDOEErfIbPGA31adUzZh1Q
5ikadFs4j+eVfXz5ep0/nbmvOdS7V1K5GsGNB5zI2y3xR71JTnl1BQx6TRuj
dWgrX31aG6DUIjbT8+j0s6k1+1yJO63xkh7VRrFM74KOlhFUdCAhrV1f3n94
Wk7uPGvDkdTmyp/ssbJ6eDP2ZXXuFLcMui3/ErzhV7yszXuUm9jnaM9TOtUk
odGqYzaeW/rp9fp0wuZQ75gmNEl51gDfE3MknE6oiiM14nl0Th/zd7sAtVrA
34faxSzn0GMIDUqh5F22hH0OJFB0uGa3NQ9v6rVEJKQtoLlPn55WVHWZ2nOk
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
2v8zOw9PyRHduVPyqDjIjjU8YVXDbRXl4xHR3l0r3nCW3UI0vXDG2tqs9dte
7B8AEuHChTPY8OwQt1paMUi326XXI2N9tTRVpKWO2jtcamCWbnJeAHA8bMsM
EWs8bK/dIlqIjDsbHxmd5IxAR4v+2luLR7KjPRfW2XjC+2s/B0adEeEGSoy+
2hWVJAuAigCXHqoiK9mMS1vJ/V+149yvngWtSgpwWCiF3s4vIdJFybQ00d21
bZu+umILfkVPtT6RQdzwyKjN9XS9fIq6pKCI8zMDfwGjk/KtxL/2c3BuH+1t
qqMi1Xh7RSXJ4qOyoizlJQ+RMt1Wcv/umghrU+xKfoiLcf9/qwlQ0dTleZvq
K+3ctk1bWZKc5Q4rMroWIiN73SKD2UxwdbcGMbE43rWwNA28fdUTCo3s8tU+
W/9dVvQ1f1BiNKxmaXTwqMzcOAU5aWJN3gofUs8sBfcXP3SgjJC5eLBjoCG3
MEnhuMw+UVFHp8v8JVPXNysy6Asb88H22i2i2dF72IWpIO8NtT5wku9nZ+Zl
bUrKCK+6FbWA2xUTbFqWudGLFcybft5cCU71gxwtVtuPMNKYr6uqkB3jtZJr
U4ONuadU5Q/uEWvIv7b0ODa8NjMCHAepEe1pvWl9GQ11WF+GTUL2BnkdOMl3
sjhpb6adE2udH2ezADj5B5/LZeMVLTAFahNwqu965VRv7er6EZil/pqKx+L9
zFZybYpe4qehILFfdFdRsv3S4+CxOTHW4DhIDV87g75VtmG96IiZvzBVlL4u
Ftc1TA0J9zA3N8nMicstTFkAVBwLF3w4bavukm7ra7CwMHFxs+4ZWd0KVAwe
XkNdOS4peIXXpkDEgFJIT0+r6dtGdg1S3dyx4bWHD+zPL1q3YF0hRUysL2O3
LRG2124RfXjyHOv+9nTdON8DBUJJUoCThVGUh1VyoOMCif72CwuGe1tfWMkC
UyPUfD1VxZyVOf9SXrRUOlw0xLLme+uWL6M6J3q/6G4tJbmhhpxlN3VXZSpL
H8NWbDDSWfflav+MLjYWGRdjcjfC6AYbYtJCLl01UfO1NQh1NVkg2NlIT00W
vE37i9orudAEnF9L8Rg26W+VsyE6KeGXjVRBgbOSrMlPsN27S0T1+FF68fLR
uXX5Xsfnlwo5e0pxhZe51p22EBus+xu/Dt3fwJyLym9ctbzg4WUXEu65yLnz
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
BAKBQCAQCATyy+V/Abmaxgc=
     "], {{0, 174.5}, {264.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{123.5, Automatic},
   ImageSizeRaw->{264.5, 174.5},
   PlotRange->{{0, 264.5}, {0, 174.5}}]], "Input",ExpressionUUID->
  "898e4578-b8a2-4510-acfc-d4e291ce736b"],
 "\t\t",
 Cell[BoxData[GridBox[{
    {"\[Placeholder]", "B", 
     RowBox[{"B", "'"}]},
    {"A", 
     RowBox[{"A", "\[Intersection]", "B"}], 
     RowBox[{"A", "\[Intersection]", 
      RowBox[{"B", "'"}]}]},
    {
     RowBox[{"A", "'"}], 
     RowBox[{
      RowBox[{"A", "'"}], "\[Intersection]", "B"}], 
     RowBox[{
      RowBox[{"A", "'"}], "\[Intersection]", 
      RowBox[{"B", "'"}]}]}
   },
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}}]],
  ExpressionUUID->"d874fc02-9bf5-4ba4-9c01-9d897c7ff9ed"],
 "\n In a Karnaugh map, the entries give the probability of each of these \
events occurring.\n The sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Intersection]", "B"}], TraditionalForm]],ExpressionUUID->
  "e2749c91-f71e-4db7-a2d5-4a554fa8039f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Intersection]", 
    RowBox[{"B", "'"}]}], TraditionalForm]],ExpressionUUID->
  "96d795c7-244a-4c17-a217-0903f0980e9c"],
 " are mutually exclusive, so:\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{"Pr", "(", "A", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f5f43a39-4bc3-4e0e-8172-da6fa2afd778"],
 " (row 1), similarly:\n ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", "B"}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "'"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"row", " ", "2"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", "B"}], ")"}], " ", "+", " ", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", "B"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", "B", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"column", " ", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"A", "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{
       RowBox[{"A", "'"}], "\[Intersection]", 
       RowBox[{"B", "'"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"Pr", "(", 
      RowBox[{"B", "'"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"column", " ", "2"}], ")"}]}]}], TraditionalForm]}],
  ExpressionUUID->"1914022f-eeac-4854-aa65-efbff64f83eb"],
 "\n \n Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Pr", "(", "A", ")"}], "+", 
     RowBox[{"Pr", "(", 
      RowBox[{"A", "'"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", " ", "and", " ", 
       RowBox[{"Pr", "(", "B", ")"}]}], "+", 
      RowBox[{"Pr", "(", 
       RowBox[{"B", "'"}], ")"}]}], "=", "1"}]}], TraditionalForm]],
  ExpressionUUID->"52d188f5-d7fd-4dda-bb67-794f8fa04a4d"],
 ", the totals for column 3 and row 3 are 1. The completed table is:"
}], "Text",
 CellChangeTimes->{{3.8874105466317744`*^9, 3.887410573613456*^9}, {
  3.8874106191140113`*^9, 3.8874106735397825`*^9}, {3.887608594421695*^9, 
  3.887608835682802*^9}, {3.88760905151315*^9, 3.887609265407058*^9}, {
  3.8876093049907093`*^9, 3.887609361855585*^9}, {3.887821487224004*^9, 
  3.8878215499753256`*^9}, {3.8878654666269093`*^9, 
  3.8878654719962397`*^9}},ExpressionUUID->"1bfd3f8e-b555-411c-a00f-\
59c07342e368"],

Cell[TextData[Cell[BoxData[GridBox[{
   {"\[Placeholder]", 
    RowBox[{" ", "B"}], 
    RowBox[{"B", "'"}], "\[Placeholder]"},
   {"A", 
    RowBox[{"A", "\[Intersection]", "B"}], 
    RowBox[{"A", "\[Intersection]", 
     RowBox[{"B", "'"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", "A", ")"}]}]},
   {
    RowBox[{"A", "'"}], 
    RowBox[{
     RowBox[{"A", "'"}], "\[Intersection]", "B"}], 
    RowBox[{
     RowBox[{"A", "'"}], "\[Intersection]", 
     RowBox[{"B", "'"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", 
      RowBox[{"A", "'"}], ")"}]}]},
   {"\[Placeholder]", 
    RowBox[{"Pr", 
     RowBox[{"(", "B", ")"}]}], 
    RowBox[{"Pr", 
     RowBox[{"(", 
      RowBox[{"B", "'"}], ")"}]}], "1"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, 
    "Rows" -> {{
      True}}}]],ExpressionUUID->"7e61e024-280c-4677-8ed5-d14890f95b8e"]], \
"Text",
 CellChangeTimes->{{3.887609365693961*^9, 3.8876094545046854`*^9}, {
  3.8876095846778564`*^9, 
  3.8876096103939095`*^9}},ExpressionUUID->"403500ac-c354-4fc1-80e4-\
d72e25d1375e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Quadratics", "Section",
 CellChangeTimes->{{3.8890355939051375`*^9, 3.889035595329756*^9}, {
  3.8893983904607396`*^9, 3.8893983962580633`*^9}, {3.8894011517657075`*^9, 
  3.889401201534848*^9}, {3.8894012761765833`*^9, 3.8894013056198015`*^9}, {
  3.8894014048018856`*^9, 
  3.889401405625824*^9}},ExpressionUUID->"d431406b-ed18-415f-acc3-\
90d0abd6758b"],

Cell[CellGroupData[{

Cell["Basic Quadratic Commands", "Subsection",
 CellChangeTimes->{{3.8894015727109237`*^9, 3.8894015959753923`*^9}, {
  3.889401626246703*^9, 
  3.889401635515601*^9}},ExpressionUUID->"a86b051e-81e9-49a5-aade-\
893420f0d77e"],

Cell[TextData[{
 "Factorising:\nDone when an equation is in general form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    SuperscriptBox["ax", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e0ebd759-be05-4997-ad0e-53ae1f6bdfc2"],
 "+bx+c to turn it into the root form (x-a)(x-b)\nWhen done by hand, there \
are 4 methods used to factorise an equation.\n\t1. By sight\n\t2. Coat-Hanger \
Method\n\t3. Completing the square\n\t4. Quadratic Formula\nAfter an equation \
is factorised into root form, \[OpenCurlyQuote]a\[CloseCurlyQuote] and \
\[OpenCurlyQuote]b\[CloseCurlyQuote] in (a,0) and (b,0) are the x-intercepts\n\
\nExpanding:\[LineSeparator]Done when an equation is in root form or in \
vertex form to convert it to general form.\n\n\nBelow are the ways to do the \
above in Mathematica:"
}], "Text",
 CellChangeTimes->{{3.8894016840722027`*^9, 3.889401817181051*^9}, {
   3.8894018529709644`*^9, 3.8894019616455574`*^9}, {3.8894025417695475`*^9, 
   3.8894025750851974`*^9}, {3.889402749609606*^9, 3.889402751125204*^9}, 
   3.889402789240493*^9},ExpressionUUID->"9844d18a-c8e1-4ae3-95da-\
8b42cb3557e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Remember", " ", "double"}], " ", "="}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "final", " ", "pronumeral", " ", "is", " ", 
     "what", " ", "you", " ", "are", " ", "solving", " ", "it", " ", 
     "for"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "x"}], "+", "3"}], "4"], "==", "7"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.889402793382595*^9, 3.8894028439916725`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"526144ef-75f0-49ec-929b-3fb5da11cda1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["25", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8894037066242743`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a2dd0c77-4714-4b8f-8db0-4487e728765c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"To", " ", "solve", " ", "an", " ", "inequality"}], ",", " ", 
    RowBox[{
    "use", " ", "reduce", " ", "then", " ", "finish", " ", "it", " ", "like", 
     " ", "solve"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "x"}], "+", "3"}], "4"], ">=", "1"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8894028501119223`*^9, 3.8894028693416033`*^9}, {
  3.8894036540664263`*^9, 3.8894037019005685`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7c304de8-2d22-4216-bcc1-73955aca88ca"],

Cell[BoxData[
 RowBox[{"x", "\[LessEqual]", 
  RowBox[{"-", 
   FractionBox["1", "2"]}]}]], "Output",
 CellChangeTimes->{3.8894037041349816`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"d8ffe999-2da6-4461-bcad-e8d6991f4e69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["b", "2"]}], "4"], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "2"], "4"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8894025793923464`*^9, 3.889402600690444*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d06a6942-1d26-4325-9fe1-2743a05c51f1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"a", " ", "b"}], "2"]}]], "Output",
 CellChangeTimes->{3.8894026030746355`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b86b964c-d143-4651-b839-01b8e057c1d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.889402627511733*^9, 3.889402656239861*^9}, 
   3.8894026925667963`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"e3635f8d-8c14-495a-90f5-ae19d490dc07"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{{3.88940264101924*^9, 3.889402657102297*^9}, 
   3.8894026927696548`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"65770c35-e1df-471c-a7b0-df86175821c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "6"}], ")"}], "2"]}], "+", "10"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8894026438169117`*^9, 3.889402688894123*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"be0d3390-26f5-4067-b806-dddc08767527"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", " ", "x"}], "+", "82"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8894026824939637`*^9, 3.889402689365873*^9}},
 CellLabel->
  "Out[21]//TraditionalForm=",ExpressionUUID->"8415b44f-51eb-438d-99fc-\
1b8b59b4dd52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"2", "x"}], "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8894026967973375`*^9, 3.889402742186026*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"460e2685-0e9e-44fe-80b6-66405025d206"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], "2"]], "Output",
 CellChangeTimes->{{3.8894027175639706`*^9, 3.889402742690257*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"7287bfdb-3156-40d8-83b3-79acc7c851ce"]
}, Open  ]],

Cell[TextData[StyleBox["Plotting Equations:", "Subsubtitle"]], "Text",
 CellChangeTimes->{{3.8894107232785177`*^9, 
  3.8894107392361717`*^9}},ExpressionUUID->"21a2ce49-dd1f-4f59-8163-\
a2b2e81f59dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "15"}], ",", "10"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"465954e1-9ab9-4af9-9c05-3160c298e13f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EgY5nsxTOlrLJp1q2Vfsaxnk///3/wWaGvAg
          "]]}, Annotation[#, "Charting`Private`Tag$11046#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtxQ0slHEcwPHHeX/Ly93hvN0995iJeSlDrPb88zIvLS8nZ2WZeatJTpiX
iVLeolnklLcN3UQmZs3r2vOrUyqRatGhsilCkyHFuvT2/27ffchYiSiBRRCE
+5//mrd4dH13l4L/krCQa/Jt5ieFJSHY8MP3vm0KS4LAM1Up2aCwJDwsq9Ka
W6CwJGg5TVnDGIUloToj5sjFegpLQodKuozwoLAkqCf47+edFGIFwH77KLml
kgTb7nKFL8UHkbwubu8zAciK3UZE1VaQ+/VQ8rV5PtYC+rPqkrpCrLHmEFwV
IfhVa4k1A//G+8EBX8yxJtA6kjOZHsXDciG6sJr7os0Uy4b8GNW7umwTrDEQ
jnzGp4iDNYTp8tqSjjfGcM/U1SCyQx8sdU63b3obwQHOhGipSAfOuNmrz1ga
YDUhzuN9m1yui1UF+2yv3RSZFpaA5nfhwzmH1cF76HbpxqUdZrGAe9DfjAXj
qg7ZFS6bzKDUzu+zWMlkOISVTXQuMy5Lik3nxi0GZKdeMxnTjO/gjLZSvMYQ
lauZ3oyUSW3v+mHEnmcEnU17ZhUKWpxINb86/5RJsu2LHG1aokeeK8pcw5/Q
tZ5R5xJ1Nmgvxwc9oTfm6caamONto9s0K5M7G89bo1WGdFJ69AikqRdaELu6
RatptKF9Waro8tykT9otJe2dukIOvNRA3fXFofnrKlhtJGmJN/woVsfqo+ik
OquSAi3k7DZWIUeG6EpYpqdrgy4athtq4I0bITWOdOHCzh7EKgvaoPPYaGq0
aK3QwAjLRRG5se51cmOsCUrWXRGOn+BgzRC/43GNxjIXy0O5/T7hBvWmWAuU
2prc6+7Mw1ohPZZHrNMnc6w18jt7TGp/3RK1uN8JkgYKkNmAlcTPxhpdna3o
ExqTqCqttNJlio8CPYcDbq6QSFQc4tjYK8AKkX1UYYQsj8RSiPiXEGuDfgM/
coSo
          "]]}, Annotation[#, "Charting`Private`Tag$11046#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-15., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"5", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "-", 
         RowBox[{"7", " ", 
           TagBox["x", HoldForm]}], "-", "8"}], 
       RowBox[{
         TagBox["x", HoldForm], "+", "1"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.88941074398252*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"99e20772-0484-4e8f-81f8-8a23addac10d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Locating Axis Intercepts", "Subsection",
 CellChangeTimes->{{3.8894016406464405`*^9, 
  3.889401678491908*^9}},ExpressionUUID->"ed7b4262-7164-4676-8736-\
5e83d0b03638"],

Cell[TextData[{
 "The x-intercept is usually found through root form that is (x-a)(x-b) where \
(0,a) and (0,b) are the x-intercepts.\nFor a quadratic equation,  there can \
be 0, 1 or 2 x-intercepts.\nTo determine the number of solutions/x-intercepts \
within a quadratic equation, the discriminant formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["b", "2"], "-", 
      RowBox[{"4", "ac"}]}], ")"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "52591041-68a0-42c8-81e8-b8ca2360c28b"],
 "is used. "
}], "Text",
 CellChangeTimes->{{3.8894016892333546`*^9, 3.88940168936701*^9}, {
  3.8894038586661015`*^9, 3.889403955041257*^9}, {3.8894039969198227`*^9, 
  3.889404071352612*^9}, {3.889404443275135*^9, 
  3.889404446800452*^9}},ExpressionUUID->"ba1bd007-ff4e-48e8-88c5-\
ee6b2b7adb75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "a", " ", "known", " ", "coefficient"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Discriminant", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"10", "x"}], "+", "7"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889404040348998*^9, 3.8894040812516923`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ed3cf368-03bc-4b39-a078-95138de332a7"],

Cell[BoxData[
 RowBox[{"-", "12"}]], "Output",
 CellChangeTimes->{3.8894040856143966`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"4bcd451d-03cb-48b8-b409-e65c83895191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", " ", "an", " ", "unknown", " ", "coefficient"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "MAKE", " ", "SURE", " ", "THERE", " ", "IS", " ", "A", " ", "SPACE", " ", 
    "BETWEEN", " ", "m", " ", "AND", " ", "x", " ", "TO", " ", "REGISTER", 
    " ", "IT", " ", "AS", " ", "TWO", " ", "DIFFERENT", " ", "VARIABLES"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", " ", "x", " ", "is", " ", "black"}], ",", " ", 
    RowBox[{
    "that", " ", "means", " ", "it", " ", "is", " ", "already", " ", 
     "defined", " ", "and", " ", "must", " ", "be", " ", "cleared", " ", 
     "with", " ", 
     RowBox[{"Clear", "[", "x", "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Discriminant", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"10", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", "m", " ", "x"}], "+", "7"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8894040883040476`*^9, 3.8894041475218678`*^9}, {
  3.889404494801508*^9, 
  3.889404514362336*^9}},ExpressionUUID->"ff0b53e5-eab8-4cfb-b559-\
85730e4ef7ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "280"}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox["m", "2"]}]}]], "Output",
 CellChangeTimes->{{3.8894041128686237`*^9, 3.889404150349821*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"c5de3ac5-76ee-4539-a268-b3df2e90898c"]
}, Open  ]],

Cell["To find the actual x-intercept, use solve.", "Text",
 CellChangeTimes->{{3.8894041686396885`*^9, 3.8894041705604625`*^9}, {
  3.8894042420955324`*^9, 
  3.889404253269419*^9}},ExpressionUUID->"f76991a3-f494-4837-989b-\
c14f7e711bca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", "x"}], "+", "3"}], "4"], "==", 
    RowBox[{"-", "7"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8894042558378735`*^9, 3.889404285042444*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0c9c657c-1bf9-451b-be8e-983caf1a9345"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["31", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.889404285259823*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"28210e8a-8b0b-42b9-8099-423dc26e06d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], " ", "+", " ", "c"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"b", " ", "x"}], " ", "-", " ", "d"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889404287172494*^9, 3.8894043060861197`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b997f89a-cd5d-47da-93a8-c617f2b590d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "c"}], "-", "d"}], 
     RowBox[{"a", "-", "b"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8894043075253105`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"4b92f074-c978-4dd2-852f-ff0a7067c59c"]
}, Open  ]],

Cell[TextData[{
 "----------------------------------------------------------------------------\
------------------------------------------------------------------------------\
------------------------------------------------------------------------------\
----------------------------------------------------\nOn the other hand, the \
y-intercept is found through general form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"(", 
      RowBox[{"0", ",", "c"}], ")"}], " ", "is", " ", "the", " ", "y"}]}], 
   TraditionalForm]],ExpressionUUID->"c915fb83-425b-4270-aa59-2bc25b6ba872"],
 "-intercept.\nFor a quadratic equation, there is always 1 y-intercept.\nTo \
find the y-intercept, do below."
}], "Text",
 CellChangeTimes->{{3.8894043747994604`*^9, 3.889404466900598*^9}, {
  3.8894045792505064`*^9, 
  3.8894045981041594`*^9}},ExpressionUUID->"3fa7c095-bead-46ae-81f7-\
c30e1ba88bcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", "x"}], "+", "7"}], "/.", 
  RowBox[{"x", "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.8894046046332054`*^9, 3.8894046106769915`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"61b2dcaf-bff4-4e4d-a43a-e856a08ace7b"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8894046129847*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"0912f8b2-0d31-4913-9823-ef9514b55f62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"4", "x"}], "+", "7"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "0", "]"}]}], "Input",
 CellChangeTimes->{{3.88940461880727*^9, 3.889404634901721*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2aad29d8-a869-498c-8961-75df8b9d3584"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8894046356293936`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f9cb115b-0675-436f-b301-7c2a80909967"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding the Turning point", "Subsection",
 CellChangeTimes->{{3.8893984038851185`*^9, 3.8893984134568005`*^9}, {
  3.889399704191045*^9, 3.889399722685187*^9}, {3.889400700819681*^9, 
  3.8894007238313637`*^9}},ExpressionUUID->"3781ba73-7a99-4a44-bcf9-\
ea71b4ebc8c0"],

Cell[TextData[{
 "Usually when finding the turning point of an equation, the equation in \
general form will be converted into vertex form.\nE.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], " ", "->", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"a", "(", 
       RowBox[{"x", "-", "k"}], ")"}], "2"], "+", "h"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7759ec7f-cce1-44ad-bd61-45637ffa0296"],
 "\nThe turning point from there is (k,h)\nBelow are some ways that can be \
done in Mathematica\n\
______________________________________________________________________________\
______________________________________________________________________________\
____________________"
}], "Text",
 CellChangeTimes->{{3.889399730621171*^9, 
  3.8893998619168396`*^9}},ExpressionUUID->"c460f7aa-7024-4bcd-91dc-\
89b73598ecff"],

Cell[TextData[{
 StyleBox["Method 1: FindMinimum or FindMaximum\n", "Subsubtitle"],
 "Use FindMinimum when a  > 0 and the parabola is upwards\nUse FindMaximum \
when a < 0 and the parabola is downwards"
}], "Text",
 CellChangeTimes->{{3.889398418722761*^9, 3.8893984517348766`*^9}, {
  3.889398686966531*^9, 3.8893987698569455`*^9}, {3.889399654331133*^9, 
  3.8893996569577413`*^9}, {3.889399710626854*^9, 
  3.8893997131311255`*^9}},ExpressionUUID->"fd7cfa82-4e38-4aeb-995f-\
3404ccce2b6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"10", "x"}], "+", "7"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8893984712973223`*^9, 3.889398481437194*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9457a79d-4008-48ae-82af-fe431d7b0774"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.75`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.2499999999999998`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.88939848205823*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"655dfaa2-359a-4c33-a931-627f8c369604"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindMaximum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"8", "x"}], "+", 
     FractionBox["5", "2"]}], ",", "x"}], "]"}], "//", 
  "Rationalize"}]], "Input",
 CellChangeTimes->{{3.889398483987199*^9, 3.889398533222052*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9f3ab0a7-0f11-488c-8900-743705c105e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["21", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8893985092869053`*^9, 3.889398533733268*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"cab46975-f43c-4acb-a405-5d415fe3b5d3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Method 2: Subbing in ", "Subsubtitle"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"-", "b"}], 
     RowBox[{"2", "a"}]], " "}], TraditionalForm]], "Subsubtitle",
  FormatType->TraditionalForm,ExpressionUUID->
  "50fe0de5-8505-49f9-ae80-4b9cfbb64cc5"], "Subsubtitle"],
 "\nWith the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["ax", "2"], "+", "bx", "+", "c"}], ",", " ", 
    RowBox[{"find", " ", "-", 
     RowBox[{
      FractionBox["b", 
       RowBox[{"2", "a"}]], " ", "and", " ", "sub", " ", "it", " ", "into", 
      " ", "the", " ", "original", " ", "equation", " ", "as", " ", 
      RowBox[{"x", "."}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "50b71bf0-0fd9-4ea9-ac95-5ee34f12f4a8"]
}], "Text",
 CellChangeTimes->{{3.889398664135955*^9, 3.8893986787631702`*^9}, {
  3.889398792640905*^9, 
  3.889398850106289*^9}},ExpressionUUID->"3b7a8803-0b17-4bde-926e-\
7ec01997ff29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"7", "x"}], "-", "8"}]}], "*)"}], "\[IndentingNewLine]", 
  FractionBox[
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"-", "7"}], ")"}]}], 
   RowBox[{"2", 
    RowBox[{"(", "5", ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.889398853993544*^9, 3.8893988805121775`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0fca5a28-6219-4582-9fdd-f411dfd6bfa3"],

Cell[BoxData[
 FractionBox["7", "10"]], "Output",
 CellChangeTimes->{3.889398883116563*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"819560b4-c0a8-4d0d-8ca3-1a36f7d5f41e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"7", "x"}], "-", "8"}], "/.", 
  RowBox[{"x", "->", 
   FractionBox["7", "10"]}]}]], "Input",
 CellChangeTimes->{{3.8893988869334354`*^9, 3.8893989003576*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a88aa8ea-d030-408b-9373-5400889735a8"],

Cell[BoxData[{
 RowBox[{"-", 
  FractionBox["209", "20"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Therefore", " ", "Turning", " ", "point"}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["7", "10"], ",", 
      FractionBox[
       RowBox[{"-", "209"}], "20"]}], ")"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8893991946106977`*^9, 3.8893992134669127`*^9}},
 CellLabel->"",ExpressionUUID->"f024c159-afef-4f0a-bf61-cc755e5fd9c4"],

Cell[TextData[StyleBox["Method 3: Find the middle of the x-intercepts and sub \
it into the equation.", "Subsubtitle"]], "Text",
 CellChangeTimes->{{3.889399005986066*^9, 
  3.889399035010564*^9}},ExpressionUUID->"e7b850b7-fd5d-4ed4-b0e6-\
375ba926c4c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     RowBox[{"5", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"7", "x"}], "-", "8"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], "==", "0"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8893990450351386`*^9, 3.889399076097394*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3efb4e90-e3ad-4fc1-a82d-46d6200cf1b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"7", "-", 
        SqrtBox["209"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"7", "+", 
        SqrtBox["209"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8893990767092037`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0aeea161-317d-4c39-a4d3-9ab0e01dd602"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{"7", "-", 
       SqrtBox["209"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{"7", "+", 
       SqrtBox["209"]}], ")"}]}]}], "2"], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.889399106772422*^9, 3.889399127266446*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"37f4f375-5ed6-4a65-89fd-45ede59d079f"],

Cell[BoxData[
 FractionBox["7", "10"]], "Output",
 CellChangeTimes->{{3.8893991210723567`*^9, 3.889399127652195*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"c79396f5-ceb9-44d4-82bc-773f907e0b10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"7", "x"}], "-", "8"}], "/.", 
  RowBox[{"x", "->", 
   FractionBox["7", "10"]}]}]], "Input",
 CellChangeTimes->{{3.889399146164138*^9, 3.889399158148631*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fb95814e-35a9-4206-bd74-fb953bf2bb2e"],

Cell[BoxData[{
 RowBox[{"-", 
  FractionBox["209", "20"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Therefore", " ", "Turning", " ", "point"}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["7", "10"], ",", 
      FractionBox[
       RowBox[{"-", "209"}], "20"]}], ")"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8893992219857903`*^9, 
  3.8893992244921637`*^9}},ExpressionUUID->"0dc22b36-c497-436a-8f08-\
a6c9c61c1312"],

Cell["Method 4: Completing the square", "Text",
 CellChangeTimes->{{3.8893992665508847`*^9, 
  3.889399288286029*^9}},ExpressionUUID->"2b99b458-7657-44c7-ad37-\
51e52f937550"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Let", " ", "y"}], "=", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"2", "x"}], "+", "4"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"compsq", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", 
         FractionBox["b", 
          RowBox[{"2", "a"}]]}], ")"}], "2"]}], "+", "c", "-", 
     FractionBox[
      SuperscriptBox["b", "2"], 
      RowBox[{"4", "a"}]]}], "//", "TraditionalForm"}]}]}]], "Input",
 CellChangeTimes->{{3.889399306679146*^9, 3.8893993803463745`*^9}, {
  3.889510249525215*^9, 3.889510250077075*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"0915ae92-3816-4004-8cd3-29a598030121"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compsq", "[", 
  RowBox[{"1", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8893993849773035`*^9, 3.889399391607543*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"78a41290-f95b-4c75-b8de-37dd016b084d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "1"}], ")"}], "2"], "+", "3"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.889399393608473*^9, {3.9083421520392933`*^9, 3.9083421562935286`*^9}},
 CellLabel->
  "Out[335]//TraditionalForm=",ExpressionUUID->"7cf99966-0dc7-4830-94ba-\
2ceb8472ac97"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Points of Intersection", "Subsection",
 CellChangeTimes->{{3.8894109691864386`*^9, 
  3.8894109725920615`*^9}},ExpressionUUID->"4c854834-a900-4e23-a4cb-\
9d2d131a71d1"],

Cell["\<\
When trying to find the line of intersection between 2 linear equations, you \
can use simultaneous equations.
Although you are able to do the same with a quadratic and a linear equation, \
you will get 2 answers most of the time in root form (x-a)(x-b)
When doing it in Mathematica, set the equations equal to one another via the \
y, then solve for both x and y.
E.g.\
\>", "Text",
 CellChangeTimes->{{3.8894109759842644`*^9, 3.889411054701605*^9}, {
  3.889411117161535*^9, 
  3.88941116916728*^9}},ExpressionUUID->"f0836b6f-7352-43db-8dcb-\
8ec772ae7d3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"5", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"7", "x"}], "-", "8"}]}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"x", "+", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8894111755738916`*^9, 3.889411225388504*^9}, {
  3.889411284923893*^9, 
  3.8894112920181746`*^9}},ExpressionUUID->"31cb9373-bea6-4d02-9dd8-\
6974fe4b0427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         SqrtBox["61"]}], ")"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "-", 
         SqrtBox["61"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SqrtBox["61"]}], ")"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         SqrtBox["61"]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8894112272054415`*^9, 3.8894112867334585`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"76aeb419-850e-4f00-b58b-240b80b4ac2f"]
}, Open  ]],

Cell[TextData[{
 "Therefore the Point\[CloseCurlyQuote]s of Intersection are (",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"4", " ", "-", " ", 
     RowBox[{"\[Sqrt]", "61"}]}], "5"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4bb69887-2f25-45a6-a305-ae7383d3d8ac"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"9", "-", 
       RowBox[{"\[Sqrt]", "61"}]}], "5"], ")"}], " ", "and", " "}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5e34b949-8ace-4acb-a56e-687a75d25071"],
 "(",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"4", " ", "+", " ", 
     RowBox[{"\[Sqrt]", "61"}]}], "5"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "16827227-2536-4a98-97dd-cddfaf25c2d5"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"9", "+", 
      RowBox[{"\[Sqrt]", "61"}]}], "5"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0ede833f-953c-4785-9806-16ba998f1770"],
 "\nGraphed, the two equations look like this:"
}], "Text",
 CellChangeTimes->{{3.889411257669445*^9, 3.8894112690074434`*^9}, {
  3.889411312867444*^9, 
  3.8894114535374537`*^9}},ExpressionUUID->"0b4ccf13-66b2-4c46-a27e-\
f9bdb091c3f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"5", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"7", "x"}], "-", "8"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "15"}], ",", "10"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"2934c7b6-9997-41f3-989c-d66a5cd8da19"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1lnk0lWsXwI/DKcPJcM0z57zFjRANpNt+TZWpq0iiQcjnVldSSUiKREkZ
S3JDpWhQERLebSauhAZTGY8xHRyUku98f3x7rWft9fvnWXv4PWs9mh5Hdxyk
02g0in/+lw/U5txeoT3zP+QHQZ7cq7ThjtgMpUc7N2xbyCaL37qelQuaptIb
5u5lFamTvz4+yVtwn6ZuNDAVY0h10ryHPjywZZriiZnMttapkQ0TOQ55stPU
R/sPE5c6VMkusR+aDs+mKOP3K9uT6CrkolVqVfTwJBXyfVW8+kEF0rK4U2TB
mUvxou8m0U9IkU9y7pnUmnIpFdei3uWLkqRC6tG/4jS4lOvfad0llyTJ93NL
4m3bvlLGxQX1lzdLkMuDnSXT5ieo9Eo7j6g8MbLi3AyT3PKFero4ea6/SIj8
GWu0JLJnhEL/iPELVV+g+WjtQaWcEeoa01vNIW4U7ji4VT85PkJpUG+bCg8M
gc1v4REfloxQYb5bHu5f1gspSS3031cNU9iRa2NFVsC6W8cWG05zKG2nrLuC
pf2UX3buNynpfipMdiLHwoeGBuK+4eY9fdREY3jEOaYATvrrih9/3EfJiRk9
mskVQP+N2ey2LX3UA+VPg2E8Op58k7ktOaSXKrniTWefYOD0qI712sbPVMkL
sifJXhSXhH9L3+zfToWKXpFPzZfCi3YnC+4z2yliB3dQbV4KheWmGoTvf6RW
7nXv/AN+Q9HssdnXnR8ox1JvU/u631DizSe7P63eUxpZzOZn76RRQbn62y6F
VipTsdQ2vlsWnb3ZGS0h9ZRN1NOYpxmKeOnY8aj4F3XUBZMzqiHtilgaUnl0
x0QtJcnZVc6RVEIiwXNTy/4aSmL1evOUUCWcou50vjWvpEpi07SP71RGNaOt
uplSxVSdj0jUPFcFL1gPz2uGF1GjTS+sC1mqOL4/qj6DV0C5GfipSTupYnFM
nXfGhzxKe1Bc4MELVXzcGGduZvqQ8pXj5Ww+oYbcGylekyn+VO71vXG7Pqtj
CD2xerPxbtjTzis/z9BAvZuetTLrzkLUQLnl78oa6Gj0sSTSLBHeTXM5A1Ya
eMz78EhVYhZYzWamyaVoII32YtGzrBDCLjm3ea7TxJQRmdUDdi/hlD/T28ha
Ew1bT3h4dRaDnIv1uRY3TfTKWlPt9a0UbFRcnM6G8XmFa7WhYgVcjKo/klCr
ibWN7ZeMHOtgD/eH9z07FvoEdtS66dTDHQUZrYq9LBQmOoUiBF9DsvJU9z1f
FtoEd4W25TVA2LNF/YqrLGz8/bP/SZk34KF64OC2Nyw88u5zbtr4GxBRftCZ
+YmFkaTfrIdHM7hN528t+8JCrXE/o8sb3oLgGo2lNmJs9LHwf9w52gIeMxtl
X1iw0ThlquGrcyv8p+65mdl2Ngp/9R8VrGwFhYAJr8R9bMy+eVxLN7UNQg8U
Xr0ayMbRyRMZIbbvwTXwakB7NhuPpJ9KUn3UDjZZLtGvBAjcODuXt1qhA8QJ
XVahGIFMu8AWq4gOOBNS/ey0LIGP5wIlfPd0gnup9QtHbQIntgVFlzG7wejs
DXs3WwLL7s7fbwnsBueWm7diHQmMnQ+q4Qx0A0Hz7ItyI1A/K1hQovQTVI9Z
7mg5RGBRaFlZ7roekBX8s7IoksD07F//vjzSA8k6YXXsKwRGtW3qrszsgSq9
U1U7Ewh0WUn9+CDeC+zqgnTx2wSSOxdF+yx7wcllMSzpLoHaYaA0HtQLhjXL
XPqzCfz+jjKmDfUCd3XIaGsegX002lZR1T5o1u+6F1BE4GsdcpeMYx/sFaa7
9JQQ+Nw5zFstug+SX32hSZUTePMcntSm+iDI+na6cDWB5x/RLhjO9IHoc7n1
tXUEHvpAJm7U6YfNM45Vdo0EblhV/tzhej9UimlUPmohcG3b++Sy+n5QdB/T
d3lHoEHweJDuz34Q2ff75NsPBOqw6Ptv6g1AAqNjiVIHgSvq5S2EDwxAgfOC
n0EXgZp+q7QCEgbg+PYEfdlPBKrIW4gNVA9A/Uyqed1nAhXKXL5u/zYAxRby
Oda9BEof9G2lVg6CpSnDO6WPQHFmROGqvYPg3XUwoLCfQNG8lNTUq4NAaJl0
3hkgkOGae1akYhCClM8m7hskkCZQ7XmKNwiHXq7PHOLzj/sdWwZXcIBH8xQC
DoGz27g6jrs5ID9Fe+XF58kZhmT5ZQ60xUjVuPB5/JYyT6+MAzpvE5cr83nI
YvXHW1wOKFOX2h/y7+sb3Vwiyh6Ce87TvaJ8/hS3Jz1w5xDUXW/aZMyvp93Y
P4JzcQgunFfhGvHrbft80cepeAi65LpnFvj9NUem2VWMD0Gjk6RDcg+BDavy
DAzUh8F5Y8Gvn/z51LTVyfyzfRhO/9skYNhNYHnwp29iEcOwTth199pOAktY
vK7TBcNwZXwXY2k7gYX1IuVDw8NwJqiOcf89f/9+6vd2Ko/A0ucPXWXb+L7L
r42utB+BlQkCQjveEvigzObv1WEjMKz6WmBvE4G3mQFrlw2OgJ5B3nx3Ld+X
vMuKwfKjUFTYyjeCwGTXjIVh61HoGva2uoEExjxorK56MgrcLYO9l/n+Xfyz
L9uwdxR6Tjbrmebz/Zqdu5IuPQaH7PWai3IJDLRkO4cEjoHtdzNJ9SwCj48Z
bxjNGYPMf+eeLM0g0Dd+m5pL9xjE22pklqUSeLDnNMfIfBzAsv7C9WsE7ghp
DhgT+wJN2sHmM6cItGdzXHdv+gJT1jURDscI3Pr6x6Zavy+QKxOhHMR/j5sU
tJbeefcFZrN2bTbew/cz/8x119sTUFS2L879D76fbgnBdW8n4IEunNJbSyCL
nr1/ndBXMLSMf/Zal++jQ5vWb399BRm/a2xfZQLpAbJdXopcEH01/tN9lo2u
7jktRWu4kD4+qdI0xsbnNlDPdOBCvOyNAVovGz3U/yrIj+RCmH3tocLXbKyo
K7kmxOPC9Z3PdvikslEpb/tFF4lJ+GVWlku/ykb/NM6ZRysnoWz5kXyP82xk
+UsedjowCXatOfnHfdgYruxldbdpEm7X5F1rX83GLsZ3028jk9D2d93KDDYb
13CvGNoxpsCLGXpET5aNA1WF6jzTKYjTb+SkzLHQ0lds3iJ7CljivIL8lywU
Kn/+pD98GjR0/au/G7Jwz8Mt99bfngbe1uR2ZU0W5id1pV4ungb2XrckQQkW
eh1aEm00OQ2xh+sEiVFNrJZ29Qzfx4PrGnolD9I0MdJbQIFtMgOXx7RSy79r
4FKmwzmPiVmoEMlhezDV0UXLFdeJzMERuWOHf3aoYY6516IoMQe6aiamK7LV
cNvpwDN5u+eAq9bor22phsmc9NNC1XNwc3DBbOiEKq4onzyWlfoNdly85r6t
XBmtAhI8RrfOg7eK/z8VDAVMjkvLKPOcB3qMC8e+Rh6HH93viQ+dh+ezUOAT
KY8x/a/2mebPg2up1IQdQx7bHAZcY9R/QJ1EeembBVn00lnrqDf7A4Tqt3WX
tUtjeM97C/87C2CnZL8hMkgcP720/TuwZAEcUpV50yPLcEMCJoe+WwDmmeSF
NJdlyLXKGbm09BdEecQtZhkxcd/DM1fvHP4FYS9SqZgeEdwQQHS2GS1CVzDd
4L4sA78zTF4qe9BIrvTqu/odM1SW//S///jSSNKMQ1eP4lFOnx/3aQbTyI/6
PNrFNdPU0yIWUzuRRvY4KHViFJfyPszcv6aGRmpsUZco+oNDtTV/FrJfKUDS
whKHpYRMqaepkQ6hUwKkwwPDev19c9AgHTkkQaOTPkmBol8EvgPn8oXQjGV0
knSXiQ+4Pw8qIRGPqrTp5MdY+xMTcwsQtee8sNh+Pmt5VhjvopPuqqF4vYGf
nw4f6jMWISVvnzR4dleQFPaTFvdpkyaPZnpJDjgzSN+JTqhu0iRjT6fcivVk
kAYminSdZSzyiUOTtokfg9RNmeZU2LLIiV/rzWKjGeTHG2cVoutZ5BE3MX/j
EgY5nsxTOlrLJp1q2Vfsaxnk///3/wWaGvAg
          "]]}, Annotation[#, "Charting`Private`Tag$11179#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtxQ0slHEcwPHHeX/Ly93hvN0995iJeSlDrPb88zIvLS8nZ2WZeatJTpiX
iVLeolnklLcN3UQmZs3r2vOrUyqRatGhsilCkyHFuvT2/27ffchYiSiBRRCE
+5//mrd4dH13l4L/krCQa/Jt5ieFJSHY8MP3vm0KS4LAM1Up2aCwJDwsq9Ka
W6CwJGg5TVnDGIUloToj5sjFegpLQodKuozwoLAkqCf47+edFGIFwH77KLml
kgTb7nKFL8UHkbwubu8zAciK3UZE1VaQ+/VQ8rV5PtYC+rPqkrpCrLHmEFwV
IfhVa4k1A//G+8EBX8yxJtA6kjOZHsXDciG6sJr7os0Uy4b8GNW7umwTrDEQ
jnzGp4iDNYTp8tqSjjfGcM/U1SCyQx8sdU63b3obwQHOhGipSAfOuNmrz1ga
YDUhzuN9m1yui1UF+2yv3RSZFpaA5nfhwzmH1cF76HbpxqUdZrGAe9DfjAXj
qg7ZFS6bzKDUzu+zWMlkOISVTXQuMy5Lik3nxi0GZKdeMxnTjO/gjLZSvMYQ
lauZ3oyUSW3v+mHEnmcEnU17ZhUKWpxINb86/5RJsu2LHG1aokeeK8pcw5/Q
tZ5R5xJ1Nmgvxwc9oTfm6caamONto9s0K5M7G89bo1WGdFJ69AikqRdaELu6
RatptKF9Waro8tykT9otJe2dukIOvNRA3fXFofnrKlhtJGmJN/woVsfqo+ik
OquSAi3k7DZWIUeG6EpYpqdrgy4athtq4I0bITWOdOHCzh7EKgvaoPPYaGq0
aK3QwAjLRRG5se51cmOsCUrWXRGOn+BgzRC/43GNxjIXy0O5/T7hBvWmWAuU
2prc6+7Mw1ohPZZHrNMnc6w18jt7TGp/3RK1uN8JkgYKkNmAlcTPxhpdna3o
ExqTqCqttNJlio8CPYcDbq6QSFQc4tjYK8AKkX1UYYQsj8RSiPiXEGuDfgM/
coSo
          "]]}, Annotation[#, "Charting`Private`Tag$11179#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-15., 10.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"5", " ", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "-", 
         RowBox[{"7", " ", 
           TagBox["x", HoldForm]}], "-", "8"}], 
       RowBox[{
         TagBox["x", HoldForm], "+", "1"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8894114573895683`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a74890ab-e0fa-41f2-889c-19aac4443b77"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Determining Quadratic Rules with unknowns", "Subsection",
 CellChangeTimes->{{3.889411573746808*^9, 
  3.889411592362458*^9}},ExpressionUUID->"1c6845db-1adc-4b3f-a5f2-\
3b58625713f5"],

Cell["\<\
For three unknowns:
Let the unknown coordinates be (1, -4), (-1, 10) and (3, -2)\
\>", "Text",
 CellChangeTimes->{
  3.889411595844808*^9, {3.889411657523043*^9, 
   3.889411698667322*^9}},ExpressionUUID->"ed8dcb46-a392-4ca9-b897-\
8eec06c2797c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}], " ", "+", " ", 
   RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "3"}], "}"}], "]"}], "==", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "10", ",", 
      RowBox[{"-", "2"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.889411707504859*^9, 3.8894118579834456`*^9}, {
  3.8894119119072113`*^9, 3.8894119550032444`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"68f8cef0-bc8e-49c0-b250-fa4466889de3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "2"}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", "7"}]}], ",", 
    RowBox[{"c", "\[Rule]", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8894119315345716`*^9, 3.889411955326287*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"facc0ba2-9cd3-4b89-bb76-a395929dc200"]
}, Open  ]],

Cell["\<\
For one unknown and two x intercepts:
x-intercepts, (2, 0) and (-3, 0) <--> Passing point (4,5)\
\>", "Text",
 CellChangeTimes->{{3.8894119735412636`*^9, 3.88941202524677*^9}, {
  3.88941205776865*^9, 
  3.8894121110626154`*^9}},ExpressionUUID->"9b323f36-837e-48b8-8cf3-\
6368ee1bdbc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"y", "=", 
    RowBox[{"a", 
     RowBox[{"(", 
      RowBox[{"x", "-", "x1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", "x2"}], ")"}], "\[IndentingNewLine]", "Sub", " ", 
     "in", " ", "the", " ", "two", " ", "x", " ", "intercept", " ", "x", " ", 
     "coordinates", " ", "for", " ", "x1", " ", "and", " ", "x2", 
     "\[IndentingNewLine]", "Finally", " ", "sub", " ", "in", " ", "the", " ",
      "known", " ", "point", " ", "and", " ", "solve", " ", "for", " ", "a", 
     " ", "in", " ", "root", " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"4", "==", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "+", "3"}], ")"}]}]}], ",", "a"}], "]"}], "/.", 
   RowBox[{"x", "->", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.8894121145916452`*^9, 3.8894122098537664`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1302b5a8-38c9-4a59-9a6d-f2cc14d73fe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    FractionBox["1", "6"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.889412204596607*^9, 3.889412210222726*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"f95ee249-247a-4d6c-83b1-7c7409349743"]
}, Open  ]],

Cell[TextData[{
 "Therefore the full equation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1f43982d-0841-495f-91a7-795f44db8199"],
 " = y"
}], "Text",
 CellChangeTimes->{{3.8894122274490547`*^9, 
  3.8894122537117176`*^9}},ExpressionUUID->"717deaa4-30a4-4aed-a42e-\
64ffccf9439f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Questions", "Subsection",
 CellChangeTimes->{{3.889640904286933*^9, 
  3.8896409058638515`*^9}},ExpressionUUID->"cdf82907-7a39-4261-ab44-\
4817fb2cbccb"],

Cell["Distance Formula:", "Text",
 CellChangeTimes->{{3.8896409102891703`*^9, 
  3.8896409238516707`*^9}},ExpressionUUID->"8a7cdd36-5406-4561-baa1-\
c56a4b4c2488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"e6279769-5f73-4d82-8d76-993e445247e2"],

Cell[BoxData[
 SqrtBox["29"]], "Output",
 CellChangeTimes->{3.8896409314642577`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ff086ef3-d711-45aa-aec3-5c8e516eefe2"]
}, Open  ]],

Cell[TextData[{
 "The values of m for which the parabola y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"m", " ", 
      SuperscriptBox["x", "2"]}], " ", "+", " ", "x", " ", "+"}]}], 
   TraditionalForm]],ExpressionUUID->"9b1640e9-56a7-47b0-9e52-ab1c31558a02"],
 " 3 intersects with the linear graph y = ",
 StyleBox["m x",
  FontSlant->"Italic"],
 " + 2 exactly two times is: ",
 StyleBox[" ",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.889640950682259*^9},ExpressionUUID->"f6f9bb86-93ff-43e8-aac7-\
1deabeed759d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", " ", 
       SuperscriptBox["x", "2"]}], "+", "x", "+", "3"}], "==", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "2"}]}], ",", "x"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Find", " ", "Discriminant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"6", " ", "m"}], "+", 
     SuperscriptBox["m", "2"]}], ">", "0"}], ",", "m"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8896409664259667`*^9, 3.8896409750697575`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a2698e7d-c0fc-4629-87e3-0c28ee927136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "m", "-", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"6", " ", "m"}], "+", 
         SuperscriptBox["m", "2"]}]]}], 
      RowBox[{"2", " ", "m"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "m", "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"6", " ", "m"}], "+", 
         SuperscriptBox["m", "2"]}]]}], 
      RowBox[{"2", " ", "m"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.889640957722417*^9, 3.8920191669746747`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"edd144fe-e137-435d-80cc-2ca26ff78e77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "<", 
   RowBox[{"3", "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}]}], "||", 
  RowBox[{"m", ">", 
   RowBox[{"3", "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]}]}]}]], "Output",
 CellChangeTimes->{3.889640957722417*^9, 3.8920191669985867`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"7c5b3dc2-8366-4b19-a086-8da9c2ce087c"]
}, Open  ]],

Cell[TextData[{
 "The graph  y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], " ", "+", " ", 
    RowBox[{"a", " ", "x"}], " ", "+", " ", "3", " "}], TraditionalForm]],
  ExpressionUUID->"060f9e19-6e9c-4a2f-9256-8e82859df622"],
 ",   where ",
 StyleBox[" ",
  FontSlant->"Italic"],
 "- ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["6"]}], TraditionalForm]],ExpressionUUID->
  "537ca9d7-ffb5-489a-9833-0671663111e8"],
 " < a \[LessEqual]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["6"]}], TraditionalForm]],ExpressionUUID->
  "36b2db42-ea21-4ab5-8084-34262aaef07a"],
 "   could have how many x-intercepts? "
}], "Text",
 CellChangeTimes->{{3.8896410205593*^9, 
  3.889641024263069*^9}},ExpressionUUID->"ba99cc50-ed30-41d7-b02f-\
02e950078cee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"2", 
   SqrtBox["6"]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FormBox[
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["x", "2"]}], " ", "+", " ", 
       RowBox[{"a", " ", "x"}], " ", "+", " ", "3", " "}],
      TraditionalForm], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "4.89898"}], ",", "4.89898"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"ff46eebd-2dac-4032-8de8-2432f0a96cc2"],

Cell[BoxData["4.898979485566356`"], "Output",
 CellChangeTimes->{3.889641032078455*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"17528669-9c6a-4d75-8784-3d56279c07b9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 4.89898, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -4.89898, 4.89898}}, Typeset`size$$ = {
    419.99999999999994`, {133., 138.7164612031699}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -4.89898}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[2 $CellContext`x^2 + $CellContext`a$$ $CellContext`x + 
        3, {$CellContext`x, -10, 10}, PlotRange -> {-10, 10}], 
      "Specifications" :> {{$CellContext`a$$, -4.89898, 4.89898}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{771., {185.77424324816093`, 193.22575675183907`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8896410321024456`*^9, 3.8920194780417247`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"22c1bc52-a85c-489d-ae3d-49751c2bb451"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cubics and Quartics", "Section",
 CellChangeTimes->{{3.892748580152279*^9, 
  3.892748588399276*^9}},ExpressionUUID->"f5ce02db-af3a-4a97-a119-\
5aab62e2f581"],

Cell[CellGroupData[{

Cell["Polynomial Division", "Subsection",
 CellChangeTimes->{{3.8944253791592045`*^9, 
  3.89442541696535*^9}},ExpressionUUID->"f8e81e89-7ebf-408c-b0aa-\
ad1018ebd0d8"],

Cell["\<\
Polynomial Division - gives the quotient(value when one thing is divided by \
the other) and remainder in the form of {quotient, remainder}\
\>", "Text",
 CellChangeTimes->{{3.8944254078326406`*^9, 3.8944254120851374`*^9}, {
  3.8944255492685194`*^9, 3.894425550466696*^9}, {3.8944255912850275`*^9, 
  3.8944256041479297`*^9}, {3.8944256374821415`*^9, 
  3.894425669812682*^9}},ExpressionUUID->"67e83fd9-f52e-4b46-a853-\
2822fc027c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialQuotientRemainder", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.89442557171743*^9, 3.894425586607147*^9}, 
   3.8944256309084945`*^9},
 CellLabel->
  "In[288]:=",ExpressionUUID->"12502d0a-b697-416f-9160-442f3509fc5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"2", "+", 
    RowBox[{"2", " ", "x"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8944256325272226`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"86fb64f7-903e-4f91-9a9c-fb63ca8fea63"]
}, Open  ]],

Cell["\<\
Polynomial Remainder - gives the remainder and ignores the quotient\
\>", "Text",
 CellChangeTimes->{
  3.8944256854620275`*^9, {3.894425745367878*^9, 3.894425753012105*^9}, {
   3.8944258271988273`*^9, 
   3.8944258283047276`*^9}},ExpressionUUID->"d24518ed-1baf-4ea7-b797-\
8df776b97713"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.8944257380331206`*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"5610ea00-3397-4e55-a1bb-d55b4186105f"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.8944257422633066`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"0ad6453f-7f03-4ff2-b1c5-825a2e92ae97"]
}, Open  ]],

Cell["\<\
Polynomial Quotient - gives the quotient, dropping the remainder (ignoring it)\
\>", "Text",
 CellChangeTimes->{{3.8944257652907076`*^9, 3.8944257767145934`*^9}, {
  3.89442582230105*^9, 
  3.8944258248237767`*^9}},ExpressionUUID->"0dff5f96-92aa-427e-b3cf-\
e461d3c151d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialQuotient", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "4"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.8944258173084335`*^9},
 CellLabel->
  "In[290]:=",ExpressionUUID->"ce4d5eea-4fb5-41f2-abc6-9e95bce619e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.8944258181729937`*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"dc621201-8cb6-4513-b0ec-86abbd0666ba"]
}, Open  ]],

Cell["\<\
Polynomial Division - Greatest common factor (if output is 1 the 2 \
polynomials are relatively prime, meaning they share no common positive \
factors other than 1)\
\>", "Text",
 CellChangeTimes->{{3.894425940847477*^9, 3.894425983008092*^9}, {
  3.894426015016901*^9, 
  3.894426022910237*^9}},ExpressionUUID->"8919e327-622c-4024-8dd6-\
bb5f77f56fab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialGCD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "^", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "x"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.894425965039977*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"fa657af9-962f-4bde-a21c-461ecf02f00f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.8944259664655848`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"bcaaba07-cdb1-4933-a860-32c55b4a47a5"]
}, Open  ]],

Cell["Lowest Common multiple for 2 or more Polynomials", "Text",
 CellChangeTimes->{{3.8944260626431494`*^9, 3.894426085323209*^9}, {
  3.894426128643573*^9, 
  3.89442613031557*^9}},ExpressionUUID->"09741766-bf27-4d11-a90a-\
43e7429780b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialLCM", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "^", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "x"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.894426088065011*^9, {3.8944263139599733`*^9, 3.8944263153132358`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"2351169b-9e64-4ea2-baf3-d1d351984856"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.894426088609105*^9, 3.8944263158081846`*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"5f37f107-9445-4838-a0c8-4ffb8fbf4ffb"]
}, Open  ]],

Cell["Cancel out common factors", "Text",
 CellChangeTimes->{{3.894426305479839*^9, 
  3.8944263242769732`*^9}},ExpressionUUID->"ab591c0e-0e40-4601-88b6-\
6cd493b21dea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"x", "-", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{3.8944263322569222`*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"91b20ef1-8ab8-4eb2-9e2f-392c5e7473b7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["x", "2"]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "x"}]]], "Output",
 CellChangeTimes->{3.8944263336105165`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"9abe7b62-d0b6-49a7-bf20-f060f1a36621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.894426384959447*^9, 3.894426390924462*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"86bcfaf6-110a-4747-9f14-b1d8b87284ba"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.894426391264407*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"8b233120-b15a-43c8-acfe-6581ceed674f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "-", "1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8944264121028233`*^9, 3.8944264142234187`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"f5231bdd-4232-4437-b86a-60e9d76a4422"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.894426414776657*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"68a723a4-9518-4c8e-a274-0fe55db4697c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for Variables", "Subsection",
 CellChangeTimes->{{3.8927486875395927`*^9, 3.89274869951772*^9}, {
  3.8944253576972327`*^9, 
  3.8944253629222846`*^9}},ExpressionUUID->"cf83b068-105f-44e7-a194-\
5571a67509a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolveAlways", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"6", "*", 
      SuperscriptBox["x", "3"]}], "-", 
     RowBox[{"7", 
      SuperscriptBox["x", "2"]}], "-", "x", "+", "2"}], "==", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "*", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"b", "*", "x"}], "+", "c"}], ")"}]}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8927485966255045`*^9, 3.8927486728430347`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"77f36110-e8ae-4d07-bdf0-bfd0648569dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "6"}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", "2"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.892748673669567*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"684d32bb-4894-4470-936d-6a4a6d1a1f8e"]
}, Open  ]],

Cell["\<\
Find a solution for x (x-int) that is near 1.5. (Similar to bisection method)\
\>", "Text",
 CellChangeTimes->{{3.893267605831708*^9, 
  3.893267633337006*^9}},ExpressionUUID->"18bf33b9-1233-4591-8848-\
75024f25d0b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", "x", "-", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8932674819082384`*^9, 3.8932675398089547`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"51119fb5-b32b-403a-984c-2b97e67eaf52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.5213797068045676`"}], "}"}]], "Output",
 CellChangeTimes->{{3.893267537108573*^9, 3.8932675411001525`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"a942e61b-f330-4576-b8d0-bb7e6a9eee86"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Domains", "Subsection",
 CellChangeTimes->{{3.893871854081629*^9, 
  3.8938718753957105`*^9}},ExpressionUUID->"27298394-c5e8-40a8-8572-\
a8d9ed8d0f47"],

Cell["Domain on a graph (simple method)", "Text",
 CellChangeTimes->{{3.8938718880717163`*^9, 
  3.8938719032622957`*^9}},ExpressionUUID->"4987dc61-a319-4077-912b-\
dc3b8f41fbdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"20", "-", 
      RowBox[{"2", "x"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"30", "-", 
      RowBox[{"2", "x"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "1200"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938719094623213`*^9, 3.893871949784244*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"df86d032-cb29-4ffa-8a25-5cdbc5447421"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nc8lusfB3B7PpPq15DRI1saiDp6PkZGqWQUUidPopCthFJUSjzPnYQT
QtFAQlIdIuIkq6FQViWJ0zCyKvld56/79X5d9x/X9X19lwrP336viJCQkLSw
kNB/34yjPIkVHmfXbWNdKCqlKXNrW5Vttyvv5woytCdl/Wa4s/9UxigrH+Zy
C7uaR/bTkfEwQUlc+Qw3IG/bcUXeYviahB6YVPqL23KufTzPXhetP/clDSvd
4O7vuSIYWGUCyc736l+U7nPFnhWbp03YIrshM/BfpSdc6zrr+JpINxTeOtPp
u+wNl1urY3Y10xde3Od/fQ7q4346dGOfaFwI/Po1+0oLB7lFjluuGq4Kh4zK
CfVeo2Hu19abxaadUeCzGrWyd49x37+ooBc5R4PX6Vgl2jTBtXtj7n++/AQC
607w/NV/cDdkfn79Z8cpFAfQHObbzHBljN4/q8o4jewIn6Hl24XQ+M54YKdD
HKIzf239/lkY00odK+v+Pguh1reoCBdFhZeJz8mv8TgxWJkdflwUN37PPto5
Fg9poQwR49OiYLVFTK2cioecrkvtnQuiULP1mWgVTsDS2OdWt4pEse7oA/vh
OQnYsLZm8+WPoriCZyOJaxJw/soVt9P2YuAH3f8aHZMAtRDPMEctcQjpfpZV
p/Ghu6bXIXO5OPISVHS/M/nQF3LWGzIUR0P7wvxKeT7M4m0+RpmLY6q3pXLj
Ij525eg45ruJw782ZIulFh/JL0f1RATicBEO83pgxYe4QdTArTFxHPHaKVR2
jI8P4ynbZB9IQKS+YH3/EB+XTVcFdz+SQEBihLLdVz7+TGgR3GqQwN4A3szd
ET7eqIo/ceiQQLi7Y9XRKT6eOwStTR+TwMhIU8AncQEqi22VdbUk8fovvVEd
ZQFSDggPbU6RxEBw8a0j9gI43k+XULkkiUhpVukZJwHkxI04YzmS6D7l+STR
WQB+up9bSokkYla1a6TvEuBEY2dLb7MkdJc1Pj7rLUCAZtntADEplB5U+Npz
XIAN/d5HEgOl0Fjjuti5UADLI5wCizApNISWZfwoEsBsbtebiaNScJlKcr54
W4A16zcZ7YiXQtGj9Kjn9wTQytUb41yTgmOHeqbiIwFk937fd6dLCpkqt07p
twvQ9OGIY4eVNB6GpsnazwhQH2kYE7dZGndOBpelzwpQO+db8R9O0hikhh1H
hShUWOxmZvOkIZWvZGgoSqEgx6xh/xFptEsX3LkpSSHBQxI/S6TxVLzqzQ4W
hc0fKG1FRRm0pbyxLFOm0KT94aWbqgz8UkyqMlUobAxefTRNi1jIjnl6CQVr
kZ5n81fLYEGp8WonVQpmytoH5e1kYKahlP9OnYKBW91DqWgZKISqbXy0jILC
y2mnsX4ZlGrV5+etpXBx0abZFZ9lwImggvz/oLBgT9b1gFEZXNj9YN4qEwrz
Ri1/fvktg1HBz8mydRRYrKSsT/+TRaWEFKfYlIKo7bJ/u21k0XzSydzfisLQ
I96x+puySHfw+CxvT0HpXIc3v1QW0UVN62uIHXdtdnIsl8UHhTl2/g4UKqeM
td7Wy+KqrmZYnSOFRF32y8k+WYwFNirwtlNYm1Klrr6QBpv0oSE3NwoBHgZy
X5RpsGaePzBBfHVF/q8SdRpG71bm8HeS+zUlP19nQEPr7dMryndR+CDkF7HN
job0VMtGMXcK8d4KT0+eoqFPx2Ol614K1asT729MoGFqvmB+L/GEmFQOO4mG
gd3vynieFHZnjoVlZNPwjt6v4OlFQf9lw5I7FTQoKNUn7dxPodvk8MEPozTA
YNKTeYCCnOy33XnTNHjNfByKIrbu8NgYIETHX1aXtb4RlwTZKf+i03HDx6Pn
iR+FU9fUG+Q16bAxOLg4IIDCMnbbYvM/6TDof6JzLJjCx4SP0Rf20uHrH+rT
RpwhMzkw4ENH5vf2RO0QCjSx+SXxYXQ4+0WlvyAemnCxbDtHx+vzp7LkD1K4
HOydr5FKR7b3fC13YpfhcFbEJTq0jbsybhLXD6a9UcqnY2DtXQvzQxRyu7r9
9tfScdd2MMk9jIKby9fW8gY6zLYZh14lntP224jxnI5tjoamQ8TRT5VEb3fT
cbjge7rfYRKvGveUXxN08EyL93mHk3y73l8l0GQg4EpG+LJICi9VJ1Tf6zGw
sG5Em0d8NlsiTt+QgdcvPzUmEf+4qO742oyB6T+OdEwQdyTs/7TEjYGgnAOa
hUcoUDLhm0J5DBzKl3R6TWwVG1fyeB8D2zOqAkSPUig7lh/pG8oA7aHlYUfi
88FfWGV8Bn6Gvm0dJN4wPBMqdYEBvnXqSVoUBZEDjE7XNAZqRAY1lhEHeOrl
zl4j9y2QW+9HrNHHlbEvZGDxjg2V8cS9f9r555Qy0OTfoZlHvNkl0NimmoFM
mzsd74gl2o5fSnvMwEgzT+EX8QP7RNGvzQwUGKo6zD1GQcf2dnPiGwbur8q6
aEH8of7Ryv63DKyLvZ/vSpy2/mXK6gEGEkxyivyJZbjj7l1jDAzb5ScnE4eZ
akiV/WBgpiZl6AbxR/MdhQJhJr61nxSrIHa05Dvul2Ji5aviD03ENdbVP8yY
TKwQcj7bRbx84/cshXlMOF0qnRoivrRJ3WpCgQmZcVHdKWKaneuXpxwmym2i
NcSOUwi3Tzh/Q4uJ1nc+/zKIPzk+NI5ZQc5FZkLnE2/bPtbrZsRE70hgvTJx
rYvaKUMuE3nfJfrUiVe6ueiwLJmItZuq0yXO2hX/YtCW/L8hOnAlMcO9KuyR
AxOKmu/6DYgj94wqZrgyUbR8K8eI+N+9S+sOujMxc5WhZUzsus/Zx24fE8HP
nX78d17vfZat5c/E4XFe0mpiwwOVd0UPMnHEOWhKnzjHf2RndyQTn7gP1VYQ
ywWpit2NYUJt5LSSDvGxkO15VBwT2cVSfUuJvx6Ms/M+x0TNPxGBisRuhx9M
mKcyMRmq2DiXuCFiOH1xJnmfmO6wLLHRUY75ZC4TFvf63goRXz22bfBZAYl3
29GM7ySec2LOCPJuM9F1ZY3aAHH0yQqDE3+T93k6RHQQD8d+69xZzcQ8D/GM
euKmeCcN9lMmLFXVrHKJ1whOtwy9YmIgkP7sHPH1c+UhtV1M1DGj1I4Qn0hW
qT40RM63jv5hRzya6ui1dYQJ4eO+M6uJd6fF0rWnmBCdx4tXJFZ8NqHzTYQF
/9iieZ9IfjptZQm5SbBQ+PW4XCNx/AvN1nppFo4/r+ouIP7x0u3wZRYLAqWg
Pl/ittc1dU6KLEyGWJf0kHqi7+hKrVFh4ZTd3OX3iC26xn30lrLw+8XyKIq4
pEdDTlqHBZf3FokmxPw+/q4KYxb21oQlniH1W+dxfYWmCQtjvvbZLsS/+qvF
ksFCzaBbjAax96fvef5WLFJv49U1pB9YfXGdXOLEgsn6Jr3BCJK/c2Jao5xZ
GLdL/VxE/H1t/q2uHSxs5XPPHCLOivvplcxj4Wid6B5h4h/q6R3SASx4rcm6
JEn6UwGv+/5wHAuxH9j7ekj/E4kTT97EJ+8t2GSSROxcrBuUd46F3Rbj49bE
4kJHtTxSWfgo4yt3i/TPXRmKae25LEDK4PeBUDJ/Ov6MrHzIwmrvxa1lQRQ8
Z2OdF9Wy8P7Zi2lX4gq1Iv2wxyyE556Q/B1IYX+o0JcVLSReVdUdIK6Ry96Z
28kC+2mP831/CiGb3q+Ln2Ah8Ge88EFf0g9rPIRdddhwfvA7RonMq2HTNwuP
6LFxq3bk6A0PCpLVW/SzVrLhu+XE2ZXEhlVrvD4asSGqa/rGdA+FpHJWc9B6
Ntb+reXgRObhltKK1LO72ODdMOvcQubnP7lzlj+g2GBwS04nkXncoxpn8/Y8
Gztub2ELE49fmeWJprAhuLit2JfMb9XLQxdsMthIm3UxMiXzPfrSw5+vbrDR
8crKq3cLhXUpvo+/1rARyl0fOLyBwp3TtbuUx9m45zN22BMknzc0zo+dYiNk
99S+a1yyj9BevPjykw2ujdemAbJvHKN6LctF5DBM95/cQ/YR29Qfy7ax5OAk
ltZmt4bC+2vLZ89qy2H0hvT41CrSTx6nZ066y+H47/1bTqiR+IuHvm1pkUPA
zKE9SVIUFio9af/5XA5lSmujcsn+1WK0+KnGKznU3wuuuiNB4uVb9yC6Uw55
B8ULW8VIP2+dm2b4SQ7N+p+txYXJfMwqc7okLA9e/iVu1KgAH9ZONRzQl4eH
BM9C9YUAe4Ii7tAuyiO+kD0ZGC+A4cqeO5oZ8mi59rxLP04AmVGUWWbJw6X/
yqqJWAGKAiXuHrsqj4U2gwYhMQL8Cjh373uJPB6H9iTvDBcg2f9aeVejPD4e
ur7go5cAT3xbqwtm5HHqoU/6M1MB9Ly0W2zd56DXV99DiezjT+V0ZEON5yJf
ZNJRdhkf5YXRaTqi81Au7pj81+4ERAhr2TV1z4Naa+BDbe94yHSFW/uV/g9R
PKXrY+5n0X9VJSkzcj5yU7WntF3ikKSxQOy+0wJcKDCIKVc/A+qi52N35YWY
/0qzbvZHLFyTdrbQBhbCMXb1qMTjU5iyyJ3OrFwE7b4klyqfk+jrNwuriVWA
6yI3mWmFE7hssmJRs/timA3IBDOuR+PmyVC2l64i9K4qWUlbHEes056NouOK
+Pyx+u32migYdGXfiG1Wgrf1TGhDWSRSNdNuNm9UxtHCrJ41rw8j6mFC6sb7
yjBafzfHrPwgNi1yym1QVUGKX1C3bUEwTP0e72CfUcHb1Xy5qFcByFTgqTaN
q6B8yZwHked8oProWvLmHUvw9r7PqsqxvaB0a7ReVC7BvVVLc37F7YbnmNjz
J1ocOO73nqzLcAKveFT5jICDHIeu2c0HLOEb7fBrwzkO7trvf9XNtkSoQ2k7
7TwHo1kPFoaXrcfp8VA+lcyBxPcNcztnLVBoPP0zJYND6rn3Jve8OaarZ9uu
5nOgWqUXf7ECoF7QEmofc7BeW/A1c5UhLl45sO/UEw6Ukp7NNT5mgCshLebW
jRxw1iYs/dakj7J51I/GFg7mtl3glniuQper/L7WV8Sbbi9NTlsO9b4F5u/7
ODBZpzdSN1cNy0vDFXP6OUgKk0rMKVHFmpOd03sHOBA019KqtnBgq55RNDjE
gcuYitz1OGUE+Sgrjoxw4BQ5vyNNYh4i/zg+XTLGwdtXRu2LLeRxkv7+Zcg4
B39L0s4viGYh9daVs1NT5L2R0XG/f4vj8jExr79/cND+siKi9YgQ8rfuNYv8
xcGGX4k9a3+Oc0uX/LN43W8OFgbzMw5P93Mrx9SmZ2c56Ll73snSU5z7f6+H
cu8=
       "]]},
     Annotation[#, "Charting`Private`Tag$21488#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-10., 1200.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.893871951995185*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"84793247-4abd-4b02-bca8-7ca1fce3965c"]
}, Open  ]],

Cell["\<\
Domain on a graph (more complicated way -> shows more of the axes but keeps \
domain the same)\
\>", "Text",
 CellChangeTimes->{{3.8938720102288074`*^9, 3.8938720510444613`*^9}, {
  3.9222549706786957`*^9, 
  3.922254971148178*^9}},ExpressionUUID->"37bc4c64-4e46-4230-a130-\
abff9e2ee44a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"20", "-", 
      RowBox[{"2", "x"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"30", "-", 
      RowBox[{"2", "x"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "500"}], ",", "1300"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8938719705345173`*^9, 3.893871995170796*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2c1b8a25-a5c9-46d1-bebf-6d61be0bd27f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mzsd74gl2o5fSnvMwEgzT+EX8QP7RNGvzQwUGKo6zD1GQcf2dnPiGwbur8q6
aEH8of7Ryv63DKyLvZ/vSpy2/mXK6gEGEkxyivyJZbjj7l1jDAzb5ScnE4eZ
akiV/WBgpiZl6AbxR/MdhQJhJr61nxSrIHa05Dvul2Ji5aviD03ENdbVP8yY
TKwQcj7bRbx84/cshXlMOF0qnRoivrRJ3WpCgQmZcVHdKWKaneuXpxwmym2i
NcSOUwi3Tzh/Q4uJ1nc+/zKIPzk+NI5ZQc5FZkLnE2/bPtbrZsRE70hgvTJx
rYvaKUMuE3nfJfrUiVe6ueiwLJmItZuq0yXO2hX/YtCW/L8hOnAlMcO9KuyR
AxOKmu/6DYgj94wqZrgyUbR8K8eI+N+9S+sOujMxc5WhZUzsus/Zx24fE8HP
nX78d17vfZat5c/E4XFe0mpiwwOVd0UPMnHEOWhKnzjHf2RndyQTn7gP1VYQ
ywWpit2NYUJt5LSSDvGxkO15VBwT2cVSfUuJvx6Ms/M+x0TNPxGBisRuhx9M
mKcyMRmq2DiXuCFiOH1xJnmfmO6wLLHRUY75ZC4TFvf63goRXz22bfBZAYl3
29GM7ySec2LOCPJuM9F1ZY3aAHH0yQqDE3+T93k6RHQQD8d+69xZzcQ8D/GM
euKmeCcN9lMmLFXVrHKJ1whOtwy9YmIgkP7sHPH1c+UhtV1M1DGj1I4Qn0hW
qT40RM63jv5hRzya6ui1dYQJ4eO+M6uJd6fF0rWnmBCdx4tXJFZ8NqHzTYQF
/9iieZ9IfjptZQm5SbBQ+PW4XCNx/AvN1nppFo4/r+ouIP7x0u3wZRYLAqWg
Pl/ittc1dU6KLEyGWJf0kHqi7+hKrVFh4ZTd3OX3iC26xn30lrLw+8XyKIq4
pEdDTlqHBZf3FokmxPw+/q4KYxb21oQlniH1W+dxfYWmCQtjvvbZLsS/+qvF
ksFCzaBbjAax96fvef5WLFJv49U1pB9YfXGdXOLEgsn6Jr3BCJK/c2Jao5xZ
GLdL/VxE/H1t/q2uHSxs5XPPHCLOivvplcxj4Wid6B5h4h/q6R3SASx4rcm6
JEn6UwGv+/5wHAuxH9j7ekj/E4kTT97EJ+8t2GSSROxcrBuUd46F3Rbj49bE
4kJHtTxSWfgo4yt3i/TPXRmKae25LEDK4PeBUDJ/Ov6MrHzIwmrvxa1lQRQ8
Z2OdF9Wy8P7Zi2lX4gq1Iv2wxyyE556Q/B1IYX+o0JcVLSReVdUdIK6Ry96Z
28kC+2mP831/CiGb3q+Ln2Ah8Ge88EFf0g9rPIRdddhwfvA7RonMq2HTNwuP
6LFxq3bk6A0PCpLVW/SzVrLhu+XE2ZXEhlVrvD4asSGqa/rGdA+FpHJWc9B6
Ntb+reXgRObhltKK1LO72ODdMOvcQubnP7lzlj+g2GBwS04nkXncoxpn8/Y8
Gztub2ELE49fmeWJprAhuLit2JfMb9XLQxdsMthIm3UxMiXzPfrSw5+vbrDR
8crKq3cLhXUpvo+/1rARyl0fOLyBwp3TtbuUx9m45zN22BMknzc0zo+dYiNk
99S+a1yyj9BevPjykw2ujdemAbJvHKN6LctF5DBM95/cQ/YR29Qfy7ax5OAk
ltZmt4bC+2vLZ89qy2H0hvT41CrSTx6nZ066y+H47/1bTqiR+IuHvm1pkUPA
zKE9SVIUFio9af/5XA5lSmujcsn+1WK0+KnGKznU3wuuuiNB4uVb9yC6Uw55
B8ULW8VIP2+dm2b4SQ7N+p+txYXJfMwqc7okLA9e/iVu1KgAH9ZONRzQl4eH
BM9C9YUAe4Ii7tAuyiO+kD0ZGC+A4cqeO5oZ8mi59rxLP04AmVGUWWbJw6X/
yqqJWAGKAiXuHrsqj4U2gwYhMQL8Cjh373uJPB6H9iTvDBcg2f9aeVejPD4e
ur7go5cAT3xbqwtm5HHqoU/6M1MB9Ly0W2zd56DXV99DiezjT+V0ZEON5yJf
ZNJRdhkf5YXRaTqi81Au7pj81+4ERAhr2TV1z4Naa+BDbe94yHSFW/uV/g9R
PKXrY+5n0X9VJSkzcj5yU7WntF3ikKSxQOy+0wJcKDCIKVc/A+qi52N35YWY
/0qzbvZHLFyTdrbQBhbCMXb1qMTjU5iyyJ3OrFwE7b4klyqfk+jrNwuriVWA
6yI3mWmFE7hssmJRs/timA3IBDOuR+PmyVC2l64i9K4qWUlbHEes056NouOK
+Pyx+u32migYdGXfiG1Wgrf1TGhDWSRSNdNuNm9UxtHCrJ41rw8j6mFC6sb7
yjBafzfHrPwgNi1yym1QVUGKX1C3bUEwTP0e72CfUcHb1Xy5qFcByFTgqTaN
q6B8yZwHked8oProWvLmHUvw9r7PqsqxvaB0a7ReVC7BvVVLc37F7YbnmNjz
J1ocOO73nqzLcAKveFT5jICDHIeu2c0HLOEb7fBrwzkO7trvf9XNtkSoQ2k7
7TwHo1kPFoaXrcfp8VA+lcyBxPcNcztnLVBoPP0zJYND6rn3Jve8OaarZ9uu
5nOgWqUXf7ECoF7QEmofc7BeW/A1c5UhLl45sO/UEw6Ukp7NNT5mgCshLebW
jRxw1iYs/dakj7J51I/GFg7mtl3glniuQper/L7WV8Sbbi9NTlsO9b4F5u/7
ODBZpzdSN1cNy0vDFXP6OUgKk0rMKVHFmpOd03sHOBA019KqtnBgq55RNDjE
gcuYitz1OGUE+Sgrjoxw4BQ5vyNNYh4i/zg+XTLGwdtXRu2LLeRxkv7+Zcg4
B39L0s4viGYh9daVs1NT5L2R0XG/f4vj8jExr79/cND+siKi9YgQ8rfuNYv8
xcGGX4k9a3+Oc0uX/LN43W8OFgbzMw5P93Mrx9SmZ2c56Ll73snSU5z7f6+H
cu8=
       "]]},
     Annotation[#, "Charting`Private`Tag$21976#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., 30.}, {-500., 1300.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.893872001781831*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"21c1c12f-bc19-413c-9ffa-17cbdba05e4f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Maximums and Minimums", "Subsection",
 CellChangeTimes->{{3.893872257983318*^9, 
  3.8938722617306337`*^9}},ExpressionUUID->"ae2679df-35ba-4967-9896-\
208c9941dc1a"],

Cell["Finds a maximum between the x values of 0 and 10", "Text",
 CellChangeTimes->{{3.893872270606536*^9, 3.893872281624526*^9}, {
  3.8938723974756684`*^9, 3.89387240103168*^9}, {3.8938726029533644`*^9, 
  3.8938726091674995`*^9}},ExpressionUUID->"7a24d4ad-58e6-4374-970f-\
01a148ec8f58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893872289869191*^9, 3.8938723073360815`*^9}, {
  3.8938723649699645`*^9, 3.8938723776724815`*^9}, {3.8938725969822187`*^9, 
  3.8938725993981714`*^9}, {3.893872838953128*^9, 3.8938728396774035`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"03fb0fc0-4689-42be-b67b-10895c75ce87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1056.3058954611904`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.9237478373513657`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8938724029303308`*^9, 3.893872599726246*^9, 
  3.8938728401928215`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e4e35bc8-aa01-499e-8fe6-046c20d1f808"]
}, Open  ]],

Cell["Finds a maximum near the x value of 4", "Text",
 CellChangeTimes->{{3.893872625011407*^9, 3.8938726349877677`*^9}, {
  3.8938729825277677`*^9, 
  3.8938729831634293`*^9}},ExpressionUUID->"feaf1e9d-097f-4cd0-9d06-\
a6a387c539d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938726440792503`*^9, 3.8938726480613785`*^9}, {
  3.8938728431148825`*^9, 3.8938728437203712`*^9}, {3.893872953250568*^9, 
  3.8938729766987257`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"8e506cb1-d3d2-41a4-aeaa-a153421ba11d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1056.3058954611904`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.923747814892458`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8938726488625193`*^9, 3.8938728443664074`*^9, {3.893872954707869*^9, 
   3.893872977114286*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"957667b4-2be1-40b4-8fe4-95a2dbeac088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"100", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"600", "x"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "1200"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8938726828765817`*^9, 3.89387270720767*^9}, {
  3.8938727492373133`*^9, 3.8938727507585588`*^9}, {3.893872833041506*^9, 
  3.893872833879015*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ea65b9b1-671a-4f01-b0a8-78821ac22416"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vubHwgIxH5+jmasw5/9p/mn6
       "]]},
     Annotation[#, "Charting`Private`Tag$23882#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-10., 1200.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8938726989703255`*^9, 3.89387275115374*^9, 
  3.893872834386372*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d3fe0851-0b27-481b-9548-a05cf6a0f318"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equation Forms", "Subsection",
 CellChangeTimes->{{3.922257170190547*^9, 
  3.922257176416916*^9}},ExpressionUUID->"53dd8be2-017d-4482-8cb4-\
653cb7afcdf8"],

Cell["\<\
Cubics:
(what you can see), other features it has\
\>", "Text",
 CellChangeTimes->{{3.9222572104484687`*^9, 3.922257266052679*^9}, {
  3.9222573384946938`*^9, 
  3.9222573469488153`*^9}},ExpressionUUID->"84874eea-56d6-460b-870d-\
a0f773e7baae"],

Cell[TextData[{
 "(y-int): ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ax", "3"], "+", 
    SuperscriptBox["bx", "2"], "+", "cx", "+", "d"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d7ccee3-886a-44e9-a113-9af603b955f7"],
 "\n(SPI),1 x-int: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "h"}], ")"}], "3"]}], "+", "k"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b0a82595-46af-4dcf-8258-2cc57607ff5a"],
 "\n(3 x-ints), 2 TPs: a(x-b)(x-c)(x-d)\n(2 x-ints, 1 TP),1 TP: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", 
    RowBox[{"(", 
     RowBox[{"x", "-", "b"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "c"}], ")"}], "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "068d88b4-9b9b-42df-ba9a-0a3d53c4778a"],
 "\n(1 x-int",
 Cell[BoxData[
  FormBox[
   RowBox[{")", ",", 
    RowBox[{"1", " ", 
     RowBox[{"SPI", "/", 
      RowBox[{"PI", ":", " ", 
       RowBox[{
        RowBox[{"a", "(", 
         RowBox[{"x", "-", "b"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["cx", "2"], "+", "dx", "+", "e"}]}]}]}]}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a5654455-f512-4163-beff-84c2d6162d75"],
 ")"
}], "Text",
 CellChangeTimes->{{3.922257254497126*^9, 3.9222574710195513`*^9}, {
  3.9222575424940095`*^9, 3.9222575550389767`*^9}, {3.922257591153051*^9, 
  3.922257650235299*^9}, {3.9222577108889546`*^9, 
  3.922257714767457*^9}},ExpressionUUID->"91a07faf-aee2-43c0-b179-\
db452a463d79"],

Cell["Quartics:", "Text",
 CellChangeTimes->{{3.9222577207660575`*^9, 
  3.9222577264880023`*^9}},ExpressionUUID->"e08a730b-9ddd-49d3-9609-\
22191b93759a"],

Cell[TextData[{
 "(y-int): ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["ax", "4"], "+", 
    SuperscriptBox["bx", "3"], "+", 
    SuperscriptBox["cx", "2"], "+", "d"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aad36989-2c86-4bea-b7d2-6158c255b662"],
 "x+e"
}], "Text",
 CellChangeTimes->{{3.9222577435966873`*^9, 
  3.922257755962572*^9}},ExpressionUUID->"ccac6a55-1f29-4404-a1df-\
89f1f0aabf7a"],

Cell[TextData[{
 "Sum of Cubes:",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "3"], "-", 
     SuperscriptBox["B", "3"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["A", "2"], "-", "AB", "+", 
       SuperscriptBox["B", "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "293dafc9-a43c-4a3b-bcd4-51486088c325"],
 "\nDifference of Cubes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "3"], "-", 
     SuperscriptBox["B", "3"]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", "B"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["A", "2"], "+", "AB", "+", 
       SuperscriptBox["B", "2"]}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06a9efc8-b493-4c88-b5ed-45914d8bb975"]
}], "Text",
 CellChangeTimes->{{3.922258432377143*^9, 3.9222584617149906`*^9}, {
  3.9222585003188686`*^9, 
  3.9222585246793323`*^9}},ExpressionUUID->"9261fac5-41ff-41cb-b667-\
996e836d4438"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stationary Points Nature", "Subsection",
 CellChangeTimes->{{3.9222586154217725`*^9, 
  3.9222586198640375`*^9}},ExpressionUUID->"7915f749-a773-4290-aebf-\
b6dc8ff54bd8"],

Cell["Sign Table:", "Text",
 CellChangeTimes->{{3.9222586272260237`*^9, 
  3.922258628949216*^9}},ExpressionUUID->"d31ae610-fbc4-43f1-bb14-\
7879c2f8ac65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "'"}], "[", "x", "]"}], "==", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9222586320533543`*^9, 3.9222587406736827`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"29f3e934-7aca-479c-b0da-5a3d78015a7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["4", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.922258695949892*^9, 3.922258741238248*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"fe959d4d-579d-4977-8b9b-185ea8f78d7b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"x\"\>",
       HoldForm], "1", 
      FractionBox["4", "3"], "2"},
     {
      TagBox["\<\"f'(x)\"\>",
       HoldForm], "5", "0", 
      RowBox[{"-", "8"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{"x", "f'(x)"}, None}]]]], "Output",
 CellChangeTimes->{3.922258695949892*^9, 3.92225874125514*^9},
 CellLabel->
  "Out[74]//TableForm=",ExpressionUUID->"8e5e0566-e81e-4142-bab9-\
0618ff8c3cb8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inverse Functions", "Section",
 CellChangeTimes->{{3.8945641874824076`*^9, 
  3.8945641900074635`*^9}},ExpressionUUID->"f6cd9d47-3fe7-48b7-8432-\
dab5e1e6a0ca"],

Cell[CellGroupData[{

Cell["Rooting (Cubes or more)", "Subsection",
 CellChangeTimes->{{3.8945642386236715`*^9, 3.8945642669069614`*^9}, 
   3.8945647213635798`*^9},ExpressionUUID->"7703d0c0-e28f-42aa-b6dd-\
ef0bbac4df2d"],

Cell["\<\
Fixing Issue with ,Reals in Solve (expresses outputs with powers)\
\>", "Text",
 CellChangeTimes->{{3.8945642799153013`*^9, 3.8945643262560515`*^9}, {
  3.8945644142222886`*^9, 
  3.894564425609744*^9}},ExpressionUUID->"91dcef87-0764-4fb3-8549-\
155299dc8dfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "==", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "y"}], "-", "3"}], ")"}], "3"], "-", "4"}]}], ",", "y", 
   ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.8945643307530794`*^9, 3.8945643373380957`*^9}, {
  3.894564440906593*^9, 3.894564510246541*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"63d7b82f-c152-49b4-8704-119939ceb0cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Root", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "31"}], "-", "x", "+", 
        RowBox[{"54", " ", "#1"}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox["#1", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8945644776099844`*^9, 3.89456451101564*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"92f25bfe-e15d-4150-9117-118eaed10904"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "y"}], "-", "3"}], ")"}], "3"], "-", "4"}]}], ",", "y", 
    ",", "Reals"}], "]"}], "//", "ToRadicals"}]], "Input",
 CellChangeTimes->{{3.8945645197921553`*^9, 3.89456452664826*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f012d704-0778-4ff8-86be-712ec4b01fcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", "x"}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8945645275375366`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"74dea701-ead8-4120-a516-2aad36ba8cdc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Making an inverse function", "Subsection",
 CellChangeTimes->{{3.8950811260596504`*^9, 
  3.895081131546692*^9}},ExpressionUUID->"b23bdd34-0aa5-4034-9670-\
270224c5e2b0"],

Cell[TextData[{
 "Swap x and y then solve for y (use apart if you want the fractions \
separate)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    FractionBox["1", 
     RowBox[{"x", "-", "3"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c47f2672-37d0-4a69-b7b7-95f1a5a46dec"]
}], "Text",
 CellChangeTimes->{{3.8950811383263493`*^9, 
  3.8950812328127813`*^9}},ExpressionUUID->"8af3dab6-5377-4dbe-aee1-\
eed29a62ce28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "==", 
     FractionBox["1", 
      RowBox[{"y", "-", "3"}]]}], ",", "y"}], "]"}], "//", "Apart"}]], "Input",
 CellChangeTimes->{{3.8950811644815283`*^9, 3.895081185856637*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0adf8a2f-59f4-4dc9-abd2-0cb9166a2f66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"3", "+", 
     FractionBox["1", "x"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8950811789385796`*^9, 3.8950811862694616`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"308578a2-6bad-47b2-a577-4414bd1eb543"]
}, Open  ]],

Cell["Inverse Mathematica function (may not always work)", "Text",
 CellChangeTimes->{{3.8950815315634937`*^9, 
  3.8950815726737165`*^9}},ExpressionUUID->"6912e0b3-90ec-4831-b4fc-\
b9f11a502b2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"x", "-", "3"}]]}]], "Input",
 CellChangeTimes->{{3.895081479563903*^9, 3.895081487863454*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"37fd7ab3-21b6-4564-82ee-126a7f5f9de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InverseFunction", "[", "f", "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.89508150049529*^9, 3.89508152134144*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"10ee7250-1daa-40ea-a465-3d854f9e035a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"3", " ", "x"}]}], "x"]], "Output",
 CellChangeTimes->{3.8950815250922904`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"7ba29fad-19af-400f-9344-acd504e4fb50"]
}, Open  ]],

Cell["Sometimes can give a goofy answer so use //N", "Text",
 CellChangeTimes->{{3.9082983390958977`*^9, 
  3.908298347232999*^9}},ExpressionUUID->"e82a6a86-7992-4f57-ba3d-\
e3baacae75d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Log", "[", 
   RowBox[{"2", ",", 
    RowBox[{"5", "x"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"InverseFunction", "[", "f", "]"}], "[", "x", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x", "]"}], "//", "N"}]}], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"3b481e94-289f-460a-9340-338476574ae8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"0.2`", " ", 
     SuperscriptBox["2.`", "x"]}], 
   RowBox[{
     RowBox[{"-", "3.141592653589793`"}], "<", 
     RowBox[{"0.6931471805599453`", " ", 
       RowBox[{"Im", "[", "x", "]"}]}], "\[LessEqual]", 
     "3.141592653589793`"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9082983300907297`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3b8a08bb-831f-4dc7-bf8f-975a1f47b5bf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting with domain restriction for inverse function", "Subsection",
 CellChangeTimes->{{3.89508161405401*^9, 3.8950816358618937`*^9}, {
  3.8950816687230988`*^9, 
  3.895081671432234*^9}},ExpressionUUID->"9c27a164-2dfd-4b07-831d-\
87772195918f"],

Cell["\<\
Plotting with restriction for inverse function (&& for domain restriction, \
range difficult) (may need to find range of original function for domain of \
inverse)
Change PlotRange from {-10,10} to 10 to make the axes x = -10 to 10\
\>", "Text",
 CellChangeTimes->{{3.89508167804823*^9, 
  3.8950817103691797`*^9}},ExpressionUUID->"023f5b42-fae9-4089-8d06-\
3f73a5a6984d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"x", "-", "3"}]], "&&", 
      RowBox[{"x", ">", "3"}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "x"], "+", "3"}], "&&", 
      RowBox[{"x", ">", "0"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8950816407606907`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"16bfb872-4a8e-432c-bdf2-3842b9dc8110"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18813#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
cmZxDgn/C9+M70U=
       "]], LineBox[CompressedData["
1:eJwV0Hs0lHkcBnC51Pu+M7zNkFsXl18s45ZJKtdHa9BJW1itS20lytklXdTh
SOucJpfdOpNRQmxlS1l1VGOVttSmHSEMcjm2wpJBe5DLsu3s2nf/+J7nfM7z
z3O+VjFJoXHaWlpa/tz9n/vS42+x+hTEP6ZPrC9nULA59eTOIgo+/o/OThQy
aLOL6HNVUKjVlumGXmTgr1529fUQBcuZm4W2cgb2sbmrxUE0bKWrFfxsBjO7
sh3eGDBoFPpMPElmkBNyfOPaYh6aFZ6lB0IYyF+KEm6V8zDo61ocsJ1BcWDf
9zb3ebgksK+03cbgjneQrmk7DxGJtWZjwQx67M1bNUv4ULLSzvQgBnbatbHK
o3ycefhlbrcvA+U9vXORW/SRNTul2ezCQNfowvA3Hw0QdcNrfmApA+H4SQPh
EhbqYp27PM5WL+LdrxmyaGu1MXFnGfic8Mp84chiymjdyBl9BqlDgzaC3SwO
VvdkbmIYjFeJ40rrWIy0uek16zD4QzRyOCZgKbYYR9VGztHobjo9KWUFiKzX
y3Hop3Hep0QSbizArvY9bEIfjdC7VUU2KwWoIW7Ot9/SaMkf9FeKBLgSlyh2
fUNDudevcEmAACPXzvqhl0b1nMbv2xMCnDN2G0h9RSOfJOfJRgXI/dtbvqOB
RnhajHtRnRBq+XaP81VcX2K0eK5BCI/0Lfu0OHc9UXaGqYR4rCuZTFDQ2KHr
cEz/jRCiNZfdAu/RiDg7rcj4k7NME611h0bUZanrAXtD/JWS3CqtoLGnrszR
TWaIvF/CqjpKaSTw3lu3RBmh87Ug5LichkWFMn/x2DLI+I2p7cdopD34NIy9
ZIKbE/1qKprGobKEancXM5xvqPg1UEKDr70+xvmdOWJPJXXnr6EhSfz8gihv
BewcetMqV9EwrVmZJFm9Cl/rSFJesDTkR7Jz13Rb4Cp/ZGXQIu5/mducSqot
cci0ZkA4S0EULQ2/lm6FDcd0XJzHKHQN06V54dZwfthoHN9HoSXmnZ/QggA7
K9XruigM6N6Yv2BN4OhZLTPgPFMWX2lmS9Dn6xyg7qRg9v79Cisnguy5kLcF
nGOPTs25eBIksN891Lyi8PHUwu2tXxCYi8eX13dQsL1uZp4jI3iU8SF4fxuF
jYG/qfh5BD832lSBc/Bocda5fILEnm675ZwPO1nOXiwh8PIu8FCpKDz6yVZV
VkEwvOnpvx6cQ5VrM5/XE+Q9O6hj2EohLn7WK6iJQPGA+I63UEhh7k83tRBo
PR7KauBc8pnH3o5OgiPiJGRwHumC1++DBPsVQ8HjzdzeFO3pODXBTO+GyQbO
+sufl4+OEfgZxVy5zlm8O9DkwweCZ4Wmn+ziLFlEtyTPEjzdU/DPBs4RPzRK
5+cJKJf2fiPOX0nOeJ7QELze+kQ1+ZJCunrr1MICwUZeZPNLzv8B4lrC6g==

       "]]},
     Annotation[#, "Charting`Private`Tag$18813#2"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.895081641810807*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"7b22ef8b-2354-4311-9442-a9092e828790"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Logs and Exponentials", "Section",
 CellChangeTimes->{{3.898712109075137*^9, 3.898712118940626*^9}, {
  3.9011301583233004`*^9, 
  3.9011301834126453`*^9}},ExpressionUUID->"725ba91f-08ac-4669-a56a-\
581b41638ca7"],

Cell["\<\
Logs have vertical asymptotes, exponentials have horizontal asymptotes\
\>", "Text",
 CellChangeTimes->{{3.899953482632637*^9, 
  3.899953497438712*^9}},ExpressionUUID->"ec615760-1b3c-469f-8f44-\
1fd6f425b6d7"],

Cell[CellGroupData[{

Cell["Exponential Functions", "Subsection",
 CellChangeTimes->{{3.898712130736126*^9, 3.8987121329401608`*^9}, {
  3.8987121723163605`*^9, 
  3.898712174162047*^9}},ExpressionUUID->"3fb71a6f-22bc-4c75-a8fa-\
f2739a6fd39b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "x"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "735b0018-be6c-41c8-a48d-40619369174b"],
 ": _/ ,",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "x"}]], ":", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b726f7fa-d405-4433-a53e-98d6421b9fef"],
 "\\_, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["2", "x"]}], ":", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "24a2e198-7169-454f-8a2a-db1d0a809d21"],
 "\:203e\\, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["2", 
      RowBox[{"-", "x"}]]}], ":", " ", 
    RowBox[{"/", "\:203e"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "481aa7e3-44c6-4782-9b2d-02ad32fea906"],
 "\nBase Change: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"log\:2090", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{"log\:2091", "(", "x", ")"}], "/", 
     RowBox[{"log\:2091", "(", "a", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3df84c56-9db7-4ccc-9803-704eb8497754"],
 "\nExamples of Exponential functions"
}], "Text",
 CellChangeTimes->{{3.8999529834372034`*^9, 3.899952994859692*^9}, {
  3.899960012509717*^9, 3.899960013848734*^9}, {3.8999604106250124`*^9, 
  3.899960445594818*^9}, {3.899960484597419*^9, 3.899960521785557*^9}, {
  3.899960560738021*^9, 3.899960560738021*^9}, {3.8999605914080095`*^9, 
  3.899960600483543*^9}},ExpressionUUID->"890073e6-f29a-434d-8df1-\
d931ffc83eff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "[", "t_", "]"}], ":=", 
  RowBox[{"80", "+", 
   RowBox[{"20", "*", 
    SuperscriptBox["2", "t"]}]}]}]], "Input",
 CellChangeTimes->{{3.899953018142477*^9, 3.899953066292104*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"12c4f5f7-d70f-4fab-aab5-76b1a3e6c337"],

Cell["Starts at 100 and goes up -> 120, 160, 240, 400...", "Text",
 CellChangeTimes->{{3.899953089531041*^9, 3.899953108258258*^9}, {
  3.8999531519010925`*^9, 
  3.8999532114505816`*^9}},ExpressionUUID->"f126b09b-cbed-4373-b94e-\
f0f1f35ba814"]
}, Closed]],

Cell[CellGroupData[{

Cell["Logarithmic Functions", "Subsection",
 CellChangeTimes->{{3.8987121417419014`*^9, 
  3.898712170616041*^9}},ExpressionUUID->"a56e7dc5-4ed7-49bb-bcbf-\
d365945a4949"],

Cell["\<\
Log\:2082(x): |\:203e, Log\:2082(-x): \:203e|, -Log\:2082(-x): _|, \
-Log\:2082(x): |_
If there is a factor:\
\>", "Text",
 CellChangeTimes->{{3.898712186755125*^9, 3.89871218859408*^9}, {
   3.8999600240515747`*^9, 3.8999600546803594`*^9}, {3.899960086088654*^9, 
   3.899960189012492*^9}, {3.8999607569610643`*^9, 3.8999607644694123`*^9}, {
   3.8999607982950964`*^9, 3.8999608255261483`*^9}, 3.900004390832388*^9, 
   3.900004529115779*^9},ExpressionUUID->"405e1422-fa72-46a5-a1c3-\
5dc30ee26cd3"],

Cell[BoxData[
 RowBox[{"10", "*", 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", 
    FractionBox["p", 
     SuperscriptBox["10", 
      RowBox[{"-", "12"}]]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899960826958702*^9, 3.899960897571933*^9}, {
  3.8999609514204226`*^9, 3.899960959220095*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"04eef557-2ddd-4196-834d-0f284e9dfa88"],

Cell[BoxData[
 RowBox[{"10", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", "p"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "12"}]]}], "]"}]}], ")"}]}]], "WolframAlphaShort",
 CellChangeTimes->{{3.89996097200896*^9, 
  3.8999609782077847`*^9}},ExpressionUUID->"5ddd7e90-a172-4179-99e4-\
3ba12b0a0a1c"],

Cell["10*Log[10, p] - 10(-12*1)", "WolframAlphaShort",
 CellChangeTimes->{{3.8999610948790894`*^9, 3.89996109645132*^9}, {
  3.908342423985275*^9, 
  3.908342424187734*^9}},ExpressionUUID->"3d051426-9a83-4eb6-af56-\
ad1ac6e40495"],

Cell["10*Log[10, p] + 120", "WolframAlphaShort",
 CellChangeTimes->{{3.8999611180943837`*^9, 
  3.899961132784394*^9}},ExpressionUUID->"d5ea913f-b1cf-4f67-8cad-\
ea92a8e0dd37"],

Cell["Solving Logs", "Text",
 CellChangeTimes->{{3.8999607943373194`*^9, 
  3.8999607965661545`*^9}},ExpressionUUID->"be607d1f-069d-4b3c-b5bf-\
c43821d2b245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"4", ",", "64"}], "]"}]], "Input",
 CellChangeTimes->{{3.8987122038699036`*^9, 3.898712208651163*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"6a2c0bb8-dc04-4fb7-9d13-2360313faf0e"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8987122092859516`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"a89ee955-4b49-494e-b763-fed95bf54263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"4", ",", "x"}], "]"}], "==", "3"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.89871221464314*^9, 3.898712240574293*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"0b2cc864-40bd-4263-a6ae-81d3c9a88fcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "64"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8987122411266885`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6b1c211a-f71a-4bdf-9246-b48072e68c0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"x", ",", "64"}], "]"}], "==", "3"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.898712250476809*^9, 3.8987122536698585`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7ada2720-d5e4-44b7-838e-c698b7d53634"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "4"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8987122541515636`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6c58623e-6ba2-4ce5-ace7-4501cff9d8c5"]
}, Open  ]],

Cell["Figuring out answers with variables", "Text",
 CellChangeTimes->{{3.899937993641979*^9, 
  3.899938014620786*^9}},ExpressionUUID->"678346b6-c16f-4ce3-a20f-\
be1a75db6b73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["a", "2"]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox["b", "2"]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", "*", "b"}], ")"}], "2"]}], "]"}]}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", ">", "0"}], ",", 
      RowBox[{"b", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.899938016997351*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"fab9251f-7b56-4aa1-bc01-80c6131d69a0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8999380175782146`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"27f4a7b7-0de6-41a3-97f7-a3a8d8f45603"]
}, Open  ]],

Cell["or", "Text",
 CellChangeTimes->{{3.899938045738538*^9, 
  3.899938045910186*^9}},ExpressionUUID->"b1686846-d2ec-4d3a-8c41-\
05b9378cfa7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", ">", "0"}], "&&", 
    RowBox[{"b", ">", "0"}]}], ",", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox["a", "2"]}], "]"}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox["b", "2"]}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"a", "*", "b"}], ")"}], "2"]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8999380645422883`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"8da0a28c-a2da-4f42-8da6-514b94dab723"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.899938065505507*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4f4e93d5-4aa2-44a0-96e7-c41a063c3bf0"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Circular Functions/Trig", "Section",
 CellChangeTimes->{{3.9007106331232157`*^9, 
  3.900710639663052*^9}},ExpressionUUID->"69cc2540-418b-4119-8016-\
bd44759351ae"],

Cell[TextData[{
 "Rem:\nPeriod: \nTan = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "n"], TraditionalForm]],ExpressionUUID->
  "5bc9651c-4dff-4a4b-8f9b-907689a45108"],
 ", where Tan(n*x)\nCos and Sin = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "n"], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"Sin", "(", 
      RowBox[{"n", "*", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "b6248353-fe5d-43f7-ae33-acd9fa57c5c1"],
 "\nAmplitude:\na where a*Sin(x)\nAsymptote:\nTan[...], where ... = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Pi]", "2"], TraditionalForm]],ExpressionUUID->
  "b3de669b-cfa1-44d5-8da8-8126268035db"]
}], "Text",
 CellChangeTimes->{{3.9022969436245513`*^9, 3.9022969447390714`*^9}, {
  3.902297061651752*^9, 3.902297214263362*^9}, {3.902297264461546*^9, 
  3.9022972663938704`*^9}},ExpressionUUID->"5443c897-94a1-4e31-b816-\
585bc4b266f7"],

Cell[CellGroupData[{

Cell["Solving for x in sin, cos, tan", "Subsection",
 CellChangeTimes->{{3.900710648582409*^9, 
  3.9007106679668183`*^9}},ExpressionUUID->"fa7ac1d9-36be-45da-9b27-\
c103e079a221"],

Cell["\<\
sin(x) and cos(x) can only have solutions -1<=x<=1 as the unit circle has no \
points where x is > 1
Solve with domain\
\>", "Text",
 CellChangeTimes->{{3.9007106765813117`*^9, 
  3.9007107949923472`*^9}},ExpressionUUID->"022562d6-49c4-4193-b8cc-\
1fc3e4273bd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "==", 
     FractionBox["1", "2"]}], "&&", 
    RowBox[{"0", "<=", "x", "<=", 
     RowBox[{"4", "\[Pi]"}]}]}], ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{3.9007106863919034`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"7752045a-22e9-4b94-b1ac-643d93f4acf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Pi]", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"7", " ", "\[Pi]"}], "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"11", " ", "\[Pi]"}], "3"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9007106873052015`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0ad65673-e2d7-4cc9-a1c8-4bb0bf3aee89"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "t_", "]"}], ":=", 
  RowBox[{"21.8", " ", "+", 
   RowBox[{"20", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", "*", "t"}], "12"], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.902356210158137*^9, 3.9023562187321963`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"24bf226e-965c-455e-869a-3abdad568938"],

Cell["Reduce with domain", "Text",
 CellChangeTimes->{{3.9023562422035823`*^9, 
  3.902356247295187*^9}},ExpressionUUID->"ce891770-91f1-4fa3-ade1-\
804c4a296bfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"h", "[", "t", "]"}], "\[GreaterEqual]", "  ", "11.8"}], ",", 
     RowBox[{"0", "\[LessEqual]", " ", "t", "\[LessEqual]", " ", "24"}]}], 
    "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.902356186746598*^9, 3.902356190792938*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"1dcd30b5-b35c-408b-8277-54922fb756e4"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "ratnz", 
   "\"Reduce was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 209, 19, 30759355072334092782, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.902356222323923*^9},
 CellLabel->
  "During evaluation of \
In[209]:=",ExpressionUUID->"c8f80323-e57f-425c-813f-13ce2c7dabdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "14.`"}], "||", 
  RowBox[{"22.`", "\[LessEqual]", "t", "\[LessEqual]", "24.`"}]}]], "Output",
 CellChangeTimes->{3.9023562223551536`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"c4a808ae-b39b-4f85-934b-af6e1f6710aa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tan", "Subsection",
 CellChangeTimes->{{3.9017341871108484`*^9, 
  3.901734188764079*^9}},ExpressionUUID->"7234e6f8-fd86-4acb-9bb4-\
a0a311a4f0e1"],

Cell["Finding Asymptotes, x-ints,y-ints, etc", "Text",
 CellChangeTimes->{{3.901734196372351*^9, 
  3.901734217238302*^9}},ExpressionUUID->"cdb29106-43e1-479e-ba11-\
a75fb9ad87d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"x", "-", 
     FractionBox["\[Pi]", "4"]}], "]"}], "+", "1"}]}]], "Input",
 CellChangeTimes->{3.9017342242826643`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"123142b4-6241-451f-94b0-8fa012aa4058"],

Cell["Ints", "Text",
 CellChangeTimes->{{3.9017342411918545`*^9, 
  3.901734241727727*^9}},ExpressionUUID->"048aac65-6388-40dc-8542-\
0f07c526b2cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.9017344002839346`*^9, 3.9017344027351294`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"688ef06e-cd22-456e-b8c5-71eff5403695"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.901734405159675*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"eb512866-fc9c-455e-85fd-f4fe99c83820"]
}, Open  ]],

Cell["Use && For Domain", "Text",
 CellChangeTimes->{{3.90173443804077*^9, 
  3.901734441672959*^9}},ExpressionUUID->"5fa186d4-fea9-4a36-824c-\
0b72fbf62f58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "==", "0"}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "<=", "x", "<=", "\[Pi]"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.901734430684492*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"66de6a50-d443-4a0c-b283-8594cd50a70f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "\[Pi]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9017344312857685`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"33aa439a-af9c-49e7-9750-dafba174bab2"]
}, Open  ]],

Cell["Finding the Period (T)", "Text",
 CellChangeTimes->{{3.901734473814101*^9, 
  3.9017344785441008`*^9}},ExpressionUUID->"a79ab09e-8bb2-4c7d-bad3-\
5e4237f1626c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.901734461578498*^9, 3.901734467958189*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8d3fd99c-4f81-4467-b4b0-8c7df71b35dd"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.9017344695286217`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"25c5c890-fc7e-49f8-9e50-be09736952f9"]
}, Open  ]],

Cell["Domain and Range", "Text",
 CellChangeTimes->{{3.901734500256542*^9, 
  3.9017345023835382`*^9}},ExpressionUUID->"e9b38b90-dddb-493d-85c3-\
62c320a7a930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.90173451889559*^9, 3.9017345217716284`*^9}, {
  3.9017345733175735`*^9, 3.9017345808714743`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4c1df50c-3ffa-4757-b676-f889f4ea5a40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{
     FractionBox["\[Pi]", "4"], "-", "x"}], "\[Pi]"]}], "\[NotElement]", 
  TemplateBox[{},
   "Integers"]}]], "Output",
 CellChangeTimes->{3.9017345811313615`*^9, 3.9017512267606544`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"4a9d22a3-de28-4379-b899-6fd70b33d765"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.90173460239016*^9, 3.901734633258429*^9}, {
  3.9017346727952337`*^9, 3.9017346803803864`*^9}, {3.9017348404516745`*^9, 
  3.9017348630158105`*^9}, {3.9017512068089776`*^9, 3.901751215505808*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e103c1ca-e1f2-49d9-97be-019da0a5737a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.901734609215083*^9, 3.9017346812837143`*^9, {3.9017348417463145`*^9, 
   3.9017348633024335`*^9}, {3.9017512088216667`*^9, 3.901751217640246*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"6e009477-c6f1-454a-8664-d9160dbf2303"]
}, Open  ]],

Cell[TextData[{
 "Asymptote for Tan only (Add period for more) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Tan", 
      RowBox[{"(", "x", ")"}]}], "=", 
     FractionBox["\[Pi]", "2"]}], ",", " ", 
    RowBox[{"x", "=", " ", "asymptote"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5dcb1c7f-6f55-47cb-a810-090af4c02cf4"]
}], "Text",
 CellChangeTimes->{{3.9017349025487194`*^9, 3.901734944499289*^9}, {
  3.901751311023018*^9, 
  3.9017513149985094`*^9}},ExpressionUUID->"767099b6-e531-4e9a-a726-\
010fe927d66b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "-", 
     FractionBox["\[Pi]", "4"]}], "==", 
    FractionBox["\[Pi]", "2"]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.9017349152982626`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"57328953-2227-48db-9373-8f0152cdf6c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9017349164224434`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"78ae9ad0-1d7f-4865-9667-329c5478ea69"]
}, Open  ]],

Cell["\<\
Graphing (Ticks is domain (v1 and v2) and increments (v3) labelling), \
Exclusions gets rid of the blue asymptote lines\
\>", "Text",
 CellChangeTimes->{{3.9017352621585317`*^9, 3.9017353013596716`*^9}, {
  3.9017353449148054`*^9, 
  3.9017353634104714`*^9}},ExpressionUUID->"86e5a28f-86d6-46eb-abe8-\
bc5c031fa242"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "5"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
        FractionBox["\[Pi]", "4"]}], "]"}], ",", "Automatic"}], "}"}]}], ",", 
   " ", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "4"], ",", 
        RowBox[{"3", 
         FractionBox["\[Pi]", "4"]}]}], "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", " ", 
   RowBox[{"Exclusions", "->", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "\[Pi]"}], "4"], ",", 
      RowBox[{"3", 
       FractionBox["\[Pi]", "4"]}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"d370b985-de70-4eb3-a897-37af3a101a89"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3DKRHg==
       "]], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1:eJwdjQs01HkUx4f+Lw0aQ6IVZSOvlYoeVHuLkh6K9BRGsnmvzSgtezIqM4UW
KXoykkbl0VMiv1+RJDlZj0RRDY2jpYlIM5rd2f2ec8/3fM/n3vudtftX72BN
Fou1TT3/edkluxpkSwDrfxngfUM633jzCIj5XP20M0cft73jDHivIGCn9EDS
FyEXl1z0+mXjKgICeS6bo9y5ONk38/06DwLQrDUxaxkuXtym3+XmRcBogmny
RJoePltv2LgwkADOTWLQQsLBvFKTkukCAs7rmX04ZqaLl0T42Uw7SkDcl/WJ
fQ91MNf6YqH+MQJunug6Nhqsg2vyzXK1Mwjg2W4Mm3RLG1ueNk9X5RHALfIz
Fwewsco7SFtZQAB/2uHSvbps/HJKgeirhIBE4fXPadWTseiYhUBeRsBi31hp
m/lk/DHBat97TIDR40xFqILBtUtCh7prCbhr+Gz3ylsMPj9WFNZVT4BoPHen
cySDPaNtg1pfEGCaNZgf2UvjsiB7n7q3BGxIf634qYfC+9c6LrzKIiFjS22D
gQaJP7leyc8kSNAMm5c2t4HAIcumT4lnSPDNoVmTswjs68DqX8chQbljwGjI
msBg2Hhm0IyEC3pRSi3/SZj9Pui7w8/qff8X8uxeDXykqz3U2JWE0xU57eQ9
Daxq9WjXcCfhWaxDjypFA8ufzC39y5OEFi3xuNBJA7cXK3l8fxJejO1yuHGC
hfMOnqwt/4OE6HB+3PMSFTKOoeblCUi4q69t/GaPCmVGHLwgOkrCI5kN8+AH
FToaELB/RxoJ7913lPakfEdhq2ytlOdJ6N06mOYVO4Ec9WpSlleRwDHZPWIf
pkBPJcPejxUkzMzLLHJ+OobGn2hWav5DAi/lSZPTn2PIUsb9ESZRkCrUiqzd
MoaSLBaM3GdT0P2tSZrZO4qW5secLDOhoAqErHJmFJWd+9JybjkF6cnPXL1D
R1D3fWLpq5UURDjMPSxaNIJ0Og0KDN0pMJfN3zOfGkFhRk78jI0U7DeVBXYW
DKPZp2INhDwK+I5Hwj1ln1HOiTGffUkU2KXVseMOyVFdMfWgNJmCCYbr7OAj
R6ONhhaDxyloYkWVu1nLkTd70ejekxScX/hop1LyCWmLDpzyK6Cg03a9i4n/
EEoUjLetqaNAokwL8JN9RCF8xVazyTTcvtYp1AuRoWJfobWBLg1yVk6FprUM
Da80UFfR0LArhRsw8AHF69mLh41pcLvqcsQn6gM6URL48bE1DdBnE8CN70N3
+usPRXjQsHxCzJEVSpGmX7akQkSDgTPoz1jxFrm7zY4vSaWBeW3H8HXeolTb
GxsupdMQQeV/t7/dg6YqGoZTc2gIGcpsFfR3I6ts1VKehAajkDVW3O1vkGdz
cDNVT4NIFXco36sTnVvlqNhMMxChqWuVcrkVXS3ell3NZmC9/u/tJW6t6N7U
eEdrDgMJUrdP/r0tqL3vYZTKiIGyjm8V/hYtiJO8USqxYaCjrNv+bnEzSq4L
a/y+gYHoLcely4qfo33u4otXshhINA0MV2jUIEFprQv3DAP92U87kvwfofRp
/R0JFxiYaZc751XlQ1Qss9f3LmSAJxa3yeIw6hdWCSfK1fec2atvjVci//qX
0V5dDMgTfTYRnjdRpINSp6qHAc5RmwWzzG6ghBzTa5a9DLy1e2PiJi1FZ0KC
+5R/q/+L7lgnO11DrczIjkKVmn9mr96uECNptOFXziQtwCGDczz25KLhjiVZ
8bQWJEqnhnNenUVTihKbNnG0ANq2NU40ZyBTvYLwSgM1dz280/D6cWR38Alj
aazO9bF8p2oBcnk3cDl9hhawauhUwe3f0FoPXVflLHVmwYjUKaP6X41KhFA=

       "]]},
     Annotation[#, "Charting`Private`Tag$15770#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->
   NCache[{{Rational[-1, 4] Pi, Rational[3, 4] Pi}, 
     None}, {{-0.7853981633974483, 2.356194490192345}, None}],
  GridLinesStyle->Directive[
    RGBColor[1, 0, 0], 
    Dashing[{Small, Small}]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {-5., 5.}}, {{-3.141592653589793, 
    3.141592653589793}, {-5., 5.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{{{
      NCache[-Pi, -3.141592653589793], 
      FormBox[
       RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
      NCache[Rational[-3, 4] Pi, -2.356194490192345], 
      FormBox[
       RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"]}], TraditionalForm]}, {
      NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
      NCache[Rational[-1, 4] Pi, -0.7853981633974483], 
      FormBox[
       RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Rational[3, 4] Pi, 2.356194490192345], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.9017352717500553`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"05b96d3c-421b-4aef-90b8-5f3d7d241c51"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Complementary Angles and Pythag Identity", "Subsection",
 CellChangeTimes->{{3.9023811398154306`*^9, 3.902381144645326*^9}, {
  3.902381246280836*^9, 
  3.9023812488982477`*^9}},ExpressionUUID->"a8f23039-92c5-4f02-849c-\
cb123c33ef21"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", "x"}]}], TraditionalForm]],
  ExpressionUUID->"3508d2c7-ae7a-415d-8dd1-e98a7b2e7df2"],
 "]=Cos[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "+", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6ad646f9-ee8e-4496-8933-855e986c9ae1"],
 "]=Cos[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "-", "x"}]}], TraditionalForm]],
  ExpressionUUID->"aa11d12f-a702-4f8a-bc89-3b0837b7c754"],
 "]=Sin[x]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["\[Pi]", "2"], "+", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6a99a05d-0e4d-4df4-95b6-881a16155868"],
 "]=-Sin[x]\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["Cos", "2"], "[", "x", "]"}], "+", 
     RowBox[{
      SuperscriptBox["Sin", "2"], "[", "x", "]"}]}], "=", "1"}], 
   TraditionalForm]],ExpressionUUID->"84c89fbb-432c-4197-bf3b-717578dff2ed"]
}], "Text",
 CellChangeTimes->{{3.9023811842874303`*^9, 
  3.9023812731832485`*^9}},ExpressionUUID->"655e0a46-fad3-471c-8571-\
43c48864d1f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cleaner Answers Using FullSimplify", "Subsection",
 CellChangeTimes->{{3.901821470106183*^9, 
  3.901821517774607*^9}},ExpressionUUID->"031e296d-56d8-4671-8c4f-\
389574273a2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"2", "x"}], "]"}], "==", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["2"]}]}], "&&", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "<", "x", "<", "\[Pi]"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9018215428159466`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"c6fba2a6-cdd9-4287-8d77-e2616a125db5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"1", "-", 
          SqrtBox["2"]}], "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"1", "-", 
        SqrtBox["2"]}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.901821543608976*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d5547d76-5a6c-45c1-834f-e5476e4c0b95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Tan", "[", 
       RowBox[{"2", "x"}], "]"}], "==", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["2"]}]}], "&&", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "<", "x", "<", "\[Pi]"}]}], ",", "x"}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.901821557937582*^9, 3.9018215814643745`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"e8aa9f83-a1ec-4a20-ac2d-e4c41f5388e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"15", " ", "\[Pi]"}], "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "16"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"9", " ", "\[Pi]"}], "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["\[Pi]", "16"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9018215823054647`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e6583be8-26db-458f-aa2b-84e65cce064b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact Values", "Subsection",
 CellChangeTimes->{{3.9023814844285917`*^9, 
  3.902381486412442*^9}},ExpressionUUID->"85bc5fec-ea19-4d5a-a962-\
05965204f280"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yqLyauIKayNza3xTy5xiC81Dc3V80y+7JB63idltHLZBO2D51aEW5DtMF6/j
gJ7NI/JrtIYLVo9OMCe7TeHPz242fGuPxcfHHb456/L18HXGefjCbanry9NO
X5x2+uS4w1923a1COaJ6ntbdPp5kICu43L+POSy96rmVE4TVBTVnHJSNVwOR
SylpAFNq5fXOIrfSjEH1gMP82EbJixDA8gYTBgFer+WPb/fkBv0z9rEu8cXZ
Fc2yb5AhJWDLQPhjJZ+xV9ToYwTgUdaReeBRb++zZHsscwfQNbcb2sGjYPyy
PRYiyNA/reyzk45PrteDMhpXCEBowBiHLjvHPJUay6NUD7tAhUE5MvpcKYGd
YhOZ/+1Zl3W3/Fzji8EcBMKBuarjBvsUjIhqvpv/1dARk18DXQ9uc8ImdpNO
IGxzWGHPbTEcWSllmCBRSdZ/22/97TkXFU2/vabhoOs6fungpT4pt2PI5k0g
81J2tJwu8FKXXBKguK3CczPKm6JI9uUQXWAUlKXumQJ1s880fIO2/9IrniBF
b+6xeGajwXBO05QX9tFzW4zeO2AD8wRaeL9ZBDghxz/DLirfL7UsvrC2oKat
ob1bbsOSZQ8IzOK6dqwcUGW2x0Ls9JauXj3/zC9POy9U1vnkuKNZaM7sLQp9
h+pa4pwAPg+jhu2xzE1AFdhFF4BH/XW3fEXyzGpADZU3dcLahfhldRjidh7/
lF3sgjU6K657pd1unOSHh6nUWYc4RqnUKB6VYZu15pATNK9LXDFzD6ULmCWL
sNxvzrq8f8hWwzMVHKBHIMRfyjhWny4MximRGQcjiwvVtnallDaA55iE5EAC
qxmGLCXrMD+hqvfwiK4EoBbPbzX69ITjyuveOwyCT9gS3S3NQnLcE0rCs6uo
crvcHnk8e8In0/ZNx1v4p5VL8vNUker2bv6912BJw+GL20tcc7jCMEPA9Na2
8cikXZYDeHh8IRj+S9tNFq/jbNQOCEyXaHnIObC7NbxSwaO26wezPZa5CSrh
dN4yDUXLThoBHlXd0vW7pepPrNdjawz9A6KqZq6Sus/jqnq6vhKlwkG5wGoG
lYI9zpzveiyPWnnA8VElbc+kUoaeSDswt0EZFZt1Ah9X5WzRDeL4pUfnVUON
dguEEFn98kGqhsK5741WGq5c3dvX1sXPqWwJzaq0ici74ZEMW1VZwxfW9wvb
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
8UR/2mwJjvJOYT4weypCT/vdee9tZkq0W5aqAc1y1HANcFS+c/6Fi9cfXqK7
5bRSl85kJW8RSZ49UtHJf35iUBAsFfyw1yqaSomg609/Zl1wlEV4PvpA96SZ
k4Vp+oorEC866a6m2NpzchLVetfohzypYeQywQ1otAscBU/hN0t03j/opLAr
+qfdeHylYeG4V9wkfX3hudWPrTAoH6vcahdPuNsq+q3ddgwu50kb87t1ptPd
FyMqB8UUPbnKKGOsDH6KFMtRI0mao06eD354qe6ec0qxNYAVUxL39jnFFT/w
C7FbcCCDH/7R2NGzQieIgKgVBoft5ZLjGr2HU2zxXFWOXfS0j22YAQJHfXna
Q1U7kGlDpqq+/v7Wbv4Wk/AnVhnZRjGczPAuE/NRd8kFrw8PO2u6jze/GZH/
JLF0obph86g5TtEzGIfkPLvGJKmkHv/GXwHAevv6cc8ZSQDSybtXi+E6c3Xo
pi4w/39Pue+1jmbakEECR51wYjlKhgY4Ks85//DZwEeW6h6+MEOm8VlNTuj9
Gtt7Hl6mR+RgCcpC99vWLTAKyXlnnwPgCi6tlvcY9SAmLSr+Ftc1nkKxY1Z0
CRz1vzOeo2zbnBYCnJfUtS2+7Afv3lQ59sIrOD6KklDcq+OX+foOm3FGm1P5
3kGeoydMwGk5AVnvH3Q65phgdj3XK7k8IvdWavntkrrW223czh5hF0+EPgRt
iScU80USeRfnwhXnLOcQY/203VPGJ4sSPr3amMYtPLRogKNiC2uZtkW5JM1R
e0/5g6NOXJo5YaWsJie8yHusotHPz1PV/8c+h7f32P3fL9ogq2dWm9hEytGd
J/doV89R4VybKbmIp7V6BOJvznkt1prGC/34Cv5pN97cafvMGhM3pSnZg3bu
l3YD79fHCuQocv9dK/wgj/FtVAQgXfVNf2279ZifBBqhW1DXCfrwsPOza0wW
qhsuUDd4bAVxPKVhDHL75KjL95o+q/RC0Ks4xhZP+auMpnaukKhppaafMI7w
eCVUX19/ZmXTM2uM5RE4MUWxHDWS7nOUU/72476PLNU7pzXT0sWwmqjQ5ZbV
t72zzx4c9agKZ66qPlmfN2rMcntTFFWS5pHleufckuV6IVbjESDku/PeP1/y
ZdqQyQis0totOOOahAb86THXdGXKpEHkj1Jg3oMB8YWSLSYRy68GjKdMjEBE
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
j8TIlTLCDDCaxHv7HeGBUrvw+sngLv3AbHRi8liwUB4N56jzF0MfXKL7vzOe
croiSPvWnS6M3a9ssxpnZWG0K23fDHUdOdZkbO3mv7XbbmBXJl6N6PyaPVbR
I30eDebtPXbHnRImcS2cPDCjcszoCDTabWYRb+ywBWfKBBo+UWUpY66q/olJ
mYGvTO3NIW6vX8Z7BxxBROjbl2j5wWmKKagpv90OTsM35ZF7EocfPKHEMDj7
1e3WcsrrxSMj2BXsXd6lFl6rmnArmPUEe8kq6gvGHSYnJ1EbSMFRjGy4lvT1
oQVez65W1wkGQa3UDVaqPW6TE0Z5atqkWoFhPOMROAou1UgcBVARiCToNyzC
87864/X+ISZDB4eLqtiFGzu8AJy8rxtTUIuneXMimWpGkkDc606WR1mi5V/V
1EnV5MUl0CmNdze43ESUnbWKJmYARgjuAmDbRRd+dNilqAZPQAR2OmAbiwEi
ffrELk5OQziqwLlARyviN0t0/nlALu8IRkY4lR8fcdllETV6DnlpURtLPzwk
r0qpePpg5idWGQ3EO6HFVjZ0OMQUjfQnZAZvP/Tqk7gcSNIjiah0nFc9WvEC
MgFs5/uHnL8669k2rFtAkw7Lqf7tUt3vzntPokAAWUSmXbooDJXyUcs7bdEJ
YqVvnpo+CO0pDeOPDjurXgsE9wLqwJnwR3ZaEMd+m5iI3Fvfa/rIbxcJUSHX
IJTIAKnYxTV0ZWfdkpnaJzjEjH8ybcbdX9N06AcpNNK1lySoiNxqDU7IwpWG
atqBkUpQGm/qIuLNmrt/LQevUAdhTIGj8O4P5yj0wHgWySW3D9nF/W6d2cPL
9J5ZY2IRzkxunJFExHwW1FAc1a7AGWwyLquBliTqBJIV1j6yXG+Nfmh9K7el
i48xAv18XFFt5o3Gstvt8CjxjODedvFFeCJcgZhKvANfmEq80yfPXNUCYmEo
Fhw1SqQTPnPUIeHNXbYfHnZ+b7+DqnbgDYaSxihSQziq0KXAVDv6gcU6f948
9u6DCamffEn1g7KfXWPiGDuxRSj4pBiyn9QwGmWFaypq6xZg0BwpGkqm0HR3
WUZNDu3QKTnGFI8nWRxeK7xBcMPXG14XEJkUiK9PpR8xCMoG5Dy/1jRnUqGq
OFVq2W2ZRWHwHrZzhWE5N22jCjU9UkBQ357z/tcBx/cPOn1wyBnHR0dcQML/
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
nmJ2/ser3PS5DgzlXikVfz0Uxr6sJzP9eXapE1nHcRglL+XX/3qjzzs7Aw1h
Ic7IRdAGfukca4MBWuq0dPbDlPmTwxfpxeQU/X0k4LJCqbz4dtsO78ynFzs+
v9zZNbHEEP3DSB1VHFj2z+MRMGFxvTKOTrlK5IrDwTlDdVv0BARqQV2rnr8j
k2oOOkqnmcvgt7vMeb/c4DXmW+sPtbcYXTDvTLROPwVKI/5GAzRITfWVuIUq
jFLe/PgCuyPBxkjgZIpT/1YPLwg96RfLdvlkwkSSrHXVSKhj3YsdT1wco46S
yBS3W3v3+l0FMbbaKYmrHh6Guc5+8bmogpe/8nhlnadnSvlEyYgWSuR/O3Jx
hgUvKMtIiX8skdNH3khHMUboNICqKWY2/6O3ibRAIvvLwbALSWUs2xPVMRbd
nm3t0Not1PPWYwZ6D5eEkpmWPGvbOAPNBJnZN+gonzSNlT50RUVbxmVV3tni
mf7iCpc3t/rxLhXpv0ytoA3Qrt28C5oBBvqfrHbnXSo03OmSkTqqJKhske1l
+ngOySyRYdBj3A3L89yU2GMKH8OANdLNWyeg6f5pT/BRHY9pMPU+fruF5CIw
Y09kfjZGp5/qFUkXfnNpvZsxFqMGvyvgDjrKOLXCYbjfH5htdlo3bckV0Jm4
JZbNWeTgkVxGJAAt0Pk8jsfDcnX9QRiXQeqcibj+87UeFucvcVUaD0bMboHE
OaHkd1v94C22v1Ro/ErW+iCSyheci4XufZw7Mk0smEUh0FGvrvfU91K0Ge/r
m32g5bP5vJLOPaMqLxg+22EkTFb5oaBrc6wd9vpnGW49lnMdJZEr6lt7tntn
wAxrqV18XIG+y7Mgn2Bw7xJIInNrl/MTYKry6nov6Ci6hRJOAtaEOh1V/pVL
Mgxe8L0Y9NY6AXNPGF84qZ4Mjexel2DuYseTYWPfp2CAr2yLZ9q/dMwyYsz/
DVcukA1MxqD5WR0MH5g0zrlLHAvrHxgusIdhHAsfM7fbYBTlRlvup67gc5yC
yAaYOvHjimZb8fcHGjx7fwzAaPLcMqejobrpKIFYBoPR77f7f3Y0gqtVDgV9
ys8/o/LPB0KfXep0PDR3XNncsQRa2peOiTBXHT9HMicBoKO8Uyummtm8ttFb
/6tRJ5tORp2JzGcjS+AjdzoEs6z4uvoQcgK8Eetdqe1yp3jDGlhxqKNgjgxT
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
QhAEQRAEGRuooxAEQRAEQcaG4XTU/weZu30A
    "], {{0, 305.}, {396., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{396., 305.},
  PlotRange->{{0, 396.}, {0, 305.}}]], "Input",
 CellChangeTimes->{{3.927837323868137*^9, 
  3.9278373252902803`*^9}},ExpressionUUID->"c08b2d37-bf14-4f9d-8431-\
530f1774e0c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Sin", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Cos", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Tan", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["\[Pi]", "6"], ",", " ", 
         FractionBox["\[Pi]", "4"], ",", 
         FractionBox["\[Pi]", "3"], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"FontSize", "->", "Larger"}]}], "]"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"values", "/.", " ", 
       RowBox[{"ComplexInfinity", "->", "Infinity"}]}]}], "]"}], ",", 
    RowBox[{"Dividers", "->", "All"}], ",", 
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[LongEqual]\>\"", ",", "Center"}], "}"}]}]}], "]"}], "//",
   "TraditionalForm"}]}], "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"5de96598-a284-4878-b349-089feb9a9e3f"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      ItemBox[
       StyleBox[
        RowBox[{"sin", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"cos", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"tan", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", "0", ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", "0", ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", "0", ")"}], "\[LongEqual]", "0"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["3"]]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", "1"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       SqrtBox["3"]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "\[Infinity]"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{"\[LongEqual]"}}, "Rows" -> {{Center}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{3.927837334724102*^9},
 CellLabel->
  "Out[191]//TraditionalForm=",ExpressionUUID->"91812c83-b595-472e-92b1-\
140269b417b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualising the Triangle", "Subsection",
 CellChangeTimes->{{3.908337141383889*^9, 
  3.908337151258582*^9}},ExpressionUUID->"e15893ce-fa40-4e6c-88dc-\
bc81f1c5c5ce"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "(", "t", ")"}], "=", 
     FractionBox["1", "3"]}], ",", " ", 
    RowBox[{"find", " ", 
     FractionBox[
      RowBox[{"Cos", "(", "t", ")"}], 
      RowBox[{"Tan", "(", "t", ")"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2d6ffee5-f4ff-4444-9909-11d1afe5b77f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["o", "h"], " ", "=", " ", 
    RowBox[{
     FractionBox["1", "3"], " ", "meaning"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c33450bd-a75f-48d1-813f-a64ff2a0eab8"],
 " a is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["3", "2"], "-", "1"}]], "=", " ", 
    RowBox[{"2", 
     SqrtBox["2"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73bd1525-3a48-43f2-a35c-9a16ac0769ff"],
 "\nCos is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["a", "h"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        SqrtBox["2"]}], "3"], " ", "and", " ", "Tan", " ", "is", " ", 
      FractionBox["o", "a"]}], " ", "=", " ", 
     FractionBox["1", 
      RowBox[{"2", 
       SqrtBox["2"]}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0a30b4d1-7604-491e-bf88-d86eb7170c04"],
 "\nTherefore",
 Cell[BoxData[
  RowBox[{" ", 
   FractionBox[
    RowBox[{"Cos", "(", "t", ")"}], 
    RowBox[{"Tan", "(", "t", ")"}]]}]],ExpressionUUID->
  "770717f7-9579-449c-998f-28b3b3609bb3"],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    FractionBox[
     RowBox[{"2", 
      SqrtBox["2"]}], "3"], 
    FractionBox["1", 
     RowBox[{"2", 
      SqrtBox["2"]}]]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4cfb359d-8048-4de7-b0d7-3f7598064832"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox["8", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "db56cf06-b0bf-4cec-ba63-a0ade14015b5"]
}], "Text",
 CellChangeTimes->{{3.9083371563711214`*^9, 
  3.9083373749655724`*^9}},ExpressionUUID->"1501b3ed-36a9-4795-baa2-\
dec8c187ddf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   FractionBox[
    RowBox[{"2", 
     SqrtBox["2"]}], "3"], 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["2"]}]]], "]"}]], "Input",
 CellChangeTimes->{{3.9083373545893135`*^9, 3.908337358781901*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"03af8edd-344b-4d78-bb59-b22b810e5f60"],

Cell[BoxData[
 FractionBox["8", "3"]], "Output",
 CellChangeTimes->{3.9083373611791162`*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"9c4f2893-ec1a-4a04-96b8-42932a86950a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Substituting Values", "Section",
 CellChangeTimes->{{3.9029448200984397`*^9, 
  3.9029448230373297`*^9}},ExpressionUUID->"58a808cb-f45c-482d-a2e7-\
caf309f5faf3"],

Cell["finds values of y where x is {...} values", "Text",
 CellChangeTimes->{
  3.902944834659209*^9, {3.9029449102732735`*^9, 
   3.902944938433522*^9}},ExpressionUUID->"141d61b2-9af4-4574-b140-\
317575305700"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "2"]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.902944836589734*^9, 3.902944860479034*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"62a70693-24f9-4882-849a-551057898e83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["17", "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9029448400150223`*^9, 3.9029448610196457`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"7bea09bc-c484-4e33-86ee-3200bc89254d"]
}, Open  ]],

Cell[TextData[{
 "Table, x and y values between 0 and 6 at increments of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "22d4e8fe-784f-4feb-919d-c7e8367f72c1"]
}], "Text",
 CellChangeTimes->{{3.90294486904624*^9, 
  3.902944924476348*^9}},ExpressionUUID->"ada15a42-252e-4385-82cf-\
898976510292"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "6", ",", 
      FractionBox["1", "2"]}], "}"}]}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{3.902944889401114*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"2c5ddbd5-f29f-4a54-8e6f-e2c2903306e8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "4"},
    {
     FractionBox["1", "2"], 
     FractionBox["17", "4"]},
    {"1", "5"},
    {
     FractionBox["3", "2"], 
     FractionBox["25", "4"]},
    {"2", "8"},
    {
     FractionBox["5", "2"], 
     FractionBox["41", "4"]},
    {"3", "13"},
    {
     FractionBox["7", "2"], 
     FractionBox["65", "4"]},
    {"4", "20"},
    {
     FractionBox["9", "2"], 
     FractionBox["97", "4"]},
    {"5", "29"},
    {
     FractionBox["11", "2"], 
     FractionBox["137", "4"]},
    {"6", "40"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9029448900449667`*^9},
 CellLabel->
  "Out[4]//TableForm=",ExpressionUUID->"11e8d159-e08e-4a2c-8a75-c1590fa41593"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rates of Change/Differentiation", "Section",
 CellChangeTimes->{{3.9031297962498245`*^9, 3.903129800878029*^9}, {
  3.905756570916954*^9, 
  3.9057565736743526`*^9}},ExpressionUUID->"2fa8f9fd-fc18-4296-a525-\
2d86c0dde325"],

Cell[CellGroupData[{

Cell["Limits", "Subsection",
 CellChangeTimes->{{3.903130044737214*^9, 
  3.903130045511897*^9}},ExpressionUUID->"5d5f7a59-769d-47e1-a5a9-\
bc3fa4c0c9b6"],

Cell["\<\
Correct syntax when writing on paper:
f\[CloseCurlyQuote](x) = lim  10x + 5h -3
\t h->0
\tthen write = 10x -3 when sub in h (get rid of the lim syntax)\
\>", "Text",
 CellChangeTimes->{{3.9066886815063305`*^9, 3.906688726221243*^9}, {
  3.9066887563575253`*^9, 
  3.906688798626263*^9}},ExpressionUUID->"abfdec1d-e97e-4a53-8adf-\
420a63f0aa63"],

Cell["Limits (Indeterminate means undefined)", "Text",
 CellChangeTimes->{{3.9031298073560944`*^9, 3.903129808837781*^9}, {
  3.903129858655154*^9, 
  3.903129864205237*^9}},ExpressionUUID->"97451ccf-9a01-4e46-8e90-\
7f25cb1e7adc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", "2"}], ",", 
   RowBox[{"x", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298206209307`*^9, 3.9031298322602797`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a520876a-859c-4372-bc69-cde5863209f4"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.9031298339674673`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8540e5f8-adf0-477b-a819-31218b9236b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"x", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298453675795`*^9, 3.9031298520814714`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bfc68625-c2d8-49c9-a78c-b28763ebdf55"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.903129852676125*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9b49e64b-b93a-43c8-818a-519e349f2adb"]
}, Open  ]],

Cell["\<\
Left and right limits (FromAbove for right limit, FromBelow for left limit)\
\>", "Text",
 CellChangeTimes->{{3.9031298770004263`*^9, 
  3.90312993387886*^9}},ExpressionUUID->"9a7891c4-0f0b-42ef-a800-\
e4de985c4b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["1", "x"], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromAbove\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9031298884960256`*^9, 3.9031299068558474`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d3f7ecff-5dae-4954-bd4e-c64690e38810"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.903129907566996*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d9f97604-e814-4cfa-a616-ea255e51b792"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", 
   RowBox[{"5", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.903129952308961*^9, 3.903129961647176*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0aa180ce-1c0c-4e43-9a19-68adb2df9069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", "+", "h"}], "]"}], "-", 
     RowBox[{"f", "[", "x", "]"}]}], "h"], ",", 
   RowBox[{"h", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903129969598674*^9, 3.9031300121958847`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c5a167ea-326f-413f-8677-bbfd09558c92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5"}], "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.903129995374934*^9, 3.9031300126208286`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"57ff74d0-8128-4d57-930c-6555ec0259f5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Derivatives", "Subsection",
 CellChangeTimes->{{3.903130053774686*^9, 
  3.9031300557891474`*^9}},ExpressionUUID->"b5829438-6fa5-4308-98c2-\
5e09f214eb3e"],

Cell["f\[CloseCurlyQuote](x) = derivative", "Text",
 CellChangeTimes->{{3.9031300652742567`*^9, 
  3.9031300737149944`*^9}},ExpressionUUID->"7bdda29d-feb9-4283-a37f-\
5545f7b5f2c6"],

Cell["Finding Derivative", "Text",
 CellChangeTimes->{{3.903130094620001*^9, 
  3.903130098077372*^9}},ExpressionUUID->"227ca1a4-470b-45f6-a27d-\
bda41400e604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9031301051262927`*^9, 3.903130109395194*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"db707a54-3e92-42b0-8b4c-5d43db1c3e57"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.9031301096850057`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6347732c-75c4-439e-8ca4-45d339b64af5"]
}, Open  ]],

Cell["\<\
Inserting f\[CloseCurlyQuote](x) = 0 gives the x values of the stationary \
points (can also determine how many)\
\>", "Text",
 CellChangeTimes->{{3.9059663216607327`*^9, 
  3.905966362449554*^9}},ExpressionUUID->"e8ea4cc4-54d0-4182-9ad7-\
cbf6af6e87da"],

Cell["\<\
Once x is found, sub x value into f(x) not f\[CloseCurlyQuote](x) as f\
\[CloseCurlyQuote](x) will = 0\
\>", "Text",
 CellChangeTimes->{{3.9059663703081284`*^9, 
  3.9059663923800693`*^9}},ExpressionUUID->"9574a2ba-4414-4690-99e6-\
97a4ca1c05f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.905982616663844*^9, 3.9059826201093106`*^9}, {
  3.9059826506753254`*^9, 3.9059826578184114`*^9}, {3.905983153956897*^9, 
  3.905983157681263*^9}, {3.9060492877779694`*^9, 3.906049293518279*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bc3e7645-45a5-4df5-9b71-0fb7640b41a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"l", "[", "x", "]"}]}], "}"}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"l", "'"}], "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
    "Reals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.905982590720085*^9, 3.905982607022565*^9}, {
  3.905982738804281*^9, 3.905982739842413*^9}, {3.9059831737658253`*^9, 
  3.905983174031991*^9}, {3.906049344476022*^9, 3.906049345185381*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"0d2e3e92-ad25-4fdb-af90-11a6e833bb5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.905982736177876*^9, 3.905982741078788*^9}, 
   3.9059828105372844`*^9, 3.9059831743990498`*^9, 3.906049345807706*^9, {
   3.9065884785839643`*^9, 3.9065884857777605`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"f89716dc-a849-485a-8f45-cfbe1afffd57"]
}, Open  ]],

Cell["Do not use /.->Solve because Solve already has arrows.", "Text",
 CellChangeTimes->{{3.905983182726336*^9, 
  3.905983201025586*^9}},ExpressionUUID->"60e75e81-8f1b-44da-96f2-\
77295b22c4db"]
}, Closed]],

Cell[CellGroupData[{

Cell["Chain Rule", "Subsection",
 CellChangeTimes->{{3.9066890962129908`*^9, 3.9066890979746523`*^9}, {
  3.906689144619187*^9, 
  3.906689145829402*^9}},ExpressionUUID->"12a3b430-0ecf-4e14-8b99-\
447013817353"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "3"], " ", "+", " ", "2"}], ")"}], "2"], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e95b9eda-bc00-4291-a64e-cfc799855445"],
 "\nlet u = inner function e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "+", " ", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3b496929-9011-4641-8e97-c9bcd52369a1"],
 "\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    FractionBox["du", "dx"], " ", "is", " ", "the", " ", "derivative", " ", 
    "of", " ", "the", " ", "inner", " ", "function", " ", 
    RowBox[{"e", ".", "g", ".", " ", "3"}], 
    SuperscriptBox["x", "2"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox["dy", "du"], " ", "is", " ", "the", " ", "derivative", " ", 
    "of", " ", "the", " ", "outer", " ", "function", " ", 
    RowBox[{"e", ".", "g", ".", " ", "2"}], 
    SuperscriptBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", "+", " ", "2"}], ")"}], " "}], "1"]}], 
   TraditionalForm]}],
  FormatType->TraditionalForm,ExpressionUUID->
  "6405aa3a-ecc2-4686-8d9e-41c558314438"],
 "\nMultiply ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dy", "du"], " ", "and", " ", 
    FractionBox["du", "dx"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "417a6231-5943-459d-8c48-afc58eadf664"],
 " to get ",
 Cell[BoxData[
  FormBox[
   FractionBox["dy", "dx"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d2156e43-5472-4394-94c9-ad57ed22a333"]
}], "Text",
 CellChangeTimes->{{3.9066891099861174`*^9, 
  3.9066893092720575`*^9}},ExpressionUUID->"454407f5-fe21-4154-86be-\
1c3760790a4b"],

Cell[TextData[{
 "Note: if the variable is the denominator e.g. ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "1"}], ")"}], "3"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6402b2a6-fe39-438c-af11-adae468d704d"],
 " make it ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "+", " ", "1"}], ")"}], 
     RowBox[{"-", "3", " "}]], "before", " ", "applying", " ", "the", " ", 
    "chain", " ", 
    RowBox[{"rule", "."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "88bf2732-4fd6-4cea-b22c-0d008135895f"]
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.906689321863122*^9, 
  3.9066893874626107`*^9}},ExpressionUUID->"9f70baaa-4f1e-4422-815f-\
447029885f5a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Normals and Tangent Equations (Custom functions and formula)", \
"Subsection",
 CellChangeTimes->{{3.9057565821266203`*^9, 3.905756583633112*^9}, {
  3.9061519537518735`*^9, 3.9061519638259807`*^9}, {3.9061520439964523`*^9, 
  3.9061520492152348`*^9}},ExpressionUUID->"d5a35c87-f56c-4467-a22d-\
9229457323f4"],

Cell["\<\
Tangent line of (x1,y1):
y-y1=f\[CloseCurlyQuote](x1)(x-x1)\
\>", "Text",
 CellChangeTimes->{{3.9057565915256968`*^9, 3.9057566013862853`*^9}, {
  3.9057566531265497`*^9, 
  3.9057567112108994`*^9}},ExpressionUUID->"2ccb7275-6a61-4939-8f2e-\
4b4eeeb5e5ce"],

Cell["\<\
eqn is the equation and 1 is the x value at which the tangent/normal \
intersects\
\>", "Text",
 CellChangeTimes->{{3.906152056866331*^9, 
  3.906152145297738*^9}},ExpressionUUID->"21e7c24a-a022-4b98-bb28-\
83ed11cb2a35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TangentLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eqn", ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.906151968901057*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"12b0b390-41e0-4d73-a908-38fb7bfbd2fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TangentLine", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9061520166538086`*^9, 3.906152019382639*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"931e13d7-9e67-4e3a-8909-3334dca69e07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "x"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.906152020669841*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1ee8c401-13d1-4a5f-92c0-33332db7e08b"]
}, Open  ]],

Cell[TextData[{
 "Normal lines:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "-", "y1"}], "=", 
    FractionBox[
     RowBox[{"-", "1"}], 
     RowBox[{
      RowBox[{"f", "'"}], 
      RowBox[{"(", "x1", ")"}]}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2aecdf48-3960-4fa1-908b-99cdc7e6c4b2"],
 "(x-x1)"
}], "Text",
 CellChangeTimes->{{3.9057566063555746`*^9, 3.9057566091132383`*^9}, {
  3.905756713699462*^9, 3.9057567185500946`*^9}, {3.905756755506663*^9, 
  3.905756773535177*^9}},ExpressionUUID->"700134cf-783d-4aeb-b7c2-\
79a95f528b88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"D", "[", 
           RowBox[{"eqn", ",", "x"}], "]"}]}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"18965a02-5281-4119-a199-e62341d83c99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalLine", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9061520038983707`*^9, 3.9061520110969763`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"2ac53bfc-152f-4aa8-a495-6ae4c4add77f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{
     FractionBox["3", "2"], "-", 
     FractionBox["x", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.906152011949865*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3bcc01eb-d8a6-45cd-a00f-25fb3de0fd3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"4", 
    SuperscriptBox["x", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"v", "'"}], "[", "a", "]"}], 
    RowBox[{"(", 
     RowBox[{"x", "-", "a"}], ")"}]}], "+", 
   RowBox[{"v", "[", "a", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"v", "'"}], "[", "a", "]"}]]}], 
    RowBox[{"(", 
     RowBox[{"x", "-", "a"}], ")"}]}], "+", 
   RowBox[{"v", "[", "a", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], ",", 
       RowBox[{"L", "[", 
        RowBox[{"x", ",", "a"}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", "a"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9067472981044455`*^9, 3.906747312041154*^9}, {
  3.906747508759157*^9, 3.90674753302061*^9}, {3.906747715449292*^9, 
  3.906747735023653*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"a2c499dc-82a6-4423-b628-3c9b849cc01e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -2, 2}}, Typeset`size$$ = {
    419.99999999999994`, {205., 210.50033772786452`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`v[$CellContext`x], 
         $CellContext`L[$CellContext`x, $CellContext`a$$], 
         K[$CellContext`x, $CellContext`a$$]}, {$CellContext`x, -5, 5}, 
        PlotRange -> {-5, 5}, AspectRatio -> 1], 
      "Specifications" :> {{$CellContext`a$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{771., {267.77424324816093`, 275.22575675183907`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.906747534401118*^9, 3.9067475485385695`*^9}, {
  3.906747736648881*^9, 3.9067477388551397`*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"d26d4860-7cd9-49bf-a377-41b8b8d898fd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting Derivatives (Custom Functions)", "Subsection",
 CellChangeTimes->{{3.905796956856308*^9, 3.905796972675157*^9}, {
  3.905966246486597*^9, 
  3.905966249001212*^9}},ExpressionUUID->"35f3d191-83f3-4617-8afa-\
d690117997c8"],

Cell["Custom Function", "Text",
 CellChangeTimes->{{3.905796983178338*^9, 
  3.9057969854956875`*^9}},ExpressionUUID->"252512fb-162c-4798-b40a-\
9057af572f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDerivative", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "df", "}"}], ",", 
    RowBox[{
     RowBox[{"df", "=", 
      RowBox[{"D", "[", 
       RowBox[{"func", ",", "x"}], "]"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"func", ",", "df"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Function\>\"", ",", "\"\<Derivative\>\""}], "}"}]}], 
       ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9057969879278464`*^9, 3.9057969953030596`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"153fee3c-3a34-4fb7-97b7-61fa30175c3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotDerivative", "[", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9057967993428764`*^9, 3.9057968137306604`*^9}, {
  3.905796910027857*^9, 3.905796919341461*^9}, {3.9059832400614634`*^9, 
  3.905983257121241*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5ac6b075-59b3-4537-9a72-fb0c7517f1cf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
zyP+D211VHk=
          "]]}, Annotation[#, "Charting`Private`Tag$17450#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
P+R/APHBgM0=
          "]]}, Annotation[#, "Charting`Private`Tag$17450#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{-Pi, Pi}, {-31.00627288361303, 
        31.00627288361303}}, {{-3.141592653589793, 
       3.141592653589793}, {-31.00627288361303, 31.00627288361303}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Function\"", "\"Derivative\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.90579701037875*^9, {3.9059832411637945`*^9, 3.9059832576451435`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"fb3a8513-8883-445a-909f-13447ae9fc95"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding Stationary Points", "Subsection",
 CellChangeTimes->{{3.90658697955897*^9, 
  3.906586985427451*^9}},ExpressionUUID->"053f0519-a39b-482e-a62a-\
8b04c6f61804"],

Cell["\<\
Inserting f\[CloseCurlyQuote](x) = 0 gives the x values of the stationary \
points (can also determine how many)
Once x is found, sub x value into f(x) not f\[CloseCurlyQuote](x) as f\
\[CloseCurlyQuote](x) will = 0\
\>", "Text",
 CellChangeTimes->{{3.906588548814573*^9, 
  3.9065885553741474`*^9}},ExpressionUUID->"4590b176-1621-417f-8e97-\
57902c919ae7"],

Cell["Finds the coordinates of stationary points:", "Text",
 CellChangeTimes->{{3.906586994577306*^9, 3.90658702822515*^9}, {
  3.9065885420331554`*^9, 
  3.906588544860073*^9}},ExpressionUUID->"a658b784-3164-4599-8a5f-\
5f9952e55c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.9065870155711393`*^9, 3.9065870160797825`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2b1aba01-072e-4b03-a59f-823c63e9ee31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"v", "[", "x", "]"}]}], "}"}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
    "Reals"}], "]"}]}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"908912b8-de7a-4207-9ed5-d41c9d8ea77d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9065870125056105`*^9, 3.906587018810833*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"92d22b3d-f437-4f45-bdc5-42eac997b842"]
}, Open  ]],

Cell["Do not use /.->Solve because Solve already has arrows.", "Text",
 CellChangeTimes->{
  3.906588575762929*^9},ExpressionUUID->"5f03939f-91e0-425d-a0ae-\
234ea7c93abf"],

Cell["Sign Table", "Text",
 CellChangeTimes->{{3.9065883593405285`*^9, 
  3.906588362079232*^9}},ExpressionUUID->"72f446ac-b9c0-4635-9352-\
f95e71eb3e90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.9065883642032347`*^9, 3.9065884010227013`*^9}, {
  3.9065885929912167`*^9, 3.906588597734145*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"6b727f6c-6115-431e-8a6c-143de8e71455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"q", "'"}], "[", "x", "]"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["4", "3"], ",", "2", ",", "6", ",", "7"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.906588410648385*^9, 3.906588442944785*^9}, {
  3.9065885954944067`*^9, 3.9065885956193323`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"7b852792-2f21-4511-98f0-799c77269c3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "0", ",", 
   RowBox[{"-", "8"}], ",", "0", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{{3.906588429674637*^9, 3.9065884433773317`*^9}, 
   3.9065885995433736`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"6dc729ee-75ff-48ad-a914-136ad3adca0e"]
}, Open  ]],

Cell["or (more fancy)", "Text",
 CellChangeTimes->{{3.9065885844758234`*^9, 
  3.906588588197081*^9}},ExpressionUUID->"a500b708-95c2-4bf7-91fa-\
991fff984383"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"q", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2", ",", "6", ",", "7"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<q'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.906588604244399*^9, 3.9065886742395735`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"dea4e6ff-1ab8-4dfb-bff1-3ea1bb0a7adb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"x\"\>",
       HoldForm], "1", 
      FractionBox["4", "3"], "2", "6", "7"},
     {
      TagBox["\<\"q'(x)\"\>",
       HoldForm], "5", "0", 
      RowBox[{"-", "8"}], "0", "17"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, None}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{"x", "q'(x)"}, None}]]]], "Output",
 CellChangeTimes->{{3.906588664943302*^9, 3.906588674795138*^9}},
 CellLabel->
  "Out[85]//TableForm=",ExpressionUUID->"2bfee1eb-6af4-40ce-9d34-\
19a88ddb0eb8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Proportion Rule", "Subsection",
 CellChangeTimes->{{3.906689898984245*^9, 
  3.906689901991103*^9}},ExpressionUUID->"4feb735d-216a-474b-95a2-\
e447bcc29a8e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["d", "dx"], 
    RowBox[{"(", 
     FractionBox["f", "g"], ")"}]}], " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"g", "*", 
      RowBox[{"f", "'"}]}], "-", 
     RowBox[{"f", "*", 
      RowBox[{"g", "'"}]}]}], 
    SuperscriptBox["g", "2"]]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"99bd5605-b53e-4463-bfdb-26d319619c47"]], \
"Text",
 CellChangeTimes->{{3.906689907806095*^9, 3.9066899432145834`*^9}, {
  3.90669006294683*^9, 
  3.9066900652140994`*^9}},ExpressionUUID->"2a39ccba-c4cf-485a-a664-\
e0729ea3cc51"],

Cell[TextData[{
 "E.g. ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"5", "+", 
     RowBox[{"3", "x"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], "+", "7"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9a39c315-7b25-4752-9714-ee94765c4abd"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "=", 
     RowBox[{"5", "+", 
      RowBox[{"3", "x"}]}]}], ",", 
    RowBox[{
     RowBox[{"f", "'"}], "=", "3"}], ",", 
    RowBox[{"g", "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "7"}]}], ",", 
    RowBox[{
     RowBox[{"g", "'"}], "=", 
     RowBox[{"2", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "27ba8ee4-5685-4449-913b-7226d86f9589"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"10", "x"}], "+", "21"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "7"}], ")"}], "2"]]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6e0e880a-d681-464f-903d-136b4f69826d"]
}], "Text",
 CellChangeTimes->{{3.906689958331909*^9, 3.906689984367235*^9}, {
  3.90669001845408*^9, 3.906690045512209*^9}, {3.906690107357165*^9, 
  3.9066901443305025`*^9}},ExpressionUUID->"e461d839-b7b5-46b2-9f21-\
b156519e1c68"]
}, Closed]],

Cell[CellGroupData[{

Cell["Newton\[CloseCurlyQuote]s Method", "Subsection",
 CellChangeTimes->{{3.908336455564697*^9, 
  3.908336458596327*^9}},ExpressionUUID->"e596de73-29b1-4e06-bee6-\
c76d769c609f"],

Cell[TextData[{
 "For estimating x ints\n1 Trial: x2 = x1 - ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"f", "[", "x1", "]"}], 
    RowBox[{
     RowBox[{"f", "'"}], "[", "x1", "]"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eae7b576-ba84-4367-99fc-0275bde8f8f9"],
 "\neqn is the function, var is \[OpenCurlyDoubleQuote]x\
\[CloseCurlyDoubleQuote] or the x variable in the function, x is the starting \
number\nThe custom function below is only 1 trial."
}], "Text",
 CellChangeTimes->{{3.908336489041509*^9, 3.9083365206407585`*^9}, {
  3.9083367559684563`*^9, 3.9083368007401295`*^9}, {3.908336847988144*^9, 
  3.908336860700636*^9}},ExpressionUUID->"5c1dd1c6-e231-4945-bfb5-\
adddc1e7e533"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Newton", "[", 
   RowBox[{"eqn_", ",", "var_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"x", "-", 
   FractionBox[
    RowBox[{"eqn", "/.", 
     RowBox[{"var", "->", "x"}]}], 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eqn", ",", "var"}], "]"}], "/.", 
     RowBox[{"var", "->", "x"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9083365287824545`*^9, 3.9083365883759336`*^9}, {
  3.9083366246399765`*^9, 3.908336667100564*^9}, {3.9083368198403196`*^9, 
  3.9083368201529384`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"ef60cb47-1b71-4997-b370-ff66db34fdc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"Newton", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", "x", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9083366735136995`*^9, 3.9083366752038727`*^9}, {
  3.9083367315141845`*^9, 3.9083367495157037`*^9}, {3.9083368057121162`*^9, 
  3.908336811886712*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"3ec85671-e156-43ce-9b9f-df875b9be600"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{{3.908336812394812*^9, 3.9083368242664022`*^9}},
 CellLabel->
  "Out[319]=",ExpressionUUID->"17ee81ee-8724-4015-9b56-64ace66a9bce"]
}, Open  ]],

Cell["\<\
Other version:
Input:\
\>", "Text",
 CellChangeTimes->{{3.9083369667735767`*^9, 
  3.908336979266185*^9}},ExpressionUUID->"785ce05d-1396-446c-b65a-\
76b686f5e597"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"f", ",", "x", ",", "nit"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"25", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"5", "x"}], "-", "125"}]}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Insert", " ", "the", " ", "function", " ", "f", 
    RowBox[{"(", "x", ")"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], ":=", "2"}], "                ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Insert", " ", "the", " ", "value", " ", "of", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "initial", 
     " ", "guess", " ", 
     SubscriptBox["x", "0"], " ", "for", " ", "the", " ", "solution", " ", 
     "to", " ", "f", 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], " ", "*)"}]}], "\n", 
 RowBox[{"nit", ":=", "5", "                 ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "nit", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
    "iterations"}], " ", "*)"}]}]}], "Input",
 CellLabel->
  "In[320]:=",ExpressionUUID->"fbeb9494-600b-40f0-abc6-f68a77570673"],

Cell["Algorithm", "Text",
 CellChangeTimes->{{3.908337015074068*^9, 
  3.9083370163320584`*^9}},ExpressionUUID->"55960974-b45e-4932-912a-\
fa87adf7be3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"x", "[", "n", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"N", "[", 
           RowBox[{"x", "[", "n", "]"}], "]"}]}]}], ")"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", 
      RowBox[{"N", "[", "nit", "]"}]}], "}"}]}], "]"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
     RowBox[{"x", "[", "n", "]"}], " ", "represents", " ", 
     RowBox[{
      SubscriptBox["x", "n"], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "value", 
     " ", "of", " ", 
     SubscriptBox["x", "0"]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Approximate solution to \>\"", ",", 
       RowBox[{"f", "[", "x", "]"}], ",", "\"\<= 0 after \>\"", ",", " ", 
       "nit", " ", ",", "\"\< iterations is \>\"", ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"x", "[", "nit", "]"}], ",", "9"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Value", " ", "of", " ", 
     SubscriptBox["x", 
      RowBox[{"n", "+", "1"}]], " ", "after", " ", "n"}], "=", 
    RowBox[{"nit", " ", "iterations"}]}], " ", "*)"}]}], "\n", 
 RowBox[{"Clear", "[", "Dist1", "]"}], "\n", 
 RowBox[{
  RowBox[{"Dist1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"N", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"N", "[", "nit", "]"}]}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{"Prepend", "[", 
    RowBox[{"Dist1", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Iteration\>\"", ",", "\"\<   Approximate solution\>\"", ",", 
       "\"\<f[x]\>\""}], "}"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "generates", " ", "a", " ", "table", " ", "of", " ", "the", " ", 
    "approximate", " ", "solution", " ", "and", " ", "the", " ", "y", " ", 
    "value", " ", "of", " ", "the", " ", "function", " ", "at", " ", "that", 
    " ", "x", " ", "value"}], "*)"}]}]}], "Input",
 CellLabel->
  "In[324]:=",ExpressionUUID->"6e773cbe-8ed6-4a3b-add8-0f787fa44fb3"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"Approximate solution to \"", 
    RowBox[{
      RowBox[{"-", "125"}], "-", 
      RowBox[{"5", " ", "x"}], "+", 
      RowBox[{"25", " ", 
        SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}]}], "\"= 0 after \"", "5", 
    "\" iterations is \"", "2.152384416590143`"},
   "RowDefault"],
  StripOnInput->False,
  FontColor->RGBColor[0, 0, 1]]], "Output",
 CellChangeTimes->{3.908337004305706*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"8b64c615-4d1f-4655-9338-74d2b71b7c69"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration\"\>", "\<\"   Approximate solution\"\>", "\<\"f[x]\"\>"},
    {"1.`", "2.1596638655462184`", "0.9513648267017913`"},
    {"2.`", "2.152399768699919`", "0.002002166197854649`"},
    {"3.`", "2.152384416658661`", "8.93581386662845`*^-9"},
    {"4.`", "2.152384416590143`", "0.`"},
    {"5.`", "2.152384416590143`", "0.`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.908337004321328*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"7e87744b-d0ca-4ff8-88d1-bcb84b2c00de"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Integration", "Section",
 CellChangeTimes->{{3.9278368579321365`*^9, 
  3.927836859593358*^9}},ExpressionUUID->"ee0ed6bb-de6a-4801-a075-\
26d2f2b23a0f"],

Cell["Don\[CloseCurlyQuote]t forget integral dx and +C", "Text",
 CellChangeTimes->{{3.9278382351543665`*^9, 3.9278382530308137`*^9}, {
  3.9319370339053135`*^9, 
  3.9319370361496954`*^9}},ExpressionUUID->"f0b63f11-65eb-45c9-9694-\
fcc1d605ec20"],

Cell[CellGroupData[{

Cell["Indefinite Integrals", "Subsection",
 CellChangeTimes->{{3.9278368667140474`*^9, 
  3.927836872172074*^9}},ExpressionUUID->"aec024a6-29c1-4cfa-82dc-\
8246eab5bbaa"],

Cell["\<\
Syntax: Integrate[func, x]
or esc intt esc\
\>", "Text",
 CellChangeTimes->{{3.927836986997627*^9, 3.9278369939732075`*^9}, {
  3.9279332528671103`*^9, 
  3.9279332571392717`*^9}},ExpressionUUID->"d46f1ed0-1b4c-45ec-a50f-\
3bd61f178039"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox["E", 
    RowBox[{"3", "x"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.927836988868797*^9, 3.9278370207573996`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8baf6a37-85f7-47fc-b8a9-67d53df21fbe"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"3", " ", "x"}]], "3"]], "Output",
 CellChangeTimes->{{3.9278370101214375`*^9, 3.9278370259889345`*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"63d86f14-e4af-4c80-9e3e-8b3599b56452"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Definite Integrals", "Subsection",
 CellChangeTimes->{{3.9278368773834953`*^9, 
  3.927836881103653*^9}},ExpressionUUID->"27e05726-1fb8-4ec1-b9ed-\
af43870fa93d"],

Cell["\<\
Syntax: Integrate[func, {x, low terminal, high terminal}]
or esc dintt esc
TrigToExp: trig -> exponential, better than trig expand\
\>", "Text",
 CellChangeTimes->{{3.927836906249817*^9, 3.9278369624162416`*^9}, {
  3.9279332628321075`*^9, 
  3.927933265685977*^9}},ExpressionUUID->"94e1b776-1c1d-453e-9a69-\
1d1144de82e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"3", "x"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "//", 
  "TrigToExp"}]], "Input",
 CellChangeTimes->{{3.9278368987899647`*^9, 3.9278368997429385`*^9}, {
  3.9278369649433775`*^9, 3.927836970321929*^9}, {3.9279284664283767`*^9, 
  3.9279284747581387`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"b12a398e-91cf-4254-ab6e-fc1b6c10b04b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", "6"]}]]}], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "6"], "3"]}]], "Output",
 CellChangeTimes->{
  3.927836900200109*^9, {3.9278369665531545`*^9, 3.9278369730097523`*^9}, {
   3.9279284667583847`*^9, 3.9279284751882205`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"2c249cc3-5cb3-4ae3-b79e-0f57fbcd473d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{"3", "x"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "//", "TrigExpand"}], "//",
   "Together"}]], "Input",
 CellChangeTimes->{3.9278369713689384`*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"f8c0e658-f9ad-4d04-9695-7b012c2ce84f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "12"]}], 
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", "6"]}]]], "Output",
 CellChangeTimes->{3.927836890984242*^9, 3.9278369717927475`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"4bf91f7a-df38-4340-9e1b-008d16491100"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Length of a curve and avg value", "Subsection",
 CellChangeTimes->{{3.931937246709734*^9, 
  3.931937254806553*^9}},ExpressionUUID->"30a2144b-3b46-4288-ab50-\
fdf6b6b79ad1"],

Cell["length:", "Text",
 CellChangeTimes->{{3.9319373584388657`*^9, 
  3.9319373594233603`*^9}},ExpressionUUID->"0d552b4b-8e88-4644-87e9-\
ed107471483c"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["dy", "dx"], ")"}], "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.931937365332945*^9, 3.931937386191558*^9}, {
  3.9319796615478*^9, 
  3.9319796946993885`*^9}},ExpressionUUID->"6a9fd571-6b5f-4523-9e0e-\
0f6cc6a49a2c"],

Cell["avg value:", "Text",
 CellChangeTimes->{{3.9319373940568714`*^9, 
  3.9319373958279705`*^9}},ExpressionUUID->"0a9724ba-54c2-4ac5-a3ee-\
bb6ffbad8ada"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"b", "-", "a"}]], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "a", "b"], 
   RowBox[{"f", 
    RowBox[{"(", "x", ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.931937421689105*^9, 
  3.9319374362953005`*^9}},ExpressionUUID->"d7608195-faea-4939-b59a-\
d7af835ab801"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Surds/Nth Roots", "Section",
 CellChangeTimes->{{3.9059661868910165`*^9, 
  3.9059661992851715`*^9}},ExpressionUUID->"4ce47866-355d-4f18-b6cb-\
04dc5a3961c5"],

Cell[CellGroupData[{

Cell["Nth Root Syntax", "Subsection",
 CellChangeTimes->{{3.9059662133919687`*^9, 
  3.9059662165334773`*^9}},ExpressionUUID->"69afad34-eece-4318-b1af-\
35b67f17c417"],

Cell[TextData[{
 "the 4th root of 3 (= ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", 
    FractionBox["1", "4"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cf27f99b-ff29-4dd0-bbc0-57964544ed22"],
 ")"
}], "Text",
 CellChangeTimes->{{3.905966235856756*^9, 
  3.9059662610196767`*^9}},ExpressionUUID->"c24ce7fc-e6c4-4404-8305-\
512fc0a659e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", 
    SuperscriptBox["x", "2"]}], "-", 
   FractionBox["1", 
    SuperscriptBox["x", "2"]]}], "/.", 
  RowBox[{"x", "->", 
   FractionBox[
    RowBox[{"-", "1"}], 
    RowBox[{"Surd", "[", 
     RowBox[{"3", ",", "4"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.9059654122106867`*^9, 3.905965417646654*^9}, {
  3.9059654783050804`*^9, 3.905965520456111*^9}, {3.9059655550920086`*^9, 
  3.9059655552668304`*^9}, {3.9059655872451267`*^9, 3.905965599549638*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5c766461-333b-4232-aa0b-86f6aaca4ee7"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.905966219744381*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"dfe80a3d-390f-4caf-b605-255bf309ef06"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Piecewise/hybrid functions", "Section",
 CellChangeTimes->{{3.905360481146332*^9, 3.905360511058983*^9}, {
  3.905360551462373*^9, 3.9053605515775986`*^9}, {3.905360589265071*^9, 
  3.905360591532919*^9}},ExpressionUUID->"5dcb10f0-bfcf-4543-933a-\
fdab3f42f925"],

Cell["Defining and Plotting", "Text",
 CellChangeTimes->{{3.905360670619272*^9, 3.9053606742008815`*^9}, {
  3.905529551069645*^9, 
  3.905529551571334*^9}},ExpressionUUID->"01b03795-c13b-4880-85dd-\
3f7ee22592c2"],

Cell["\<\
(exclusions gets rid of all points at x = 0 -> the weird mathematica line)\
\>", "Text",
 CellChangeTimes->{{3.9055295577749443`*^9, 
  3.905529578151231*^9}},ExpressionUUID->"0c5a950f-911b-4dd3-8a0c-\
867753f442d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "[", "x_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", ">=", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "x"}], "+", "1"}], ",", 
       RowBox[{"x", "<", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"Exclusions", "->", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9053605173398466`*^9, 3.905360539124447*^9}, {
  3.90536069124251*^9, 3.9053606949178805`*^9}, {3.905529519970622*^9, 
  3.9055295291867175`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0abe7862-8d39-4b44-bf83-e4a828465270"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlxX0s1HEcwPE7eTgUnWRHN3ZOKQ/DYo3k+70boVSinfqj2XDYWk6keTg1
XXIamvK0mdZ5vpm1RuK2+vy2K9HZPN3S7UJJdUn53bm74Q7Vfu/tvRcnQ5Qi
tKHRaP7//i+VG0Hph9lOuXIjn0lQcvG1iAA7LduVGPJqvHu9joMzTyz0KpXO
BKUPDiiO2s3rZBCUbCybT31TwrMjKD3xj4qD0fEsG4LSAysaj8bpBNswf6bB
92afGw79qTGGtJmB0gXHKrSO2wISKBk4X/5sg3ngKwyr06zSajoOdcmT8D8v
AcvhJY+TT8f6giCXwv4lKI70qBoR0HFBtJyrjl+CyCdq5gqXjosm2883ib+A
Iuei/9nXNLy+EpgYMbEIpabGTq/vu8hesvH0dIEGJDxxMnfEiqqSioZ69mog
tjtKm3rfihgeBhWj5yPYOm8K76VakZP8l/m9dg4q1UVl335bkOvkQtKFuA8g
zRF19/haEOvQ24001izU1GZYA2s2kSCbK5sRj0OTJqE3PN2MHtwolD56MQYZ
n9jtWcFm9EqsFKX8eQchi2Rrg8WE/B5nxsykj8L4cstDY7MJGaBDO81XgnVN
d2twyoi8jycEtTMVkGVfHRfOX0eVibotjmQYwhyvoqz962g1XTouMw7BjnNY
ZMOCASlqxrJlcwPQzNQEGUsNqH+ins872Qcq9jH3wQE9KtucXsTevdDis71v
uUKPEo+4lWN6Fwh9px3ck/VItesnulPXBjv+JZbCVRLlXumS377UDKqAc6YO
BYlsBw4vl3vVQ0swZ21WSiLsmXRqi6gEYahJtyeNRNLRranLPqVQa5I9jwkn
0V+d8jux
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11115#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {0., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.90536053340279*^9, 3.905360539600089*^9}, 
   3.9053607038312902`*^9, {3.905529523215989*^9, 3.905529530167118*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"e83edd9d-70a9-4d5e-b8f0-1a0f9a10e8c7"]
}, Open  ]],

Cell["Other Method (esc pw esc then ctrl enter)", "Text",
 CellChangeTimes->{{3.906687992943632*^9, 
  3.906688012771107*^9}},ExpressionUUID->"9228385f-95b3-4967-92e2-\
b1b5cceed024"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "3"}], ")"}], "2"]}], 
          RowBox[{"x", "<=", "0"}]},
         {
          RowBox[{
           RowBox[{"4", "x"}], "-", "9"}], 
          RowBox[{"x", ">", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"82f84a76-2a42-43a3-a7c3-f6290773a8c4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$41918#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-48.99999428571446, 30.99999836734694}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.906688018395156*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"78eb78fc-8f9c-4468-b6e0-97452522fdae"]
}, Open  ]],

Cell["Limits", "Text",
 CellChangeTimes->{{3.9053606642181396`*^9, 
  3.905360665019024*^9}},ExpressionUUID->"56269205-65ff-411f-8eda-\
3babc32d406a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromAbove\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"x", "->", "0"}], ",", 
   RowBox[{"Direction", "->", "\"\<FromBelow\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.905360612959821*^9, 3.9053606492891903`*^9}, {
  3.9053606984241314`*^9, 3.905360701410221*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1486972d-5f3a-4ba2-a9ae-479f447e98b5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9053606291560726`*^9, 3.9053606519058948`*^9}, 
   3.905529536269518*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"febf7d56-fbd2-4beb-b8ae-5f64aa243d21"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9053606291560726`*^9, 3.9053606519058948`*^9}, 
   3.905529536381214*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"af038e62-8411-468e-8af1-68095eb95d86"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Things to Remember", "Section",
 CellChangeTimes->{{3.892104312351118*^9, 3.8921043435346885`*^9}, {
  3.892104445891319*^9, 3.892104512428341*^9}, {3.892104556374186*^9, 
  3.8921045607671285`*^9}, {3.892104623068842*^9, 3.8921046271629186`*^9}, {
  3.8927485440596437`*^9, 
  3.892748545298071*^9}},ExpressionUUID->"8e946f0c-4a99-43df-9caf-\
ec4caaffe258"],

Cell[TextData[{
 "1. READ THE QUESTION CAREFULLY\n2. Exact values unless specified otherwise\n\
3. Round to the specified amount of significant figures\n4. Remember to add \
UNITS even for period etc\n5. SHOW your work\n6. Use sentences when needed \
(e.g. \[Therefore] the number of chickens is 5)\n7. Switch inequality signs \
when divide or multiply by a negative number\n8. Some answers have \
restrictions (graphs and values)\n9. Diameter and Radius are different (they \
may try to trick you by asking for diameter after you use a formula for \
radius e.g. ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]r", "2"], TraditionalForm]],ExpressionUUID->
  "9046f70a-ca5e-4552-bdf7-b617f6f8672b"],
 ")\n10. Remember axes change e.g. t axis instead of x axis (when talking \
about translations)\n11. Be careful of negatives (in brackets, fractions, \
etc)\n12. Remember you can use let e.g. let a = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["x"], " ", "to", " ", "get", " ", "a", " ", "quadratic"}], 
   TraditionalForm]],ExpressionUUID->"2d3c87d1-2e7e-4e12-8751-fc76740d7fe7"],
 "\n13. In Inverse functions, asymptotes swap equations and domain and range \
swap\n14. Use the quadratic formula when dealing with bad values: ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"-", "b"}], "+", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        RowBox[{"4", "ac"}]}]]}]}], 
    RowBox[{"2", "a"}]], TraditionalForm]],ExpressionUUID->
  "61017a6c-6fb7-4a9a-bf55-fbf7f7644f01"],
 "\n15. With domains for x in Sin(x) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"+", 
     RowBox[{"-", "5"}]}], "3"], TraditionalForm]],ExpressionUUID->
  "aca0fd77-1fe8-4865-9a99-e167920dc17b"],
 ", check what quadrant the domain is and whether Sin is positive or negative\
\n16. Inside of logs cannot be >= 0, so when you find solutions, check they \
work\n17. Simplify expressions\n18. May need to use , Reals and //N in logs \
and exponents\n19. SYNTAX e.g. integral dx and +C\n20. FindInstance, FindRoot \
when solve doesnt work\n21. In integration, when finding area unit = y ax \
units * x ax units (e.g. v(m/s) vs t(s): area = m)\n22. >= NOT SAME AS > \
(especially in discrete probability)\n\nFull Function Notation: f: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"domain", "->", 
     RowBox[{"codomain", 
      RowBox[{"(", "R", ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"f", 
      RowBox[{"(", "x", ")"}]}], "=", 
     RowBox[{
      SuperscriptBox["x", "2"], "+"}]}]}], TraditionalForm]],ExpressionUUID->
  "3f717d14-b75b-4a9f-b126-2715d2ed4201"],
 "2x+1\ncodomain is always R in methods\nPercentage error: |",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"observed", "-", "expected"}], "expected"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "29303aa7-ed54-4164-bb71-b9b9ee217b4a"],
 "|*100%"
}], "Text",
 CellChangeTimes->{{3.892104635183339*^9, 3.8921046397609525`*^9}, {
   3.8921048788153343`*^9, 3.892104923935723*^9}, {3.8921055392933736`*^9, 
   3.892105561063491*^9}, {3.8921056002435803`*^9, 3.892105606675082*^9}, {
   3.892105765401408*^9, 3.8921057744180527`*^9}, {3.892139772388909*^9, 
   3.892139832479582*^9}, {3.893882519888011*^9, 3.8938825693107285`*^9}, 
   3.8938920797628007`*^9, {3.8939927996603537`*^9, 3.8939928195271883`*^9}, {
   3.8999428448762617`*^9, 3.899942864539297*^9}, {3.8999537532528563`*^9, 
   3.899953778482546*^9}, {3.8999599546551743`*^9, 3.899959987221546*^9}, {
   3.899966427265503*^9, 3.899966454097859*^9}, {3.90782519594671*^9, 
   3.9078252607804546`*^9}, {3.91003181173484*^9, 3.910031971295884*^9}, {
   3.9100320102514453`*^9, 3.910032050494976*^9}, {3.910032155272015*^9, 
   3.910032175632785*^9}, {3.9234493562660613`*^9, 3.92344938204723*^9}, {
   3.9234627380008435`*^9, 3.9234627614661074`*^9}, {3.9269846601643763`*^9, 
   3.9269846618460646`*^9}, {3.927838206783329*^9, 3.9278382150990677`*^9}, {
   3.9319370412645645`*^9, 3.9319370741406703`*^9}, {3.932006219046109*^9, 
   3.932006224783272*^9}, {3.9338866169084854`*^9, 3.933886666525284*^9}, {
   3.934941637290267*^9, 3.934941658258746*^9}, {3.9349417067217507`*^9, 
   3.9349417070811863`*^9}, 3.934941806981037*^9, {3.9349483536158624`*^9, 
   3.9349483949608636`*^9}},ExpressionUUID->"88dfd089-e917-4e11-8c62-\
31a8bdf98839"],

Cell[CellGroupData[{

Cell["Starting", "Subsection",
 CellChangeTimes->{{3.9269846798933635`*^9, 
  3.9269846811401587`*^9}},ExpressionUUID->"2349c7cc-d807-4570-9dd8-\
1d7d32ea5206"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Sin", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Cos", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Tan", "]"}], "[", "\[Theta]", "]"}], "==", 
        RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["\[Pi]", "6"], ",", " ", 
         FractionBox["\[Pi]", "4"], ",", 
         FractionBox["\[Pi]", "3"], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", 
             RowBox[{"FontSize", "->", "Larger"}]}], "]"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"GrayLevel", "[", "0.9", "]"}]}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"values", "/.", " ", 
       RowBox[{"ComplexInfinity", "->", "Infinity"}]}]}], "]"}], ",", 
    RowBox[{"Dividers", "->", "All"}], ",", 
    RowBox[{"Alignment", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[LongEqual]\>\"", ",", "Center"}], "}"}]}]}], "]"}], "//",
   "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.926984656625873*^9, 3.9269846842342896`*^9}, 
   3.926985075123678*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"2a45c67a-4c7a-4620-9b44-9facbb1e60b7"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {
      ItemBox[
       StyleBox[
        RowBox[{"sin", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"cos", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        RowBox[{"tan", "(", "\[Theta]", ")"}],
        StripOnInput->False,
        FontSize->Larger],
       Background->GrayLevel[0.9],
       StripOnInput->False]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", "0", ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", "0", ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", "0", ")"}], "\[LongEqual]", "0"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "6"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["3"]]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "4"], ")"}], "\[LongEqual]", "1"}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox[
        SqrtBox["3"], "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "3"], ")"}], "\[LongEqual]", 
       SqrtBox["3"]}]},
     {
      RowBox[{
       RowBox[{
        TemplateBox[{"sin"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Sin]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "1"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"cos"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Cos]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "0"}], 
      RowBox[{
       RowBox[{
        TemplateBox[{"tan"},
         "InactiveHead",
         BaseStyle->"InactiveTraditional",
         InterpretationFunction->None,
         SyntaxForm->"Symbol",
         Tooltip->"Inactive[Tan]"], "(", 
        FractionBox["\[Pi]", "2"], ")"}], "\[LongEqual]", "\[Infinity]"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{"\[LongEqual]"}}, "Rows" -> {{Center}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 CellChangeTimes->{3.926985076154855*^9},
 CellLabel->
  "Out[19]//TraditionalForm=",ExpressionUUID->"6e345b95-faeb-4dbc-984f-\
8ab50bb6d11a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"900c8458-a4ba-4cc4-b18e-42da0fb1ad4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FunctionAttributes", "[", 
   RowBox[{"expr_", ",", " ", "var_"}], "]"}], " ", ":=", "\n", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Print", "[", "\n", "   ", 
     RowBox[{"\"\<Domain: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionDomain", "[", 
            RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "===", " ", 
           "True"}], ",", " ", "Reals", ",", "\n", "      ", 
          RowBox[{"FunctionDomain", "[", 
           RowBox[{"expr", ",", " ", "var"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Range: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionRange", "[", 
            RowBox[{"expr", ",", " ", "var", ",", " ", "y"}], "]"}], " ", "===",
            " ", "True"}], ",", " ", "Reals", ",", "\n", "      ", 
          RowBox[{"FunctionRange", "[", 
           RowBox[{"expr", ",", " ", "var", ",", " ", "y"}], "]"}]}], "]"}], 
        ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Inverse function(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"y", " ", "/.", " ", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"expr", " ", "/.", " ", 
                RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", " ",
               "var"}], ",", " ", "y", ",", " ", "Reals"}], "]"}]}], ",", 
          " ", "\"\<,\>\""}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Derivative: \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", "var"], "expr"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Integral: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"\[Integral]", 
         RowBox[{"expr", " ", 
          RowBox[{"\[DifferentialD]", "var"}]}]}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<X-Intercept(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{"expr", " ", "==", " ", "0"}], ",", " ", "var", ",", 
                 " ", "Reals"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "\n", "         ", "1"}], "]"}], "]"}], "]"}],
            " ", "==", " ", "True"}], ",", "\n", "      ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"expr", " ", "==", " ", "0"}], ",", " ", "var", ",", 
               " ", "Reals"}], "]"}]}], ",", " ", "\"\<,\>\""}], "]"}], ",", 
          " ", "None"}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Y-Intercept: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NumericQ", "[", 
           RowBox[{"expr", " ", "/.", " ", 
            RowBox[{"var", " ", "->", " ", "0"}]}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
           RowBox[{"var", " ", "->", " ", "0"}]}], ",", " ", "None"}], "]"}], 
        ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Vertical asymptote(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"Union", "[", "\n", "       ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "\n", "         ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", "\n", "           ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumericQ", "[", 
                    RowBox[{"var", " ", "/.", " ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "term"}], " ", "==", " ", "0"}], ",", 
                    " ", "var", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
                   "            ", 
                   RowBox[{"var", " ", "/.", " ", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "term"}], " ", "==", " ", "0"}], ",", 
                    " ", "var", ",", " ", "Reals"}], "]"}]}], ",", " ", 
                   "Nothing"}], "]"}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", "\n", "           ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}], ",", "\n", "        ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", " ", 
                 RowBox[{"{", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumericQ", "[", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", "\[Infinity]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                 ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                    ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                  ", "1", "]"}], 
                    "]"}]}], ")"}]}], "]"}], ",", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", "\[Infinity]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                   ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                 ", "1", "]"}], 
                    "]"}]}], ")"}]}], ",", " ", "Nothing"}], "]"}], "}"}]}], 
                ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", " ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}], ",", "\n", "        ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", " ", 
                 RowBox[{"{", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumericQ", "[", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                 ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                    ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                  ", "1", "]"}], 
                    "]"}]}], ")"}]}], "]"}], ",", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                   ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                 ", "1", "]"}], 
                    "]"}]}], ")"}]}], ",", " ", "Nothing"}], "]"}], "}"}]}], 
                ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", " ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", "\n", "      ", 
          "\"\<,\>\""}], "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Horizontal asymptote(s): \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumericQ", "[", "\n", 
                 RowBox[{
                  UnderscriptBox["\[Limit]", 
                   RowBox[{"var", "\[Rule]", "\[Infinity]"}]], "\n", 
                  "            ", "expr"}], "]"}], " ", "&&", " ", 
                RowBox[{"!", " ", 
                 RowBox[{"NumericQ", "[", "expr", "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "==", "\n", 
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"var", "\[Rule]", "\[Infinity]"}]], "\n", 
                 "           ", "expr"}]}], ",", " ", "None"}], "]"}], ",", 
             " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumericQ", "[", "\n", 
                 RowBox[{
                  UnderscriptBox["\[Limit]", 
                   RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", "expr"}], "]"}], 
                " ", "&&", " ", 
                RowBox[{"!", " ", 
                 RowBox[{"NumericQ", "[", "expr", "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "==", "\n", 
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"var", "\[Rule]", 
                   RowBox[{"-", "\[Infinity]"}]}]], " ", "expr"}]}], ",", " ",
                "None"}], "]"}]}], "}"}], "]"}], ",", " ", "\"\<,\>\""}], 
         "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Other asymptote(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PolynomialQ", "[", "\n", "        ", 
            RowBox[{
             RowBox[{"PolynomialQuotient", "[", 
              RowBox[{
               RowBox[{"Numerator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
               "         ", 
               RowBox[{"Denominator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
               "var"}], "]"}], ",", " ", "var"}], "]"}], " ", "&&", " ", 
           RowBox[{"!", "\n", "        ", 
            RowBox[{"NumericQ", "[", "\n", "         ", 
             RowBox[{"PolynomialQuotient", "[", 
              RowBox[{
               RowBox[{"Numerator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
               "          ", 
               RowBox[{"Denominator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
               "var"}], "]"}], "]"}]}], " ", "&&", " ", 
           RowBox[{"!", "\n", "        ", 
            RowBox[{"NumericQ", "[", 
             RowBox[{"Denominator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], "]"}]}]}], ",", 
          "\n", "      ", 
          RowBox[{"y", " ", "==", " ", 
           RowBox[{"PolynomialQuotient", "[", 
            RowBox[{
             RowBox[{"Numerator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
             "        ", 
             RowBox[{"Denominator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
             "var"}], "]"}]}], ",", " ", "None"}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Stationary Point(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[PartialD]", "var"], "expr"}], " ", "==", 
                  " ", "0"}], ",", " ", "var", ",", " ", "Reals"}], "]"}]}], 
              ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "\n", "         ", "1"}], "]"}], "]"}], "]"}],
            " ", "==", " ", "True"}], ",", " ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", "var"], "expr"}], " ", "==", " ",
                 "0"}], ",", " ", "var", ",", " ", "Reals"}], "]"}]}], ",", 
            "\n", "       ", "\"\<,\>\""}], "]"}], ",", " ", "None"}], "]"}], 
        ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Point(s) of Inflection: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[PartialD]", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "2"}], "}"}]], "expr"}], " ", "==", 
                  " ", "0"}], ",", " ", "var", ",", "\n", "            ", 
                 "Reals"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}], " ", "==", 
           " ", "True"}], ",", " ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SubscriptBox["\[PartialD]", 
                  RowBox[{"{", 
                   RowBox[{"var", ",", "2"}], "}"}]], "expr"}], " ", "==", 
                " ", "0"}], ",", " ", "var", ",", " ", "Reals"}], "]"}]}], 
            ",", "\n", "        ", "\"\<,\>\""}], "]"}], ",", " ", "None"}], 
         "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionPeriod", "[", 
            RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "==", " ", "0"}], 
          ",", " ", "\"\<N/A\>\"", ",", "\n", "      ", 
          RowBox[{"FunctionPeriod", "[", 
           RowBox[{"expr", ",", " ", "var"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<One-to-One?: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionInjective", "[", 
           RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "==", " ", "True"}],
          ",", " ", "\"\<Yes\>\"", ",", "\n", "      ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionInjective", "[", 
             RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "==", " ", 
            "False"}], ",", " ", "\"\<No\>\""}], "]"}]}], "]"}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Increasing or Decreasing?: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionMonotonicity", "[", 
           RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "===", " ", "1"}], 
         ",", " ", "\"\<Increasing\>\"", ",", "\n", "      ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionMonotonicity", "[", 
             RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "===", " ", 
            RowBox[{"-", "1"}]}], ",", " ", "\"\<Decreasing\>\"", ",", "\n", 
           "       ", "\"\<Neither\>\""}], "]"}]}], "]"}], "]"}]}], "]"}], 
    ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Concavity: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionConvexity", "[", 
           RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "===", " ", "1"}], 
         ",", " ", "\"\<Concave up\>\"", ",", "\n", "      ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionConvexity", "[", 
             RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "===", " ", 
            RowBox[{"-", "1"}]}], ",", " ", "\"\<Concave down\>\"", ",", "\n",
            "       ", "\"\<Indeterminate\>\""}], "]"}]}], "]"}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Continuous: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"ToString", "[", "\n", "      ", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionContinuous", "[", 
             RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "==", " ", 
            "True"}], ",", " ", "\"\<Yes\>\"", ",", "\n", "       ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FunctionContinuous", "[", 
               RowBox[{"expr", ",", " ", "var"}], "]"}], " ", "==", " ", 
              "False"}], ",", " ", "\"\<No\>\""}], "]"}]}], "]"}], ",", "\n", 
         "      ", 
         RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}], 
       "]"}]}], "]"}], ";"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"FunctionAttributes", "[", 
   RowBox[{"expr_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"var_", ",", " ", "min_", ",", " ", "max_"}], "}"}]}], "]"}], 
  " ", ":=", "\n", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Print", "[", "\n", "   ", 
     RowBox[{"\"\<Domain: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionDomain", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"expr", ",", " ", 
               RowBox[{
               "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], "}"}],
              ",", " ", "var"}], "]"}], " ", "===", " ", "True"}], ",", "\n", 
          "      ", "Reals", ",", " ", 
          RowBox[{"FunctionDomain", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var"}], "]"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Range: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionRange", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"expr", ",", " ", 
               RowBox[{
               "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], "}"}],
              ",", " ", "var", ",", " ", "y"}], "]"}], " ", "===", " ", 
           "True"}], ",", "\n", "      ", "Reals", ",", " ", 
          RowBox[{"FunctionRange", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var", ",", " ", "y"}], "]"}]}], "]"}], ",", 
        "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Inverse function(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"y", " ", "/.", " ", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"expr", " ", "/.", " ", 
                 RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
               " ", "var"}], " ", "&&", " ", 
              RowBox[{"min", " ", "<=", " ", "y", " ", "<=", " ", "max"}]}], 
             ",", " ", "y", ",", "\n", "        ", "Reals"}], "]"}]}], ",", 
          " ", "\"\<,\>\""}], "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Derivative: \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", "var"], "expr"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Integral: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"\[Integral]", 
         RowBox[{"expr", " ", 
          RowBox[{"\[DifferentialD]", "var"}]}]}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<X-Intercept(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", "\n", 
               "           ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"expr", " ", "==", " ", "0"}], " ", "&&", " ", 
                  RowBox[{
                  "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                 ",", " ", "var", ",", " ", "Reals"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "\n", "         ", "1"}], "]"}], "]"}], "]"}],
            " ", "==", " ", "True"}], ",", "\n", "      ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", "\n", 
             "        ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"expr", " ", "==", " ", "0"}], " ", "&&", " ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], ",", 
               " ", "var", ",", " ", "Reals"}], "]"}]}], ",", " ", 
            "\"\<,\>\""}], "]"}], ",", "\n", "      ", "None"}], "]"}], ",", 
        " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Y-Intercept: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{"expr", " ", "/.", " ", 
             RowBox[{"var", " ", "->", " ", "0"}]}], "]"}], " ", "&&", " ", 
           RowBox[{"min", " ", "<=", " ", "0", " ", "<=", " ", "max"}]}], ",",
           " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", "\n", 
           "       ", 
           RowBox[{"var", " ", "->", " ", "0"}]}], ",", " ", "None"}], "]"}], 
        ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Vertical asymptote(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"Union", "[", "\n", "       ", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "\n", "         ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", "\n", "           ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumericQ", "[", "\n", "             ", 
                    RowBox[{"var", " ", "/.", " ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "term"}], " ", "==", " ", "0"}], " ", "&&",
                     " ", 
                    RowBox[{
                    "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                    ",", " ", "var", ",", "\n", "                ", "Reals"}],
                     "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", 
                   "            ", 
                   RowBox[{"var", " ", "/.", " ", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "term"}], " ", "==", " ", "0"}], " ", "&&",
                     " ", 
                    RowBox[{
                    "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                    ",", " ", "var", ",", "\n", "              ", "Reals"}], 
                    "]"}]}], ",", " ", "Nothing"}], "]"}]}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", " ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}], ",", "\n", "        ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", " ", 
                 RowBox[{"{", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumericQ", "[", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", "\[Infinity]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                 ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                    ", 
                    RowBox[{
                    "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}], 
                    " ", "&&", "\n", "                    ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                  ", "1", "]"}], 
                    "]"}]}], ")"}]}], "]"}], ",", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", "\[Infinity]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                   ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                 ", "1", "]"}], 
                    "]"}]}], ")"}]}], ",", " ", "Nothing"}], "]"}], "}"}]}], 
                ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", " ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}], ",", "\n", "        ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", " ", "==", " ", "#1"}], " ", "&"}], ")"}], 
                 " ", "/@", " ", 
                 RowBox[{"{", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumericQ", "[", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                 ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", "\n", "                    ", 
                    RowBox[{
                    "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}], 
                    " ", "&&", "\n", "                    ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                  ", "1", "]"}], 
                    "]"}]}], ")"}]}], "]"}], ",", "\n", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", "/.", "\n", "                ", 
                    RowBox[{
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"term", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ")"}], " ", "==", 
                    " ", "var"}], " ", "&&", " ", 
                    RowBox[{
                    "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}], 
                    " ", "&&", "\n", "                    ", 
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{
                    RowBox[{"expr", " ", "/.", " ", 
                    RowBox[{"var", " ", "->", " ", "y"}]}], ",", " ", "y"}], 
                    "]"}]}], ",", " ", "y", ",", " ", "Reals"}], "]"}], "[", 
                    RowBox[{"[", "\n", "                 ", "1", "]"}], 
                    "]"}]}], ")"}]}], ",", " ", "Nothing"}], "]"}], "}"}]}], 
                ",", " ", 
                RowBox[{"{", 
                 RowBox[{"term", ",", " ", 
                  RowBox[{"List", " ", "@@", " ", 
                   RowBox[{"(", 
                    RowBox[{"\"\<0\>\"", " ", "+", " ", "expr"}], ")"}]}]}], 
                 "}"}]}], "]"}], "]"}]}], "]"}], "]"}], ",", "\n", "      ", 
          "\"\<,\>\""}], "]"}], ",", " ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Horizontal asymptote(s): \>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumericQ", "[", "\n", 
                 RowBox[{
                  UnderscriptBox["\[Limit]", 
                   RowBox[{"var", "\[Rule]", "\[Infinity]"}]], "\n", 
                  "            ", "expr"}], "]"}], " ", "&&", " ", 
                RowBox[{"!", " ", 
                 RowBox[{"NumericQ", "[", "expr", "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "==", "\n", 
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"var", "\[Rule]", "\[Infinity]"}]], "\n", 
                 "           ", "expr"}]}], ",", " ", "None"}], "]"}], ",", 
             " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"NumericQ", "[", "\n", 
                 RowBox[{
                  UnderscriptBox["\[Limit]", 
                   RowBox[{"var", "\[Rule]", 
                    RowBox[{"-", "\[Infinity]"}]}]], " ", "expr"}], "]"}], 
                " ", "&&", " ", 
                RowBox[{"!", " ", 
                 RowBox[{"NumericQ", "[", "expr", "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "==", "\n", 
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"var", "\[Rule]", 
                   RowBox[{"-", "\[Infinity]"}]}]], " ", "expr"}]}], ",", " ",
                "None"}], "]"}]}], "}"}], "]"}], ",", " ", "\"\<,\>\""}], 
         "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Other asymptote(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PolynomialQ", "[", "\n", "        ", 
            RowBox[{
             RowBox[{"PolynomialQuotient", "[", 
              RowBox[{
               RowBox[{"Numerator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
               "         ", 
               RowBox[{"Denominator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
               "var"}], "]"}], ",", " ", "var"}], "]"}], " ", "&&", " ", 
           RowBox[{"!", "\n", "        ", 
            RowBox[{"NumericQ", "[", "\n", "         ", 
             RowBox[{"PolynomialQuotient", "[", 
              RowBox[{
               RowBox[{"Numerator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
               "          ", 
               RowBox[{"Denominator", "[", 
                RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
               "var"}], "]"}], "]"}]}], " ", "&&", " ", 
           RowBox[{"!", "\n", "        ", 
            RowBox[{"NumericQ", "[", 
             RowBox[{"Denominator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], "]"}]}]}], ",", 
          "\n", "      ", 
          RowBox[{"y", " ", "==", " ", 
           RowBox[{"PolynomialQuotient", "[", 
            RowBox[{
             RowBox[{"Numerator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", "\n", 
             "        ", 
             RowBox[{"Denominator", "[", 
              RowBox[{"Together", "[", "expr", "]"}], "]"}], ",", " ", 
             "var"}], "]"}]}], ",", " ", "None"}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "TraditionalForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Stationary Point(s): \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[PartialD]", "var"], "expr"}], " ", "==", 
                   " ", "0"}], " ", "&&", "\n", "             ", 
                  RowBox[{
                  "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                 ",", " ", "var", ",", " ", "Reals"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}], " ", "==", 
           " ", "True"}], ",", "\n", "      ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[PartialD]", "var"], "expr"}], " ", "==", 
                 " ", "0"}], " ", "&&", "\n", "          ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], ",", 
               " ", "var", ",", " ", "Reals"}], "]"}]}], ",", " ", 
            "\"\<,\>\""}], "]"}], ",", " ", "None"}], "]"}], ",", "\n", 
        "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Point(s) of Inflection: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
               RowBox[{"Solve", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[PartialD]", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "2"}], "}"}]], "expr"}], " ", "==", 
                   " ", "0"}], " ", "&&", "\n", "             ", 
                  RowBox[{
                  "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                 ",", " ", "var", ",", " ", "Reals"}], "]"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "]"}], " ", "==", 
           " ", "True"}], ",", "\n", "      ", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"var", ",", " ", "expr"}], "}"}], " ", "/.", " ", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[PartialD]", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "2"}], "}"}]], "expr"}], " ", "==", 
                 " ", "0"}], " ", "&&", "\n", "          ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], ",", 
               " ", "var", ",", " ", "Reals"}], "]"}]}], ",", " ", 
            "\"\<,\>\""}], "]"}], ",", " ", "None"}], "]"}], ",", "\n", 
        "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Period: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FunctionPeriod", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"expr", ",", " ", 
               RowBox[{
               "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], "}"}],
              ",", " ", "var"}], "]"}], " ", "==", " ", "0"}], ",", " ", 
          "\"\<N/A\>\"", ",", "\n", "      ", 
          RowBox[{"FunctionPeriod", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var"}], "]"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<One-to-One?: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionInjective", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var"}], "]"}], " ", "==", " ", "True"}], ",", 
         "\n", "      ", "\"\<Yes\>\"", ",", " ", 
         RowBox[{"If", "[", "\n", "       ", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionInjective", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", " ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
               "}"}], ",", " ", "var"}], "]"}], " ", "==", " ", "False"}], 
           ",", "\n", "       ", "\"\<No\>\""}], "]"}]}], "]"}], "]"}]}], 
     "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Increasing or Decreasing?: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionMonotonicity", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var"}], "]"}], " ", "===", " ", "1"}], ",", 
         "\n", "      ", "\"\<Increasing\>\"", ",", "\n", "      ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionMonotonicity", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", " ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
               "}"}], ",", " ", "var"}], "]"}], " ", "===", " ", 
            RowBox[{"-", "1"}]}], ",", "\n", "       ", "\"\<Decreasing\>\"", 
           ",", " ", "\"\<Neither\>\""}], "]"}]}], "]"}], "]"}]}], "]"}], ";",
     "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Concavity: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FunctionConvexity", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"expr", ",", " ", 
              RowBox[{"min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}],
              "}"}], ",", " ", "var"}], "]"}], " ", "===", " ", "1"}], ",", 
         "\n", "      ", "\"\<Concave up\>\"", ",", "\n", "      ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionConvexity", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", " ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
               "}"}], ",", " ", "var"}], "]"}], " ", "===", " ", 
            RowBox[{"-", "1"}]}], ",", "\n", "       ", 
           "\"\<Concave down\>\"", ",", " ", "\"\<Indeterminate\>\""}], 
          "]"}]}], "]"}], "]"}]}], "]"}], ";", "\n", "  ", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Continuous: \>\"", " ", "<>", "\n", "    ", 
      RowBox[{"ToString", "[", "\n", "     ", 
       RowBox[{"ToString", "[", "\n", "      ", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FunctionContinuous", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"expr", ",", " ", 
                RowBox[{
                "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
               "}"}], ",", " ", "var"}], "]"}], " ", "==", " ", "True"}], ",",
            "\n", "       ", "\"\<Yes\>\"", ",", " ", 
           RowBox[{"If", "[", "\n", "        ", 
            RowBox[{
             RowBox[{
              RowBox[{"FunctionContinuous", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"expr", ",", " ", 
                  RowBox[{
                  "min", " ", "<=", " ", "var", " ", "<=", " ", "max"}]}], 
                 "}"}], ",", " ", "var"}], "]"}], " ", "==", " ", "False"}], 
             ",", "\n", "        ", "\"\<No\>\""}], "]"}]}], "]"}], ",", " ", 
         RowBox[{"FormatType", " ", "->", " ", "StandardForm"}]}], "]"}], 
       "]"}]}], "]"}], ";"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939876322968288*^9, 3.939876322970298*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"737342e9-18f2-4912-8b34-07bfb95fbcfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TangentLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"eqn", ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"0c3983e4-9847-45e3-a1bc-5cc93cb3aee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NormalLine", "[", 
   RowBox[{"eqn_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "-", 
       RowBox[{"(", 
        RowBox[{"eqn", "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"D", "[", 
           RowBox[{"eqn", ",", "x"}], "]"}]}], "/.", 
         RowBox[{"x", "\[Rule]", "a"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}]}]}], ",", "y"}], "]"}], 
   "]"}]}]], "Input",ExpressionUUID->"06b8f74e-0d7f-427e-8563-76eca513743f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compsq", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", 
        FractionBox["b", 
         RowBox[{"2", "a"}]]}], ")"}], "2"]}], "+", "c", "-", 
    FractionBox[
     SuperscriptBox["b", "2"], 
     RowBox[{"4", "a"}]]}], "//", "TraditionalForm"}]}]], "Input",ExpressionUU\
ID->"832e49a7-e751-4d83-a458-a54c02122c60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Newton", "[", 
   RowBox[{"eqn_", ",", "var_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"x", "-", 
   FractionBox[
    RowBox[{"eqn", "/.", 
     RowBox[{"var", "->", "x"}]}], 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"eqn", ",", "var"}], "]"}], "/.", 
     RowBox[{"var", "->", "x"}]}]]}]}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"340a0248-090b-4a62-8ee2-20a9ee4eb027"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDerivative", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "df", "}"}], ",", 
    RowBox[{
     RowBox[{"df", "=", 
      RowBox[{"D", "[", 
       RowBox[{"func", ",", "x"}], "]"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"func", ",", "df"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Function\>\"", ",", "\"\<Derivative\>\""}], "}"}]}], 
       ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}]}], "]"}]}]], "Input",\
ExpressionUUID->"2ff878ae-46eb-4830-9aba-8987da345e8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"eqn_", ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "max_", ",", "min_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "eqn", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "min", ",", "max"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max"}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",ExpressionUUID->"1d12a3bb-2c8d-4862-8d85-6481ffffe226"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "3"], "-", 
   RowBox[{"11", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"24", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "'"}], "[", "x", "]"}], "==", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"z", "'"}], "[", "x", "]"}]}], "}"}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["4", "3"], ",", "2"}], "}"}]}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<z'(x)\>\""}], "}"}], ",", "None"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9269851883864393`*^9, 
  3.926985200324746*^9}},ExpressionUUID->"c9beda45-734e-4161-8c7a-\
19a899f60b27"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4XNd1LjozaBQpqlm2Y8fJS+I4+XKvnh3nOokt23GJncTXvu+lOHFs
y7a6JVHsXaS6KKuQFIus3gtFsZNiRS9sAEH03qf3GYAU5SIC665/7bPPDECA
DaDAstenpRkOppyzzz6r/Kv96c3T//12l8PhmD2B//fvN83/1qxZNy38j6v4
H/85bfadv5x2263fmzbntl/eNuvLN2fwi0/x/36Q6XDwf4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YM
GTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4YMGTJkyJAhQ4ZOl5xOp82GDBky
ZMiQIUOGDBkyZMiQIUOXMqXjJE4hl9Oi8T40Q5c4Ddmbhi9BPl/pQj3uC430
WlrrqumiX+fxvu8MGzY8/mzIkCFDhsafUnLZpdmpyGXktaFxp8F7M+Ms2JXG
42/7GL547EX7GF3ZaXstdczn87FfaGStq9ZNzJnMWda6n9/75EzpxHvAyD/D
hi9VHiOZ4jyX32/IkCFDFzul5OZQ20rbVy4jUw2NCw3W60P35umysQsMnRsa
eX+aPTeWZK2lRS6LM/TzcfdnPho28s+QIUNnTifTUYYMGTJk6PTpRFmaHpsy
ctXQ+ND5FJ8xZGg4SsnOTOYs52Dc2ey9sSJrnZ1D+ARM4OLk0Z2nIUOGLl1K
yRCdj5ey7Q0ZMmTI0OmTU9EQvMTg0IbGnwxeYuh8JrXHshxD4vpOs//Gjgbj
BiPlQRo28s+QIUNDKWXfa9mZZeSDIUOGDJ0FDbavJFbqdLkus+ryjTw1ZMiQ
oWHIMkWRVzJyPYSh0dEQ3TQiVnIRkvMiPS9Dhgx9BDRYdl708tKQIUOGzikN
kalOEx81ZMiQoVOScwiNmPtg6OxJLW16HY7uXZJad0OGDBkyNIiG0U9OR/pz
Q4YMGTJ0+pSSoek2qGu8D8vQpU1DdPzZ9js0+fqGzy2rvQof3mk9Dq7LMTQq
cqb00gTrMTXD7SIm6xz1PjPyz7Bhw2fDmCU2Cc+HI3mPIUOGDBkamdJkqi07
8bLL9Q+OjMxXmYuZ9zgyMoocLmanxS6nYcPnnJ0ZLmHef4VgZ+aZsfqcC1wg
7HKeFfMxjCu7XJc2O50Z5zXzMebxdcp1ujJ2uDKyS5wZmfNZlGY70mSqobMn
axmvcmZmvuPIzCxjnVTAj6X8yPd2Zi7f5/knZddw7Dz/Wcst4UtX/hk2fCnz
6HVoRp4rM+thh4WdOgfn6o2MsxgyZMjQpUZa9qXLwMFYiY7XoQ/UFzJyJiSd
rkxyODP6mWkQu5zE7zNs+Jwz9prstwyXsCszQzgjK/OkrN+nP8ffMSDsdKTY
cfrMxzLAdofhcWKs//nMskcyXMIuV+aA05H1O6fKhTD5JWNAso4u5zd5fY9m
ZGZTds5lv2X99CHrowFLTylZMYyuGva1U7LjvGIj/y5tHm/5ZvhCZ5YFrmyW
A9lvOqw8E8fgeezpeWiuYf0FQ4YMGbrYKV32jcAWZbOo/CHbn0G2K4/dNWXq
gMfrH+js6hnwB0IpDgaEAwHDhs8dB4NB4VAoNBCKhCkcjQhHYtEzZv78QDqH
w4YNjwUHhQMh/0AsEe13e3v6v/Od7wxkZV42YMlUg5eMAVnrOCUrK+vDlStX
D7jdXpYRof5IJMbrH2U5wfd1KEKnx6GTcOC8Yd5XKR6F7BtO/hkZaNjwpcM9
PT39/+91X/xNzoTLyeHKqWCBermOkzpGwEucpveWIUOGLjVKw0RGwEmUbHS5
bkasLit7wsCSRx/rTyT7BsDdPR4bKwmwXWrwEsPnkjVOMojDIdj8o2Ltc9i+
R8Sw4dGxxktiieiA189yMugb+Pa3vz2Q4coBXjLZ4CVjQ9Y6zmX+cPPmrQNJ
1kvAScChUOQMsJILBy9Jx01CkaCRf4YNGz4j1ngJYk5NTS3H/+aLf9fvysj5
0OHIqWapCv2EuW7p/bac6diJMz3XxJAhQ4YudrLkndN5Qv1NhvXaRGdG5i2O
zBzKzMr58LHHnxzw+YP9gWC4P4TYHdujwElsDgWFh/VrDRs+BzxWPoLxFS5M
ZpvvPOUgfFrBSsCBkL9/xowZA05H5odOh+vvHRd5P9KPiqCvmB7nx/6tW98b
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
70V8LZ8spAZe8/daemgC7+GJD/E1v30XvydfrqdzegFddVeR2AKTWfet3t8h
MYljVg2r5Iem6XGDlxi8xJAhQ5cADYeVWK/rnq+ujyq/hO2KpYXN7EOXin/q
WJSv7KYFlt00W9lQzvuLKfPxUvr08wfoB69U0V1v1Uk8oLDaa9V1xOnx4mbW
20WiM12PlNKtm6vp9rU19MuN1TRxSYny1xbm0b25jeL7pffIH3O8hL+zIxRg
G9HPv1lAly0tpZs21dCtG2toMfvLa+s76OX9bbSiuI3mvNdAt62vpTcOtFGX
N2Afk+OhYrEzVC1H1M6bdYhdkU8FjW6x+bo8ypbEGsi5WHnKeWwbOGYU05df
PEQe5BgHovRudYfYB5fzWuI3p2+so/9eW0WfhY0IXxp+KttCmY+W0srSFmro
9gpuEhjUE/YMOKh6d+halOf4O7MfKBH72nFXIWUtKBL8KPuhMsFKHGzLTH5i
HzmXldHkp/fSv7x1mG56V63bhoo2Osr+vdsToCuXlYqdjfOHPZeOl4BDVv+O
Tz0HO5TXqqZb8nmRY4Tcls88tV9ssz9cvo++8Uql7KVfbKqlqe81ynWaur2e
Zm2vpsLGTskvkbogKw4tfUis/oSna5fCtoXdBR9j8e563tO7yXnnbunHkl6T
E5AeeAE7P0XqZaw+AVjLlUXNyt/iz181j9eLbdKPP3OQrl7J5zMPfhhsxgK5
d/7jtSo6EowL9oW8452HutT15bX/zvMVKnaIWKLPp+zQsMqd/vRSvhbzcumq
R/cO6p+j+sr0ymvzdjRRBnyJWXtoF/s866rbKHOu8jGy2XfMuJNtZ967joVs
k/6Krzf7nZnsU3xi1X76/huHBfdLdIXo6tUH+DqwfTt7F+Xw9c5i3zIL+Ar8
BewH/o4JbC9ftbKM2rr9do9ejeMYvMTQiOR0fd2Rll+Swkui/ehTqPqHeAUv
AYes3I4X9zbRJx4rUljyYgtPBovfzHv13nya/OJeumJpCd29s15yI3624TBN
21pHhU09ggVAr/2qtElhJXyvXvNkKU3fWUfvVHSwvK+ja58sUzLg3jy6e0u1
4KHJaEh6AY1Fz1eRH+Go3f8B+gi5jvUdXuWLPpBPs3Y30BNlzfQ2+6ybGrpp
Q307vV3Tyv9up/W1HbSvhWVmnOVcDD0+vJS1pEDu6bBVEwKMB7Umjvl5ort3
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
smqf6OW45QfrfmySE8k2xRv1bYIdSA6HhYvoYxs6I6/bE6R5WxqkZuF7r1ak
5s2lzW8ZI32i5gmynkX/kolPlIpNKj0qwn4rb1n18dT9QHW8E3kf8KFdy9k+
nFpIkWDCzhlBrzvHVPZlUWs9X+UJrD3UqXq6R+I2PoF+qW9XdEqfl5s314sN
AR/zjYoOyae9fXOd3Zt/JH6ytFkwiT96ep/YNjh+2CGnnsWcwkxOhkGJf2H1
Ed1S1yW5BKiPUb1bozaepmtRkMeget6E6cZ11ZI3+3ZFt6ppD8Vl3mTE6ner
+phE6M6NDfK+FQc6pHfhsQ/6xL9HHpJrTon4JzJHiO1C9MEByyxbxJNCqVmf
OlZ45vsgNXdA9iXviXl8PRzTgNfsEXtUrYPCUhDXC1s9VLWtnGT/A3kVknd8
9x764tJ9bNeF0uK4Ucmz0nMvYN+9Xt0hdd2OWXn0zbWHpbfhMV+MGlp8Yq8D
b0NufVcA/U0SgkUh/nb9y5WqLmvWHspgv+oLL5SL7Q+btdXXI7MjnnyvUf7m
uGMPvbmvS/bVunLVpwc9S5aXtsgshPS51rLfLQ5HEmqmMx83anQEn2FfDP2L
PdZszz6fmlWAHLL1/BuOabmCb92X2yi52EFrpuWFjJe4vdJLeCASE98deMmA
y5ld7jB4ydiQ0/XNkfCSVNw/NdtX9yTSs6/s2TaW747+4Tmsj/5y5T6FlfiD
dp6T1lmQkw/ta5GeDN/dcMiOy+taPs3aX21n/3P2tnqRyV9/u8Ku+xu9/lH3
B3SGj2Whvl+QJwi8NGdZmZqvHlS1BgGPW/V94t+GvIFvLHOCQ2qGC3CBzKXF
kkMG31nn3vkiAXLOZT95SYHU+MBffuVAK3XqOSkRNcccsunNyhbR5/N3N9lz
h9cCQ1lQTD/ZWC25FXp2s8i9qOpvdoyPG/L59Zo2ymZ59hfP75c5PKnzPTus
RNsE6XWViFPgGDZVtdLE+QU08cky0rgvcn5EJgM3j4ZsXA2Ps7c2Cab7anW7
8qm9QcFYjvW+b/dLhWyfsaOZMheW0K/3d9LvWNfgPcCWHYtKyMGyU2o+/D6r
J2pAzQ0KqnnC0H9qHk3Izh8ajd0lc+3DAbr93SrWLbsEB5G5P3E1ywg1WBJ3
CqbwEuQVSa0kv//Wd2upC/PbWEY/tI9tsPvZXpmeR+sau9R+C6gYBvCuoxa2
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
ivcq7CrYJeiTirqvzEf3yjz5Cb/aTyF/TGbqQE/hs0eOJmTP9/UmBPeQ/Fur
pgt7zTF9j9RtTnuvUfq9SG/+mOKg1F2HBDPBsSC+hO/9BWbfAWvne1Lwi3jM
6lGneryivz1m1iNHBH1M0H/mKF9HyYFhXXfn+gbpE3/Uw79h5Ynhfv7S8wcl
hynrwRJaz7aXYELQn1bvEp2vZfASg5cYMmToIqcLCS+ZnU9vVneI7arzneE/
QoeKXch21117aqT/2F15tdTl8afi7ZjnG1bvh72mbWXpHzE/f8R5wsNhCGd+
/Mr2e6O2XXzjm9+plv748Al1rY7MWAgp7ETHW3S/WthsP0a9+NQCWl/vp1As
yXZJQuEls9iu2N4itcPAGjw9XskzOdzsJce9RVILvLfFS7/cUivYyFuVHWrN
4nG6eUO1ivEh79u6fjqWODRPAfiD1OKzHeiOh1WetJXnHUrLnTg7vETN8ZXZ
BHwNZ+6ql7m/L1W0pc0OGmZt0feP7a9XD/A1nFdCd71bT0lfjHr9cemL1xvu
EyxAcmetvreSq/twqczPDPF5oH+b465C+gTbp2LPSg/buB2PFT8JfQ6ta6Xx
t4A1d0b3JDwVXqLXR9faaN5Y1a2whZn50usOef0Sv9Ixq4iy+XReOn53a0WX
yt+YWUiP5KlcD18oeAJmguNDv4BXkCeP/nhzCulr7Bvh+yQXybqH4OvlNblV
fbjkJ+eq3iF8rXvgI7FtmuiN03W/3qden5crcT/Y1bBty5t77FlMEjveUCdz
mpBbv7ZSYUDIy8FxIT6MWQuYU4o+hvGwmv+EtchAXP2eAspavU+ug87twmxj
zDI4XO+lz9xbKnv2M4/vlVoq+HQy2/GCtVfl/rbxEvgTwEv++gtfErzEEtEG
LxktOV3fdDgzZJ4wsBJrnrC9P04nv0TYwojRYxp44tqqTvIGojZegvnY2r/F
nr9zTx1N5PtufnG9rcukV/nQmeTRCHX4RponPLqZwul4icbVkV/2Rk0n5dxT
RjduqLOwIJV7iXtKv/coy1GdxwV54kH+I8vNO7bWSB7nqxWtlOyNSq7Aq4da
pMYOuqYnoHBnFQsIUU2rh5wPFEkfisLGbpVfwrIGc5l1v1fBS/g1zBXWuSWD
5tOxnEMOKfqidof8/F250k82Nkg/jw4v8Vt4CXq9+kJK904DNjSnQGb+6Pk4
OCfgArje8MVldllCyVTEJNB7FPEItd4x0UfATOIWzt7p9giO4EB/jXuKJe8E
eEl1l1vwYOD3fbEjtn6FXAWeJbZLGL1xVM9s/e9R7Y+Qym/FWu/v8ghmnjE/
j+7bUadiUYmowkusudpYp/q2Hj7HXdK/5K+fLBa8ROaYRdRcOtTCYqb8FU9X
iK4JWtif7rMlPXKtfvHAj8SGY30AfQX9At3zo3er5RyBIcq10DWnYW0fhRX2
xI///U6d6CLMCwT2BH2hMRbptWb1KBdMM6T6b/WyjpUcmBlsL26qp07WM4i3
xIJxWdffxZNUXKuuB/rPf++1SsGngJfEo72SM4Q+JqfOsR1vHXNu2eAlhgwZ
uiToNPES/jNt3rxZZKPGS4ZiJSNhJqPDUpS9KP0n2Z/DnBzoJ/iIOl9Ez7VF
7/riFo/qZ862lPRBj6k8Wehb2BuSa8t682gyQXXoY3lvvsS9kPucmu8bsXpy
Rq36iNH5Q8J8vOtqVNzptk3VbPepmSt6Lm06VpFar1Qftpu3NUntzZuHOskf
ikv/kjcruiljZongJfqYk/Feu656wXb+zOIiySW9aWej+ORrarok7wI2w13v
8d/vyqMdNV67Bl2zxm4k1yIWUvUYC/PoH1+qUDnJ6K8hdUtR26YbTYwvYsWb
3ufvnbqnVvz7N2pbKXoSvERqpvjYNh7yij37H1tqJNaDXB6sBWwanCfsVVxX
YBETH9lHWYtLpAbEG/bThtoO6bmXyWsEG1j610RVzC6mbSLLbg9bvQ71Gsl8
HBsvOdn+Tp2rnn2j+R30tuXjuWx2Cb2R20U+t7LDBdPA3Bgr3xv2nzzCFuxL
SE6U4262DxcWUg3yNvr4+xMRuz8izh82X1tIzbJwYTYO7713mnoUHmRdN9i3
+DdyOK58rFRyQiS35M5d9OdPHyBvXM1idLPduhp9TmYp+xKzci5jn+DKBwvl
vpLaNWBe7DPcgl47wF5m76bdh3tkffT+wr2HY4TPCN8Hc0o/OMLnyOvuXFpE
zllsgz9ZKDFk3YclYOGbIf7M9ZgBddcOwW3quv3slwXkOy9sezUoOWSKZb8P
fOX6rw04nNkGLxkrcrr+AfklM2fO1vIKeMnAqfaHyh2I2fkluCcxy+M/NtWS
c24Jra/tER8KeIlgCv6Ijbdinxc0ulWv5MX5VNvhsXo0Bewalq6gR+LjqI1r
aWfdtThX3lve5rb7hQi2MirMXp9HRO47r1fJ+2fQf2LeHvrZpirSc8cGYd9p
Pb90fibqFb28X2fuaJB8s7cq263+SUHWTW2CdwALgX8MbNnrdcu9jFqUR/Ib
JW8m4+FSmQkDPb2mvJ16e3spkUjQLajHub+Q3qhoFVmB9YtYPjq+A/hqkr/3
KMsZ6R+zMJ++80q59E06e/0zWE9Ljo+3h+WhV/JocF5TtlXRhMWqThG6T3Ip
Atajlf+hZ5RhjVBjdMUDJfTTd2tUnqNf5U0mwklKBpQOELnGn3U8sk9w7EbW
JcAKXqhpo8w5xZSxZC/1+MN2LqPq450W+wkGbB2t7Z/RsKr1DJGH5c+nkOc3
W/WqKm3vEbwEuRxhq0dLfZeHvvfmIemRhjyUVwpa1TrEkqp+NJygT7xwWPqm
5jy1V2o+xQ6MDJbTdg1uRMWKpK6Ur/FE5HxM202/3FJN7lgohZVY+H46XqJx
LseqMtX35M4d9MGxXqVfeE9FrbzQo+9/IBiT18qvwvWAvYi5R8gxuXFznfSF
0/2QJVeG16Sbf/OPlx2Qvig595WQu1v17UfcArIA9taFPZ9t9Kx9AuZ+MF9T
wUyAlzhcTmAm3xhv8W/IkCFDo6YLBC/5f5buo4z7i+j5/e1KJ0eTogdVXEP1
xPOhtyXbJv/zuQPsS+6iSY+VUUd3QHw9zPRQ+aBRamR7EfUwV6xUfce+/WL5
CVjJ4N4Io/SFEFPk31Z4ST49kNsoNojE1aNh2y8c6bPgX25ulFySFyo7yeeL
Cb94uEv66KN/CY5Ves+FlS0gtcCeEP0Jrxswk4wlJdKj4oW9bRI/aekO0o3r
asT/3V7nEVwEdRuww7R9Atukodsr8UBgJVj/9RUd4hvrHi+RUCq/ZHQ50UHx
FY/yd3/pNb5+c3fTG1XNVuxw5Bgr1i+/3i/1O599oUJsZ7l+objYbTpOKsfp
jZDjV3uln1s8GZNzWI9rMrWIrllVLjYj+ppgDRALxBrYcbCIwq8Q/7d6TaTN
7j15DDi9f0B6fglyRvIbuiS/ybWglKaua6aOrojKLYkkZPau2G1hVXf2Ae95
4CawBTGXA/4C8BL0A6xs9UhtURtmLPDfET+GXfetl8qlxgVYyfdfO0xdvDeO
wa4NKv8H9fDo0Qo7/smiViunOU/Wc15hM7Xz3sSaAhNpQk3OzD3kmqXqyzH/
5r4dTXI/4jpp7AjzHgQvYX8I+c+9vQlZtxjveaw75jjjOR4Rv0T/SPhDl68o
oYnzc+ma1WWUtHKrtB0v/gGvwa/L2gTTQf4Knmu79cK2VwfjJbA1Lbyk3xLR
Bi8ZLTld1wMvmTFjFlk4ibDCTZROG+n6KJwhqfo44dEfpZwnyqQH8SuVHfKa
9pt1naLOCcP+/9GaasEOr1lSSNUdHvlOwRKYsb+hu9zdPnIsKyEX3183bDws
M1+Q06Zn+EZPiseempUMUvkZ+C6Pzyt1L4gVTNlWk6a/R8BMwmHbr8W9fMem
GvE1N9d2Cn6C/uprK9tElqG3i9/yacXPtnqPdHmDdO3SEjULbkGBvHfDoU6R
McAEbkUPWPbRt9Z2SK2qqteIS78MmXds9S17iPWn9M1g+ZdX323VRo6B/rF0
EOpwgJf4wn7BTL74zD7JQ9ha2yW/pewOhY11d7vlNR2XwfG9hLnI0/LpT5/a
J9+veoOGxR9HfU3Uqg3pTSTpimUHpc42kVB43FvQB/zviQ/ulZpJkW0R1RMn
aPXrAOu8iuHmx5/x3tB1x1Zd2MsHWylrcaHMivvUk8XSnwe9vqR/DJ/HyqJm
hadM3UOTHy2SOATsMMQX9PlOWr5PcPespXvt3uaKT1x/fQ74jXa/T+YbYvbS
4tx68saCqX7mw56vum5XPluucHz+zTa/zl+Jqxwn9Frjte7i8wT+4QsrnQeM
S+VBFko8TvRtMGrnyaC2qIv16AyZI1goOa9FdV55H66NzBS28iovbP0zOjZ4
iSFDhi4JukDwkskPl0h9yfrqbunfCZ1l14xb+ZDIRQiwjdnV7qOPsa3imst+
6MNF9HhuC9U0ecSm87PtVdTSTVei/z9m0ywtpiK3J9U3Ig0rGUu8BDYq+pXB
d52ypUZsVx0/PPnaqM/fCbxkQQmt3dsttTjg9fu65LU7N9erWZGBqNUnLyHY
CeyW/AY3uZCLgP6v0/PoZbbvYz0RqVv5J8y74TVdV+emeELVFsMWgW98uM1D
TxU001ef2y82NWKeC7c3SH5DL/rSW/XkJ67VmbPeH7BPgZd8cmWJ1FRtaeyU
OYYnwyNgF1V1BCVn5KoV+8R+0XM9dX687A3gSO6w4CKYbdti9UF9h+1918wS
+t6aOjoSVjnRwB3Qv6QnGZN1TIRSvobUSEVD1loF7Zqpkx2f2KIWZiJYllUP
Ax+gtsun+oKgf/+8ApltdPmyA/Sx1RX0vXWN9NONjTRvVwu9cbjDXmfUuHf4
gvQpzN9Fnc181QP1+qfLeY/V05YmNz1U3CozfWTeDP/tU0v2UkWL16651zVt
mOWIHgMhb1juKceDxSpOt6CIajr91OLxqf7/fOzojfPdZw+JXYqZwE7+7Q63
ytuCPQ/fDz7OTevq6fIHSuS4HuBjx8ydZ0ua6U22w+FzIKY8e0MNPbKjgZr5
t2N9UckHv/qpYvErJy8vFn8Ovhbi8LpeC3hnG/ohAv+ZlU9/80yFXCfVD/NC
tlcH4yU4369c/zUyeMkYktP1NZ1fwvehxkv62ZfqP128JJHolUf0tLxm+X65
Z9843KX0T0jVYghOa2GjmosaPTTpwSJLjhbQf711iF7ep7Bg+Jq70Xf1Cf77
7dtp4upSau/2yP2AXAqZHxKL2Hjt2e4xyC/gDpBhIsdCAZq5q1Ywixs3Vqdh
JSdiJnY/Uav3LGpybtlwWGT0xup2lV8Wx1ysDulndMPaKsGCRMdZ+W4yk57v
3dJWN131q1LpZ4u5upgJ1g2dxTr9B69WSv/WzYe75R5AXxPBL/jzkBmP5rfQ
Z54sUzjxgnz5t5UrNPr8RqmPCkl/U2C5gZCXfWqf6KSsh/IkN/PNQ+3WfHeF
h+GzsBvgO0ufKdQtJhK0v8Uj84cxx0ViOxZ2D/kKvCRozVQGXjJp6UGawPqn
0adw6ZfqOih7Tgn9w/M1/L6kyonwBeRvqEvBsSqZGFL1vGOAl+iZ86iRDLLM
BXb9dy/sl36rUhvD1+RHb1VJzco/Qv5DXy1Qc33XV3YqPEfyZpJyrke9cbFz
0Lfn5h3N0ivkVOuv8ZLd9R0Ki5m+mxbvrlc4TeRk8Qj1t5zV+9UM+tl5dNv2
Rrp9SyPdsaWJbtraQLduapD5grezHlrMewb7rQO5pHw9Ji5Sc9fmbWtUsbeg
qivSmAmuW3mjX9XkMP9wTY1gWF7p9R6XHFbYWxfuPPvRs8FLDBkydEnQBYKX
ZD6g8iPQuxx4iardZT0f6xWbBXF35EbGrVh8d1eAvozc/RnsL96rfDvHTBV/
ULbabprwWDG1dPup0+07Ia/kBFvxrFkdP3zzRbtUD5ZNVe2Dcq0RKzr558M0
Bz0+55XQugPAi2LkCcZpPeYJzy2VWSI9XisnHP3IIkkLN4lJHGvRTv7snXl0
+bxiegbzH4Mxsd0mPXNAzc3jtbmCj2si2xqZ6DU4D3UeKi8884FCyn64kJYX
tohNoLESbVfreu5RYybIgw54KMp2dtajxeRcVEDbGtvT5keM7Cu0uAPS5w0Y
me6Dhzxot09hADjGzliYfN4wfeuNWnLOKKat9SouurGuk/dFscSKMzEjZt5u
cs7Mo5zZ/NqUApqwoJTXhL/78SIqb++27WrgJajNUfkAJ8dLUhyz10vl7Kt9
/Dn4XgtVHbvMQZyWp+wz9IGdWUhXLWL/Yn4BLSpokv61ODex4zp9dNXyMsrG
XAD4EDP3UKZl/+H98sj8sUeKaWNtN/2G7xX0AlY1QXFl50Zjqgaf9048EJe5
05cvLqZPL9tvz6oUuzCelN/dUt4p+AtmW177UKnY8ajlQe6yj/cx6ncwY1Xn
qWBOMu45J59LzowUT5oJzqcfPHuAuvle6HD76Tq20SffWyCPbq9H/DvtG8j6
xVQ+9hefOqDqhu4tkjih9l0uXHt1MF4C3MngJWNMTtc3MjKz0b8E+0XwEjzy
/XhKvCSVF6bmnCA/72r2hdE7enuDW3DEoRiJxvDxCBkMTOGn6zB7ZLfgDI5p
LGOn7KarWe5mYb78/Dy65tkyinSqea16Drj0ubL+Pdp9pmeb6O+duq1W6l+e
LmseFiNJZ93vVXJh+HuQXwJMFbUzwAqAl2xBrh7LMPTFSiYi8nvAOdH7Aj45
MCBgIA/taZLZsJBZ6yvb6Rh6fvJ3ywxz9s0zFxWIDpowN48mzMqnCSyP8bpj
Pq8b/+0Tj5fSy/vbqM3jH4PckmiabRK08BLUfvgEL0F+yWdXlEnPpE01HVaf
rVSuoMw8jsdJ9WdXtYaYfXPFfcX0Z8tVfontS6POMqDqlCSviPXUv7/VwPKx
hLbVdFGc9RUwGdeMQtFJ2XNKJffBMSuXJkAnTFP9ooAVT2IZXdbYLbmgYyGD
BC/h64i++X28V2v9Xrp2aRFl83VyMWdBni9U/b1hP2WwTlmwu0F6o6o4U0zO
LRlKUswTFb3jZN0FjELV45waL0Hd7zb0eANeMieXfl3aLHiJnsN9Mvvqk8v2
sV7nz92xQ/IesWaiQ+ey7Te3WOVMzlD5mHPZHvKhro752iWlUg81Y0uD6htm
YVuyL8KqF8v7wQTl8Hqj5vePlh8UvETrRMiCU+eYjLd+Obds8BJDhgxdEnTe
4yWKEdv45guV1OQOSn0NsAFgJdqn0z0m+pJHrFpvzO5L0L5WH83b1kB//vwB
mvBUCWWuLKHPv3aAlhY3Sbwa9gGwFt2LY3h7cTTHnsJL1pa30V+u2C81LrBX
xd+GHWvFjU7G2/d10yefPkz/l733AK/zOs6EUVjFKil2bMdr76bs/3tTnThZ
OV6vnThyslbsdcpGthNZ1WrsTayiSJGieiFVqW5J7F1sIHolQIIgegdu7xUA
qeJNxNl555zz3e+CAAERpCRL9zzPeS54ee/9vu+0mXln5p2W9oD4M+DLaevw
SxzCznKX5N4EA8rPI/ztrLsMxPslFhW40pMl3fTHm2uppMFFAy7Widwx4Rq9
alM15TzM47KpXPqEjeWSF/G1F6vpln31os/CloWPC+Pr8/mkB3UNBROXMza8
ROny8LchrmD+kQb67ks1KoYjlNKVhuNUBebwty/X0YK8NtFvEFcC2x75366Q
5ubzhUSne4Kf/z8/d4pOuL3ir+v0BOm/v3KacngcJm+soJnPVNCUx8so66ly
yn66inKeqaKsDcX0X54spyaXW+x3qaeYhpeE6UJ4jsFLRAfTXCoGa8K6fbqs
g5+5g2480C7xLxMePc52DM/HCu4LWU+7o1BiT56o7rJihk3tUuATu0720u9t
PE7Z9xYrf9niQqmRCP3u+6/UUqs3IHEZiCOHr8+Ol0QM1qB9vMj1+WVlF9X0
eMW3GTQ1RDRPJPzhv/1wpeAxSw60SK0Glz8ksctu1rfBD/tSVbfol9DpwfkH
3Gf8vAKxe3Jm59FM4DjgXrkzj27fcpq6I6rOUUFHDxWzTVLndgm/j7IbA1at
Tqk7yrbVlopeqeUzfX254CWjWV+f7J7BSy57y8751vgJkyS+BDgJOts95xR2
Eh4BL1Gx/abWBs7TB0u66FvP1UleqPV/4RRGYsdMIF+A43u8fj773bSmuJX+
bscpmsjyaOqz5fT17SdoY2U7DfD+RP6JcCPzuRcKehXPM/IAx8j5KjkNIWXb
+9kWxv5CnuVvb6qSHKGR8BKTh+LyKX6nQ7xP/8cLJ6mdz1HY/7hGl8cn7x1o
6Kb3z/RJfJjBfYx8xisw99eOd0v+DfwVOMeAu4Ib+t921wsG/Lmn+YyBvf50
BWVvKqMfv1lHK4+0UH6TUz4b0D6Sscc26tplOq8S9eiAmYQj4KnySWzDfflN
9O1nayXWDnLQnIdSTxjxljxn/f39Vt4QsLFrWC4jV1HWhq6FBlxaciDBExJT
nK0v17jp68+cphLMQTJE1T4PffPVUzR1Uw1d9fgJymKZNBV4zTMl0mc8X07/
6YXj9IcvVQt3Uzx2KWoJK/4wcJIhntPrcVFPyCexunfvPE2/9VCZxG0IRj0n
T2J2t9R0qVxJjGEgrHCTQFh4bf2+CF35YBVNWF5Kr1b1sOwdmd9D5GNU5ZPO
XFMqvbbXrWRA9ELyVb3/j2820FfWlNOUJSU0iWXDZPB1LSgU3AQcxOP5fZGJ
84vo1epeCqMeMXfEfh095RRsROYzhHiufl1DMS7zhXo6iw600dSVZXT9riYV
Y6bPgr5wnzz7hWvbf9zy5fL2DF6SaZmWaZ+J9iHxEqNbDlcf53LgJSr2QMXi
C/86ZBB0DxMLa2Jkw6laBkYXMlyQ3ljYyi9GHDT+nQxov53fdx4Xx6XGS+Aj
l3qBoaBVI9HiLRkFX1t/JKnzmGOKNy7SZ8X4mrp2pgsffzQhz4SYG+i574cT
FgcoaulgXOD3lBpD3oDOs4lKl3sNBqQmJPJ/oRfhHlDbBFgJ9ApgEAqLCaVh
JheLl2BulB6vYsVNXIn8rX2rF6pBI7VqDQ4RUrlaiEPqwXdYX3NDHwZnB+s2
qDccM/VtQhGJzwWnR5/m4YhKbaSY1ocTVo0e6G3Qn+V+bBwmI+qidrwkpGoV
Sj0k5FXrmhQmR0f8W9z7I/1SP+FX8X6qafVTUYODPH71PHg+rKWgxlyiunYi
5qK6w0VH6nppW02XVRPU4CHgshUeSuMn17V4jX8Mr8lkv+BPuAfFnxK1+F/w
/+/1n6Fmh49/v1PsRmA3ikdZ+eGhb+K78JeCyxax9duOd9K2kz30y+PttLuu
h3bVddL++i5qdLtlH8b645bfGrYXfNUxXT/KxJaYXAA849lgHzW0O6nXr2L1
xd7J4CWZdoGWnZPzzXHjJ55bsmQp9t25eDx5LpHoE8zkQliJ6qkcDMPlij2I
/Si8DdrfPBgvsXiVda01nDnYg+bcB46A+vHALsA/LriIPuM8bqeuhxodM9er
XQa7Pb2yv3DOIt7DKTVvdG2tC8WX6Lo5Do/iisVzOL0++dvL8hPfd/kUBo09
7PC4FQbe12fxdJn6wMBLhA/J5bFqvAC3NfVOTB1iqZvDYwZ+1w7+rOEvMXNi
8UCPQfaENH+oyulLyWrgJobPpMXloB6nj0ztIIyFOg81/pNU3NUYV8zVB2ff
4XEOCEYGGSvnesRwxCqdRLjWYopfFHkhqD/WPxCXnBjwb/QCV/FEhNu7n89I
5MtC3pi6vG7taxlr7SR7N/NjZCPWHvAxrEnFuRuSOsrgO/Z7Q1JfBjLGcKrj
NclyC3Kjl99HLKTwr4eiI8ZfQM4bXGQgHhG+N6wxw+EzfHyVmjOME3Ao8LkK
p6v2BaBHeW+hSy6V5jbHZ7B//R5ef66grhOs5Bd8UZBrxlfwblzVKUK8Kjht
hYc9mpD6RX0Bxf8sHLIZvCSDl2RapmXap7ddZHyJ7h8JXmLqahi7yMi9UPj8
PBCL29OKI1b62BnkpgZUPURgAKjr548qLr3+ZJ+FtYTDgzGTS1EnOaj0KV37
2M5noWI1huN7TXX4fsQ+9qfq2UEXgc2K18GYieXTCqsar2ps4qk8+7C2jwPq
txGLix7TOotVr0dznmLs4PfEMwxEFSc8avIGbDEmF4uVpNaIspWlTjDroLFB
vqXh8BLzPuwTU+dRYjC498SU/8sXStXwOdM/IPY39HyMjV9jI9APExYXa8Li
ET3/uup+PkzuuKrpGbfWl4nNwb9xLehpJq4/nhggF/CPRJzeZ90bmIVgasGY
6Hpi34RiFp8teBUwfuAMRMf6xqvwAkZT+Sr2OsnGngMuhpgTVStVz2FE1V7E
/jJ4icKPdE4R3z9id0x9CNXDomdCp5baA7ynUOvA1PWR+BCpA5Kq2enXNSTN
OKbsFntckW2sw+o62AOio0YSVp2sTHxJpl2w5eT+GPwlGzY8dM7nC0hcCTCT
WEzVHb3w/KRjIEoWKcwEuY9D5eLEDFdnMFWT3uQxiu2JMz+g6r5ENX+2qgUV
kG7kDv6+FHiJ4U7G2eYJuukM788+vfeCJsZihPgS4XbyeRW3qT4TrbrzkdQ5
Z+rFGtw7YvJOtT0e1twPVr2TkL0ufcjieJbz2e+nswlVowy/D3lp6jUDvx87
Vh8d9Aw2zER3Gb+grk9jq8VlzkSJH0I9Yb2OcO8md1Xq02scLWT0F33eRTS3
CfI6TE06OWOjcYt76+zZAervQ05XRLCUiI3vzLxeyI8w2m5h+sHU+GPs7fmk
qqa9lqcev+KuDSh5hOcABtHL7wMDE77ygKrXJ/EY4Qvl5NhkpObZwRrC9WXN
RKMj5qOJXqVzZEwsZFjripBhwguO/wNewvfn8gVVHXAv639+lVcDGQzdCpiQ
0ZMGBs5aNXDgqxM/U/8Z6kv0y/PDFxP3RjN4SQYvybRMy7RPexsNXpKd87Hi
JSIPbVgJul/7eYaz1Y0Ohc9Bhtrvz9KNjD1p9Lgh7nnsWMkIz6WxkgtdR/gG
g9p3yfI8pGWz+dviKTP6rfk7kNLtjG5qxg/v9fuiEk8Bvd34lQaPg6XLaA79
WCSa0vvhb/MFLvEYBVVcs+Y4vHCd3kH3GIlY+SUmzsQdMTEnqZ7SDVOxCcbO
SWo9WLCmoH1dpa4h8xb+cGtDYvp1PMdgTE7qP4dSvCImtgX6GOrWJPwRa/7w
79Ag/jwVo6LXq8FwdB0Fw2Gchikam46vlQinrjd4D9k5GOz/L/7RUDQNKzHP
kdJVU88uem80amEipg7m4LqQI49j1OI1Fj5ff/p6zuAlmTZsy8mdD7zk5Zdf
Paft3nNmfZ85c2YEm1PVb4pqf3XQhpf4dfyW+S3zNzBME5dn7ym5ErEwE7/X
Z2EiuA9gJGlyIXqJci4iKpcQtj24OYwslG7zDQzVsccFJwqP7syzn42CQycS
Ku80GNJjFRbMYzA/mHVN2741dZAV9pvCaiyZdh5e8uHGxT4Og/GS1D0pXcO6
93BKJhp8IagxZmXnxyx5aj877c9lXzNmHAQviiRVnKjB6k28pcRaRs5bD5dC
/oLn1YytJd8xHsGUnDMxuMBIRKYgPpf/BvcVYmTEJxGO6xozJiZLYXQjYToB
Xzo2k3bdyPn62XlzaGoVB4fQBe16I98vcnVVPGpM8kuBlVg+gajxHdjw0YCK
AQYuJJwmWtbhWu8n3hX5HLH5Y3795M/YegYvybRMy7TPQsvWbSS8hF9o//79
1tn4UfOXpPfoMPHDofOuOfi6g99L5Up8bLJmVGOTusfh44oHY0Xqd9PxErs/
T343lH6NC42F3U96eebVfh9GXx19vHH6vady0409YPLUz+sYi2jEwgWG9oWl
ftf+2x/2uYbC9FLxG6musIf08R7JTzrssw3R7ZyFw8VK2zkY0vyxg/CnoWK8
LrTeLRttlLbXUGP/4XzKH8/eHn3P4CWXveXk3puTO552794LvET4XlPxIKPZ
x1Hr1dhewfNs9HRcdbjfNfb3SDLqUp+t5ly1rmOL6RpJdo/ufsaeGzLUNUxs
ykcppyMfEqs34xmyrYeh/DBDr6sUXjJ4rVn3c54suPx9xPkeVB/PkgdGt0jj
Or/4uRt5DNPHMiWDzvcVGZwT3cSQjJwvlP4b9mvY+6+v/BnzOsngJZmWaZn2
qW/Ztjb8Zz5peMml8al8WntmbIYYk6GwhPNiG0Zje49FHzof4zI2v10fHqpf
/L1dnj4Yq7yY7491/C79/HxcPYOXXPY2CC/h9fch8ZJPZ8/Iikz/dPSR8Y6P
T15+3GNzeXsGL8m0TMu0z0L7sHhJ2Mb3+nHiJZme6R+mjw4vQf/o8BL793/d
8JKPR5/8tOqrGbzksjeNl+zZs8/Kq8jgJZme6Z+m/nHLsV9X+TO2nsFLMi3T
Mu2z0C4WL/mo+UsyPdMvto+ElYw9vmS0OtHw3x8ZLxnr/X2S+2jn8tOqr2bw
ksveMnhJpmf6p7x/3HLs11X+jK1n8JJMy7RM+yy0THxJpn/a+ycfLxlNfMlY
7++T3Mcydp8GfTWDl1z2lsFLMj3TP+X945Zjv67yZ2w9g5dkWqZl2mehZfCS
TP+098ubi/Nh9KLhv5fBSy527D4N+moGL7nsLYOXZHqmf8r7xy3Hfh1lz9h7
Bi/JtEzLtM9C+6ThJfI51BwcxAU/2mulenBQv2yyIoMFXaJxvKy/fxniS86v
ZTuae0n/jZFwkgx/yaV49g+3VsZSz+HD16/Q51MGL7m8bQS85NcRM/koa6ak
ZO5gnuePtmbLJ6V/1LVqMn20fRhZPQwn+fk1Fi/c5XtBVU/5ctbF+fD67sfX
M3hJpmVapn0W2icJLxH9Q8siJY9ULTl7/dqhZEn67yj7I1WL1tgjoWFt5eHq
KZoahtJDqXscCsdJ/TtdlzS/ky7PUzbZ+XUSo4NeRx7HT6ocHa1OaZ9L8x1T
i9F0+xxctFwfBVaSbkel6ukOrruraifaahOOoDNZcz1oHQ3XpYamqaMp742M
Cwx173L/ugu+Y54Z70UjaZhP8CLq3Hw0mMnwOu5w3zf1LQfvxRFrZg+qgWk+
a9+vQ+4/wXhT+Jc5w4aqdX7+3uDzKoOXXN52AbxE1fBO7c/B583QdVFT6+5S
1Ewd7bkpdW7tOElQrb3BsiFVO3hof8HgerkXktFpOEkwpvYTv9ptRnM/w2Eq
n7Q+2lrmZs+nzuHwoDqy54+pvV8qf81Q45s6D9P1oqHn0HYOBQetIWs9D3/+
ps9pKO2+Rrq2/XP2/XLeZ3icIPMierxG/E0Z48h59zmcvBh+TCJyJsjaDsbS
5IZa6yl8xK6fWt3I30Hr4UPNr+1cGSzfLqTvDnfmDHUmpes6l24vZfCSTMu0
TPsstE8SXiL2RYB1GU+AQt4gJVhe/EfyXUpEohTzR8gXCVl6iodtPX9YyZSU
Xpuuq0SjYUom4xSNa92Rv2P6UHiJuVe8wmax27h2fcnoT/hs0B+w3UPUspHS
8J5Iyp6Wz2qfZoyfC9dJxhNptvng11gsIfI8EAhZ17LrOUYXuBS4yWC9Ij1f
ZTTyXnU8dzzRp59hiM9r3Qi6pIxjUOlIeK54WI2NjI+MdQqrGGwjn483jfI5
z3uu88dd5j8aT3vPmkfWqwK8JtFDYf5MKJ72/2l6VCRmrZ94PGnZODLnofSx
k3/zmMR47UrX4+B1e7SuG7G9pl9jRMzEtv6trnEUg//gWbDWzHN/qJ52D6l1
H/AFz/usXR+U9c37CGsAzx+LDc6RGDz3YUrXJ9VnE4mEfA/jEwgF1Z7hHrR9
z65DBjWmgmdN7cuY/NvsTbN/7XbTUM+BvWnWqV2vxv/5/cHUGAyyVdT883xG
/Bm85HK2QXiJfa/EInHq6xugRCxp7Us7hoL/60v06/NoaGw0DX/h9Zxu04ZT
+Is9dlL/bc4xY3Ph72Sy37bG1Pkoa9DYk/zdKHCSQFB6IBAgn88nssxgJWof
DfIbAJvT/gSDvdhldEoOBtJkgoWV6B62eiRtzRvbE/vO7wvL2r9UdhnGwNj7
MT5H7fIYY6DmLGbJjPT5SbcfMVaCz48gO7AXca6k7+2QJY/U69D6x/m4ycU/
u7l3seuHiHlI2f3BQXqAuk85g7T+YOSMGafBv4H1GzH4uu6YT4/XTz5/ME3f
MONncBzBGsLRtPtOxOIyPwYHgdwxz2PWnJyz/P/98ZjSC7D+dB8aI7CtYese
0jHyUNo5PbxeatZsMIDnjIocFLkO7MQfEp30fPzb6Hkha/+K7OKzBLIsNWej
08mUvqnlJeaJr632jpoXjLs/kNqfdl+e+Q2saXNdkV2622W8msuonHXJeN8l
wXkzeEmmZVqmfRbaJwovgVz3BgQvibPMSrDMiMHGDKnz/mzyDPWzXdof4Pf5
zI8GUriEsrMiFk4S0TLX6CpGrops0HgJdEvjZzovxkTbtPb4BvM39FDozimb
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
2mj+gUZadaSR9tR1yTxF5bwNCvZhdBL4LzBvXby/i1rddKjJRVtr1dkAWfQa
n487TzvkbK/rcSu8RLjlTfxCQPpo+WWHe37MQS+ffbtaHPRiVQdtaXTw9R10
kMekh9cNxl7FFPmteCODk6ObnE6Mw06+/y0nu2k3z9srfPZDlu6sc9LbDS46
wL/rC+p4PR1/gnMb+BMwO4zPbpZf9+e10t17GmjDsTYqaHbKGsdn5Pn5ed8/
e0bWFTAWnNeQZ6E4n/39ScGSgRsC8+/TfpFtdR20i2Xtzvouer2mnQ40dVMs
HrLGDzpCabuTVuU16/M6pPD+kIoFNlg8sDLJSeP9fYyfZVttt3zX4rSLBc/D
TbBnj/IebneErJgwiePgMUBsodfDstDhp87eAG0u76DbdzayTtlIb1R1yhkB
Gft+X0LiuUKRoCW3XXyPm4ta6ZTDNap5xnqGHgFczs2/m89nAnTDHXW9Vocu
8lp1O71Z00mnuj0qrsZgJRrr6eF5anb7ZF3ezft4zv5GHlePwpIQ+xaKyxwj
nghnViouNIOXZFqmZVqmDddGjZdkX958HJPzgPyTz20op6zFhZSzvJhylxZQ
1pwjNPneUsqaf4yy7sijrCXFNPOJCtrG9jz8K4hrhr0Fn8RZlo3oeQ099NWH
iilrOX9n8RHKWsrfu+cojVtWSFmL8iiHf3fJoWYKJSLk7VPX9/jcIsdXHWmS
z2TdW8g6Wq+2YdVzWFyQ2rZrd7to8lq+zqJCWsG2GvCQd1gOzT7Iv7E4n7IW
FpKDZTlyKhRPhML2JSeHfwv239ehf64opj/YXENdiE+Nx2jm/RXyrNn34H55
DDAO96AXUdaqAsp+sIhuYH3lRJdH+UNDKpZlMGf7h8YJNEcGdK4p63jM7yse
VX7rG2x3z3igiur4fowPEnNz44569TvzjvJY8Hjcky9ze8WaYvrpljrRfztZ
tgP/ATYF3eXPnjvOz8jPOZe/cw+P7QJ8r0R69goel6X8uqqclu5ro4Bv9HV4
Rlp/sK0RX4t/457WHmtR976sQOY3i9dj1lJ+XVZEf/JMDT1/vIucGBvWyenM
O4rTjudhIN5PNZ1eumo93+sy/s4qvvcFx1Rfgufi14V4zaer7y2j7WUdOvck
ITo2bKF+tonWFbTQtPUlsg4x99kri2Rcchbl0+RHy+jBglbRc5DLhfs42eul
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
wHmytdYlZwHszPG8X7PuLZDzXGTaKmWri33EZ/4/vFFv5RwCu4Gf+Y49zXx9
lmVLjtK+Ex2ybuxnsskJQI/HQkp2scyb+3a97IEzfWH6m621lIPr3pNHe091
kSPoEbwE8QCIAZF4rViU3E4fZT2gZOPkp0rp/yK3IByi3LnqTMleW0bZjxyn
cY9W8TPzmTKPx+buYwozuUdhmtgTPW5bvtklwEuwZ3GOznygQue5Bqx8waDm
NTFyB/N2914es6WltLvWITGciBXEGQyZCfz5+m21tKGwjRYfbKL//kK1sv2B
R/MzATcROc1nhpP3Ks40yOL/8copumFXA920u0k6/r5tbyPdyGfDHXvrKK+5
R+xwjKni71Bcr4aHfizPDxz/sapOtRbXlch5dGdeC/34zTqayDpC1oLDgtlM
5/9bn99G7yaiNvw7SNtO9gjmN/OBMvrfbPvfyt9feLBFXtF/sq2Jfs5n7Lr8
ToljAc+FB3wasQQ1OYP0W09WyJoAZvC9N0/RvCNN9EJxJy1g2/z3nj6usROW
d2tL6JnSTpbLCYm5+5NnjoscGQd8BHjyPOOz4nlYcJTGP1VGk54vp6s3lNDt
e05Jn8t6wpq8ZtbJFA8KsKfjXW51DZ67rz5RKfEqDp/POtMNH7/I0HhcOGOz
5ubJfNf0eCVHCrEl2B9RG16Cudp32is+uNn7Wqy8JJNbVNDkUWMOXw+/Qqd5
mPWCB4o66Hsvn1L66Dwel1X5dC2vm6awV/AixIDtbuxivS6P/vKNGhopH8eq
f8R7/zewt/g3v/b8Sfrp9kZakNdGc1im3Lq7XuJF0KE7IM4Y9wm9Ga9NLi/9
6K16hZGw7PkR3+sTPBcPFXfQP+yop9z7ShRuwvPwhUfLKRBNkMef4mK5kM9z
ON1e+yIsvIT//gA2gsFLWGxl8JJMy7RM+9S0C8WWSANekpN9Hl6S4qi88Llq
fx1JJ0JsZtZClotzj9Cc7U3kdoXoXbZFk6wD9fmjtLfbTd9g3S9rfr7ylTxW
Tu2sOyEfB/mvDZ0u+sL6IoWVLGVZ9Wwlne5wkzMapHf749Tt8NJK1g9mQn7f
fojGs/z9PtvyyAkXnZF1pAUsmySWgHtdj5dMbRfJ72Yd6Gxfv+AryAuH7BV9
iuXijfy9IMvxAda7RebBH7mogKawbn26xy8+G+HiiilONejTsPdFV2a79h/Z
Jg+wnlHr9cp7V/B7d+1rlVhg4CtOl592VnbTP289TRMfLEnhJiuK6LbtwEz8
ZHJq7Lkxo4kzEdmnc3KNDAbOAf1HeOqHwUtC+v9m72uSmIHNFd3il1vNuhyw
lunrK+VeHE6v4m7wKz5X6LjQVf9gUxXdtb9ecesFlf0ieis/Ez5/Fn5Eti2B
SyH3GrHebk+QHDrX4cPH0Awv+018A97DvLxU1S33ciXro27Y21FVSwa2MmL0
/471Z8G0lhXTs2U9orPDHw3OxufLugQTmL+/hXq8YYnNdbAOjvoCyDuTGtcx
9Qquf5NfAn3ujj314vOc/kAp7T3dLWsSz438ZcRQvd8Xl7ic//RkpcScTH2w
zIoLMfgAbByTXx5inX3ck2zbPVREb7c4JC7D7fGJTgucATW3Vb55yMq7gS6t
bLhiwS0O1HUPWVvZ5HK7/CE1byuLJV4Kazum66qmeH5UjZEdJ7sFK7t9d0Na
LvaRJgdNvb9U/GjQ6WHjwG7B9TD/wDbK29z0g9drxT869f5yerigTXyq+ExN
t1PwuaseLlO1QwbFwKc4nVM1ieBHznqiRPYR4q0Rf+32BKRWA3yUeFWcwjFd
M1jxqcBHj1wh0ftZ/y/q8sj+xjhgHrB2nb4QvVDdTX+2+ST9xZZayamXGHW/
X+es+XR8TDhTT/hyt5zce7Nzxg2Ll6Rq2MRtXa1XwenZzpizv5Xq3X7ysR06
MNBH753po/xGN/0rbJSVJbKmv/Bwhfh4Td0pnN0T15YrnHt1Id3G9mWH029h
24gvvL+oVfnVYUcuL6Gfbm0QuQNbpoHP9Pn722j8shIax/ZaZVO3da7bZapV
O4e7isk6RnMONGjeYz9NebxE4iuzxYefJ5xIfpaJnpDKE0OsFfas4AP43H2l
dD3bWO8mVP0T4CHZK8po8aEOiQOFHV3PMi2vzkOP53XSVGC4sNPuUbEyf/9a
LbU6/JKPeLE8knY5g1ex99heT2jOI+xDwyVmOBgQe4L4vpt3NcpZsLvOKfkG
z1e2i619xboianG6JX5P8m8jIYsT+snydvqfL1XTssMtEisgnEqwu5fn06R1
ZXKOAxPHNaEDBDWfO85QXyhVH0fycbRcjEbDlwQvAUaGvKes+QV0Fdu64d6g
cPImfRF6j+8T+NRdexskvg76CHB48XvoeLVf4qzi+Vt+pFUwAeRaYu2BbwnY
CPw84YiKr8RYYg2rONi4+CeAVXz+iQo63O6iXw1EKBEPkzvGvxFTuTHIlfrL
l2poIp+jwG883iDLPB85PF7BNjwsb8J8HoKvp8vnpy8+XSGY+L7GXuGnQ/50
LOQXnAG1eLqdLvFNCXcqr+F5iNeF/wB9Rb7ks/o077eSWxFrTWAv4OzGOsy9
t5h+8/EKnSejuuG1w5xAFr9+3C0Y/M283pE7iRjnHp7TE91+mnRfmeijwMUg
v4XbNapycTFGdbzGb9rTqOKReW2+2Nih61WF6JTLLbHRV28qHRYvsevH+G2s
7d984jhNv69CeLDejSmfWjfqE+lcWuxpn645iPegq2GNHWp2yBkyaV0JVbA8
Ap8XfEDA7BTHToKOtPjou6/USmyKP6Byjuz3MBgvGVyH+0J4CbASdB1ncm7Z
smXncnJyUniJkWMZWZZpmZZpn9aWmyt4yaFDh8jk4rDOfw76vqn5YT9fTfy7
0+lUdShGwKztdXmRpwssf8rsIrrxUDN52LYLxZQ89/fHKeaBTRKmm7azjLpb
5bvsb3eKffSrQIzu2NVEk+YjxrSA/uatOrFhEQcPmQ18AzIL8v1Qq4OmCK5y
THwEO5o9okfgPn6yk23FeYXiU3S7FUeF8GaJnAU2ExKe93hYyVz4/nIXltNN
u1vIzzYocrenPX1CfASSR7KohL7+1Al6L6RqZ1j1TVkOIlY0664iiYX9xfZW
0dP98T7J14DP+tZdLYpzLaCwgb6Y4gR8j23ct070UA70o8UFNGVpKW040iW+
EeEpC0fT6p2GIiPjBapmnVfsd/gaEXua83ip2OmRQfLe+DeNXnjz/mbKmltA
e2vdwsd72+4miV1+rLZXYolNbn40kIpRQC6N8MmyXeCIKD77OMtwwcuWF1MS
ayOmOAuRtwHeGIkb5zFD/KtLavclxqyPp3He63wm8BW+fKqTruD5m/V2oxob
bbvjFRyHWJP7Tzto2gK2ZVaUi34JrAT8B4ea/ZR7Txn9jMdB5jyi+B7xjFjj
ioNNcQ5CR5WaLqwDVbR61ZyuL6U2/ht8JFIXImhi70OCL8CGAZ5wvMPHNpvX
4r9L78rX6ec1m/OYygUQ3CKaqhVluHlMrRl0F+/ZrLW8/ubn048PNdCMe4vo
G8+fEAzJnl+jcqEVPypqJmQvKRUbBXjHkiPtFPSEyXA3m/oyHT4P7TvZy3Nc
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
eG2mA81O4bXFenQjN255geQeDcb/7F3keyis848Civt5yRGpVzBhNfCqPBr/
KM/Zo6Xie/rB1jqWqS2Cydp1H+Hh4Wf9wRsnhasn617u64rpX/acptdP9Cpu
rajSKZLxPpHdPW6fpRtCj1d7O2LhJps3bxbd/u677yY0xJYgftzEmGSlYsrP
/f7v//65733ve+eAk7z11lvnbrrpJoOXfJfF1zgdSzJZ4yQ5Gbwk0zIt0z51
zcb3itg7PpvP8bl67uDBg7R06VL65je/SZMnT5ZzU85Hfp09ezb9+7//O33/
+9+niRMnjgovQayB8IzOPyb2y5R1pfSPOxvoZ9vr6eH8DjrQ5KXXjvfSj355
WnAUxOd+gfUWyGovy73bdjRqjtVi5SszvKdaJpn4UODxiCXt8XtoD7gUFh6j
cQtL6ZlKh+gEX9x0grJnldD0x0+KP8X4qCFrgP+LjRMMCa6+5GiDxE4iH2ZX
jUtqQPrYxoMuk7uknG7Y3cqfi1OVw09Xr1V4CfLTny3rIifLpkq2H7NmKzxh
fUEHhQNxKmn3iX9wPNuUqwu6RB+GfSZcc/DpBKJp8bSvVner+BLW5w42utPw
EhNDGhqVj0thFuB72dfYLXjJdXtPpXGEpPJf1DhgPFFrYML95WIbg3sl6Vd5
RrjvPv57fUk75TxWQVNWqedHrMLnnzxOi462UTfrlP0h5KYMKL+Jy6/4L1YU
Us6DpaL7iS8UMapLlJ8J8eRXrCmn4+1OqWMw1nrCCi+KWba0cN6w7b0HMRPz
jtHk9aU0fV4xXbGwhCbw/aNGLzATxJzDJnjtlFNi7KFLYtyBhf1iH9sMs1iH
XVtBX3ykWtblRNTbFC7GQqklBNvrK8/UUFskpPxRvL7Gsx027anjgtnYa50O
jfF8CLwEY7ihOI3XDWtYdLWwqukb5LEf/1gxTWT777X6HsEUwLWHuo01XQGF
f6wqpianyonG/orq2O636h00YUEp3bivWTAj1MUob/aKDxvY4e52l/jP8Sw3
7DwttgfyyRF//A6v0ZnPV9GVi0qoG3VU/YpvF7Ye5gO257eeq+PfKlf2AdYH
bD1gFPy3iS+BbSI1kFcXi95o5/EdES9ZdIy+JDYI21HgS5xXQJMQyzZfxbbl
3FNOu3mfnQklNL9kjLp5Dlyo4cN2Nc6nnPvLVPwB5haY7voyumVfI53gNQp+
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
gpckNEcANnq36HgUid2cgbVEzmWx9E51PVxGA4N+6W92YlRpSNx56DjNX1Ou
1hL0akWuY5mKkeVc4n7ldQV1F/cU9ghmK7pniaRgRmKDrj2g1mK2Sx5e0+Vv
0XoqV3buthKOoQfFjgiXMB6z72vwPKeGl6j62JYhn2htv1bfb2Ml+J2QrhEB
f+anvM8NXq/My8vWVYj+FT6/WPiOfK00/wca83ichzqvZYp7hPXqz9kewR8w
GluIydEHELVO/wxtLVxrfn++8FqL9XwuEqykuHOY+vxBhWk4cxGxTP0TbBJq
ujB3r2PfyPgeSlcqKXwS1HXOvqOSGvtCdryufLy44OumXtjL9yg072LpOH1z
a7NoX/3h83XyO5i7LraVi/e2y5qb0X+L2T4Pnru/uFtqroE/Ai8BPqJ0whP2
vIVmDWqALt/AvstivlfXFCpO8A3si914kNy4fzEXVpfRffu6RRMI936U77Mf
7+mkS1eWy5oh9kT7TzJu0lwsvibA/YCn72gYlJ57gk9ibYHPdeNh9X62Mx7M
cZ7zc3ntaBnwC14CHuO2pn762NoqhXUuL1Q5Rezr4qO6F7ga7luL6bvbWuy1
QXokaR5LNl8kGy8RfX/oNmmsxHBOpE44lhiXFx2Hl7jsMGScHoCjzuY3+M9y
4Zq480L8tu/q52fq2hvTjzhbtyRnG3Nbbstt07WNwUsca818l8fznOi5ul0/
Y5/y+vEfcee58/JXuwtm0OtvHIQvcIrjGxmwQyFHPaf02tR5C1sDPDZxHc64
HH9M6XkjV3T97jaFmaxQmqvS83BVmdiamavBZ6imdYV9gssjrjW6e5Ifiaia
AWDzr1UN0Gc31Kvc2w38PUvY9vykkArY1/vi843SowWx6X+yT2t4h6ovYkjn
hOLU7bXoKy80KF8Ddgy+E/vOs3g/9jcNSd78p4LPh+lkYlRiapyPT95ZTvPZ
h1p2oEP4JSYfFNcxJPw5cIDXF3bRRbcWC57weodX8JLS/jB9/NZq8iwqoVnL
ymneskqFkxguCvgeqwvpS+wbvHqsj4a1tobE89Eg27/AWWMl2ZiB4nkm4up6
GN4Q9CWgF/Ml9rVnPVxDcx6pIc8TNXT14W5qR+1NJJbVvwc8CPg9h9r8wjcA
puJ5rJou3lBHsx+toV/aUEvXHeqmVv5sbzAmNTrIgcRHR6nJG6RPPllHnocq
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
ovajXfc8pr5kojEVX3TstXH6bdkj+1yO19Cd+JjG1QJrnMn4WbHTXv/MPmXP
6bG9Oc9WSzCbZ3S2dXLTM7KPx4kpZM/pTI3KuPeMPf+neX3sMY29f7J80zHf
cS7rgMldO/lzE+23Geb6TXivWaFT4JYAL4nELNHS+MsvfsngJeN7mOW2c9/O
gJeMvYbjsC9tLyRutJw4byzDDzP3vPm/fs7EKXZe1rzndOu9lbnPs7ASvQ8T
aQtkuCIT4QvZdi9zv2TwkqxjGbMOZdlT5/7ax3F6+2DO03SvKRPda8ZmZa8p
E62DE9nJzDo/0W9MdE9nfI8xz08Dfp+9hmVwIBv/OO3anTku5/un9vsT95nN
Wtcda6fBR8aej8nX1sl9A2dv+rG/78x7Oc/ZRH7k6c7bOL9xsmthWVl2XOFK
E+XeHMdv6tU1XmJ4SBOdjyxejs6RGN9y/P5bY45ZDZOTsEc0ez0YO18n8+XP
1od3nt+J+CXj1+QMfuJ28Eyyc7vuT/HavV1jJm38/484PpelhfIuWpPcltty
2wd5c2utaY9n9ph1yFHn5/kTlys/xuNNl6dgk9GcHrvWjFt7PJ7VLreL9uzZ
g7XwlBlnu8a+e3HZ5Gu4/f/YZP7UOX73eX6PU5/zvTw3uTHd42zxi9yYzvFe
rzHnP4QLZuMl4JngWBz8khxeMh3bGfGS7NjsTPHb+LjxQo8LOQffjeN5r++z
3JjqHDm/3Mf7YUzfebiQ/uxUv/dC+ttni5WcE15ir81Z+EcBj5k6bpmhXy/g
9Xsz/8XflVfL/7/MaL7m8JLcltty23lt2VwSs/4YPel5LpenSfNKnnF+5nRr
jf38FPCS997O50Zu5EZuvF+HJfwSYCXhSOCU6Jjwuvm5P/zjHF4ynds54CXv
z3Gh5+EHff9z44M9Pz4cc+9Mdee/KD7xOeElsj7b3Hjkb/PHcE50TOPZyO+E
Bjp4Jhedlg+f23JbbsttZ7tleCWztHbS5ewr1rlc+adc7vyX7LXFrDNj152x
a5A7bzX/e978kvd67c6N3MiN3Hi/DqVfEjyl63Fkzfzt3/ldcntmUg4vmabt
A42XvBvz8IO+/7nxwZ4jufn3YRpTxEtsPRMHRx6vg3fS4lKYyas57ZLcltty
21Q3J+6htKRdL7g8eadcnvxy9OZyYiITPWZ9h/wnh5fkRm7kRm5ciAF+Cbgl
jnqcUx//pV8mT96sN91j1uXcdp7bBxoveTdivg/yvufGuzPe63sgN/8+KON8
6nGcfSkc3JJsXVe3+1L+RBMP4rHkXbAcuS235bYP2zaWF2KvL66FLqwtnrzj
/P+5Y9Yl+70OfCXHL8mN3MiN3HgXhtLODo/DSy66eD558mZ2Z+XXctv5bzm8
5CzGB3nfc+ODPUc+6PdObjjH+fJL3OMHHmbZPEv11t/mhyiPd/jvv7mwhiO3
5bbc9qHbbGzDxmGhWfIHLrfrJI+32F/8rH6bE8MVfSVXNn47Hi+Bfsm7hJec
SZ/8TL/l0JuaxvU/W0//bPdpivZmyrr2H8Zxrn2M3svxi4EXntu9kRvZA36l
ZYXeAV7C452QFXwHz82YOZs8eTPKcnjJNG3TjJecvl/IexvzTW29ef/Hq1n9
7cbotk+3bTh9z60P+5ruHBOt69MxF3J4yYdxWJZl9888J7xE1uhxudwsPVfb
Fqq3/iM//IyHl//z0QtnOHJbbsttH6otg7sa3AMar5e43K4wdFp5/NDJdXNi
IlpHaYbBSxwYbjZeMoX+OGezzk7UC3jCvqPj+rDF7d6o2XiJ6kFvD0efX+dv
Zu33afrm2L2C7R6yzvhwTJ/W0/bec37f5H1LDVYyYR/B2MT982L2/mm7dY5Y
i/lu+zxPcD2dPYYnxKhO48ee7chcm/E+2thefe82bmL6JE6+32Ofj42Zk2d/
TZx9IyfvH/leDSurZ6Fz7uWwvrMfTn4J8JJwJCS+ptuTf8qTN+Ow27lO57bz
36YRL5m8v+rkY6LeO87vcfZNnbhPT3SCnuLZPWdPtz5PtmZaE/Sun2j/Tnce
LmTMmlnv+TjiEfEBROfHYWucvWwny7mMtx0T79tE5/Dse/pO/D0Xei0Z24fW
PmbTH9v2X073HU6fxsrye+Kxsfs/fl6cbh4459W52ewcXvJBGgYnceAlpxRe
4j47vMReqyfI2U78tkf44ZTL497reG7Sz+S23Jbbcpv2qT2aVzLb5Xat01jJ
dud7svzvSca7hZfY/eIj4/EL85yxw/FEiqLs6+IRPi+GsYdev0/8qFAoYPsF
iOdSyTilU4ms7x/3dyyW5Q+Fw0GKJbRvyt+V5O84eWKE0iP8XCwk321FwzJU
P1BzjKf3L83+xuNJ7bvo/0cTWT4ccB7LCsk+BMP8GLHs/QpZYQqE1L4lEjGN
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
GpHY/NnKbvYD+bPXHRCfB7Gka8Fhha+wXzRzNfqxlsv4xqZWGkqkKfLmCbp2
V7fE7J4bimy8xGAm8EtQKyQ6DTHFK4a9n/dUDX/mMM3g2BE1FPA3kVuDH2K0
Q6UeJ6bqalE3supAr/gfniWqjyF8XeR2UIv+1Zcaac6KcprNdv+l5iE6zr4N
tDzRl/gvX26kFH/3bGAGy1TsGwxFBVu6+K5y8dOvWFMmsbYTLzHXwtTvnr9N
VD4GOCPX7WkTv/L77AcbvYqwrvkx3F9gAdDXxzX5zq5m4aOIngc09tayP7X+
/2fvPeDjOM7z/5m9A1hESZYcFZfEJbbjkvgXOZZVSDXbckvi/B3XJLKsyN2q
FIt6t2x1yZIjucjqheqyGjvATrH3TvTDFXSQIilSxM3/fd+Zvds9HECAxAEH
4Pl++HIPu3t3u3u7U555530XmCMeeMuUUNtm5P2LzBG/X2IOu36OxPD46hPL
TVW9m9tEbb7SC2aKXsIx/XlMlvvt7J8reovEW+T5KOWBYz24+CVJagOzxtNK
rzkvJOc7embFdtEO+Lf350L719S/d/l82Z9G9JBG6/Nd39pC7cdy0UtknDKV
COklkpOa1zXafEs/4Wt02XTzpyVb5Hh5PPY5ugc47zVrf6X0PPDcM/a14aXk
qp44S+6PWauqpY0pv2/CzgdKujw+7CvCbfwz/rREYuz96pW14pfE7eba2loZ
Z+X5UKNvmCN9qOp6e/38c+bzam1tljzO3EZ+77VzJW+VtJf5mbqI84Nw/4Ke
Q/oNrnp2g9lQUe1yKkMv6c3zBb2kwAT0ErrH0/n0kvwxo+1vxM/RgwsrxI+k
5NK55sq/bpb+W2VNg9lG5e5771xkolfMl/KpfFNMxt0lXhbPyalvMofduUA0
Dy7f/9/9S8z4Z9ebX766QcbpWQf5rxfXmlHXzrExYemZL1tT7XKKNNr5PuOp
z/7SOilPJG4J55/iuXD1dl4O6yWcl42fu83JBJWtC8yIq8vMiD8slrqC81/x
Z/Hci5+/ssb6LV4yw/zg+ZUSP4LLso72dvE7OOqu+VIHe9eUmYUbq6U/zu9j
vYTnsT6yqEL8K7hfLHlrr55nc8SJHjRNdJrDLpgmec8/cM9ck2jO1iF9/dz4
duGrG+X6/u9f18u1Fy2JtaqkjX3G14zLZm5ntFLd/oMXVole8t5bF5iL6T0/
fXmted8Di80xVCdxnmd9zzxz5H1vGfXrOfK533p4g1xzrickvtWkBabkyoUm
esdCM+aucnMEa/6XUr00nuonjrnF4zp0P/DvuKPl0PxLpK6hdsT3WT+4ZLZ5
YVWNnJN/j7Iux20V0T4aGkN6ifhXJFJSL3C8ER6PiVxbZucoU33OmlwiUFbL
vZ6yevu3nrUx9R94a4v1ZaJrKdog+/jeOMeU0v2qLqDfnO/Py+eayHULzJhr
6brcvMjcX1ZltkluwyaJ0ya/gavvdra2yLU8jWOqUxvv3OdX2TlRzW2ik/Dx
8BiSusLW9XLfxVy+4ZZ2icvC9zT/PpquR/Q2ak/cttC2DdjYL4p/D/b5mjBH
xpdy2zKwvrMi0Us8ne0n8et7lac5puO3Cv79AIDiIVsORFU2NzC9Vj8RvUR7
l+qshuIFdNZBMh/H101s357H27jeO5faMWs4xkVbs6mmunxznfXZbKT69jTO
K3PxdGqflJnfzttq2qhfd/6TK1x7baa5fPp6iVd278JN4uPwi6c3mXOf2kBt
m8Xm+N8vNfPW1cs8kO0Nzeanf7V6CX8v6yQ834Dn7/BcdMldx3oJH28yLn1m
npNx5P3URrxiuhl9+1wZb2rb0ZrRDiTHQGOTjbvK+UgarN/Bp/64TNq+HrUx
RS9J2bgoHNeVY9Zy28C7vNyM/fNyc2vZVtEJxtww39xRtk3G7f/74VX2OKnv
u646bmZuqhXNhtsFY/9vsbQFfa2EjceV2PpiPoTET6Pf6L+fWyE5fs/76yo7
H7nRzrcIxkmReKYNNkbqz/66RuIFXvjKBrO1xvr+clvHz2vD4368bsrCbXQe
U83h98yXGIdvJ5vEN0NNmC5jpfya51rzdeR5KS+tqzRPLd1mXl1hl4cyH0eM
P5v1Adr/6ulrZX41z8fZ29qSuT8DOfMyPjDiS0Tny30OjhXLcUZ435F3UP/o
yjl2jFhyJDaEPod9O9gnZ2N1jfn4PbZ/Mre2RvQJvt9ZL+H4JT99ZpVZsL7G
TKVt7Cff6q73jW9uFN3q1EeXiB94Zh5YQ1K0tWbJiUnfVRM3i6vqjKY2MreT
2a+7Nm79UGpq4+bnz62S2DfjX10r9yz7RfPYIv823K9g7Ub/hu65K8tMBf1m
HGtvU31cxrBfXVsl8waeXrbdvPjWdrOF7skd7a0BXSk8hxzWlUEvKThZvaST
VuLm5GTG1v06K1h3sab9nt8skvqGc7uv354y22obJD5DqrXVXDV9a8Z/5GvP
rRUfk5amdqlP2uqazIi7rJYS/c08s4mey2rJndYmmmRVLCFzM5+Yv93GxJpc
Zk64/y1TzeupvIu6OZnnU33Y5HKyc/nBegxrJTI3J2Xn2klsWp7Teht934QZ
5tgHF8scnqrqWpnnyf1O1kzVja5fecUss7Gm3uaBb0yalZtrRUfh7zz94SVW
56X6rzZuY1Bwnfj8slrx5SidPM9c8PIm8/LyWvNL6ltz/KVfvrzGfPLBhWbE
PXONvmuOuWXBBhNrPpR89t0/N779jOoXnqfLeonMA4y7HNDJ5kyOWq7HuY7k
c7p42gbxbfzOlFUSP53Pj2PGi7bAsdbjVod6fOl2cwzV2cffu0LKw7clb1tK
tKKRty8x26tTZkdzSuZJcv7hGJWLXDdx/LTXadnS0tIn58pl6uQ3NpnSq+ea
y17cIMcqWgmfk58vjudPOv8LuZfjNs+Pny+acxCO/uMC0eb5npP7JqC7+HUl
xxThHMyfeGCR7Dttc4X4SXHdyDHkuI3C2l1tbYPsx/dUvK5B8hrfOnML1TNz
zSkPLae6r02Op7W1XfQaHkNpcP6VXI++vqFS5uSoa2fJfBubY7tVYiZf9tp6
8fs577nVmVgw4j/FzxVdU/679PeLxSd4TW3Kxu6i+/rtt3fI3Jw31ldKnJQn
llWIj0/2/oNe0tc24HqJlO9SR0YC/iX/6ubkPNBn48YAgOLHlQUBvcRpJuo1
1kto82f8uTeFmKunnV7y0ksvSVmYY536Q73LjeO0Eh6TrrfxL7idx3EZfsp+
oM2NZgfnRok3S/uQ61Nut6zd1mDHtqht+csn1sl4yfnPrLL6wfgZ5tXV1dJu
Yl2C5/hy29NvV3D8Oc6nyHEmaujz//vl1RL7jcfwOB4p+5jwezm2SAX1HZtb
7ZiHjW2ZkjkLJz60WHyPvWtn2jko1K/k+pr7oKwHcNuUx/7iNQmXs6TFlFxT
LvMoPvTAYpnvy+tqYtbXmXUZdcsc6wt82Szz6fsWi/8A7z93S1z624u21plR
F9F3Xjxd9KAJr6+XOPOsET29YoO0GXytRObKJLIx3w61TpR2JB0D6x9q/DRz
6/xNNh9D0vowSL7DxuwYrcxbomP4M893njTNnPdMtWlrdvkFYinnY8HjnlZ/
4N/2yIvp/G+fIzH5dtDfC7bHzSj2I7lrrtwb+SyTB+EA+UC7re9p+7aaKumL
vJ1qlfiL6soZMv7FcXW5H9JI90FlIiZzsdgnO1Ufl3Wsj+xN2jax5Ojl/Lx0
7B9gDeS6mWbFtrjM/Y5V1Zl3KlMSr5XjD/DvvT/eZiq2JUUT8m6cZfMwu1i2
T3NMvGummctfXyexEPi+2kn3yW6eB07fzblAWa/jGD/bq5KyjjUljkGwr7FF
Xst8sJjVPr7yOMfOmWomvLhGrj+3s6vpc/kejtw022yuSsj4K9+7rIkkqf3a
Tvfm8oqYGfH7eSYycbppjzfJsfBn8nHso3t4d53Nb7y7sVXm7rc6f+pUYIzT
15ZgXRm14RvqRTOJN9r2vFbRtFbQS/oM7X1DKc9cddU1aXoeRCMJWq5e4hvr
h/x7XEX9cY4JIrG0LrVxUNVVM82Rf1hoPJ57crmd76muLDcl1881izYlpIzf
27aLys5W4907T/TN0vvnmyp6LmqlbG428cpms4P2My3tEj/z2N8vFD2cdZM9
TW3mnViz1VCozD/r6eWmMWbjCnEsDclZIrFVGiV2xG7qr3Mf9sWV1eJnyXG8
vvb0SqkbZYy+Nik6ANdTd87abDyuZ6nuYJ8+rnc5T+vJf1liSvjcLp9hFmys
NbV0DbgsicdbxG+D9VaeM6kufNPoybPMa8trZL6R9cdsM/UcG51z8nLutlRL
Zj6rr6EWyv77xdXy+9xdtlXq63jCxqflOpw1A39eVX2tjX3FOVU0Xecf0/s4
VlhyF7Ut2poz83j4GnP/vKWuUTSD4+9bJLF2WQ95ZX1M5mSp3y8wyVo6R/rt
uM3gx3Xa2ep0MKdhZMZbDtEeXczxRN40n39wkejmfF3ZD8Sfi8MaCM8Nrqit
p/LZxi5nvyMur1nT4zr1FM4ZT+2QOetiUv5LfPr6JmmvtLW1mdZa+p12tFK9
lZT99M1zJScUt7n2tbVbv0eqR66duZ4+NyUayC4u7+vqpR3QTOdcylocXbM1
tI6/s6Kyzrzd2mRjEgfaIjuaG6xv5eVvip9VNbWXWAvZtC0hfic8N2rldioX
axpFH/Lv/cb2VolDo35XJrmuuc3G41sxzl8VZy2yUWKc8LpM3NuejpvAem15
xkdFLzn55JP7Vy+xi4irM4+gNe+SLeyX7wcAFAfSXvZKQ/mBZb1KkMXdLhkK
8PUF1Usy76O6dAW1XY7luCXj3zTncpwxnuNBfUwe4+K5yKm6ZtOeaJMlx9Hg
9uvpf1kh4xg/f36ty1kzQ3J5xJKNmVhmLW2tprW9RbQSf34K9+m5rfGjF1Yb
9Svrl8J1db3zI5UYZX58TGqLcj+WdYOqVNJcxD7Nl7PP8RtmxpYa+Q5uf/Cy
tb1Jcgz4uQn5O26ZRu3TS2eLDjSZY8tz2zLeaGOhxTn3X6u5be72TE6CI9nH
9eoyc+Qd8+U4eN56LX1+yUQbt4Vjto28ebYZfc1sM+La2dKOlXnCDdZ3w+pE
DX3WTpDYGNT//sVra0yU+vePrq6QayJaTLNts/O1Tfi6Ced5oTb485zncfx0
8/PnquwYWMJqSTaXjr13+H3cFud5+kfcPs9spP5/TU3KvLa+Tt474r75dq5W
sie6SO/1Ej4v9nNnvYRjxNXSd7MOwb7LWyqsT0tlMiE6B+fKrG9pNJta4mYP
9QV2U3uzndrHEueQ2qecL4HnyF8zdZPcH/fO2SoaxL7aVmm/cUxBjifIbV3u
N907fYtoM99/ZoW0a/fQ7yx6CefGvn6mOe+5VfL9PNeKx5Q5ph0b92F4G+c8
vm3GZtFL2pN2ztQO58vCbVeJo0fXbeGWmGgjh1M7lPWS9rYWc/cc+u6rZ8iY
MB8jt23FvyRlcw/vitk4l6MfnG9GXjfLJJqpfU6/NY+lss7I+mF73Oo/8UBO
o5qE1SYlRibPqUdb9QAGvaTgaG8cNaXNRRddklcv8ect2Bwe1mfBnzfH/c9S
1rK57OX6ZaKbD3eVzdnLPhoyv4XjkLP/34RZ5odPr3P99XaTaNph3nf/QrvP
XXNEa+Q8M1we7KhvkfJip+S7bTY/mbbOlF48U/zNuF+/OZ6SWFkch2vE7XNM
U63VSeqdP4nNC2KtqiolmudJDy8RfYXjQzy5uELm3DVXp+Q7OEYTayf8bI68
tVw0A/alW7WlXjRTNdnGIDnmrnnS565L2NilXL/49dRPX15vfVMmzZD8PrtT
bRJfQuYsNtnX/nxW3r+Sc5g1HHoMj+5s0vSNVI7OlHq/0eklXKdw/cq+f+wz
wufA+gGfD2sPJdeUmf96dpVsa6L2AddnfB1ZL2HNl9sbvD9fkyNumy/xxvhc
n1taI3Nv1P0LTGtdK/XXm6WtIfOaOHYTXW+uT1hPYI15X+rQ5+OwnrWtLm5K
bmJ/jJlmM11T275yMXZc/DfWS9g/syrJ4zxNUldxfqQdNY3i+3fdGxvl977q
jU02vguV+fW0nmOhcUx1zj+zs6bZ3DV7m+TB+dHz60xyqx374PrlmeUVJkp1
4/eeWyHaOc8pfZtjfcdtfBuuA86dslLiYf30pVUyBiBaTJPzUXWxuzhnfXtz
g1ldUSftGNZHZm6ISewZzl3Ez9AF9Jvur2+VOTocS2tnQ6vZQu3DxI4WqSfV
gwtkjiofN/txchuQ47Twa34+GuV+bHHzjFAHFcqKRi/J+pZ41tdErSDb3y/f
DwAoGrTnjczJD3yGnYujHiz4d/eDf4kfC+KJlRUy/1lPmm5umLWR+q4JsyNp
x8Ob4y2mldqXddQOXUvtPxnTu2Qm9fc2SB/vwhfW2hgX46eZ5VVxGZPgWJvi
Z8L1p8tFy/1zO1/F1u/Xv+7af5dMN49SO6G5rlF8Q/a2tduxMaqnN9XXS24W
/p5Ya6OZybn9rp5Gbcbp5sg75oq/iu9j0tBql6yfsK/vguqY5H0d8TOeXzPX
xGJWi4nR99TV0n7V9LnUhtte3ShtcIlPwbrJ5DLz7adXSy5H8VWl9s3YB9+y
c8Un2PbwYVfPNmc/usyej4vzyX3fzLhKH43t+3rJfz6/3Iy5cpb547LtEruN
21GsH4nfdrMdp+K2Hfc7WC95eOU2Od6LX6qxsVQakpl51f5n8+td1BblNhbP
WeY2nPinr6wymn4XzvESnJddCL2E24t8jqyZsB7xrSdWyPjxRS+uod+H7mPq
S3CbzdQ1Z/xAUpUxU9OUNOWrtss51cbrZfyL82su31ovmpa6qVx0Mda6uO/B
41481if5O+m+HHP/fOlvPbJom/Rn2G+Ex0OfX14p/iW/eGm1jVkQbxD9g7UP
1kr479Vb6b66Yqp5721zRSNpSdo2LRvP9eHzYn2nzY1BX/D8GhmfZK2P26Bj
OJbM9bPNqu0x+bvFxQ3knAmsnTTH7Pyp0vvnSp9BNDn6HXj+WVWyXuInvkvt
2ar6OquDxcN5l5Nop/bQoJcUHK0/Tk3o9A9+8N8ZjYR1E6eduDgPCZebPJ7J
I87l1UtchnE8auqPj75jvjn/tXXm2y/Rs3TfXFNy3zwz4s8LzGG3zjf/8uAy
6/M4scxEryw3VZVNpiXVJjFSuRzjmD9H3DdfYp7UUr1UwWPlMdvXbKR1FVSn
qRvKJS9N9Ooys62W+pX07H6T9XzWP6h8nPjCOrOntdm8s7NNdBPu40t522i1
zb9yfImrZtn9r51tmqluYT2mvdnG72iTeXgJeS7vmL3ZlrmXzTBnPbHUfOPp
FTZeKz3rT83f5vRPN97Q1C5zj9gv5vyX18mcDPZ//OvyalNbbcfzaznXuMSX
aJW/2SpiDc6XprDlgBw7tRuyekmj6ESsJ0m+tqTVfnZS24F17aeWVtE1nm0m
vrFRrgtv52vk6yV+3iG+dqxJc9yxBvYTpDrgKc4pfeEMc/Tdi+h3a5I4HZxX
h43rXvEvZV8/njPTbNsdfXWe/8Z+glfPMOdMWSn1K+vbnEue6wOuG7js5/bS
1JWVZs7aavETZH2e/Rnbd7aYZVviEptL3VIubQ/JOVOTkly9u2ubxd9kS0VK
4tayJvj8ylrz9q428c/lWMBTuH122RvmkjfWSD3E/iWisdP38/fw8zOPcztf
M0M0dj5Groe4bmjl9gLHHm7w57vFRT+54JVV1I6aZc6kdkxTdZPMz+E6kX2l
WPvguol1q2RlStpmMveM7usj7p4vY0fxmqSJ1bDGz/Vis1i8rknGPXgpv+WA
l/FD14pCL7FlvM7RS16itbs058IAAAwbdFArkRXqOqeXfL8fvrugeonERZf+
XoPNV3fR69QWoz7kigqZ61rF+f2ordISazY1VU1mfW2jif5mgeRr5fGFP82r
lHp//ItrTWSy9QXdSnU0j4ezdsHtJ54Tw21L7jfubae2Qbv11+AxmYfmbxW/
TtZa/rKgwqzn9kOTG6PguTlxO/969+4W+bzqBtsXVLfMlv4qt19Offgtia+y
uarexV1LyXdy/Ncj7uEYs9aX+8KX14u/KPeh+Zi5TSAxU6iNWVHVaL7/+CrJ
XcBtlRJqdz+5rNr6ydQ3SB/9Se5HT3R6CY8Fkv1pyTZpF3I/17ZdkoXJ40rt
x488sEC++9m1lWZXu43bVtts8+FwHslqOn8/7zK3labQfurSN8x/PVkp7e7m
FnvtxFcnZdtXPP+5nX7bw+6ZJ78B6yV11C76w5IK0Y4++9BbIb/afHYoeonN
lZwS4zFb9udYvbnO9h2o7XbTtA0S30Q0Mfpt2Ued/S/KN1abknvL5ffnNp34
FnG8Ajdf/t+eWClt7S8+skza4ewLzseyS+IacPzI7XZs+tezzfqKmPy+OyVP
cspMWUL35BVvmh89u1yeC75erGHwNtbExN8kxv2rWTIvp5buPY5VK+1ljunK
+YoSSdFwuJ3Lx11RnRC/meiNs8z3n1wpr8+ga1vLMRAbrVYSl9g7LZJvh89x
a229tH3ZB4bb/Tt27LBz5Jub5Xfk+Uvse9PO/vdxO27I94TvayJ+J9BMDmDQ
SwqN9c+OdJx99lczMUtYK6HnKi0xntzvIHNCmxNSjrJWwrlOP3hnuRkxeZY5
/Ioy89ySSim75XmmZ5X9yUSPr2c/wVbz8KxKmwts4mzxMWlt22EqW1pkDs+Y
a8rMmc+vEF1yM/Vjd75tfUuaqU+3hfp/d5VvlZw1PLb++d8vFj2EfdDe2ho3
R15TLv4QPM/mntc3mS2xpORk534kzxFp2dVi1m6Pm6Nup7pm/FQzauJMc++8
bZlcMe08J6fazumL1Vn/Eo7zMOq2OUZdwnGlp9k6ZdIMcwzVV7sa7Zh9o/NT
5DKC9RzWPnjuBPvKcFn91oZ6s43617VUDlTR8XLdFqO6rJ763XWsodA14utU
mPglWTuW+86XzzBPvbXdxhGpt742Nl9uSs6Dx1ysXtJkHl5cYUrpel706lqJ
wcGawa7GrF4ic0br7ThNKV2jkdfMkflVrF89TXUyxzr7EpXvbTHqyze0ydyb
WMAvtTaeyswHbjnE/DjJlM3J548xjLiJyvxJb5hbZm7KjIdUU7nB8aqqqS57
Y32VOfpWuleobmDt/W3WuOk4GjjWys4Wc9LDy6SN8S+PLTWpWjtWwzpJXWur
ebuxzfx85kbR9o78w2LTUt1sKuJ2nmZ1Tb15nOeJXj5VcgxzvcLaB1/n7VTP
cB5frsNYtxlxW7ncU1u5PZS0cdRYL+Elv2dni41/zvrJkq01Er//qKvLzXkv
r6Xvnmq+MWWl+PKwvwjH3+Ecw/w9XAfyXJzYdqrLrpohflgtsSbR8vhZSrm5
QxwDN1Zv4wtxOw91UOGsmPSSQMxX1kuupbUcrwAxXwEYTgRzCsvf6hWrl+iP
9cNXF1wv4XEGrmdFL5lAbbfJ08wZjy2ReF3PrKo0L62sM78rqzD/+fBKo68u
l3ni7BtdetM8mQ/B9eSFz62R2CecR+apFVXmhWWVZspbFebZJW5Jxv7DU8jW
VcakD8n1KM/JHXF9mcy/YH8A77dzzKg755mvPbvS/JzaU5e/ucH8dWmlvI81
Aa6/ud86dV2VOeIWjov/uvSLS6+bab77zAoZm3uc2qq/nrHRHHnvHOlPq19N
l1imW6jPXCvzhZtkvjP7rkgbjV7z+pdX1kick/dw3sqJs8RPmNsH3I7nth9r
R/Kd1DaUvDHUV97ObTXXLuS2VcLFacn32xysSZxSOuej7pljolfMNM+vqpK8
tzzviPUj1kvYb8fXSzg+LetFz6+pNIdfO9t8+u7tMkbFegn7DEl/pCmVae81
1DXaHM3jZ0ruQp6P8/SaatFLfvLSukz8/nzWOadFb2O+NooG0Z60WgXP566u
iZsHeL4Kj3WNf9N846mlZsHmGjmHWG3CPLqa7tObZspc7sN/Z+P37m15W9p1
O5vapU2+arvz46d747P3LTLzN8ZM7aaE+IlfN32T9E3YR2jGmhrxy2GtRNr1
dK2fW0aff+MsM/G1tTbnDl0vmTPkcjzw6y10D3+XYxxfM9vcMH+j+JewVsJx
iflZ8vUSbqO2u7h+7K/C/tisf0Sun23mrKuV+4v9zzmPDxu37zlGyw6Zd99I
xzlV3sOv2ed8S01M4ghxfyJZk5T+BecqZe2R/YL4Nwn6msSSA9+mK26DXlJo
bEs60nHKKWM76SXWj6TB+b5xrjXbD+S5DQ8vpjLgijckPzj3ybn8TrVaDSDT
P6un55bqoLa2HWZ7dZM5+lqbZzVyxRzz3Fu1piHRkolLpW6Za55bUGWeWVhl
Hpd4ydXmVy+uNfqmMsnJy34oJeNnmacXVEq/L7mzVebAXUV1iczn4c8ZP918
4u4Foq9wHI6nqZ67ZdpGKQds7vYZ5rN/fMtUcGzyVJPo7VyucL6yfVSf8OuU
qyce5zjbk6bLGIPow1dMNQ8v2e7ilVs9hsty9i9hDZs1lB8+v1o0FvYveWhe
hZzLM0urzYsrYuaRRVXm+ZUx8+zyWvPUkhqzln0oGws7F4dNdJ8rZ5unl1TI
nEfWKiT+tot/yuUmax9yPo0topdwHfqhe+aJH0pLDWu/zVIXSwzUhI1fwrFf
jr7Xxs5lHwz+jV9YXif+Nee/tF40subGNrnOHHuDNWW+Rm/TdWbf0p2tLX2i
GUtcspStK1+itg1r3lz3fPr++eavVBezps76+V2zN9n2weSp5uwnlki+I5ln
5Hxt+LzWVSfNe++cL3F9j/vTIvMatTm47RGraDLn8FyYi+keu6rcvLi0lurC
ZqkPOTYal/cvcWyvy6eaS99cK3UN++SwVi9x8KvidM3tvfbNZ5dLbJwrXlsn
egnPx+E2HvujsG4i7T1qS/HfXFf8ZMpqe29zjKDJs8zCTfWiFTaL5tYk4ynb
tsRNojYl5/IO/RYSs5jaItX0e3PeJvZlqok3me10z1XFbNy6OhcDuQF1UMGs
yPQSz8UwYb6orF7y2347BgDAwNNZL2kV65+vLnj8Ev4Mnr/C82NHXTeL2n0z
pD2gJky17bgryyT+mPQxL50uuWRG3DjPbK5ulPEd7m9ezv4lE2eakdRuGsk5
bC+cbuOSXPCm5GjhuKM8x4I/82fPrcr0sxduqc7kV+T+OX/GaJ7Xc/E0WT/i
ilnGmzzDjLp6lpmxqlrGoTjOBcfXe2NNlRnDOsvVM5wvs/P9mGD9p2U99U0/
cvMCs7YqKT4yu3e0i7+Mr5mwnwm377jNwr7N771nobR7T/vjMomlF3N6Cfts
8DjPhdSH5rn0rJf8/QMLbV6eYE7AHL8S2xc4NN3Ez/t8LOs/l00zr66utLl0
2xrFv6Ctyc5zkuNssPlyuJ9ctrFW5kf9873bpF3k6yU8VsZ6icQySaVkLGiE
5ImZYZZvjsn1eXZdjc0PeOVsmZ/VlXEs0kPVS7i/z+NZ7F/C42jvNO6QmP8v
Lq00I28uFx9kbidKjNWbrE+HupDW3Vlmaqgdx3pJa4PNIyHtc2qrs3Yylc7h
77i9fb2LdSDLGfb+uKHMXDN1g8QU5DYmaw18HDwf6JWV283o35ab66evlzFC
9hfn9j/P4ebfgduoHAP2tVUVouf885SFzgeF2rbxWllyG5o1k1YX85f9XrZU
xM2I6+3xf+PRZXI/7WxutTkv6b6RfhJdk3fb3rbtc/oujgcr/v3slz7pTRkD
l3Hwy6ba/N38rF43w/x61gbpY7CvSUXc+ZmkGjPaHawrg15SaJxeQm34U1kr
6WDNxI9j4v8OXHY1NyXFWC/ZWF1rfvHySip/3pQ+5B/mbDU1lSnpd4pfG5XX
HA+E4440JltF+45T//LFhTWm9Mo5MsdgzK/nS04ZrlvUL6fKM8RxUvnv0mvL
7Twd3sa5dbi+mjDL3DXD5m/l/h73w9lHhGND/ELirE61OeD4WbzCxhCRuCpc
J0pc2DfNUb+Za5ZQ2cD9zOp2Ox+VtYJ3eE4r+xik7BwV7uOyX8Txv5tL9eQb
UpYeQWVde62bU5mweV+kHKA6ivWS1tZWc+4La+Q4ZV7oVS6H68Ws85TZHK6c
Y5aXv5phTv/dMrO6rvDxnnlOLNe3r1P9zHoJl2lvU1+btR4uj3m+Jf9mLfU2
lxDHEWXNZ/Qt5aIh7KHt7HuTcrFLOF4YL7dTGfYvDy2RHOqzVsYk7tjMFTE6
t1niY3LMjQskjwvXW3IdeAyD57vQb8zXkvXoutihnx+P7Uis+gYbS+TNtdXm
fXfQPXbVdIlnwmM1UiddYcvpr9MxV1TXm31NNq8Nx7JlP1seE2hJtJgXl1eZ
0jvnmpHczuG2Ei9Zz5vAcdHmmtvnbBd/Gtb6WAuUeFRUR728pkLm2dyzYLPE
22Ldg+siru9aXT4e1lX4+Hjc68w/vyXXW9oHLnYJj61w/Fc5r0abm6g93mI0
17P0HJz9+HKJCcP3HI9NcRwcPmfWovh7WNdKbUuaIy4vk+dH5mBz7GJ6fTjH
fbtoqrzmeMeH0W/zwNStRVDGD13rKj/OAMQv8XOH+rlBz+L4JfTy4X45BgBA
cRDOKXwc50ZUkci0/mhH+3rJiy++mKuV8Nhcp7zCB6OXyDxsagtwvfo/T64w
R91UJvlFJB4dj/FPcu2Ry+jvm+aaexdUmjUVjdbfstbGVrvulQ0S87/0chv/
YwzXl9I2neraMNNEu+DlRc+vln479we5n3n1yxvM1x9eJvFVj7+P2kC/meP2
nZGZ48N/s58Jtwu4rRBLJmzemo115levrzFH3TXX6SPTra/o5KnGu3KmOfeJ
FWbrxoTU/5zLhPvDktcl1mh2tLXLequZsF920qyhfV5aVE1tuoTEONnVaudv
SPuVjndrLG5KqZ1aQtfl3sXbJAdtMF5JUB/hpZ8z51DqRF8v+dazK8zH7pwn
c+DZt4TjyvEc7Z3U/uH4ucl4Y+a75bjoeI6g/jnHe2U9panZzsGR+6QhYepq
ra8u9w2unb3JfPC2BRIPn6/Noqq4GXNduTnqWvotbp3dpenfzjaHnE84ZfNH
7nA5OnkuOrcDWTNZuy1mrn95nSl9ZL6JXMdjYNPNyN/NMb+eut4kdjTJvCNu
k7Pv/pb6OtPW2C46BLe9K2qTZl1FQmIRj+R5WXQ/SMyZh5aapRtjooNwu561
DPYZ4XZhZW2daCGVtfWikfA+cYm31ygxTLhNyv4wuxraJM7O8XfMM7+ctcr6
oHAMm4TNn9Pg4qywsabGsVn21DWZG97YYI6l33Dptnrx82EthfNttKZsHmyJ
j9jcLD7ge6mtPPaxpaKNsK/UmLvnmOhvy8youzj2ySyZM6Q47vBvy8098zaJ
T0pHy0559qvo/ciP0xODXlJonF5ixo49zddJOlxenLSMPzfYce72FtuH4zKJ
x8T/smizGXPzTHP+M2ukjOD5mfVuzJp1DJ7HxnoJ+x5wnBJeJhOt5st/WCH+
JSOummuaapvNr15aZ0bdOEe045FXlpnDxs8yoyZYnWEMjwVMnGVO++NSM21t
ncwF5T4h9/HZh4XLoF0S7yplpm6oM//BcZ5ljhz1Ca8rt/4hXL/dNNv89NnV
MmdGcsty7JGGRtE+mtycBM6Bw/li2UeN7zPWTh6Zv010fh4PuH3GZqnTuAyw
5UxStBaJiVXfJPXQ5KmbzHuutf6PrAGzPyTnHy69bLYZNalM4pofNqncRMaX
mS/c9ZbM8yj0M3T+X9eaf6UylWOF+3qJxNdwegmXrTIn1+Vj5jJ73O/fMpe8
uk78Fdj/jn1QWKdqdbFg/Lih98/dYj79yDJTQeeRbG4ziysajL5rvhnxf4uN
um2uee/tC83Ie6nNcDeV73eUm5I75pro7XPM5/6yROYF79nZdsjnx+Uyawzs
59HUYMtp1uhvL9toTvrDYnM4lctH3zPHfOT3882jy7ZLOSJznBusX2hrzMah
5Rw/rJlUUR23eFPcTHh1vRlx1zxzzJ0LTAktvzZlteTGYR8N9pPkXEPNLv9c
fV1cxkB4XlesweZN4vqD6y6O/So5cKgdtq+lTXKmnfrnt8yFL6+2PpPOn8Sf
g8MxeKTeT1hfU45189TCSvOB3y2UOV67mlrFh3FnvNW0pdrkXuT7uLre1tXv
tLSa/6F7Xa73/fMld3XJvfPNUf+3yKjb6X68Zx5tm2sOo7bcU5vriqCMH7qW
k4Nd+gX9qpdkx5IjSnsjtRtTpuUobfOHlhX8GAAAxUMwfonnne30kpuljFAu
vklffkd4dUgvoTKxwy1Dllt+9kYv4TYa97VlLIt9KamfWb6h1jy/tMK8vKHa
PL+kxsxbEjM76zhnTYvkN+Sxj2TCjsNxW2BrTco8u7LKPELv4fk4f5i3TZbP
rKoyTy7Zap5dut08t2S7eWN5pegrMvciYcf2ZZmy4xd72ttlmUrYtvCCNbXm
r4srzEz6bO5Lc9ua+6+sQbS0Uj+5OWX27m41dTsazUpqU3B75dXlPP9nm9my
nep+6nvX1TTJuA6PQXLMB/5cbnewD6+0RWJ2fFPmem9tlNx68eomab9xPzeZ
svlhOOcft/8WrKoxU5ZViCbBOkU+XcDXSvpuTk6j5GCWPEB0TNvo+Dmfbixp
/UXY35t1JPE7abG+Fvx7VlUlzO4dKYlFw31w/9iCmo7EIHEx+vmca2viZveu
Npkzv6O66RDyCffs3KqqamzOZM6/yDFZamPSxua/OQ8Oaz3vSFvNnlNzwuai
2ely4uxrflvG/zi2CfdxuA3I9xPP3xG/7hY7j6au1uaO4bFM/lz5buqjvd3S
Js8Lax7cT+L2YUVdnYnF4vK+2lidtC25Hdnq50Pg+fW03FpV5+bDpGROOeff
qKmPiR+0vy/PbWefqJaKemnbcp5sjmfMuS/Zr4THm/19WcPjGK4yZ56OY1sj
nWetjXXMxv0O7oexZhOvqbfjsfwsNNg5QNwets9/NkfrQLfpituglxQaXy8Z
N+70jF7CWomvl/A1b2lNSSwLzkPV0mxznkv+c7qneZy70cXutPnQG+RZlxzi
jTYvCpdfCdG+W8TP5A/llaZ8VdykamxMjG30nD2zuNo8uq7KPEZ10rPLq8WH
buqmmJRzW5J2HgE/j36d5Mdm4jKuspKOJWl9TXgu5NMrK81Nc7aYH7+41syk
unJVRVziYfGzycfnz1WUuRIcB5zs7RYbc8qP393k5k+8urraPDZ3q9lVY8tr
1hVirv4Q/7t4yuaLabV5vp6dX2kenr3dvLK0xjy9iOrY5TUSB/WRtyrNS2vq
zIura+XvVXX0ec19k0+327rJ5Zs1b7eJVmRztSQzegmXwaKXJBsyWsPazXGz
vS5lY2jRM8jXhK9FkuqtzbGY2U6/7972Vimra9jfwcUlidXY/MoxqsereY5O
rM3U0e/XRuvYuP3Cerud09Ps8rodwrlxDjmnkXDdY2MS21jrXPaKH1/Mtpvk
/BL23DlnGsdp4zkvPC+H2zR8P7RT+4aPjcea9uyg9gi1S9i/o57u2c0bkhmf
1xYXy4qPga8N1+18P+zneCyc346uE9cB/ndxHZmm+4u1jJa6hNlE61hvq6mx
egVrJWxcV62n+nYH1Ylc79icbE2S+5ljl8nYUb2tL3nMgnUZbvdw/NxEc6Od
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
Dzsku+yQ7Ior6Hm/fJK57LJLxSZPnkjP5QRz3nnnmq9+9WwzbtypabbTcuzM
U3tgY09Of/3LZ6XHnvSF9LHHvPfdw0eNTJeqUkNWrm2cqgj0kkOE2+5exLBF
Rozc88+fPzH9yX/8p/SJp5yaHnvGmeaksafmtZPHjU2znXLauI6xZOPGjes4
7bTTOk4//fQ0WccZp52+7/Rxp+2ZeNmEdDHbpAkTD9UMW0+etQmTYDBYLyx9
2cQJ6Z/97Gfpb33rW1yumBNPPFFs3KljzVlUPp1y0sm+pbN2ag/Mvo/bvwdr
/P5TqZ46/vj38xzRPV6k9A+ZMlVn4hkG4xuGreBFe9i3xfEtHfHStOoa1J0A
DE+cXtIR0FSLoyzQLge6vI6crCKjqrzSUWbk6FEduiTaITG085j49TnLu08k
j3XxWV2YEdMqTWaCRuWpiZRE2dJeNMK6ecYiOmslziJdWPB9XVnwPA/G6KrC
DsG08joO0dKwwWvqIE1rLhei6UikJGP8d579OoLmqd6Y7igpiezxPMl9OJ/W
kUVneDo62bX9omjzHRqiOUWiL5OVkS0oPfyIShUtNd7oMUaNHJ1WI0pNl1Za
klYlJftVNLqf3ruf6rcOMv7NjW/0m6WL0fj+lfuT2gzq0GzAy3AYbLgY+2hT
29KURKJiUdZ5ddRZadbUiKxl1kdzjNq5kUjASnplVN9Re7nEaG9Eh46OelT5
+n04H033VkCCfi3a13A8fTu37+nPfy3kdwMAihcquxYE9ZJiIKDpBnOvZ/Kg
F9mxjqT/jlHa+xjZCWRj6aqe2ZXpPNbd/jAYrAhNF860FznTL+9078nmXVTW
hVD55LZFwUHjrmNpIPek9tv92sYrzPqPd2F56zGt3+fqkVOL0MaSjbOmTyc7
w9mZB20KBoMVwMZR8fNZKmKO0/64o0PbNrTXh9br+kllY7hm89B03mdg9RL7
2o+nWM56Cb0YE6pTAQDDBu1FF/F8nIE+jiA6U356I3LalwfTfzggB2rTdtpf
BcrUrHmuvSz1gO77OilkCjZg1jd3HfqroEDozJzrUNmpwm1S3H+HgLuEHJsw
6sp9LhdGBsqJ7tv1+bZ1VU4UifU1hfx9ACgkBXgcDpneHHyfWi8vnF8fBcwn
2LYdUP8SldPOpte7lac3FPq7AQDFi/Yi0138klH9URb1lHzlp1+OhY6zJ/VI
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
8TeclH65X39kidnHsuMVaz1quWMSum5xLad93dPf/Kbmc1/9++jT/e9r6+d9
reh41/gOtT5ITs6RMz6V01bp4/12xf392KxtvPn/e49GjXDm9SH+j+m6bSEu
ojUS5v3BX/9g7q27PIeTGNcOd9yAl/gbi7aVtiVyviJPknxdbbQbmLl0Ipwk
9L9cLWOPyBOj4p9YNEeMNWvWetyMe1rofiVvTEfKjv1f5Q3u/Nh2A8WCe1C3
8RIv/4OnC0ilUmrs6TiOmmI8j+3T1FxGbvKSqqoauTwh9t5731D+VrCOMWNK
FecoL6+UY+IPdG4TU2MCVgF2guVz5sxV7Ssrq0OxKj6D18yExfCckSNHihkz
ZoiXX35Z6WXoGCkfC3QUixYt8o+xSNx77/1av4B9uvPOu/VnLFiwIMRHyN97
7z0/522z4iu0P/ff/4Cu+QPe8cEHHygNzH333Sd23XVX9ZnEobjPe4J9d8TR
R39fPP/8PzRD6mlWAl3JJZdcor5j8Afsj/kdFxUVieLiYpFOp0PzMQ/XC10b
WIZztWbNGvHII4/odn/+8+MhFhZmJk2K1RUVedzo9NNPU1ohqnf07LNP6+1k
s9nIuQrYHU2x/1TPmPKtFGYlPV4fRxAr8V9v8HlJO/P6RTouutfM/EzHPYaz
pFcThzu30RiCh8eNgQ4k1yl2e4W36VA7o1aguxi5UZinL3Hp+R0S3cmbb4qr
KR8pN7Fezv9cLq/w93Vg3Z+tDSwL+u/RmhfeWImxs33N0/Hm/93QWGdzNmP8
ExrrGPqcvtq1fBYdl/nv3AR3DpQ7+468T32a5M5p3MvLZG0wGjF7xn4EHirn
1Mt5I/1lIVZvGt0D9P82xv7oMX7n54XG+vLjnvBqwMn/f8ZnRHgJagv/2uMv
zkPGyuFxymC553B2lF9Tb5H3fpAclzVr/dly+/JRbpuVHfNW6Z/KG9LHtAqt
O6B+p8Y925tsOi/B+A0sARxhp5120rzhtNNOE2effbaYO3eumD17ttIXYAqN
AZZdcMEF4pZbbgnVspk+faZw3aQYMWJLpbugPB7gBmAo4AGZzBDx1ltLBWlP
sBx1iM04HfjkyVNV+4qKKrVtisHwnmW7YtSo0eLCCy9W+3HEEUeIr3/96znj
aYzhTz31VPHiiy+qcfTKlSt13Mi8efM0o/j1r3+rPxefce211ynug2WnnHKK
HxPSplkJxaSAxWD/H330z5qvgJdQHhev9k+buOmmm0L7NWLECHHUUUep84tz
+s1vflMzB3CIoqISxZegp+lpXoJjuO222xQXYT7LwX7Qe/Nc0uvtt99eVFdX
K32JHPuLI488Ulx88cWKleDcPvzww+p4SkpKxPz5C3Jy2AY5X9oUd6qoKFPb
xZRYCbQ48+bdpxkeztH+++8vKisrRVlZmaipqREnnXSSuj7POusspY3BPtD3
S9/RZs9LTA2LxyoS/uuUHCWcKK/zDXJ2ndyXoTH3UR03Y957mI7tdqgG48/0
/Ymm5nagL/H0KzXcr5fIvVgH6Wqa8uddL/0zxp0bWbhfSpsN+q7WrG2qGde5
wQq1dkReZG9Kb5Hzts0ZK9lr0LPgJ+lpctziCxhPLUo5RY8nWHJxyi16KglP
pp5KGO4mfHeTi+GOm+iku74n5HpwV7kT614bc+r468j/Z8pTrvN4krGn5Z3o
sSLXaeIpR/4P5MJNJl6VB3NFX59ea91sBsOT1+xw7uX73YVTPZpcjhH8z+Eh
rQR4y3s+L9m70P8kuUDzEm7kRYn5rN3lgvelQ+v0pZz/p4PNOFvp606/Guqn
WLNmrWcs+F8deiZq9H8m4Z4mByafyBvlh8btb+A9IzLGLN6ke3gJ5fbEOBTP
6EeNGiVWrVqltAdmLljktsBze8RQYJmXXyIYA5966izNDYh/EAMBRwHnwLIp
U6bpnKpoB21JVH+wzz77qbZjx5aFcnrQ9hG/gnwoQY6QJrFkyRLx85//XOyy
yy4hbcS+++4rXnvttVAuW8QfMZ+XXHLJZZqVwM8993xfu+KIIUOGiMWLF+s6
y2Z+Dnwm9v+RRxbp/Xr44UfVsVBOkgceeECxA9KUgJG89dZbofwfOKfgNwcf
fHBI23PRRRf1OC+hnKr4TnH+7r33XqWFufPOO8X999+vtCfM12/8+te/1vtN
14SZFxbnCPOxHvfZFXhJkP82cKpvhOto/Pga1ba8vFTHUSE3L3gJ5g8fPlzc
c889Kt6H2BX2l1gf5ZilWj5m3h2TwW2WvCT2HuJ4n+u4W7Fk8VzmJr7KcrXI
FJPgmmNI4/7jeDnq1LXx9ZiPoT6mWX9A8RI5dT1WonhJGoplf5tfVToUR2lM
vhi3vVD/1Zq1TbGYPgMPtE+jfG3JfKN5biz+Zm45/alE0VMs5Xy2Q7Lk31sX
Fb0ywmGvDXPZa0OlZxPstUwyx18ll8u1y/bahzm+c658eDf4UCY/h6ltLtuO
JV4bkUj8a+dk+t8sydqkC5ZwPk44iWf7+vxa6yHz/t+5Bv8M8jfzArxEX+3u
t/37w9vczxOc96PAS/D/3vv/l9TbCj6L4nvQ9hGfwVyyGfCS432NyZ/6eles
WRv0xkN81slxpu4/C6V/JDtA7S5zH4/lJQPlXtQDvITG7JhCK4Bx/ZgxY3St
E6oxa9aQpfGgF+eyVo9/wTBMXmLWBU4kUkqzQczkiiuuVLoS4iYmd8EUnITi
cbANbA/LaPtgHMg7gjE66QmoRgviX5599lmx9957a33C8ccfr2Ny6HiZ0k0k
xHnnXRCqWXzGGWcpvuN9lqdtAG8BL/JicAJdDtpDU0L7BT4ALQWObeXK1Zrd
wMFyEH8CFkXbofE/6SH+8Y9/qLwq48ePV3lFenI8T+wH542Ojb53imcB+8A1
AQdLwbk1rwFy4hdYH+3omO+55z713VG8E3EkaI7oM/fdd2/VdsyY/bW+BP7A
A/drfoT9gH6FakDT9UesJKhfHOQvptpH/ZGXcC/HYO/wEscJPgf3EHrPHUe9
xtQcC+p7qKNr+lJ/MOg3OhPlhhH7vULfa437qNG/1LxE9Rc9ThLwEj/niXbX
edaL3XEuZJHtWV5irVstuNZVjJg/j2JxrvHHQ0dS25xrzl6DysyxpJtILd6W
J16oYEO/U8aGTK9iw6UPm17Nhkof4nt2ejXPTq9Rning6Zj38V4d8UJtze1W
OdnpFSxzSDXLfKuUpacWJ/iHLMHaWdL5UPYBFvX1ubXWA0bPBsLzeOR/YCwv
0YMHx33M5xqXd/Q/KcJLwvq08PgFM6cpfQlj7wb9/EF4n0G9ZDVlb/sak537
eI+sWRvcFr6PuUbfh56NjvDztUFfIt190rgHda0ORH+w4Fi7NX8J5fUAL4Gu
AVOMS01WYo5DzTooZu1f5OUkbkDcgzQb4CRgJog1wfJUqljFsZh1TyhmA+uC
l2CdsrIKndvk1VdfV+uCcdx88x98XUqrrnVD43XsM3zp0qVi9913V1qHbbbZ
RutQKKaG+bwEehKTlyB3Cj67uDitx/1HH3202ibWhSaCasZg/P/AAw8qPQoc
eWqhe0G+1iuvvFqvD10JWAM+H/tqsht4ED/SrHlMXO3enuAlFMNCx0cMAsyE
2Ad0R9DK0LViMgk49pWmjz/+uD5usChwLWIl5FTfBtuZMOEA1XbrrbfS9XEw
Re5e5mttwEuiXIT219T8RN9vtrzEvKc5TpgNw5NFRbwonWGJZDIPb05E1zH7
bnLXH0RNQPn2J/R5kT5loPNjbDGP4yXePTqp78VqM840X2OynkXyH0T7rgPm
vm2tfxrXz5Uppw5dW7g+URfnM9loSM41F/XN3MzfZTLpLh6Zcl+uZEMn17Bh
MyrZkClVfMhUz7O+Z6SnlVfz9LRqnvE9rbymRz1jeHrawSw7U+7TtDInM2n/
VPaKZIJtYA5rL5H3Ntk3eLqvz621HjIar+fOLxiP49uO/v8z/P8byaMMJLrJ
MC/hobbBZ9FzCce/94DFHMGj/4cHm3F+gq8x+cOgPD5r1vqJGfcwMze1fi1/
fKf797XPOf7/MfcZ49622fMS7zl+kx77Ix4H29tvv/30fJOXmOPRILalVWtI
Zs8+W+c9BTMw6wxjXjqdFXvu+Q01xfvtt/+SWLLkNc1WiJdgndLScrUt8BKa
T3EvYC7QLdB4l2IwKDaEmAT8mmuu0TlrH3zwQX0MmDI/Hgd8hHKkgJecddYc
xUt22mkXFctDdViuuOIKHb9C5wz7hhgcyncCBkTbQT0X6FuQr2T58uVKV0Jj
fqxLdZuxTdLH9OT4PR8zwdSsF03HB1+4cKHSluAcEi8hzhFlExQHg+XM5yVn
njlbcS18f7gmiJvguyPeceqpJ/tcxFXXLmrjoI7RzTffpHkJuI352SZXMvmd
WRt7s9SX0P0MjMRNeLzBcV3iIpzmy/ec2nn6kmgsoxu6L4b7jF+WG0X9xc/l
668YfUCzfoiObZBvcngJ83iJywJ9iR5yMYc3+8+cfmh8NA+9Hij3bGv917jm
JWaeV3nNOvv61+vDfrPgmgv3M+x1yEL9sISbch4fkWJvVLEhkytZdnINGzKt
hmc9Z5nAe5yLSGd5XC3z9qOSpeU+ZmbI/ZyyU6r476kkb5d3p0+hMUF+k74+
t9Z610Jjghj3/oW6fi035HEN/jexyOtgm67mJfozjA/U02BjP/HvP38zNjuw
xiodWXAPTfl5TNqlf6mvd8uatcFqhfow6HfLG8vr/n3H0yX48TjM6J8PqHtQ
cGzdzkvgqAmLnB+Ix6GxLOkeouNijO0pfwmYAWIuwBlIX0IaAmIp0JOAQfz+
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
3HPOE6miElW3tySd9Wr4op18j/q/WOb6eWXBSnbd/Wvit7+/Sfxn+XKtEaGc
IfC9R49WY/rS6mo9H2N+6E2gFYHOJMoBqA3laD1t9mzFBMBKwF7ABczYHsUE
/No6b61cqZgIto22YCcq7gbrwxGz40/BUy6/8spe5yNRp7gg5Ks1OQkdo3le
4DhW6GrAgHAM0NW8uWKFPmdYjnNE5wm8BLWEDpx4iMoZg5pEK9bUKl6C3CeJ
YnzfjijKZNUUbdQ0kVT5YvCd4zqAH37EUapGMeoVU33oxoKspKUg9+iMQ0fS
EJPLhWoaebxETptaxYqGpg11zW2irKoauUtyeAk3WYnmJVRjOFwbuFP3ruhY
L255bjt5b2HyVspcI/8IaUo0K+GRnCW+U70cYiWKuTCTl1iz1t/M+3Fc5/Uf
nKP0vDg+YnlJvBEvcVJPDU9oXjKlr3nJOJadLvdF1ckZz7Izqnl2eoWcv0Oy
6Bl839I//2Iq+c+xXO3nlGqemTmWpQ/Z2nGWyDvdor4+rdYGvnULL9kcLHxv
3Yl5fYaV3Ih3srzEmrUOrEB/hXt5CIfI6Xr5v2+DHFHIsZNztL+a5SWdrCf8
yiuviJEjRyp/8cUXNQ/pqA4I1XgF71iy5DWx9dbbimx2qMpHAhYCJvLqq6+r
nCRf+ML24uWXX9F6FOhL6uoavBgJ2bZNbgO+5I3/iIlTpor9S8vEY08+JZav
XqPG0A89ukjsudfeSodA9XvdomJvDC3HztnhI1Rt4OP+90Txx9vvEG8tX6HG
6NB3mNyDdCSIe8GY/sxzzlHvqX7NMSecIIbJ83DSrFk5WgrToTPBcmgpUDPn
xNNOU9uG9oTWAx9AO9JWgNv8c8kSceGPf6zyo4CbgCnAsS9f22svcehRR4lb
775bcYe+5iWIHUoPHy5+d/PNuhYy5arF+aIYoig3ue6GG5SOBnqZ1nffDWlQ
zDrKFF/0+1v+oL7L/znxJJ0f9qLLfiySJWmlEVLfsXTk1cV3j7a4DoiPpTND
xG9+e4PSl+BaIo0JpgXdYB5d9bictyYvwfbrG1raGxpbBTjJysbmDfUta0Vp
1bh25iS9eBwjDofH5XTNx0oK3bty75GxvIRHlss3xEkKshLfczgJ85w4idao
yLbIG2V5ibX+ad6P41/SP5evtqQeg7/M1rPurHm85Mn+xEu8XCXgJd50HMvM
KOWZU4sT/NNkQt6Tilj7fm7JpeUsPXkc4nWc7DTE42zruK9bXmKtO8zykk4a
1/pW15vhQGOCZ+DHMrofW7NmLb8FfZPYZ6vqGSfjF8iFeFbwqRxV/Nfvv5u5
BOVoI/GswywvyVcfBzkfqF4w3lMOzY54iclUwE4oDyf0I5TXFVNoSBBXA80J
6VEoP+s7777v6QHa1ipdARzjzdX1DX5O0FaduwPzaIyN+XBqh/Wo/go5aUpI
P2KO26F7WPv+++q9Ga9DmhBTJxJ1k7uYMSZgMxR7gnXxHlyB8p9QvlPKcULs
AWyEtkOMp69ZCTk4CZy4E+W0JTZCx2XmdMUUx0TaGjpulbfEiMvB94Y6OfR9
LVu1Wk1b17+jloGb4DVdF2iL7xgMTcXyyGto1epapSuBI8cqriXURuoML/E+
tyP2sXFO+pK6plalLwEvWSP3bWxlTTsrLvbzl+Spe4Nawx4rofz7hcdthZly
x7yEKU1Jjq4kNg7H5yUsYCaKlfBAW+KE3X2SefXdq3rzdmnNWqcM+V0Z+0T6
S/57j5d05ndnLTDwEjfRr3gJ6uBUI5cKz0wvdVSt4GlfYnyem2BCdhw/H1bk
rhjNSmTbNOJ1psp2U1AfZ3vmQl/yVF+fUmsD3ywv6aSZvMTrO+zKvNody+P6
L9asWTOsE/0U+aZYvnlP5bWHO/yi4HFpYA5zn5U/xBAvGXC/wR7iJcRKTF7S
mZqpJi9B/RJzfUzBR8BDMAUvIYZi1iBWzAQ5Y9vWKe6B8SvG4zpewxhfoxYv
MQpiDRQXQ+Nxk2dQOxrnm7wEDt0HaT/IKVYkjpeYr2l7+FzsF/ENrIcp5kdr
6xAbIZ0GaSzo84jbtL33XkFdS286nV/sG9XxgWM+nX+aZ66HY0L7aGxS9LhM
FgZWgmvA5CeYT3WeMZ+4GDQoio3VN/p1e5sVL8Fr8BIzHqdjXrIx3rG+hPKX
IGcJHPlLVtY1ijHlVe0sk/F4ic9HONW+8TkJdxyXe5oSPWYz72ubykv0djxN
SayuhFhJDC8hzYkZgxOKwzHGmYqXSLe8xFq/NHmZlvn9h18H16zlJV02/Pj7
MS+pdrMzapwhx8qb3btyRPaZvIO178uKfzHOazetmmem1TDPt2fuK/LO/Exf
n1JrA98sL+mkRXiJN/U0JtK/39e7Z81av7YO+if+IOCHmpUw1ixnDjHHB8Zg
4VnpT4fWHWj9nR7mJZh2hZdQfhOqT4JtQGOCZajzim2BiyDmhpgJ5XnFfMoh
AV5CY2Sz9qwZv0HsxGQhpiaENBAmm6B1EQ+CbdL6cfwjqhnpiCNQW8TeEOsg
boDX4AUt77yj2QKtR1zH5C2039gWpuAvfc1JzHNE+xiNp6HcuSaDMtfD8Zjf
SZQbKT2OryUiZkIaIuhKwERIS0TMhHRFaAP3avY2aVaCa4lyvcJpvXwerR/U
pXPTCWayuqG5fZWnLREr6xo3rKxtEKVl1e0snWnXsTa+e3VvnIg2I942ZrwW
YS1eXteAk8SxEo+XqDwlTDkzWAnz6uDoOBxmaEsY1f4zeQnnlpdY63cmL9Kz
/f7DcZaXbILF8pK+jcUZx7IzsA81LKPyve5bMnQ+6q0lXNZelHJay1jxoYqn
+PV8ary4nalbM/ffQ7hj9SXWNtksL+mkhXkJOTQmH0t/U/UzrFmzlt/ycRKv
T4Nnn8v8vs4G6ZebY4ywDiWXlwy4/k4P8BLK92rG5cTVDy7ETMzcsGYcj6dZ
acrRl+hYHarv2tKm42iicR4mL4EWBONvkzPQMrwm/YM5bje1KMQ14phAZ8fI
5vpmLAoxAOyjGZuD/cJr4g2mY106BloH2yXO0hf1cOKc9pOOP8qxzHrB5Dgn
+D7eWLYsdI6jXAW8BHFYqoZMQ6PmIORx9ZOJdWA9sBIvT0hTjqbEbNvdrCRw
v75yU3jqeTM4ieIlK5o8XrKmtlFU10xod1jS4yXBb7pDM9tulD7O7I8w5QmD
kYB9eJoRQ1ficRKd2zVFy1lQN9hkJWbskOYlDPE4lpdY66cmr+eFKh8x51/h
gT6qc3Fw1gLjKiBH85JKlukHvCQzo8xVeUumHcgyRw5PJT4uYuyzVJK371k0
4jYwHeR3rQl4idrnIZz9202wJ/v6lFob+GZ5SRcs8jzHn7tA+ufSj41pZ+/D
1qzls2C8UCR/Tgf6nMTTl3BGudosL9lIXkKsozOsJC4uhzQqpFmp8+uVYDxL
Dk1Ag89L4JSHhMavcbEzZl0a4h5xeTTyaR1omo9BFMpVko+bmPtm5jExt4P8
KKSDifISctJaUBuwhv4Sj5Nvn/OdP/M8msen2IH8vqA5MestE9MgjQkxk7dX
rPTzf+TyEhWzVVun2poxO3FcJR8z0fEy3XKeGmPcW7aqqaVdOqbyuJo2NNS3
iAMPOKQ9zRLtKjfJJt4LutieWEnSc6b5B9e5W/36N7msxFvusxWmWAkznwOZ
z+QjbMfjJdzyEmv9zTzo2CD9XV8nFe6vW1bSedO8hPcqL6nyPkfndPXmZ6dW
86zHTHjmW2NYesLebtH1JXLc6iZZe3FJ4r0xbPiRcvn0ClYi10lPrXDSU2t4
RsUQZRl7hRWxxX19Sq0NfLO8pAsWf/+dyLyYnEbua0z0s6Kgrb0fW7NmWvg5
a4nD3LcNbcmfjCY81J5ZXtJRfZyu5CzJpz8hfYrpJieJMhOlC6DxayQ3SEdj
9HxtOtJkdHas31WWEGUz0e0X2pc4ztDXnKTQec7XtqNz2NF2uvpdqs/sIM9I
n58/1BNuAgtErpXmDc1Na0VZaVU7Y4l2rvPA98q9w2QlKelFci48Wh/YiL8J
zSPtCforOVqSqEYmPLa0vMRa/zKjj7Cj34d4Vi+IYyXWOjbFS7jmJVW9yEsi
3GRKwEuyKhanlKUnJROsSe7l56ij+FWn+JZy5DRhmWmVLI3YIRU/BH2JfD8F
+hLHtflerW26WV7SRTMZSFBjbzFD/TLGp/jPZ+g+zbUOxd6rrVlTZvTD/WeZ
DvKWfBbkLuF7GN11reWivrucYfO9FuAlJjPprKYkyliiruqu+vklemI829kx
dWfX21hNR2f3obN5UfoTL+l2fjAIjy/K20Lsz6+P09jUJhrqWza0NK8TpWMr
e4+XBH0PVz0/16yEF7OAlyh24nORoggvId1JLCsJsZG8u2B5ibV+ZEE/AfkE
D/b7EVeZy0LPZqx1zvqAlxAjMd3Ul1TxzLRKnj3km7zkF4yzdukbEi5v35uV
fLsyhpdUSwcvGeqwVx3XxuNY23SzvGQjLNqv4HwGU7zEz8EcYSohvm3N2mZq
Ph4oZl79BcfXzKLvvtK/B8Fv5UZ+RBb053Wfx6uPY+sJF+IlXfXO8pL+/Py/
txiBObU+uLyzvKSxoVXxkrGllbLfnuw5XhL0NRyVp8S7d4J7pAxeQvoS7T4r
ISdmEtWV5GhKOnEfxXNaIZtV98jxWrNWyMy+t3G9ev9HnfM5+uFefzy3n26t
8xbiJVmfZWR7nZcQM0FOEvCQMTw9Sd4Fm1NM8ZL23d2iR8p5ZkoZ9+r3GI73
lpdY61azvGQjLXovdvhjrno27hwk5xWxGI1rH++xNWt9a/6zUR7ww6Ts5Rzv
33/wXOhj6buQrsR/9hnUf/B/Q5aX9AwvaWzO7w1GXdXNmZdYH9yuct5G8qPQ
sjheovQlTg/xEpOTMKUn8ThJEFejWAmP4SXM4CbMy19CuV8pH2yupqRz99DF
zOMlNd1+vNasdWR5eIlaxJwFfq7XnUL8b6D1DfqDES9x3V7jJYU0Jl5tnOyU
PRIlv2AJ79kaeEkly5w0QS7z8qtYXmKtZ83ykm4yxxkn/4CXPKreR56N2/u2
tc3awlorx39OmpIDgdXSN7he3pI/+k1JX2LyEm0uT1he0s28hLhIfR6vs7zE
+iD3DvPJ9hYvCe55mpMYuUrCuUiY5ywPL2FM53w1WAkzmXWXcl/KhYu5l6+t
ptuO15q1zlqB61T2vaFTfY95TNHmc90UU7yE+bwkY/CSnmMm+fQl/udPreTZ
mVnGGxjqazhMbMsSj1cq7QlidUKsxPISaz1ilpd00ejem9vPkH0b5ykX3JPx
Gn9ekdWYWLPGWOh3QvzD4cfL38vH+M243j1oVyNWx4xnC9Xp9PQl3PKSbmIl
lpdY35zdrMFD9YtNN2r+xPOSTYzHoftahCnHshLTDVYSz0t4Li+Rr8PPcCL3
o474CfJs+7xk3IC751ob2FbouuQ8y5nziZz5b5ph9SWbYDhniT7gJTyXl1Sy
zOQKlj5kdDJ9jbwBfa48yTaMYenjscxrZ+NxrPW8WV7SRSvUn+DOTK8v4SzQ
fR6jRp+9b1vbLC38e6HfRZH8MSz1WcknDmM3+k25yUuMsUQyeBOuj6P7RgPJ
eoCXdKYuTr78JI0+E0H91LqWprArVhLPS1D/1awTuynj1sGYP3RTvT+ej/64
Txvj0XrFcazEZCbgJap2dmP38ZIQBqa+QsBIOstK8jETmq/zlvB8fZFCvMS8
D0d4yYC771obuFaQlzj7cOYI2Qe/g9paXrIJ1uu8JKiB4+d2nVrBvfo4Vcjj
6ma+s6XjLkUMjuswsR1PPlXOMpOQt6ScpydXWl5irRfM8pIumnn/jb0PO7V+
DOWeJjOhcVEv7601a71r+fvcpmYkIfs1F/j3HSEHCO/LuSP91cO/LX/KHXd4
Xl4yEC0vL2kJsRLTO1sTJx83KZSjpMFnIlFegvdqHpb5bMRkJObraL6Hjanp
29HyzjCVaK7O2Nydxjai293Y2jr9xTtby7crtX7jtlvovG9MTeee9jjeB/5B
9bDhTTFOy2S7dmrT2Ni8obm5VZSWlm8UL+Fh0zGKWlPCPec8npewXFZCvCQ6
D6wEnCTMSuL6IpaXWOvPFndtMp3rdSZ4iewnXMlj2ljrovUhLwEr8fQmaTUt
l+9HDx/6/5jL2lkxE0UuE2NYySllLD0JDq5ieYm13jDLSzbCCt2LuXOMykXE
2E1+f8fllpdY2xwsno04xpiAlm3BOGtl3u9kg/TLI5sx++fBtuklY89wL+/g
wLUoL2EJVXcCvCSfm2ykpSnXmxubtOfTkORz8JDVjfVyHNygOEl9a7Oarmqo
U1PMBxdZ09Co3OQlq+sbFCdpaGmNzf9g5oAwn+dHHdtd1dDQ6TF2yzvvyH32
1jHH9CpnZ2trzrgd8+BxPAHbodfRdXttPO9/XuPatfo9pivq6kTbe+9tMi9p
fffd2LZ07HH7QstxTlbW16tzDce86Law33SO+46VNOZ4oI8KvMHwRnksUT1W
lDfm4yVlZRXt3Kuv22leYoznKEeTVx84YCPES1Ru1wKMJJ+eJKwr8VhJotM6
18LjTRuPY61vLD8vkS+cyzj6EpxPoHmWmWyC9TovyXi8hGemjufZmdUqX0lm
SpmTmTqKlRw8xGUtVD9422RicTlXcTjTKlgasTpRVmJ5ibUeMctLutm8e3MT
8zQmW/vaEtc+i7E26C2Xl7gGLwmuf8e5mHmsBP6+bJNR7cObyvtbGby8xCnI
S4iZxLES4iXr2taKVjleRVvNSRqDsWF03BjkJvF4CZxYCXETzMNrcBHiI5iC
jxD7wLSxtS3ETPCa3tNycz0zpofmtaxbH2hYjLG7yQFo/vLaWs0Tmtev1+N+
jNdp7G5qTExeEmULYACYYlsNbW1qGdqan9/TTvsHroF9gOM44nhGPt6Sj5fQ
NuK21bRunWYj5nxiI7SMzhMxKvCT6HeC/cV+9w0z6ZiVRDkJsZK4+LUcbVZj
Y7vxm9qA+WVlZfIe5mwML6H7I2k/TEYS4SU5HKQjbUmSRXQlvCNtSefN5nu1
1jeWh5eoRYw9yL26TV/XfW3LSzbe+oSX6OmUGp6ZNp5lZiKf646poptG4p7j
SHfZp+VO5pgKjvrCHhuJ0ZZYXmKtR8zykm6y8L35WOmfSP9D7HjRmrXBaOE+
Cj3PDGurON+FOfwd+epT6R9JvzLKSjr8mM2YlxRiJq3NLZqTmOPA+saGvLyE
vFa2WVG3JhhnmrE4Pjdpalsr1r77Xoh/YB6mcboRMBBaRowFGpLlq9dojQrm
o82quvqQRgXroI2KmZDjb1P/gbEx5mEsTmwDy+HgJuYyczlpNzCWJ80E2tOY
HuN/mpr6id4a85v7R7wCTKir8TLmuTI5CJ0j87yBlYARmW1NTkTvabu0X8RM
sC5tD9uCm6zEXK8veUlDAVaidVkbzUtYp3iJ0Q2guuouD/OSVKx3jpeEOInv
9BnESrqLl+CYazZhG9asdd2i/CPMS9An+ETOGqL72paXbLypLgnVE073Di+R
Po5npkufAXYyjmdnjmXpI50Ee4c5qn7w5zu7yXkVPH1INUvPkPul8pZYXmKt
t8zykm4yQxvIvL7TWubpA7/QtztmzVovWlhjkiBeqPssDv8T82JwwBOXy/lZ
FtQN7lS/ZnPlJfnyt+oYHaMNNCbLli0Tq2vXKF4Cz8dKNDNpblTxNxSTY3IT
8BLwDbAMaEDAOMy4HIqnId6B5a3r39EcBVxFsY+I5gS8BKyE4nzM+B1sG8sU
V/HH+jSuB0egcXxUGxGNq8FYnrQj2AaxArAJjO9J20Fje6wDFoB2tE5v5DjF
Z4DfEK/ANI4V5VuX9pWOhbZD5462acYaIaaJ9CCkJTGPe9maNXo+zpfJYUwe
Ym4nyph6Lz9sOPeOWd/JjD0Lxdr4rETpswr8tvz3G89LcnV3mpOQx/OSAnwE
y/x2ehsGL+kBVgKzvMRa31keZoJYHHmBr/Zn6WU82t5a56yXeUkNy0yDg5WM
Z5kZKt8ry0z6ipO6S7GSJPT6rKHSyRxdjpwl0omJxNTGsbzEWo+Y5SXdZLn3
5nOZp1v9eR/vmTVrvWcRjQkPeAn67bsxh4OVfMa8PvdxJiuhfk5HeizLS8I5
FqLzwUrWyHHuAw/OFy+/8i+dn6QzvGRlfa2OvyFWgnlP/vUZcf+DC8QZc84W
F1xyqfi/P/5JLFz0Z/HG20s18yCeYnIPzMfyN5ctV+vfePMt4tQzzhSX/uT/
ibvvnyceenSR+Nerr6k2zWvXhVgKxeXQe+g+MH5/c8UKMW/hQrFg0SJx9wMP
KH/g4YfFvQ8+KO5/6CEx/5FHxFPPPafa0xj/0b/8Rdx2zz3i/269Va1734IF
av23V61SzIS0JaSZIN5AcTo9zUlMHkJMA/t2wWWXib++8EKnt/XWypXquBY9
+WSItxDfIKZBn4HPfP6ll5SbeWDgv7v5ZnHmOeeIU886S5xwyini0p/+VNx5
//3ihVdeUd8DbZMYDc4bncfo8fU2L4nWw45jJYV4SVyuZJOXNDQ0bMC0Q15i
8GMe5CkxOUmKvNOshOaH2xMvKcxKLC+xNlAtRjOi+wyMfST9iVDfwexDWF7S
NcP5ct1e5SXQltRIx2eVsfSUCidzXJHD3pN78yFicXZxknejrnApT0+sZOnJ
Nd66U6ptvldrvWSWl3STBX0iup8Pk3P/K71Fvh7R17tnzVqPm9GX4YG2JMgv
6PA/y44NGCL8jZz1WJCnLWqhj9kMeAnpRTrSlmAMqF63+PNbW8SKVSvFwYdM
FMmilDj8yCNCOUoK+aw5Z4kdd9tV3PSnPyidCcafL736b7H9zjuK4VtvJXgy
hXqNaposSYtUOqOmX/zyjuLYE/5XvPDyv7TmhLgJOMe8BQ+J7PARal3ljisS
xSVqXXq/xzf3Epdc/hO9jplbFu/BVpgj2yaT3lS6U1wsWCLhTTFfvk6k02o6
eeZMNXaHXuOyK64QyUzGW891dVuWSolUNivGVFaKK665RuczJQZAmoyejseJ
y80KznPUMceo/Rw2cqTiIPnWp/3DsYIb4fhwHhY+9phmIyaHodeku9l6++3V
ebnhllsUB4F256prrxW8qEidN5xfdY7l+cM8+Je/8hXxrSOOEH+44w59rtZ/
+KHmTXEcqDd4SZSTFNKWmMwkho2EmEk0HsfkJfLXG+Yl4XGd1pMwyunqa0k2
jZUoTxrbI71KHCvpLm0JzPISa31jJvswn684zliVu4SxX5vPXGjKu+/a33ys
D3gJnOoIj2YlE7d03cflXewjuSefMoctG+9kj1X7wvV6ipVUq9yvlpdY63mz
vKSbLOgbBf0Txi6T/rn0i1gX6w1a2zyskI5iwFnus1THGAtUMYcTK4FXGavl
9oOi/R3zYwYhL3EMXmLG18TqSlqaw2PAFm9eS1urys2A16XlZSIzbKgoraxQ
uUny5Swx31ceME6ksmnxPz86UbS99454c8Uycc/8eV6etaQrnFSRcIuKNfeg
95gqluK44pwLLlRaEXAOisk576KL5Xg8oZbrKbETeCKpvDg7RGy17Xbixz+9
IqQtWbZqtTjz7Lke4wDvSKU0M1Huv8eYvmjIEMUKDvvud3X+D2g0VBvpbkmJ
mqKteg124r/PbrGF0lFQ/hOM8ylmpyeZSZSXEMcYsc023jHLY7vyl7/Mux69
BwOBvgbHBaYBlkGaEToms/4O2uP8KJYkz+tPrrpK8xdoStS5lg6mhPODbarz
aMzHdNc99lB8hXKZYJuU46QzsUTd5ZS/OB8rycdLCrGSTeQlPithCYNtFMhN
QuwkX+yNGYOD7en6N1QDR9fi6wFdCZnlJdb6xsIcMuAl3JkgX3wu/fw8q1le
0lXrZV5CzAT6EXzWPsn06bLfsUHe4T6V97n2fRIlN0F/Us7SB/tsZeo4b53J
VTwzuUzOt7zEWk+b5SXdZDFjRV9XAl7SKF+X+M0Gz/jYWqxFx/v52vBgvOwM
+OuC65ibcH5jz4uZw98yeMmiyKq5/ZkCfZzByks4eElMHgWTk5DH1QReU1er
x4ljysuEk0qK6gPGi5W1a8Tq+rocVkJO88pqquT4l4vqCQeIlnfWyXF1q3h9
6Vty/C3HyQlHlFZWiaef+5vcXp147h8viPkLHxazzpotvr73PkprolhIIimO
PuaHOo8r/K9//4diKmAj3/3BMeLfr7+hlj+x+Glxy623KW3Kl3fZ1eMmPkO5
+pfXqjbIDQtucvrsOWpsXjJsmLj2t78Vt959t9JSQEOB6Z+fekqN1zFOJz0F
6sxgnI62GOeDo/z05z8Xjy1erOJKrrvhBnHMCScorYRmL/IzvrHffrr2jlkb
pid5ick8oPHAvoFRkC5m59131/sTVwcH75euXq2OC+uAmey5zz46dy3lNInm
wkVsjeJG8jMQx0S5SM4691w1D+cM20XbJW++qbZ/4mmnqW0rdpJIiOKhQ9Xr
7x13nHjp1VfFug8+UPtDrKY3eIkX/xXPSDaVlxg5SwrzEpOTMMVJwFBIU7Lx
eVxD62iekpOrhPU8K4FZXmKtbyzCS/z/ny533LnymvxM+ul5Vhu4/aq+sh7h
JfHrgn/QtNRBLtfMzGEp958MmiGXtSeL+BtlTtprx9NTDFaC9SeDoUifaHmJ
tZ42y0u6yYLnSWH9LWO/Y94Y8WgaS/rNgzGltUFlPMaiy81nJIPiWlDH4xRx
M8erns9nKVbiuKj3t4Ejj0kcH+nsR22GvCSOkcTFHoB7rGmoF/uO3l/xkvLq
KsU9zHwkcOR0RZ4Seo18rsRLRpWNFWaNkbFVFXLsnhJjKypV3lbkJIGDhSDn
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
rPLQfXnij0ywL+WWW6wKbn8rFr1/IK84eCRLThzFUofU8I5lJYaXGOsMM7yk
PEwbE8vOEH/IyfvK67WxreElXcXSjISYifebouzmXiQnqDOMPvZNcvFODPV0
/LoSxTEC+pSMXK8Z3KSwUyRkEvdpxFVskJjCnD5xi6MtEWe476OX285i6dwr
GfWMO9pKwUu8a52NlSgGEmAjYV7mvMRfP3iJj5c056hdUygvCcvHmk9u11z1
a3LtM9iu0Lo5+Z1faVhDsVhFvvlg25IvNts2xWAluZhJRzOVAC/ROYmPlTCK
zWzDjSeU0yoX6ZjKzrMmZniJsVJZ8LvOeUr+EWyUf15mPFxMC+EliL8BLwE3
GckrJ1XzVEMdTx0ynCVPjMb4GoxZ4jH+VT/B35PbTDxAtpPrJ6FuDvQlhpcY
6+pmeEl5mD72BSdxNSa30TrDS7qYpT9PLycIPevl5DtychNz6keDi93AnXw1
OhOJ8jDdR8B9zCT/U/PYHOe+nCn4DXQvpSfxWIn1KNPihwLtO52VuOffubzE
N15xxyxBVlKodxAv0RlH9jo3relIwj0XL4EvaV6WVWvSHGANrfESff3y5SuV
Z2vTGi9pbf9Bp2Ply3PSr4vDQPTavLlq/raVXQS3bc2z8Y2w8w0eJ9d5hh0r
FyfR+cfChQszeInePl+mki93yZeXgJMwt24wT+tKMuJwctxqwu/tXg0uPad0
SZhJEzO8xFgnG9eMXmt9khbpM0PbdnLfpNtYgJfUOPoSleO1yqmP03ggq5xU
x1OH9krE3gYriSWEvV3E+nw4Sxx3gGw7kiUnVPNU/YEsdVhHsxLDS4x1hhle
Uj6mPw9kJ2ix+lycGimdGu9grEiWyTe8mjKuDZKLb5e+2eUm50vvH3jWe7lF
MrTZer+6becWjPfZRn7zPpJrNzOlgRHz5LKemo5E+M6lRP2RTuUlQVZiFYGV
dBAvWbJyuf3J4oX2/CVyLLd8qb2g+dMMvUgYP1HLmh3X+ciny5aq6RKwkmVL
Q9kD5pvBSZqXOToTbR4O9pCNcRCbWLNmnb1ixaqs7GL16rU+XoJ5OgYdH8uW
LFmq9rNq1ZqczIPmsR21x3LME5sh18/T40LyOPr+0++t7VoPnScQZ4AvWLBA
TcEP9OWrV69WWgziBmH8QucVdAy8XrFihXJ9m0I4CY5LXGHdunXqXLBfLA/y
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
YnhJLmvL2Ns/9g+NvzamWdg1SveXvscEBy/ZIB31hJE7/2qG+jjgJVzovCSd
N7bMeAmxEuIlB7HKI3azKh5hlqoDJO85rKVfIjZ/EE+eIvtGjQfw1IRhPHlQ
DVe1cxpdVjJO30c2zuBfBi1vssHwEmPG/GZ4SRcy/7gZtectl4tEBYvaTFgv
apwkOK6GNjEZ2I/3bC7m88JYwDL7QDH5zP4pczgJOerg/EJ6irbxppleeCwO
rAvzEvf531Anenq8hAthcZ2VlKMmnmpMBDkJHLoY8B4uR1xcXIDfwe69994M
VpLfmC/NS9av/9zeZ5/97FisQn6vhJ1IpNRU90gkZsfjCTUvbxl2v37bKHaB
7VevXqvyt2J/b789xz7ttNPtZLLSluMk3z6w3dix4xUDCcbjUL3iN954y+7V
q486h1Sqh9oG54Up9jFs2Ah7+vSL7fff/zBnrpWijXvd/YBDgDMMHTpUXqt9
7CFDhtjjxo2zp06dqpbhNaaDBg1Sf5/ub5Sh/vjjj6vxOthHNBq1e/furfaN
cXxY/lccG5/xd7/7XbX9SSed5NOkYFpVVZX1eLrH43EbcVzgNKVmFqVkJR2t
LUGNqoXNi+yPF36yZcGSZVs+XrJoE3jJfrVDt8gnbguLVyRa1410MV7iY8rE
S1KzOYvKZ5WoK8KTsXsZ1/LKhT2Pg/0ubXmQkWjcpKhj+W5lufo/QlzABN/M
OHuSObzkQ+k1al7wS7Rr7OWN7UheUpcnL4EWhDQhGOuP4Kn6Kp4aN5gnx+3G
Y0/Kfo8tONsipy29KyLvjmDJ46pYcvQIrjQkDdCWELsI8Jb6/JmGw0t6MOsN
w0uMGUub4SVdx/RnKMXiuNwkwnj0NcatjdTQnQrt+Ysx+veZrltkbv5RNwep
eSZ3gAX6RQ7PEtCQqBo47nS1XDXAYyXB7fP11qyL8xI11fQliMPhaZ1Gul9f
6nFG8LfZrKzEIrZpcZbJS/TxfT6ua0O2224Hj0mAjQRZR9D79OnnxciAl3z6
abPSkGy77fbefqLReOh+sP+TTvq1vXDhYsVIoBdZt+4z5dCSVFQk1XbESmhf
tF9iOj/5yU/tOXPeU7V8MnnJ8naPe4M+ffp0ee4RH3+IxWLePDgEND8swCcw
raioUAwllUrZL730ktKCQPNB7aABIQZCOUegQdF5yYABA1TbxsZGNd7Heqy7
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
IS1Rna1LVrYMSNiLk6LMeUmUtoSFxkpeKTYvAcPYffc9/Dy+e+yxl1NX16AM
8Uyy2alyTH6O8p8Bn1i69EWH8tQgty+xjFtuudXnKMRKiJeAjxA3oTzEV199
ja8ZgV8PloF1ECvZeutt1TFA64L8PYhFe+KJJ6tjojqXXHKpn0MH+8T+KZdx
b/ES2JlnnumzCXzuzNgc+YOhBQHj2GmnnVSemzvvvNO5+eabnSuuuEJpVk47
7TSlHzn55JOdH/3oR+o+ATaCeCloA9wD64mxHHrooapuS0uL0pfsvffezpAh
Q3xdCrY96aST1Lal5hq9yUp6n5e8h3zCbW+ueHv92x98AJPzH8vnqd1mJAd5
vESLVVSAIeTjJdzPmVOmvETey4wE8RJjLDgwN7QYtuXwjCt1iWAlOV2qGCvn
2jxeclWIhch+nfiT6osrfszHUV+j3W8l17fz+3clPuu+UXJcJMxKisf7OJx/
0vO/JdgLcryebeSpLHgJtCXjWEVrswD7sCc28UzLtsK6kiXYGmbxNmYxp4KJ
1TuZqT+NYukJNW7/pwXjfmhLkA8HupQmlXe4wmMCRdKUxLwkLnHpZIl5SZ8p
3NeYwPdmT/lxlTTkpU16NXbxeMlf6b0D9/UkxnrZv5kXwUmKq0Xs56Vd38Vd
eAATfIXHStYrXxzlkxN4LpeeSfUxXkKx46EtaTArs3WJ6mxNqrKlOmEvtowc
L+FlwUt0ZuKNMUKspFApFi8hPxbKVQMW8corrykfHXAHyp+Dz7pehObhj0P6
kttuu12t++yzLxw9LiwZ6T8oHslRRx3TLn4JeAdpWsBmKB8xtYe2UWfzzbdU
OhRM9TgppDXpbV5y4oknKlYCHpG7voW/E6wfPny4YhkjR44MxBfBeoz533zz
TT9+CXgK6Uh+//vfK10Llp9yyimqDaxbunSpvy3lDUa7qEemx5DtTxbmJMWO
V6IbWElneMnbH7yreMk7H37Y9taKz9oYsx2eGDDb96kJx3XN/w8f5u2c6xqT
kt7HNGaisxOPlwgj5fISI4KXlPoZV+oS8S4lyMaNWfJCeZo6vqm3HtduZ09n
t15+eJCW8+jij/OpTu+faB8rOc4U5ctUtN8uvo8ET8/NWGxhE7cPHMtS05o5
dCaZlvGi8j/Gyb7WGJaZthNLzBzCDMQ/aktbYhVLsJV7mun/bWL2gfXcbkEM
V5cB2JOhTZHTSU2KV1QE2EDR+14xL4lLXAqUmJf0meK9V/B0mCYX5nw5Rc6V
vbVaKp6V9qxF/W2Yig9rPMTbPzNyccfikrdofRXE0jX9FUJc4jEqjHvWKOPi
JyznO1U+PKrP8JKMxksqpjQYlS31VlW2NjnA5SVJe7EZwUtYWfCSRCKgx+/k
986FUTR9CRiDcHNlOSeffKrPLmidnp+G2AQtf/LJp32tx29/e7kfqwTrSOuh
swywEtKmID4J9rvzzt9V2hJwDuIlaO/ss89VcVspzizqgJdgesEFF/qsBfFU
iPvo7KQ3eAmYBaYHHXRQgJdgrJ5vjE7LMcYfPXq02k7nJcQ0wErgb0M8APmL
4WMjv36lISEOAr0I9+LGQm+isxJshzqoS+2gXf1zf7GeyoOzYbxkedu7Hyxv
e/uD99e/88FH69/78OO2tz8EL0k5wqiYTRqRDeYGHi9RGpNy4SU6NynES4Lx
mUr/nCtVaf8uqv21EKLZ4yLIcfh/uU3FtXJZm7ucf89rjjSJA6U1ShstrYG7
/tjUtzM36mve2RLiTJGspEi8xOCpRxJptrSRpbMNLDlpf545tFn2ueqZnR3N
0ocM4sabKr+xydYONAyn0jQ+quX2maO5PaGOy74YYsCyzIR6FWcV8/ZEr5+m
eEmOC7R/xxTzkpiXxKUnS8xL+kwJ8Q05+aH77BX/z12tYpl8zAR/x/tM+od9
mco9L86jQb/XhsHKaTxfxoWHn6mcD2HCeNDVkihW0iav+ydy+QRNV5LTy5bD
NS57XlKhmcZLzMqW+kRVtjY1IDs6nZ+XlF5foo0vaAzRyVIsXkL5ccAdUinb
OfPMs31Goes6dP8a0nDQ58GDhyq/GsRlxTrKr6MzDMyjPdKWXHvtdT7v+M1v
fuvHaNXz45xzzn+q+sRL0M7Klf9W9V54YZFfb//9J6hl0KLQObn77Zl4r7q2
BLwE+2lubla5hBGPBMvBKPSxepRhbA9eAsaC+Kx6bhca99M8sRT4/CAGCTQl
4CdYT7wEPjnIgaxzA+Il1Da1RctLzTiKzUt6yv9G51ywQrxEMZMPXF7yzvIP
1r+7/GPFS95d/mkbF0nHEInZHY6TO3MPUI90Le5rqe9j7e5ppmkkUvNdXmKO
8/0NY5+cXOkEM5Hf8b2ya7BaMGOtrLClrPIt+XmVtDXyB3Cd14z3vkv8j8dX
/PjxssFP5fIj5Mqk35+LS+GS+z56TFvi7YYzMzl3sMkWyTH7+NE8NbaGpyc2
8ooD9mCJM1Mm/0L1F022XtZcP4yZS2S9g0fy9H7jWMW0ZsSA5Zl963hmfL3y
w8lAa4IcwpModklTmI3wIvbBYl4Sl7gUKIqXODEvKfOij7lzMb5sLsyV8lkq
n5+8wqs228uDI7TtTmJK98B/po3hDW1cHz9vOyq55y30JbsxYbzFEMeeK/8b
eW3ZE3L5d7z3PUL7juhalz5OTB/kJY3KF6eqpT5ZDV7SCl5SmbIXm2YZ6ksC
sR4NoyvfdTH8cXR/Gfi2IHbJKaf83HnrrXcUpyBGkoufmssVTD4v8LFBfBPK
WXPTTbf4fjcUg5WYC20H1rHttts7FRVVziabfMtZvHip88UXX/rbUEwTxEuh
ZcRb0B7mwWTGjBmn/HbAa6A7yeXFWdGrvARj9Pr6esU9ttlmG3+ZGleHNA60
jHxi4I8jv05nr7326jBnDfgGeAnq/+QnP/G1JMh7w7xYr+AllAsZ+9C3R/2w
b06pGUdPaUuKGqsk/P192Fle8mHbO8tXrH9/+cewtnff/bhN8S7OZhfp3bTr
k1OOGhOYvK+ZlsdLLGucypWsx2uJNSa5UoiZcGNfxUCYWCftJmnXS1sv75Fr
5crt/WoM/TYsE+/IT/8lPx8sG7rE669/6PVF/NLr59iHinaZyIfJ0OYjfac2
fD/JJ4YK9kydCa1Iakodsw7ercK6Jsl5m3q/ZrK1yBm8BTPvbuSZ7L4sM1WO
81uaWaZ1DKtolX2eSfU8MxEaE4+XTKL8wYpZ8IqcFbsPFvOSuMQlWHIaAx7z
kj5SOMUMo/gl6j6f4sL4LVfae3GY+sz5neAlcrq1txnu/8g7vEp+GMvcOibP
8ZK4f6OXjq6FMI5mwkIsmHXS1qr8dIL/WW5XqXGR3HM4mLcuYOES+W6qI8sd
dsffYV/hJW5MsxZlKi9OVbY+5fKSmnRlNsxLWFnykq69a+0uL3Hto0DMEBj0
JeASFCeEcgOHNSaUVwdxTR588GHFOMAu4GMze/ZctT24C7aH/wzpWMAzxo+f
qPxwsD/wGcqLQ3lzoHPBul/+8n80rcgK38cHLAfzl19+hcpvjLb+8pcbAvFr
ezJ+ic5K8BnjdehL5NeiuAm+D6wjLpLPMLaHvgTbbbnllgG+QfoTnaGAb+y8
886q/j777OPrRM455xzFavB7QJtYDjZCPITm9Vio0Kb0N14S1pYUk5Hk4yXv
frA80t7/YHnb+8s/lPZR2/vvKWbS9t67K1xewlR+0uLwErTjaUw43U/CVsL7
W4CX6McUEcdkox7Dh5/RoeshuwUz5WStyoWTy112KWAKJ39rzoczbt7NkHcv
17CQjVwhbb1c39Dbp9WTpcN+UKjeBhadl9DnyNLRsUXWx1RY88wMf72W2xNr
DOsHO2TYQyLFvmLogyNfcIKt+o5I/noUtychTw5im4xhFVPRByI2Uq/0JBVZ
imOS4xk5VuLqSorkhxPzkrjEpX3hvk8k8ZKHPV5Si3tIqQ8vLnkKD+hLiJck
5fR7Li8xbveeAciNg752s7cZvtM5TPnj8E08/YPJN8bY6jz43C20PvC8dK9Z
BRPmDVwk2qStkwZW0ib7h8fRthHP3nbP4lzV0PINtPBzvWAx+BODmLGswX3G
BniJ/v6i5Ea8xKhsabCqWsBK6tIDpA1srUlXZSuS6cWGYQd4CSs1L6EcEsRL
CvzWovtd4nz83/7jH//oFi+BgXlQjpuLLvpvn2vorELPbUMGZkE+MCeddIqf
Bxjc5OCDf6C4CWKVwL8HTOTRR2ereLK0L+TkIf6BmLLEQ4jdIJZsTiuSOwZi
NsjTQ9zlhBNOUpoTPX9xT7IS4iWffPKJGquDk8ivymlsbFR5b0hHosceDRvG
+UcffbTaDn48YUYCnqH71ICD1NXV+fFOaD3lzYGfzquvvqqM/G6I5yAOCrWN
+CU6T+nrVmxtSUeMBPZ+Hk5Cpup4vGT5+zDwkg/bDMNqE8yc1el7cEdFjbc8
jYmfX7iTzKQXcuqYVmomeAmzrH15IpliiVSKtCeIZaJisHDhP/fKQldZqhLs
Q4Sf9XVy6Sqv771Ozn/OPI2w1sczQs15n8Xl0r6SC2r0fkWfLlqfydPN5Pqm
kc/LDSqiA/OvZfiaRv2eA9demzeZMc9k7Jk6njmpOmUtGcasNdzVCa3NGOYb
w4V9+mhu7zeOZ6Y18wpoSqZ2nkO475R6RFvSCV5SzhbzkrgUvXD//Tfxkrne
PXtUqQ8tLh0U7jMT39eDK42J+Yqcoo89TE4v4C4vafKfP4y9xdwcdj4noedD
ic+odwuP6L9FLAs8B90F32PceEblGOJWG2fWWjl9EzmKqF8TfuaGSw+fVqcK
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
a+HPYQuvc58Vbp8gzEt0FpFibNGmzFjW6PESxSbKiJc0y2NpFJXZeqUtqW4l
XkKspCFdBrxEH0d4+nM1PojKB5H/Z9njvGRDWUlHeYcLtVtINxJuN2o/HW/b
8TXoDCeJjHHh6Ury5QvuDhvIpwUpxD0KLS9kpeYgpWAlhXhJPlbSkQVZSY6X
yKnPTN57b3mbEGbP6UvosQXuUA68xN3nReAlHLzEP47QvdeLdcJERF7hjblw
9mN5BVT+YDm91l3m5oJhweuEOGuV0vaTz4UmaWPkvJzyBjm/h7ceGpRUf2JR
ppmYW8mMRcgfo7QZvEJjCTn9RUNufBx45xQ9fq7I9Ze08bTXP/LbyvVDlMYk
6/KTTAvpTepk+83Mbt1NpH422BZvQx9kunHt1qQT7MMdreSf0VYdz0wewhOL
B5qJhfWqb2hPasjDQxQzKRddCVnMS+ISlwIl5iV9ruR5NsqO1cmMec9jxr6R
82e443/jyN49wBKXXB9CzxFDfRHKDzVSXqOF0lZ72lj4Mn0i+yM/ZqF8drLz
90glSyzAM8/TZvh+p8FndoX2XO99awrxkbDZjC3ahJvLmnhlttnjJeibqPy9
Wv+jVKwE1mRUttYnqtqxkkZlg0rLS8ywab44POevX268pP/Yho+nozgJMRKd
lfQEL4mtZ1mJ/t12l5VE5R3O/WZWRPMSbvQsL8mXK6dseElEPZ+XhDjyxly4
aGCICyrYJ/JSbMl1zW+YfeS4iRn6nGLBGCf++5++XizLmlvJeY6XMN9PReWP
Kc6Y2lZ9jmYtZpvf7+H0HiznozOa2cj7O3kkS++/jTCvSSfYWubpgypkv1F+
fml3njp+DLOzUbyE+lNlox/pyGJeEpe4FCgxL+kvRT42R7AcL8E9/U65rE29
k9hYSq4PQZzEzyGUqyR+wXPXCe8IEO/lUVllK+bGyA28F0uI5Kwqll6oc5Io
XlJKVqKzh3wmn++LhoV4iXqHA17CK0rOSxS/MStbG5LVrQ3pARonKQNeEsFK
uBa3pCt91piX9B4vKaQl0RlJIVYSM5O+wUp0XtJdRhJmJe5+ep+X0P0iUmNS
rrwE5uYKa58nZyMv8hJ8R9q39OeFfH5cLK/XBd76oP+w9u5GewfUL32cArzE
77cUlZdQu1l3anu8xFb9njEqZgnphtVYe1INsyfszdI/qkxYy5jB1jHO2ioE
b0vJvuPOZuJvTSzd0iytzouvovMSb/xeHnlvOmsxL4lLXAqUmJf0m+JqJ77W
eMm/5Rjs01IfVm8WnmMlKIYf48Vdt7f8vT+ncZI2xFKTqy9kbvwXPd+2rxew
jNT8KpZ+pYlVZvOxktIzk455SRVji4YYOV7SXG68RMjra1W11nu8pDGCl9SV
jb4kQlvShd9ozEt6npd0lpF0xEliXlK+rKQ72pJ2bGRFR/spIS/xNCY84JNT
jrxEy5kT0pj0p7F9d4r+PkZ9FuIm+Rz5gLmxXgO8JFz6GyPRSyd4yQb3Tdr3
h+yAtgRsBBwFy0azzHhoSkYze+JuIn0tS7AvmcVlX5q1wQcnw9lHNSI9fTRL
TRjF0uNlvfF1yu8GvMSOeUmJLOYlcen5EvOS/lTko/R+5vEAOV0vx2APlPqY
eqsE+iDuexl6F5OUnRLElV/n+d+AJTmyykJZZYS3MXQlpvb+JsBLKll6QS73
WzQrKXdeUo28wqa5rLFMeUmzqGxtSFS1NqQGTG1Mh1mJG7+kLlUG8V41XsJz
cV5jXlImvKSzepLOMJKYl/QNVlJIWxKO5fpeFxhJOfASume4GpNy15do92Ec
q8hpTPrrOL8rJYQ/Et7CQ3Dv93yB9T5MYL4/sxKUnuQlwf6R7cdr8/s7wm6V
Y+wJI7g9fiS3929mmeO2TNovG5bpSGuzGVuXZGztVqbxYA23Dx3J0hNUzkLF
S9Lj6319ScxLSmUxL4lLz5eYl/SbohiBOJ8jx4uXs05+PqU/P2MDhc4zoCkR
e8jL8pT8nZPuZq387Mjl02kbYitc8wvmuba4KZIPVzN7EeKTdJTnJuYl3eAl
RlVeXxz1uWx4yYZrS+gnF/OSnuElGxqfJOYlfY+VdIaXFGIlsHB7Kz5ob2XD
S/Q4JiXmJSLMS/zj0e7DlDfM05hsNP2QiNJOH6JrRlAE/1zlCdaYSEFtST+8
lj3NS0Lm93Waud3ahM+yD1LH7Owelv3HSsNcmRLm+kQquaqCW98wU3y9u5W6
bBRLT2wQ9uSxPDO1ntuTalxWMrnO9emJeUkJLeYlcen5EvOS/lRkv2Sa7J5A
W6KMKx+UjaQE+xYG48bFcrJO/sbJ/was5HW5ulGrH4xxovsHe3USIvkQ4pfU
s4pJ5cpKwvwhygYytmigaS6T/YKWsuIl8hgQu6TZhLYk2henJLwkj96dd0Nb
Qj+7mJdsGC/Rx8cFfTM6wUpoPK+P62NW0ndYST5eUsgfJ5+uJIqThJlJ6XmJ
fEbpPjl9gZeQxmQj5yWh2CO5dzK5+/8Nsp/yjZz/TpQ/Tn+MVxIuxeEl7ftE
ecbWPiupY/aEOpaeOprZx38rnXqOWWI1E2KV/E6+kPPrB6eTc0Yw+5Aaw95v
jLCnjcF4nKv4sJMbhcqBM7k+jl9Scot5SVx6vsS8pN8UxQjEcG4Iyo37pbQK
d3kfeM525hi1dy/5q4gxXFgvuDoSY738ja9Xvjhc/Eq7HqQlaZ/zMNhVEV68
14L6knJgJa7ZeZlJiJdky5GXIC9O+zivuXzCPc5LzNC8GV624XFetZ9wv+Ul
UbmDowy5iHXrqD3XciykEC/pKEZJZ8b3+ep2JXdvR3XyrS8Wr+mI/WxoHuJC
OYz1/dB1D39feq7nsO9UuE5UbuioGL5hXhJmJp2JU1KIlZSal9B9Q3EH3Ht6
wyenq7wknFu4O7wkig1ELPOf211tq7dLrt8iQv0LemfTyrjlyHH6wVw7Xn2+
LM6jB0v3eYnXJyKWofUx9P6RG8vVntQoMlObZD2wku8mUlfIPuJqZhqfsaTh
MJM5CdNasZuZ/k0Ny2RrRWZCvfDy6qicgjb2Q2Nz+POo3MVhXpI7rtLzhJiX
xCUu3S0xL+lXBQ/YHC+5kxb1qedsZ/s/ofOSs8O4MC8XPLFG2jrOLMezZbJL
UlcohlphXpJ4FPqScO7gaFZSymeGXcAyUwrxkgaus5+eOLboa0SspNGozCpW
4vniBPMI90L8knyxEyN4ie6LsyH/V6XmJWE+8cknn/lMAus+/fRzeQwfqnli
H/kYCLUV5Bor8u6L1n388afKOuIm77//gfP662+qdRiPR42/o7QlUeP2MCug
8X2YlZAVYgVR6958802/LdR5++2329Wn/ei8IUrvQsfw2WefqXPrrr4jigHR
/t944w1/GY4Z+8M1LMR38l2HsKYk/F199NFHvoGBvPbaa6pu+PvE+k8++cSv
G+BhHeS0KZjvpgvxStr/vsqDl/SaxqQzvCR8XwzXD8cw6eAE2/mbtL9Xts8P
E3p2R1o5lKi+RmA9g0/OP/S6ZXkePVTkM70bvKRC9iVUf2JKo6hox0uImWA6
hmWmNjG7tVb2i4aL9MmbCGsRM5hjIJYrY+vldO2WhvHAKJY+QvadJo5nFQeM
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
S6U9K23JQEsut4Rcx18cZLAXB0sbInxbBpPLlsl1S2EDTM0saQnPLLG0OhFl
ZsCqAmYtrTSTi4bxhNyHtUwe39Jqiy3e0gTnYV8l5LHEvGTDjXhJo5BWMDfO
oILMxOclRnJ+e85RfF7C+xgvofghhx12uM9LEN8DjEHXnqCenisH+XipPrQc
VJ9in44bt5/iEGAvtD3pSog5RGlKiGVgP2gbzAXtEw/RNSXERnSj49N5CXx5
dF2IzkvQ7nbb7aA4EHL5YDnFJcF28CsiHyXkJMbx6zoXyqWDduGbhPgqFIv2
vPPO8+Olgj/ccccdaswvv1Jn0KBBKrYrmALWQTcCnkIxYFEPcV3hu0O8hfIB
w58GdYiXUA4a5o0TwSSwDf0msN2uu+6q1qFdsArktMF67BdGnAM8guKsLFy4
0Nlkk03UdltssYUfjwT7pHzCpHmBgb3AX4d5epT58+cr5qHzDPAY2hfqg21E
/T7Jl4eYCR37Kaec0i7njs6MsBwxZGNe0nFxR9x5Yr52hYt0h5d0eH/VNSZB
XkL9Yl+rysXhsk+BOHXQHD+pv//K8YVIv2BYHRMqfsmDgXVlWrTzMT3zY6hx
5A3EO0IuTtTr07xppp60eWpZaThJzvCcl2PrCfUc41R7cp1nI1l6/2aemTaG
V0yrMTM/3cFIPsgMtopZfL1p8DXyTL6WthbPv0rTekb2QQ6qY5kJ6Js0sgr0
TUhD4vclvGkuLlpZ8IiYl5TSYl7SvwrX8uUSL9GYCY3vcz45wpjChHkeRx7W
HitlwEtyy+V5G3MZ+eVwvr22bnPmshTwksdy9TXdjWE+IG0tNxOPaNe6l+PB
9PGij+GiPqtlSk8yXc6tkLZe2lfK3Pc5H8q650kbmGD8oe1Y4qValmmVz4xs
nfuuAO8eJtepsbl6bzC1iVVOxXzYGjXDdmS4B0ZbhWb56kQbngk13J5Uy9Py
GNNTmllqUi1LThjFEi2DBHtxkMni+CXdMJ+XGJXZRisfLxkUYb3NS/L354v4
L9ZjvAQMY968x3z2gXglX331jZ8zR/fZodiv0IiAFSCmKbapqhqgtBjEQVAP
uX/BGKBFoW3ht0NthWOVhFkJDNtD04I8NWAY4biu+Qx1wEvAOaCLobZ1XkLz
2P/RRx/ra0yWLFkWyIOjx3RBW5dccqniKDgH2hfFZDnkkEP964jcPxjrgzGA
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
kNHzIWM77Bt+QHQdKEfPggULFdMhztMRL8FxoA26PnpuIJwDmAMYCfxi9JzG
YUaiG/0OUQ/xXhcvXqx8gVauXOnn67nnnnv8+CedNfgH4bcOgz8ONCfQwMAH
5+9//7tz7733yms8U+X8wT6//PLLmJd0onA37l20viTMS7qaV7iHeIl33Jz6
ajzXF0l6/T3qF7r9DSF+zhBnWYhTC12IDt8T9bUi+JXuu0H1jsrnQaaZmmcL
e1F3eInq13DEGFN9tRZaDk4CzQjy3sgx88Qabu9fzzOTGuEz4/bfZF+i8vht
WeJm2V/8PGWxVcJia5g0aOlNxtYMYXzunkb6+JE8vX+923aW2kc/q8mbH2IZ
S4cwsQTrcRxgN7ruN1oDU079sZiXlNJiXtL/irzdz/b4xFp5q9uce7nDmB/7
VWyHd1eeLXK3CWgGwtbNZ0F58BJNn+DmCGJsLMvFyEDelc/l8oGB8b0wrpPL
18uPV3lNDJfW5vESn7/wDb42fagEeYnJghoTEbhu4d+N+7lSPu8Oli29xXLa
Juh71nic5FlpRyl2135/htbX0fQlxqxqk+M57sUB6+iZUXQG0pV77eTcu5Qg
LxnIY17SXVP7EpXZBqsq25AqY16Cfrzh5rrsy7yE8goTz+gsM0FdGtcjFgpY
AvnxoC3SRtAYnXQU+RiJbsQKsI0eryQ87tdZSJSF6+j70PkA+IGe7wYsQdeY
UDwTPbYJsQw9DgtdPz0OSlQ+nbDWJXxuxKQwxWe6BsSpiMeEcxPhO6Dj68h0
pkPLsC24lM5AdD8cYiXhXL66NgRchGK5oj6Wgb3AX6crv1U9HizpTSjW66ef
furnz6H6mMdyWMxLOi5uj6eAxoRiPkWxkp7mJf5+NCatxYji+QvlA6a+jGzD
fEbpTDj/Vt57dH/jJZzvjWeEvASnux/d87HM5Dybpxd2U1+iWEmDYiRp2c+B
tjY90TWXmTSz9DRZ58Cxsu/QLJ/ntVblSUMt62HZIVxtyvGMHJOukt9OGxNs
LTPZym0MY8YonvpJvWxLtpeVlmMx3AYPkfu0s3KaHc3T+xMvaYDeBMei4qDY
BfQl5WYxLymlxbyknxX3lj9W3vDXyhvdGjm9mufGtu793LCuY4qV8K+ljWKu
tiTBgjmGBc/pTbr5HCgrXoJxd1I7n+eYO2ZfL5dN18f86lkhjH3l9fqleg/h
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
4+RGLbwkne8Omm1d1I9ItxeNxgoJ2khtPwdi3+DN2FZub8a/oRiuYooRY5Nx
SsQNXuyS4Kdt7dbTfZRamE3kkPVtWvsVkTEfi0yBu9dg+7vTj3eeeH06TV1r
eEm/eUk2jpd0y0rml5f0s7DIc9MrXjJTVhKXDyZ5PpE2Jc88FiMvieMmSTOR
TsLro/OSOt4bdXym6suXr6ynnpfE+uSkgJeQZs9LlC+xjDsvEQIXZ3KQ/aFT
9H6L6j8z7d1jm3c96fofqhLfv3oGXjt6R/YWbLSuyQHsGpVcJLehhGP2Era7
JVYg25LNhzjuOQcI+4aM4FM5YFOcwSRuQ4zkz5CB+hCIvzwZrMtfCNl/WgVe
vNbVXgxW2v5E8t1ZA4WN/e5/Tc9Lku5fTd/PMbwkORlesoiKNr7XZn2PNXnJ
K4P5AKOMbAS4jG8S5HBt1pt8rc84rpj7gaWHl1DBk3sy/hmAJlfQ8uLKuOC3
qhUjTCGIn4Fjjwz4+YdT0w4227ooywl4iV5C9wtjS3C1V+L5/zf5rfp9ArK1
IZ+suq/H8H/5Udzg6f5mLG6/2jUL4re2e8cS2aY1Jlt4nfC1ZpKXbBnEdgPr
som0vxswvKT/8UuIlUhekksnL2GLmJcYuxLDS9LKTBaCiJf4cV7rUV7CuZVO
XiLb4DTxkrj5fk6ybq5fuM+k91uCdz3YN/o1imK/ZvR+C9avWaa9owr1ZWLr
47b9p0SLf0xerH1h/YJi52CH99ociO1rIL+pzKQtyPjhzH3zQWBdXgR4OEPx
SOg9GkBdgGQlj+MgY2qEWVsPsfIfKUF+M/nvjKm22o/DivPXkl1JxVvW1/F+
e17S7Jsl37+aToaXJCnDSxZZYfq7eb4Gv1JsJWxveYh74EorpP0IY1tA5SPx
tvfbB36qH7vz3+d+UOnhJVqbICDMQqhw7byXB3zE3zDMS4Jps51JuoSPsb2f
S/OcyC/nBNSXsf1/yAJRRzXwpJ7AjR6nmFx07+Bml+DGJ9NNITfDKYr6Bk7o
3FnzXUzMu5r468Na+ict62mXmP5flvY/s4C7Nwwwa9uojDXmprq+Nbyk//Yl
vm1JenkJX/y8JM6uJHkmkWYlzzz6wUvaMZOkuURateB4CRXm25ikgZfo6wT1
tmbX1+31i+uTaH0Y/HgMnvAUB36uv7puT0L9H0frG1LfWuUG7BSbLT1Sx+pN
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
nx/tWEK8Rmc2VLiA7xMvobz3ipeoOORJP8vTyRtXRu1LDC+Zx7p2n+UlVcNL
EuMlwbiKi9MpjlQ0n3A0r3D0Pbj+Xfm/fOxj5wa2JWRroew5fH+CwB5E+ajQ
d+INxx57fGBjQlxC5cdRsVpf//o3NpT/DW2r4osoXnLzzbcGXIQYB7EPWkbs
RPnIUMxZFSuWlkdz+pDUZ/rt66//QeB/85znPC/kv6OvrzMW0qc+9W/BuRxz
zHGGlxhNq04xTrzv8l6r69xEyyfMtbojpLh3O/NWesFL9PrStt/HBDzqZuHG
UmZ4opxdMlFySdJehHxuNmM9vbmcG95U9viJZ3OSG55Ynhn8+8Myg+8/MJP/
QtHJXp7PZHcXsu7jBSfbcG1rr8ugwchmhDgJfhZeHNYpnFI+nobt4LIcPFaw
4M79sK/3jIxz3hE8+5aV4NaWs9zxo8zdKKc4vvPG3DJ+LMU+OXEl5I5TcVCo
HV8F7gkDAn5etPg2auen5yTJswjDSwwvmY//g+Elpiz6ott4RPv78jO8EHW9
xyvEr3BW2d/wdN8f54M4r+DbcOi2IyP4bRT1Cvx6BuoC1FbwfGWmOGBfGsVC
/uOarUjYp+YB1BX+fk7GH3kuymMjOI3yD+0YdH7Twk3UetyC6+N4SdLPcTeS
7/mZ/Gx4STJ1reElhpfMKy8JvYPm1umA465LL720TeyE+Pyn+rrEBGgs97Sn
HRjEP6VcvIoHkP2FP9YLOIMuYhNkj0LMY3h4ibTL+MMf/hTU66effmbIh0Z9
VoyC9r1mzTGBXYvKfXPZZd8K+M0hh7ywcdhhRzRWrFglx5qUl7hcrsrvKkfx
3/3dKxuK1fzzP38o+H3yG9LjzKpzUd/VOdHnP//5L3KfKqbKeed9tuV8DS8x
ilN7Gy6Pl/jPj+Qm6h5jTZ9lZY+rFO6PzTc36SUvoXrScU7Ds2oMu3zrqszw
plJ2v4myu3RTObffplJmaMNYdvjlq3JD736BO/DpA7P5i/fLZm8sFnK/zQ0U
HwfLehxs6zHUJDgZVHYK7GwDbLvh5RyAQHjFyJbkgQzAz5YAnH8wsz4+6hT+
vuz37cZknyJXw8+U27c2Cu7aVdh2lbw2jNqfcdVGe22dXH/C7xtSDp61I461
dcC2tpdZN3Ylxr6kvzK8JB0yvMSUfaC08pL4NprxV2O//GFsyh9HXYh9yQ+D
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
PbdhXjLCrXnlJXHxXg0vieMloie8ZCb2KHHxUabLYdzNuLL9uu15SZR3zIxz
9EpJj8eN0q1peUngjxMTvySRHDk94yWKmWTtczKu9dgzwd5ezS75m5I9Uhtz
9jt5NDtSq7gjm1ChOrtMTMRT8Lnkq6x4SXaoVrYHaqtZoU/9hEKkTfL6g0vI
3pLz3SWt/5p0mz2TdlXxkhxYM+Ql6WMNhpekRYaXmGJKS4nwkiLALoofXvXz
sGkal/UVy0lRbKzoe+uw32e/n4V4mxSK6zVE9iXAJC8pNW0r1xteMv/nYHhJ
8oo+o4PMMrwkRbyE9ZiXzFZRZtIpl3H73CHtWYqeX6STbUnySno8bpRuTc9L
IBK3hOm2JQmUnvISJ5MFR/yLsGDPAZzfVs0tOfn43P6nVN2RCeIkZd9+hOrp
sutJty2J1uVRXiLtS/rFS5jeJgW8ZKfiJV4bmXybPZN2dXa8JK28wfCSdMjw
ElNMaSkRXjIAsJvy1le955r8PSd81dL8rOtjvDa8JGRfkv5n3vCSJO8jw0v6
w0vKhpe01L1MZyYJ8pJ27CSOo+jsZKZ2KIaXGC1sdcVLormEk8kj3KxqesdL
JDNhZzAH9u5niW3l7PDGNdkRiklSK+eHN2P9vInUrN91tdibkJ9OTW7bd14S
bZMML0kfbzC8JB0yvMQUU6KFBX12fgbeS41BxnaXWW4d2Y94cbI8XjKWEl7S
zrZEX2Z4STpkeEk6ZHiJ4SW95iiduMl09ieGlxgtbHXkJdyP69qaDychVuJX
Nb3jJW6hyB3rXzJZ0SjmM1uXu0PrV5KyQ+soZonOSwI7k6YmomrhJbExR3or
w0vSyhsML0mHDC8xxZRoCTrrXJxhCY+XLAf3+FHvuZA2Jr7G/Zjifo7eZOKH
T+OPY3hJimR4STqURl6ykOK9MsNL2vKS6dSepxheYrRQ1RUv4WlhJX5V01t/
nKx1lshajXwus53y21RzI5tXebxkc5SXlGIYSRwvKWWHaiW7OG7sS2bWrhpe
kqbjN7wkaRleYkq/ShwvKXmxXXVWUmval0yXmz5xXrLe8JJ0yPCSdChNvKTi
GF6iKt6Z8JK4vMJJ+OO0889RUvParTMdM1HMIi5X8UxkWMnilp6PSeVkmo1m
Er+4KY+T+KxETnVekjZW4lc3PeMlDCXczNkZNzs5UChuH3WXbKB6uZQd3rDG
JfuSkU3tbElaWEnOZyWGl8y6XTW8JE3Hb3hJ0jK8xJR+lThegs+0jPda9TlJ
NeVjXO05Ic5jeElKZHhJOmR4yeLgJRrLqJP6yErqvkIcpBdqtT+5T4rGnXO1
L5k7M+ndeD46Bp/LmN6oP7ykXZyd6farOImuZctW1BkTUyyFrIRKb+OXYP2a
sc62nWy9kCvuWuMuffFYfsnJxEl8tcQomd6+ZMiLBR6JX2L8caZvVw0vSdPx
G16StAwvMaVfRY9foniJf9+NK6V9jBt5VgwvSYkML0mH0sBLqqzJSyrZ9PMS
YDw87ulxpduel1hnARP1yy67jHiI4iKBfve739U1ntFOM7IjiWMl/u8EtiC9
4iW6dB6Ev1FXcU/mOo7uZnw8k9w+0bF53Hha/xzdV69sIfYFRa9P3P9GXce7
775bqt21jft/4fp1En6u4z7lPYfryu8ktZx011131e+8805aR65Ly2nde+/9
Hc67bwqnUw888FAdNVWujNWhyUtSxUqo9JaXoDLW2ZblNArZ/K4xd+lJldyS
TVJ5Oe2Cl4w05Y5MBLzEKhpeMqNzMLwkXcdveEnSMrzElH6VoJ+uxXv177u+
t1l9elYML0mJDC9Jh9LFSwYML/Er3ggv4cq+RPGS++67b0qzJcFx2QNS0zET
HN9NzlFTyn5F8QwcL07ieHEvCceMk3QMcfK5R8s8/bvOSvB85FSxGX1s3A3f
6CaPcbe8ZCacZDp+Et0Pjetx/C3Vb24ym+NOkzqxEl2K5XXLoxQHuf322+t3
3HGHZCGKgUR5iZpP8tnJFM6bwu9TxEruuedefAZ+P/nb3/1+6uFH/ji1fMWq
uu1kp0LPdopKv3hJMePzknzASzYqXtK0MxmZiCq0TOYSHp4gXlIRhpfM7BwM
L0nX8RtekrQMLzGlX6UdL2k+4/2NR9KHZ8XwkpTI8JJ0KFW8xC7WytlBw0vU
Pn1WwrwYkWRf8kFgYvKb3/xm/f777w8YCH1W77l1G5A4zdTGI2pvovv+KF5C
vjNqDNuJiahlcVKcR+2TWMmDDz4Yy0zaxYntVu2YSLfrz5VZxO3P2JjMjvN0
c2317TvsX3IQYh8+/6jr8rmJ5CK4XHJB3P+Umof37xTxxN/97vdT99//4NR9
v39gingJqn7EkcvqWG80el5P9Kj0i5cM+rykmluyqZpfsjnKSqZTlZiJz0vK
zlCtwou11azY9xw5hpeklTcYXpIOGV5iiinRYnhJOmV4SXL3j+ElPb7XmMZL
rAXAS8Q8+eOoCtjjJY78PW59UFhO/etf/zqNzaYefPBByUoUT3jkkUf6Er9E
4yJTOEbcS1JMQ/EM5R8UZ0/SjTSeo+xlFC9RtjPytxS36TYHT6fcPPp4uhMz
6SUvifuNTv45RmGbEhUvhz7ry6PcK/r/pvXuvPPOTvZDgS3J3XffPaWmpLvu
umuS5M+f8n111D0+5YvsqiYffPBhYiTStuT+Bx6aevhPf55atmq0jnVIankJ
9JqXOD4vcWbPS6redKLionxeUuXESgo1Y1/S7TkYXpKu4ze8JGkZXmJKv4rh
JemU4SXJ3T+Gl/SPl1RF2nmJz0zmJ36J/A2yLfF5CfnjvIPiIHz5y18O7ERo
bPjQQw8FY+6Z2ozMROodOu5nUtl+6Bxjutiv7dhFNGaJtl86z724zl49L89s
8vlEc/vMhJfEcZO5spJoTqBe2K3sK9K5ibqv9P9T3LIoJ2vHS3RuQnYmd955
pxR9Jl6Cy0iKU9K6xE/IR00+F/f+9r499/zmt3u379g19e3vfq/+kXM/UT/g
qU+bsvP5J3paT/SwBPYlVL/1kJcM2U1eMpabGy+pOEMTY8zwkpmdg+El6Tp+
w0uSluElpvSrGF6SThlektz9Y3hJ/3lJiXLkGF5CPjjC5yVc88dpnHLKKfW3
v/3t9be+9a2N008/vfHVr361cdFFFzW+8Y1vNC655JKOuvTSS2cttQ/Kz6N0
1VVXNbZv3y7fxdN7doplgmNI8legeCZPdCO1vs9ipsi+RPn9+LYEcr+0/6jN
y2yl+I4f07OjT0enHCkztZOIjucVuzH+ONOLro2K9UJT9b+Kci26vhrja7FF
acfDfuPHI6Gpb/c0dccdd0zdeOONU5dffvkU2XVdcMEF9a997Wv1c845h56/
+mmnnVZ/9atfXT/22GPrRx99dP2oZSv2MG7VubDr3MlM2W6uAbY9ifXGPX3J
pdWLQgcmem9fMtJDXlJ2BhUvMfFLuj4Hw0vSdfyGlyQtw0tM6VcxvCSdMrwk
ufvH8JLe3mvUdyBeUmGF8VTzEt0np/+8hGu8ROUuJn+cd+ExNDLZXB3n1Tnn
DSX8Pq/Cy0Cqk+g7HrnUXPapnQvlEtmL+54sFouNZz7zmY0jjjiiUalU6qtW
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
h+a9Leu4fvASEc+EkcpfknAS7Wa8ZLuajwP9iZftsPKW7Bpw3hKzLZpUXrIj
2W5c8+zDNf8W3mnEoFuxy/Jav/5M2X7uGHH8TdL4EsUX1LyV/6KvUWXrHzTG
So/KPPvtzIwvSa4d7pLlMDOw98z65XM9OemXpdc7s/k4fPal8nukcWDDt+6f
quMex6WXKF+8w2Imu1Su4IRFSV5ytyfYF5vFjrjUJT8RDf06bo7zOcYIYn9l
FnwZ+Bg0k7HyKRiPXwWPb3JymGlTQZnzYZaJ2W/hOV7yDbvec+TbHsYctqbe
4fB2xUQ3cWM+Ds9yFJnjwPHgJd7XyuAlZnu8K2t3L9ml6qZ2rl3sZrM6/83F
xnyctp7bq3vLA5KblyLjG1VenDR/yU5WNeKucP/5Jh58X0U7jQPCnDN81uE5
6XQ+Dp9/2Qv4/MuN3LSl8ZLtwfwlO6KFl2+vbH75NuhPn1/dcrF2cs0S16BM
jNczcfvmSvXrfuB9Xs7V75mXmGOKKH0tacyfKNeEMHhJYz3uy/Ytr18Efw58
Clxn3PsOE/7bjLbPy7Wr4yauOInwvDRHLpaVbsv68xZaBivhDXNwDJfNCqbZ
AcutFdzASoiXDErC8xNeovOTtMuGu5yP44l93BPxvB99A3nJtpmzLjlf19OF
+UsUK5Fr42x6WcpLSuhjZdfOxpuXYE4Ji5fcBe33xdtzbGJ4NrmFKs+XGtcs
03VLmtnkJcZ2fe1zJHhIK29z8pK5i7N9ir5/78xE9/N692x+Pg7yEt7P1+/c
eB0Xr+eid8rjf/al29jsRdtUnIkqA/OYRF6Cx+FF85x91RPsU7rKLBiCF4/J
m4zbzX3beb4da8mS/sx/h4r8U0l+E4Hc5CT4SmblqSqhdSlNrnJtiAsa0udg
5nsavCSZD2fWgc5zu8e8RL1b5yfRcxe3QZuB+UuQl2zmCS+R9TXP51Ie5Jiw
HzZ5yRbufT1hQcPhJare/WndHqtjILtGwBNvVwwB52lq623b1effpvi0EV9y
SfL8mZfZzx0Zy3gSPI6wHk7OA0d8Se677uBzyvMOzw3NO1W+mZ2ybZm/2GmW
5S/ZyeYv3s3mX47bXyDjiOYv7t9a0vmc9eZ6SDvl2knJZ94uecn8y7b7my7Z
ES68Yltls8xP4vKOypZXondVznrltspZL5+N5v6Zzc/9DfTfQx5GFZXDBBx0
mbtE50OMIp0DQK85LO/jtibtp44X4WqMaFS354P/CfxoMkfHuxfq251Mz21V
FfIw6v2eZLZPXMeU6Fy5SWzJIHmJLlvGeENMCSdeUjonkeasKSvJ9SNJ3SmL
LzHiTBS3zOVgcjCSTucmunKf4HuE3j447+tbefSNnVAXg9VawsU5X3HOTsZL
5iUv2TkAXpJeH29i3bfFPuI48xLdV8P+yozwvqZ4iRXLMVxWkpXtrCMWJGUf
FxVZ8xIc42pDPyu5lX9XL4I+2ega82nAreYl56vvgN99m/78fbbKxarmy2R9
wcJ+YFMnuUJ0v9/IX4K/bRev13/vBGPfcZuco2MaOR2OPWZl31yORdTYcJ7L
9YTvGEL9bOZXK3qcq/5MlPSp0phZnGu8HW6+ruboYF48XFdn18A/9yiqkTFl
1xqtfQbpXL8l6Y7uhcY31nmQ7ZzLaQxHdl6OhnlmNa69aBNn/7wZrHMBIRdF
7xx2foYe2ntsC3O8ROVhHfh7p7eyfGX7BH9fcoE39wsvChd+7cXVLW/cKWYu
3ylm23bKSzp4TrmeA88rz0jv8mYuT+NLCvfd5PD8cM3n0Fc0c8pLWuzXq6Hd
vlxbbbtyl7K175U7/Pk92yoL+8+bWTjwkrmtH3vRpq0fuxB8wcLWj71g89aP
7d4sb6/dvWXrtdsXzrp221lnXbc5Yqd5hW2w6tZLWTD3VuZHb+Vh9Fbo0+/P
HBW4Aq4m9mdyhpHHPo+zPVA77xWBf0BE4TUiit4mwugAD8LL4Llv4wzGCxws
vCtg+H4F3O7hMoZSHIBbvH85/g0V6z401Or7wXezJM4E/V0Yb7xrLGIt7c+o
40nMNTiMuJt+jIfN19BtJWdcr4Pj5CTarHx+ME1O594gK5H9voyVaF5i93WI
l/Qq3V/U5Yi3QVRhYaXCdFycMrNuc5bxIu05tyZ7KOu/+oJX/cZ51ce8fNvM
1kvQ26tnSWfrCect4wOjzZdsDzbJ8Y6Ds/fh+n7BtXuTmSSxJRcrXvLPWwT7
Js6z3TYGrMSch67mIeR4yfl4rYdnrEKucTssw/udzyqXbGeVV+0WM6+9MJh9
84XR3BUvqEJ/YGbusm0z85fu9GYu3SVmLytyGl+i/t7pdeZd3uzlo2DNSzp9
Xs/9V9mnmu9TP27+Cs1L2n/N+QF67optfO7SbWLuiu3+/Nt2B5ve84Jo0wde
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
fvjrMi7FiCVxzllEXlJZiKFe3Cvn2Ji5pMz6tp31tAq+7EB5ies97LLOb9DX
0uaN/pjP8/2z3utJx2eCm4Xc4/n9Gq+Hkkik7mWeR40MVI8Psc38Ubj7btjx
O2Bc66YGPgnb3g+PPUU1jL7xGtjG6vizUPUVk9cT4gKOc3bwNTh/pclTjPFp
CH/MwZ0T8PcZ8PPNOqDb9nvs5WgHcvV3UnyvhsKpq9/o78C/CL4QHt0Ofg/4
O+A6w3n2wvsL9bwgNx7X74WaIF4ipY+x7H6uDOHueeAPCuHHzAuuMfuLxm1X
bTY3bs3zDDwLPosnc9n+Bd7ml7iR28eW0Q7mY69IpAkXT9agyfOSfsWc6PUt
cUyBJ7snfgY23BhFC48ELHhUbN4S+9Xq3SIILof3/355zRX3TccQKoZdjR3S
tR9EmsdQxZiIz4Mx5u8B+HNzrg7X35MFX0mYd/AdeN5jB1OYRv1kcpLC3LrG
WKdoLZzePg5P6zXJS1gaW0K8ZDiGXyBgiX1mxJV0+3va7Sup/+L2OWzGg5lz
X7BOmpnflLJh2FeE4f8IFjbVgtlqLKLoi8L3Xw311QvBL4B67vd54N8vkA8z
yYj/OK0bTF5i5kixeYkRX8JtXiK64CXDUL7f5owLyfYVO+A7fBC+D/Sn/Uu5
us4G2yrGmCUfo9L5x8mep+pH+POpUEU+CrdfA7/a+uye6tM35mwgkUjdqWBM
x7m8roOn5n+FE+yQjk9Q/jo88puwzzw3GInmGJznmabuA/FsrIns9Tb1Wg/B
tgXOLRaa6G/lPpwvJbyGmGnhWDx7/GwomHVVtshKHqu2B+oW6k+2Be7dzOQc
KobM5JqG12cGR8d5OBPCS3hWZjb7DxWjuJPhute4/jXnfwrbv9/mK728uYt9
cOOYh5t3gu8Gx9CNWIKHroT7Z1mvYbKS3Pk3decDaeokz+Gi2JA+8BJcz4H7
/rPCTfPfCoKgHkZzcVCZPwODhMM8qlwiGQn28XHOjV4zRs9bMTmJjE3XvCSJ
MWFZG/hEOH1P4BxJ8BcavqPw/0zFoNRV3GbY73M7rQtdc2+KOElRzpI+fiim
Y0t4v1kJ8ZIWDjQrgVuZd5n3wEqM37OrMSKpA+XOZVUn5epGY/6M5htJHXVW
sGn+hO+x0z5nX+Nh9NjceY+c1w+2eHPVT8JZfybwJTfZJ98zfT14fXy9qDqT
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
D1D18wGWsIArSv6E5auxfLAfsC3N38X5+VabZ/KSnbB7bPESilUlkQYpbuR9
HclxSJe8xGYmRg6BlJdw0beYBgV/pz6uRDphJUGOmRisRJWRx3qp24mVTL5s
VjKy9VNBXmld72CdI+Ra5chLrk6ur3GTl/g9nQsTJCiC7UZ8CeZ79bnRr+TZ
PO5zMb5EeEE9jU2j8iORSKTRkK63WS7vxlXgU2Ba10wr4/3YJ94NW04zjDHB
uakWL0nHK5z/FMt4SWBcd6F2kEQalHIxJhMwL8fkJbb12sEZK+kLL1GsBGNL
iJVkrETzEr3+TzIHx2YlVLeTXGpgJUVz7UbFjjk4BiuB7+Kpzs4+xUv2sHxs
ydTzEp5dX9O85Kes+JL0+hleewNjf7HGiZeQSCTSaCk/1lftG389w/gSwQ+U
/OlKlywTzz9L9YM9dfujDHkJshAufsKeh2o8eRdL5uOcUtcf9XwcirsmkQal
ZKhvxJiM6nikR2ZixpUkawf3abyeFKBaN1ixkinlJVw75SWBYt++xUmIlZCK
1QkrGdWcr0adwxSfVf2eX4MvF8OXvEyfE6qbQ/l7mPzpn6rmbz8MFcQzVNno
ekOvMY46T/GS76b9SSo/EolEGgmZY3cjLuIx0NJdAbc/XvLHK19Z+Xg8Y/44
Pnk+dBfOUdcZU1nPfRLzvNugf/GXipdk+xUxFhKJ1LuS8Yk3McykgJXImHgZ
Fy/6cj0yqY9UzhKMLZlmVpK3zuWqnY8noXqc5JDRp+JpXdT0XFdzX0plJk3i
StI6J4tlAz0WvtwB+PMZLIvBpfwlhqAYng/+Sf2HwbY9oxyfDL5DeP4tuX4i
iUQikcpV1teja2NFstmG7ebP1fEo6XWWhnaQypxE6r+4ijHB66C6n980Z+oI
MJF2mYn+Pri+hpGzpFf26mAl0z0PJ+Mk5jrBuZyuvZQ3aTLVcF0E5ayDLC5h
nue6Thp6vVS8Fg5P5+F46Zxi43sKlo+ZoGtBtrLiMvPhae4k5/VplpLjbCQS
iUQqV52M/addZvn0YVzCqdxJpMGqXWYyirHvReMok5V4aVxJ77xEsRKWZyXI
CcrmFYNmIfZt0TZfzk+ivAykZuJ5JfWPmhuYq3+arNM79Fg4V25X9blyjFbx
WSHy84qtr63+pnOkQDkWYl9Hs/chkUgkUvkiXjJQNR3DUJmTSINVejXPYCbO
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
Xbl5OZqV6LWBHfElJivp51oUWW5TBysZSV5SxElsVqLXu0nn3tC1cFLflMaU
qHgSM1fJuOZ29R33HayEEyshkUgkEolEIpFIg1Sa50CvM+zI42qOt4bOSkrn
Ij2wkmzuDVc5SijHAqlvapXTdZxZSRvr4BArIZFIJBKJRCKRSAOXOd5yja3s
sddQWEnpTKTbOThy/g3mKeHZ2sDESEj9lYuVNMydayN+Y1RtxrERKyGRSCQS
iUQikUhlyTXuKmImaszSFwYwnqzExUvsmBJiJaTBqCGnq5GrxGQl48BEmnES
V1wJ5SshkUgkEolEIpFIZchef7RhHeHGtTt7fr82WQk37Hp8BKxyuqbzb/Qc
HGIlpP7KZiVFsSXjyktcfJZYCYlEIpFIJBKJRCpbRXEmudiSPoxZOshXwh22
9ynZrpiS/DrBJFKvauAkBWvguHiJb7lsFjJkVkJ5g0gkEolEIpGGLLrGRZpA
8RwvscZiaf4A0ft6uB3kdh1RVqLjSdKYEnv+TSv1VH6kqVB6rDhjSgrWC56I
3CUmL1HftQteQuceiUQikXqS2Qbb7Qf190ikYtnnjj4XiraTSOMirtcl1WuT
GteytXmPvCQ5N3C+Stvr4IwYKwkZT1lJILmPmn9TFFNS2IZSHTEZUr9lw2/b
TZtgv04rRuJc+wbXuBpHF/ASM8dr+z8J9V1JJBJp1NSsfRzB+rmw39askWlD
LcthBMuCROpEzuOcGdcCGcX/ksZXdl3OeX/rbvV6XsIbWEtWMpqWnERbx5cU
rhfctM0sLijJlLjkSqRRlfoZg3b7SIW/u32+YY6gdM6NYgaueBIHK+GG7b/N
7aPnPC/hipdwmV+6DzmTSCTS2KvTurbtNpc0ePF833Lkf6NeD7Y+qOwiIJF6
kX0sy1veWA+U/TlJpE6VHrsDOn7VCeKxZE5LFkPCee52ZM3Rg+Ul8FIRJ04y
ssr9fvmfU7ThxmMg5yyehJuMxOIkvMFuLjJeVt8lZSVq/eAkpo14yYioWX1G
Ig1abV2Xb2ZSaXL9jobSGN2yP6cp9Vnx+lVoftY+HtJNVfb3J5H6LTrGSaTW
UqeHk5doszI4SAunny1xAy9hHfKSdvtuHPsQpJGR63dUcvWfmvIS+4WVjflw
bl7CtZ3cZIytvpfiJJgrSc9z6z1nEqlvctVnJNIQJVhv7p25lOhJUEGFMtJ9
HZ7087i6Phaq+8Ggf9eyvzeJ1G/R8U0itZaCBA28hI1YbAk3+I3tIl5SdA2r
7X5D9gSML4ms16ioOyPdp5h0GT9dEu8ggpcxEV7NePAmLoLf9sPKPib8qzIH
tq80fAUcQmD/Csb9K5kXXinCylXMD67iQbSHR5U9LIr2siDcC9v2ekFlnxdU
97Gwup8F0gcm0j6Y+Qc488DsAFQaB5hIzIVQ9vpm1gf38/OMuhn37iSTSzMT
qXkfzMbM0N0Ye3uef6cQ/ueF8O70/QBu/c95XvhXvhe9u+w23ikRvBra+TdD
O38F3B5gXrQf7u+B+3vhNjNTNrdx37BnWRjmBWZ7GizIbdtVfuThGMvf4/vA
cN6w34Ztb4Fb6COz94GvB38K/JkC3274jq7Np9wetJnSvtvCMk/MWd56+7gZ
xmVdW3ghtFVBYt+Dv6H98hiUU2YeQLsssHyDO2GsBn9H2fvL8oTtPIT7lj3Y
z6vA61Xh9avwfuGdgqPhvcCCedIwBoJ2f3QNw2CnhRDS3AMLfQwGymFmEagy
chvLJfc3yz/uQTn6/synOcdynLmNicphGEPuG0xHgNSJLNzlMTF7momoPjO7
UA/CSs0L/BoTvAZ9oXriQDnUrqG5iGpBOFvzo7maiGZrzI9qLAjQdekwiKUD
P2aeiJkAcxELL4r9YKYeBPMTZd+fk/a82brgUd2DsoK6og5FLA31CGzz5Taf
cWnRJ8Pv2GD4DTuy6zUG5X59767Li7GYTC7DnrwVcJu63qHjInPy0Czrdvg9
oqAi6/WZymwMt49i/7DsNt4WXhthXvUBMLTD0IZ7EdT54Rm8z/1qzWjb82aB
dizN/cTw/VNzlpkVmLN6TxZT7l7Lj9zTsecFUG8rC5/VodfcyW8Tk3uwkE7K
2nPYdZ6wxNwyG1P31NcW0GfwYPzho3n+2C2oZ7gn8p9BjwVF0GCObYg2tBVo
IW9F6rLLr9OyxTIznRtPpWVhmBebt2kfxtOhX40r3gz0LcLTnEefUrEsfusW
njQw2bFBonr6nGc8p/6nH/yzMzfccF3txhuvr8Nt/fob0TfUr7/hoPKh+g3X
H6pfd/1NteuvO1S7/obDtesP3iJ93U0316696abaxw7dWLvu0MG69scOS8d/
edMN8ccO3hB/9MYbpa+98VB87Q2HJ9JQLvFNBz8e33L41vjmQ7fEN1x3fXz9
9dfGhw4dlD54w43x4ZsOgW82fKhN31zoQ4ea+6YCt3reYHyoVC8tLcXLy8sN
XllZkV5dXR2o19bWyFPq9VW4XVmvr69u1I+v9M/4euTh+Pj6ifrRI8fq8DvW
4La2urwm//a4j8zkb0tu4d3iYfzjP/nMR/7kzz98CtrfRz96/cHTH7v+YO2j
10GbffBw/eBNtxT60OFPxIlvyXzz4fjwYe2bCn3z4RudPnxz+z50+AYyeai+
6dD1de1bPn4TnAfX1f/yo38hjfc/9/nb69/45l21xaPfri2vLDq9snq0jl5d
g7pifSkmd+ZV8MraMXm7vLEUL60fcxr3kfspr62279W1Cffqcuq1tZXU+PfS
0lHp9fXVZPvGarx+fCPe2NiQ2xKvp17baPTqetKvWV1dh9daiY8dW46PHl2S
xvuJj42Esd9v2u73u/r+zj6cUSa9Gl/v6JHFR//9m3d/d2VxOT6+dDwOWBBz
5t+hcqTQfJwSZeASX8678sJT23fsqi0u3luD86O2trFcXwevrq8or0F9v5F6
ZfV4Db28slFbXF6rHVlard27vAw+VjuyslQ7tr5cXz6+Wj92Yr2+fN/xGL10
ciOGv+OjcC4eg2Pk6CrcoleOT4yXVk/EK8pr4PW1k6nX1DboX8fQt45Xllbr
2McehFdWRt/L5buGXlldz1lv115aXiWTe7Z5TMHxf0aPuzfWjk+ly+YdvVrz
LqzH8f7S0WXpajQTR1F1RHmJXztvx8768vpG/VtHjjy4tLZeQ0ObDm3WemFd
iY87Df1k3Vc2++HdGPoZzb0K/RHy9LrV8TEoOz4LHK+pV6C/i8btcFto9bye
z5NpsxzHbyy35XXDG+uJ19eWWrpsJjRwW+W5sbGW8pFVg6NoPmJv33BwE3Os
j0wBOQNyB81KFhePSWtucvTo0Z48KGbS7Dpp4fUu/O6ra7JcTK/34BMbx+uL
9x45s3YM3ndxJZ5hldjjwWdUnjFedtdhmmXkLtG8pL5t+87axsYG8hLk4JKT
rKwtK6/WsT+ljX0oGAPUF5dXpI9Ae3DP6lL9Xtj3CDzvCDx/EeqspY0V8Fp8
9HjixY3VGB6Pj66h11If0+xkDLy0drzQy+snoB+ZWPOSDfT6fVBHnZDn47Fj
i9Lr68d7Mow5pHt9nU681lefLNXDLDcy2eE6em1to29Ox/KO7ebj5P4yk+Vj
K5KVwK2cpxME0V+X3cbbkn0uLuJzz9um2/Azmhcn10DWmxr5CBxDxvFbdL3M
3R/stW+J1z3J5DKcXnvPX5vviPcgW+llPNXP69nj6HZ/J1edsy7H/Mvlc4uS
WUnCRPKsoyHutRkjcDxXswVkDsgfzNiSRvfGTPrNWpoxE5OdFJXDxppyj6wE
64cjR45IY3zO2rHVmi/jS4LbKb6kfGlekub4FV79uc87t4ZxJHBMSD6C9yUn
AS+vr8XL6xvSx1bX6uijK8vSi8tLkpcsrh5LfQzqpsSrDUZWkjCTtbEzxsXA
d4+X4BwxDf3J1Pra25ruX65lY3OzfknOv42ci67j2fuV5cLrjF247O9CJpfp
VRyDSq927U7nAJEH49XlFem1lVWZn0YIfzR5ifBMXpKyktWMrTU9ZhuZXz/G
QWTyGLiNOrZZnVw2bxh3d8NLnNx1QHEwg45z6o35rRceg233Hxz7m3ElOM7X
c3FGdT5Op3NxWpVHv85rOeaGNvnY0kpdji+X12uchTFj4e3pWJ1UnjSz0mtI
C7/+3OdhP+pEfW3lOzjfJo0jOba6IhlBo1fixdXluukkbqQTl89AurHJStpj
Au5xS0N7u+52O2OfsnMydOqi7zpol/29yeTeXX6cdM9x1uPsCeAl6DUdf5Ty
fOIlZLLTPdbZ9vioU5fNK8p2q99nmO89rvVWf/rD8lqP9MrKmvTy8mqOlbg9
GpzElauwHU7SBvPoul6Q5/j68bqKRYiPrqzWGA+Il4yCsrk4GS/xRP25z91R
W1m5r766/EB9eeW4nrtcwErWOuQik+WltVXpFXCnY/NmnKNbVtIJLyGOQCaP
isvnFuTevbKyJI3zvRmufeSJ0eQlPOElOrapN17SrP9I82zIk+L+8xJy55ax
7yXxEs1Hyi6Dnr9Dz/2VYlYyarzEjiXpJbfroM/fNclEN+pLa+syPmFxbbGW
rAnlES8pW7LfhLxECCaE5CW4ztS55+5OOMnyyTTPWxEr0fElZXOLUeclNodo
xTkGyUso9oJMHiUPdgwvY3jXSsqROGVeXl2SXllblutfjgsv0XlYdB6szuaU
9e9caKttGoHrs+TpdD/Gmo3jI4ov6WhM2cZvRC4ou77U081ZySjxknY4SSdz
bwZp9fsoXrIqc1kcXV+ssYDFzGPES8pWkvdNwD/MW+IhLglnqvXzd7ywvryy
kXj1KHilKS8pm1mMAy9pODc65CXtPL+T+BJiJWTyqHjwvIRcDi9hI8xLzlO8
ROeq7ZaXJO3ORtM2qR2Xfx6SyeSRdx94SenfoQeXy0rQGw2spP3YkuHxkn7G
lAzrd11T+UuQlxw9vhIf2VisMZ94yUhIzmNOeAlHXgK34VxF8pKjK+sJL1lb
lLlciZc0GuNq2uElznOjRV9x0LyETCaPigc/T6RsjjAtnjZeknCSjb7wkqZt
2sqqNLVvZPJ0u1mM2SCZATFfvUZFFlsyDqzEladklDhJekwn5at4CXgDxtdr
SzWO/QgR3KFyZ3hl9x/GXsm8Gs7VrX2/qWVsiRDcS3gJmxH1c3dcUD+yvFZf
Xd6oH13VvKQo1+t08ZKkHDJrVtJr/hLX+dMJb5mmOptMniwTL5kUIydBY5kz
zF8yqvleFS9BVtIfXjI4RmI6z2cG5cFxH/J4u/y2goymuOiSyl3xku5YSXu8
RHOOfsWTjFpMCR6rK8a40Rw/ynVoVQ52XGN1/dhyrcL82AvnE16S5M3gZfch
xk5tsREhWJKbpNie5yX2fXkbMslL7sE+1NJxg5U04yXDYSaLq8vSklsYaxIP
m5Ggl1dXnMf7MOtwas/J5Elx+blKyT0yKWibtCefl6wZt5n7MRbV/Vizf5s9
tt7GZ+vVZdcFZDKZPFrO6uXBs5JOmEkzTjJqMSVFrMQ0romD6+PgmquYO1R4
UeyFc3fKOSAwTsfbNM6hS7UVS+EwHzdWk//8Qq8HjLlHeJqLRM+vwXK1nLIR
y34QyFuDl6wunawvrSzX4fdrMR+nW7fBKiwmMmxe4uIkJitJzz9i3GQymTzV
NvtiDHkJ98aOl6DLZAmalWBfV5dlPpaeOAmZTCYPy3mG3Wl+1/bn4fSTlYxC
TIl9/VyPG5ea+OjKcg3GmpKXIDfhQUXyEqZ4CQvCMB2voxU/GTQrGRte4mAk
0hibA9ZcJGUkLh6imUiR8TcIghB5yfm7El6ytLwBXpUeDC9pPy4F2ciRlSV5
/97lY+n9vnERxV9Mm8dwLo5ktdFl12dkMplMLteTx0vW4mGzBCw/7Avfe++9
st+7sbEhnTET4iVkMpk8DNvxfoOIKxnG3JteysCO3XeNAdNyahE/0oyV2LwE
xsial3xWxpakY/XE+DfX7ETHnRhsoxte0ux5I81Lct8jnVtjxIoUcJEiNmKU
s9tByHzkJS+sH1lerx/F/CWSmwySl7THTDD3zT1LR+NP3Xl7vPWx3xu/6bJL
ZaxJv2JMijhJO6yEeAmZTCaT0ePES4rzvZZXfshGbrvttnjLli3xgQMH4vvv
v1+W6fHjx+OTJ0/GxErIZDJ58G5kJcsDiSvpByfpNyspmjPaFiPBHC+WkX8k
7oyXiLCa5yU+chKMMTHG7nqMr/NqFHCTdmNImqns/ktO5mcXZv4RByNpFi/S
ko9EUaPDSPKS3bszXiKZSXm8ROcsQY6xcmIjfu//+aOYCRafv3un3P7tY4vp
HJ1B8JJmrATzzxEvIZPJZLL2uPESdMJL1uoba8XrSAwrPxbykfe///2y/Hbv
3h3fd999kqEgK8E+MvESMplMHqzdrGRpZOJKBhlT0hUryTGRZu6dl+Rsj+1N
dmLFnEwEL7EZieYjdq6RVnzEZiXOMnVxkjwv2bZrZ31xyeQl66XzEpyDg/7o
jdfHPAriZ537PBlzgtvMPLC98BLXsUu8hEwmk8ntehx5CXzeprxkmDnFkY1c
e+21MXR/4DOel27HvjDGmBAvIZPJ5MG5mJUs9cxKinKUHD161OlmrGTQOUqK
cpE3xJS0zUoGwEtczKRFzEm3vGQk1ubJrVljxZF0Na+mVXm24CW7t6fxJYsr
o8FL8D7Glxy69eOxV43iH3/GT8arJ4/LPCaD4iXtzMMhXkImk8lk7aQ9WBl5
XnJum7xk2GuwYXzJTTfdJMvvqU99qvw8GSvBfRLG0d+1cso/bshkMrlsN2cl
x3qOK2mXl9jPGYVcrq65N83YyLH1zPrvgfCSImZispNm+TsM8xbOYjmUHevK
cMuufTq2Z7uAkbTDR3pyFCXlneQv2bb7fMlLkJW04iW9s5L2eAlyEeQjH7/t
r2Lm8Tian03zvvbMSlZXCjlJO6yEeAmZTCaT0XlewkeTl4jR5SXoW2+9NfZ9
X5ZhMgcnWSMHY080KyFeQiaTyf1za1bSipd0P9emWUxJO5ykaByG7YZ2r+Xj
zt3ampWYLszR2e/4kmYxJx04zSmbi1fpjLu0+5yOPFRG4ohFsXjJvavN5+P0
h5W05iV4i1wEfd2hg5KXBLPV9DF7jeFOcsA2iymh2BIymUwmd+Lx4yWr7fES
+E7D4CUnTpyIb7zxRiw7OSdHr42DeUySPnOyniUaWQfmp9UmXkImk8mduz1W
0oyX9JabxBVTollJp4xE22Ql3fISey1ge42bfo2LE56yiuPZwfGSbriA/T5d
MJeBeJiMpA1ecs9aMS/pHytpb30czUD+4a6vyvk4LPTlejl6neFvHT0i40/k
vJqNtTRHbBE/wZgSiishk8lkcj+9Cm3P+PCS1Ra8ZCXhJIYHXX74/l/5ylck
LxFCxIuLi+n1RWQpGFeCbARvjx8/Gd933wPxxsYJ4iVkMpnchdtnJUW8pP85
Xe2YkqHNuVl328VL9Fi45bh4dSNx0eNrGTPpiJd0nIuD3B0jKeI2o8dLkHcg
C1k+nvA3UQklM7njbz4ff+5vvxB/7OAN8eFPfiK+9qYb4y//011yH5yrY8ec
NMvpap8bZddfZDKZTB43r4wZL2kWX7ISl8FLsD+M/WVkJWEYxl//+tfjL37x
i/GhQ4figwcPgg/F3/zmv0pesrh4LD558n7iJWQymdyFO2MlLl4yuLVvhsVJ
ihiJzUpyeUbk+NRgHUXjYs1K2mAmfeElgfEY8ZIBspLmvKS/jKR9XoKcBHO9
6nk3mLsE5+Q85nHfFzNfxCzw5BrD1YV5yVJe/z9/Q64zrNfOaWf9G+IkZDKZ
TO7V48VLiuJLVuIyeInuF2NfGXkJfNx469atcl4OulqFvqMXxEEQxb/6q6+V
c3MwxkTzku6ZSfnHDZlMJg/TnbMSm5f0j5E0iykZ1Pd35V8omnfTkJfV4iUt
Y0v6wEtYu7yEPJW8BHkHzrXBOTZ6Xo1kJILF81u3SFby2Cc+IX7O+efGlU1z
CTvxePyGN/1W/B+L98rnufKUNKx/Q6yETCaTyT153OJLRpOXYF8a+Qh8XBlj
gnNznvCEJ8j1hefnFyQzYUzEb3rTW2SMCfESMplMbt8uVtIeL+lvLMmw5t7Y
uRS6YSTpPJx1Ny85sm55baM8XjLRXKVojd9uPf68RK+Ng7wE40VULhzJRXgU
xK/5tdfF//j1r8n4E/2cV77qZyVP2fSYsyQr+fbikbZyupZdd5HJZDJ53E28
pFfr3HzwUaVf//rXx3fffbdcTxhzmdx772L8cz/385KXPOYx3yPn5SAvwTiT
7nhJ2ccMmUwmD89lsZIyOIn9nXtlJVlsSRNeAu2Kdim8ZKJZyXjyEjwuhsFL
zHk1yEYWzt4qY0gO3fpxmdfkiLGmMO47d9ZmyVMOfvzmlqyE8raSyWQyuT+e
BF6SrO9TFi9BY9/5cY97nCzDG264QbIS3U5rJrKwsEUyk5tuOiyZydGjSzGx
EjKZTC52K1bSCy+xeYjL+v2K1gce5Hd28ZJ2GYl77ZCC2BKDlzQwk7XueUlH
+UuIl/SHlzRlJu3xkv6xkta8RK91gzlM0M943nNknhLkJXq+jV4XBx/feeEL
Yy8K41s+eSuuZd3WOsFl12FkMplMHnfbvMQjXtKld+3aJcvw1ltvleviYMwJ
9quRc2Asybnnni95yaFDN0uGgjEmxErIZDJ5LTe2ca3tabKSYfAS872Gve5N
J6zEXiOkaI1V11h2qPEl7bCSiWYmJTkt1+brCZc1H0fzEIwtwb/P3bldro9z
/eGbZGxJsq5Tsj7w4vJS/OznPy8WYRBfvueq+N7FI05OQrElZDKZTO6nkZVQ
fEnvxn7085//fFmG1113XboNjXEkmGvw+c8/T/KSN77xzfGJE/fJ3K/tz8cp
/1ghk8nkftvFRlyspCi2pBte0ikj6Y2TNK/b11fzxm0Yf6i9AkYWoT2IsW23
8QR94SUuZlI2Y5gkt+Aliyvr9cGxkmJeopmJvbbwc7dBP4mz+PAnPh6feOD+
eGVjXfKPxWNH4/XjG/H527fFQRTGf/DeP5R/6/WgXPVG2XUbmUwmkyfDmpeg
MUcp8ZLOjDEkOPfm5MmT8c6dOyUvuf7663N9fOz/YiwJ8pJKZSb+X//rd+OH
Hno4vu++B4iXkMnkqXUnrKRf8SXtcJL+sRK0u043mUgRL1kxeMlgx7Ql8xLy
VPISk5ngfBvkI+ciD6lW4oM3H47vOXKvZCFHl44l8VUry/GTf+gpCU+55WaV
u678eoxMJpPJk+1GXkLzcToxttcbGxvydtu2bZKXHDx40Opfb8icr09/+jlY
vvEnPvFJ2ReW1xbbXiOn/GOFTCaT++l2OUkzVtIJL+klpqT769UZ/1hbyd+2
smYlg50vQbxkoj3ivAR9BHO6Li/JWJLzdmyPeeDHf/Jnfxo/+J8PxRsnjsvz
FPtY//Iv/5KuQ/ilL31Jnq9l12FkMplMnnwTL+nNem2c+++/P40vee973ysf
S2JL1uKTJ++Pv/rVu2LfD+V8nC996R/TuTjESshk8jS725iSfszDKeIk/WMl
aykfMd2KkWgjJxlVVtKKlzCTl5TNDKbZY8BL7j12VLISZCY7d++KuSfiZzzr
mfFXvvbV9DzHc0nniDvnnHPkNoovIZPJZPIwTLykd2N8yX333Sfzl2AZPvOZ
z4y//OUvxw888IDq46/EF1300zK25JxzngnbVjvM91r+cUImk8n9druspCjf
SC+8ZLAxJeZ3bM5LVgo8ynElxEvGyCPMS/S6N7jOzerxDTnv5tnPfY6cbxME
gfRLX/rS+LWvfW38hCc8QbIS3HbTTTel9QPlKSGTyWTyoJ31C4mXdFN2+haZ
CXIS+LjSGDN60UUXyXb+x37sJ2RciRC+XEsYGQjme0VeQvElZDJ5mt0JK2nG
Qo4ePZpzu7xkkKwk+X7FvMTFSEyXzUOIl0yAR5yXLK+vpV7bWI93v/AFsg91
9tlnxzMzM/J+pVKRt/Pz8/H73vc+mS8OTXldyWQymTwMm31D4iXdlyHmfMX4
EmzXFxYWZNvu+34chmHseYHkJb//+38g+YhmJRRfQiaTyWsNvMRmJe0ykiJe
0s48nEGtq2HzEldsic1JkEOgy+YhxEsmwCPMS2SeV1z7ZnlJrnWzvLoS33bb
bfFb3vKW+K677orvvPPO+M1vfrP0vn37ZNzugw8+KPtbZt1Rdv1FJpPJ5Ml2
npd4xEs6tM73itc6br/99vjSSy+N/+mf/knev+KKK+I3vvGN8Tvf+a747//+
H6CNPyn7yMhJ8D6tjUMmk8lrbbOSZnxkNFnJao6XtGIlmpMQLyFPOi+BY0Za
5nldW5WsRFqdm3juHjlyROaGw34W/o39LFeeobLrLzKZTCZPtseMl2C7mvIS
dJJvdTR4CV7zMPv4uB3bc2QjmLPk2LHllJfotXGIl5DJ5Gm2GVvSKyvpNWfJ
YL5b85yuRazkyHr5PKQ1L1lVvGStjnECR1c3cuvjcOIl5Ttdn0jyknjb7vNr
9y6t1e6F/sfi0noNfrMBHycJF8Hjw2XNSmwOotcd1POd0SdOnJDnFZ6/i4uL
lO+VTCaTyUOxPR+HES/p2LrN1jGiuo3H+9hH19wD18TRbn8uDvESMpk8mW53
Hs6gOcmweAnykWWo/9F67RtXTldkJdplMxHiJWPuknlJK1aCdtUBeP7o61Fo
3Afz6us1CfX5VXYdRiaTyeTJN/GS3m223Wb7rblJrr8M/eT77ntA3uptxEvI
ZPK02c7z2mlsSafrBZfDSlYlI+mWlYw6MyFeMgYumZfYbMT06nr+XNGcBM9d
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
UB3LZYUoCz+pHp+aD6qLgi7cqfrwyh+29r2vZzT6va9vSFdoRmfoVaL9PsZh
nzlL98qyU4rYcvKd2b/Lfv5AgfKoEVZSL7akCE7S6P7tYCXDBbGSLMrco6aD
2Eiz/ZB3fr3+KHr93H12Ejk1vHhkYmzx6OTIEnetyYq1Hg/NWdPgJSZ+wqdO
Yxv2uh27/kzXLCmAvVTrkaQYyQDk4SSZr1lzFwxF0eT4+MJ4+bLRyaVj44nf
qby8X+Yf+szFF1+c4iVWd2gWc9C8z6pxIn6TJbM5Dm7D+XxWzf5mn0X8T3HG
zfJRtats3l4GadyaOT+LvxWNLwwUKNCqQ8K4+Qwf74btCVbS83jJ4FC89Tbb
TSbxJQ4fqcgl8nFKx0vwi4CVVJrqZKTkMbZBlV8Xw0ssZqL4EqvH+JiG/u6E
PJAvxtcxisguG0tiYzGa1Xd6ldT+rLgR+739zvdt2T6y/ev3XTO6QqBAZVIR
rMSv8ZqHlbTjC5hJrCSrDmuZOIme3/+N5T9ZmKw/fq3NgURWDS+dqNBkheKR
4cWTs2cPJXjJUFK/pBMk/KNR3Y4ZwGRKwVuyY0nASAaSVzFdagi8ZGLp6KJ4
xfgI+2hPjo2Ml4qXaL6Cl0iP0pwsMj+t3BRGIT1GfkarO4vf2Jweu3ex5WdF
+aBdh1zrsccea6s/Vicb3x9r4WfN4OXidWGP6UCBVl/ybbBu8IE+wEsGo8Gh
J1/28k0dXkK914qsczQ6OoWflDVGl19+ebX2S0XOWxkMXlLl+Usb4iQ2VycP
L4Fs/Ecn5gO/x6cifUG6hNUzitzDzlPrw+l3vMS23fa5r4/5v9O5uoZvy6AP
+NfMiksp+/kDBcqiolhJFl6ShZN0ql3dwko6EUvSrbHw/eXW9pOfXG3QGHSm
/6t4yfCS8YmxkWWT46PLHV4yd86sit07+xcVW37WwNCsqbqj7ZDFTfIwiBqc
pFM4TRIfM9M0DfcxOMngVM5NUZwk1aUGowWDA9HE2Ojiaj38HsBLNGevueaa
VI+ilonlM414ka4jHcauA3sNq99IPmfJ3qJYiW0D90KX0vVt2xo9v3+smdiU
fieNj/zC8h8V4Z2+fcS4aR/qPN0sUKBAqxbZ+EHxj27dqw/wEvbHuXPtddZd
6eMlfC4TK4GuvPLKaXiJ9sJrFi8RZeUT2zlg5X278ywr1kHfS/Y0Iux/xbP6
11gVZJaPUam/tN+h7BL1l+/r8HMO6C+Oq86AHzum6zQbDxwo0ExQs3hJ1t43
M4ml5tUraWZf32b37J1pyspB8G1D4SUat07gJSPEl4wsmxwDL1ky7PCSihH/
i4rgnjUwODS7YtsPVWmoPg3lkPvOw03qxW90EivpBUoxkgoNJDk3rb4GowUD
g1FlvJaAlcQOK+mR+JI//vGPqR71q1/9ahqfKXINyVKbryx95OGHH56GLSK/
9dmPu2p27fHOPeFvqh1UJDbGx2u0hm2sctm8pdtjL36E/ihd0vrvGvWh/HTS
oyz2UvbzBQoUqHvkxxR3yjbOo17HS9xrcOjn0cDQU+AlFTmy0sSXuLycMsfr
rrvuSuu9Iuen+xem9hBuhJewh47FS6oxJmOpbS07Wj6UTsw16Re+T0S6RpFr
IJ+ED0lfaLbmWa+R1dWs3iWZzOdHH300/vvf/z4tn8auX/WJvR66ELqBvQ/H
iOPlM9eVv6rsfggUyKeiWEneHsG+TdLtmKpmsJKaXJvkd2X3dyPKinmz9cEh
i5OotlZ7VN1XZXhkrAYvmT00Kx4cqOIlFft+9oD3ijzKOlZDbp+XHNzEr4/S
Sbyk3ViYrO/q4UTJ3wMepRhJOzjJlB61oKLjTVTXIHNjrCfwEuYpNV6FlxCz
a304Rec+OohyOazsVuwB38sOp9ac7GrLd6b8XMXbz/W5HnLb5vI0qhfr+2Ee
eughhxvdc88902qtrKoEjnXrrbe656UfFO9cVBbAy/7xj3/Ev//97928ufDC
C10fiheW/XyBAgXqPsH34R3i7ciTbvDOPsFLbqz8t7Kiu05U5NlKMJMKIfdL
x0sYkyjBS+bPn1/Dp6tyszFewt4C+rx8+aPx448/GU9hJlNyXzKFa3cqvsSP
i5CcKiqvpIc8+OCD8Z///OdpMSm9Ku+LtsvmJ1kfFGvzt7/9rXtu5dfYOF5r
AyruRsT1WM+ch2y/5JJLXB2cO++8M7VzdM122x8oUKfJx0vawUqgTuEleXkw
jfCSzP18C+IkvZA/Z2smyeYQZi25wbviSzoRq669c4ZHRyaGK3b36EjFDl0y
Olkx7tElfjFAfAmYSSdeKW6SYCd5uTpQJ/J/cqlODEwuqd1V8vGjRq+O4CRp
P85eMDA4p6I3jaV4SeW9dLwEYq4KL0EeFtVvJF9PP/30+MUvfrH7/SabbBIf
fvjh8SOPPJJiJZwLHiHfxG9+85v4mc98ZvzSl750ik9470XvLx/H9ddfH8+d
OzfeddddXZsa8QT5X6Tn33jjjfH6668fP/vZzy6MlcxknF436KabbornzJkT
77PPPk6PbLYWyZZbbunGnGtEiR7+zne+M41rLPv5ilK/j2OgQGXM4WOOOSZ+
4QtfmK59+AC02267dcgv5D9jX+Alt0cDQ5NjS8cnFi5c6GJLhJf0whyJkrG6
6qqr3BjV+kaWZpLwkVNP/Vq86aavjNdc8+nxs561YXz88Sc6zOTBBx92JL8g
RCwDNvpznvOceOONN3bYfJ6vtmj7OfeGG25w7d9hhx3q7ptrY08srkKbnv/8
5zs5j4xCd5B+XjT/uKiu0qp9Yq+bZVPV6z/7rBBxIOwdjb51wAEHOMzkySef
zMx71m9srhZYyaabbhqvvfba6dxZZ5114r333juNI1I8blab8trdjfldhj2Y
ZffmzYtO8edQL6b5sWmEldj4kyJYSSfGIHPuFNkft8W8m063v1mSbSGc/m9/
+5vjHV/84hfj5z73uemeI7In9t9/f8evmsXFs/qZ/lo8vGQlctjZ30tGJyvG
PXav8JKhjuoBadwJMRcJKddnaKg5jKNTlIePpG3MwEBKe81ZMDA4d2LJcEUe
jbhcqp7BS+AXqvd62WWXZeYCZ60xZOm3vvWtVI5Cle531/rSl75UU5sNQjcB
N0HXWWONNRzGYv0Yigctui5s3Cl4R2R8Z0XxEumL1HDht//0T/9U6P7TcOEM
HaeZ33eSil7zJz/5iRsr6Z42V9liZj6fVf8IY+N9zTXXdO+HHXZYqoPm8eci
enMR/aPoGBXpq07dK+86nR7rVvWzRud3ot9ngsr2k/TCs2etKZ8n+eusyHwq
2g6wUfg9ODVrf6211nLvz3jGM5x93Onn7gu8ZGjWr8BLxpctdTVeqVtS1dHK
rV0CoZtKF832i9TueSMi9+bLX/5q5XeM9ZqOZs2aUxkH5PxXHJaifBybi7Pt
ttu6e+EX8XPR8+Zx3lznN48//nh83XXXpXKeOvXgAcrthVSHwLffRegG6B5R
Uts+q3aajklnsXsOC0/QmslaR1nt95+lHj7jH7e2Xh4PyOpDPR/PzPNuv/32
6XPk8RN7HeVZR55+x/sRRxyR4m1517E8RfFGwmH8vumErJHu8sQTT6Tj1851
s3SSrD7296XO+00nnjFvzhb17+WtLa2herrLTOoDrLtGMeJFnteOT7NYSda9
28EbpF/77cvq97y9cRvdozZeMHtd+mvO58vdIt1bsSXwbvSEPffc0/EU8JLZ
s2fX8JtO+F2qfUse5sKnRkaWTFIPY8Wy5XEVLxm6KcFLBrulEuTm8Xj1Uvz8
lsI0QCxIY6rFRkzujHCRUvGR2tfAwJo1eMmSYerll6vv2/Wy+eabu/l59NFH
F8JLZF/jt0CGvu1tb3NYy7vf/W6HOZx88snuuhZPRN9Bx0FfYW2gs4G5iC9q
jds1IpnA76UHZckxjr/+9a939j8xJpwPz83SS3QNW2+Fdmmt2lr7eXpIFk9t
Rq5YPs7f3JP+aYVH27Y2I9d+9rOfOfsGHVpjZfUZu4eCz+vQSaJEf5o3b14a
O6f4unp4CYR81rjWs/+y5FeRfrbn6jngzVmxU1k4QdEx9PVCn6Rfd1oe6blY
P+RAKFc9b6+DevJf3ysuyP42S7fOak8n9turR+pHxYT5uke/kT/f/c9WV/R1
HFtX3h73yY6JYu7y+JrmUzM6KrXBscUuvfRSxz9PPPHEVM/pRj5eP+IlCZWO
lYhe9apXORlJDKhfE1Sxr0n8a0oPP7wwfs5znufwkj32eFt8+eVXxnvt9U72
FnB4CXjK4sVTGAJrkzkRJXPhhz/8YXr/LLzEz+cQ35S9bvUIfr/zzjs7Wf2G
N7yhpg6atYGy1g2fVfMW4jzln0jnsJiI6psoBtXyQ13b6kp59qitf2/zXfPW
rr8+7dq017XXr8cL0csYB/oMf21eO30epP4HD+X3559/vjtOX/E8vl/E5jdL
V7P9o76280D8plFOTzH+MJrmhovfNSuH6tln9lrqqyxbW+/dkE+ac1oLypVq
9jk1FxUDbnGTLL22XeyimefTXGqn9pEvA/Pwkiy9pVvYEHqarfFlZWQn72dj
xfN0cPE49fVM4GG2TonawDolnx95gR1BXv8XvvAFZ5PAo/360q0RY7+4Yns/
snJkdNHkWEWHWDo27vCSwWjoRrCSUmIpwGg6S/Xrq/i1WHr4NTAwd0E0MMfh
JSMVfaQX8BK7VnfaaScnEz/1qU+lGIONrxWfliyEJIc33HDD+N57763RvYj5
tDxLv8XHESW+DhtTonb4tqX0KYst+D4QXR95HiU6GnG7Ok+8g2vCsyBdR+uR
Z0GP3GKLLVJZpDUuXqvP1neRh5c0WuPqF+X6+8+t+rX6rJiPLOwhz25qNO5X
X321wzsg4Rd2DO21bc6heC3+ZPoMXmd5r8VdfJ3O2uQa27w9J4UHqD3Wv1a0
1o30AuKwL7rootx8yCwsptH17XzM0pmkj0tPzNLj21mzuj/x1j//+c9rckF9
3CNPJ7dja+e7v97ysBbdj+/B++wc7oT8te1jjVJ3gPv4fGAm5H0nydojVkfX
uqCuEL50facxEL4rDDqrDyzfZZ3Ya/jzz+J9lscVxTukr8NTwb+jgJc4vGTp
8mVgJI56BS9hzuyyyy5OD/3sZz/rjkl+Mo5gHsJI7D7BP/nJ1fHTn/6MeIMN
nh3/6U93p98vWoQegMyo5utoDjJHiVnkPmAbys3V91lr25fpXAN7HBIeLNny
4x//OPVtLFiwoMYe0LzXdTW3dY8LLrjA6eKveMUratpk5af0CR239czVRu0X
Y3UInwf5bRJflqz1ZYJsOH/tqP32mr5stevb54PUG4mSdcl39Kl95no6Bdde
d91109hjv13W7rbP6mM8dq5l8alOYAtc4+abb3btVH9m5R1l85bRmjbnyRLN
TfxF4t3+Pip5uFe7hJwn71xrzM7Nos/pPzO/4xmEO+rvvHHqppwl3oB34p7v
vvvumvpKzdwzCyvx8ZJmYko6ReIVFi+hBjex7Z2a/8IxrT/F8gsfo+kGppdH
4gU+j1PtaNrMZ2Ht2Bb6rr17jzi9YWy8slZHFk6MjlV0osUL44GoYvtEsxYg
tsvADxKcZkZxEptzM9PP28xLeInLxelBvGS//fZzdjM5Y6rHKvkhe9DaTfxN
TGbl0eJtttnG5dnAc6Wf273nxMuxWaNEbqPzWL1G69rWvrDrxPI0q4dYOc09
d999d3d9cnXR0yxv9NetvQ7PwvNvvfXWNXLT8rYsH5HlVfpdUTtez6J+gM/J
l2XvYe0j+buy8mV03aJyDbwkSmJEiL2w+pPikNVfFkvRs77oRS9yPA0fs8VA
bD9Z0lwS/pOls9k5llVz3+qVRfqZ8/GpEXP09Kc/3eHX0qOtLM7CxYpc3+4f
b/1KFgfiOawfNA/3aoW4FrlQ+ABllwgPzPOb6Lns2vHXg9WFNQf89uoZecfe
8serE7qHxoZ4NeYafAq8pEiNol4miy1qveudvnzBC17gnhf9WPqreKtvo+Rh
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
xJd0GC+ZHB5Z+NTo2OKJny+4PsFLhs5AbPd6fsrq9qriJUMTw6MjPYWXSFdW
HTT8EKoJJj1YOvWxxx7r4i+g1772tSn/Vqyn/NwQ/M6P9ydOku/gicI6JC/5
/pvf/Kb7nphD6qFYm5Y1jr6PDxM9CdlP/IjNG9EzgTvAc/ElSUdTbAxEziC+
Eoj7cH/q1NL+V7/61Wl7eF5sNGrkgZnIVrE6FDofWOhrXvOaGrlYJL5E/XLg
gQe6+9D32m9Ce2v9y7/8i6tlIJ1JuYmSI1/+8pfjX/ziF6nu24zewXPQdu4N
XiJ/iq6Fbmj719d/pJuwR5K9rsZV88fH2ST/mGe+/4dz//SnPzk/KHzT5+nN
6AXSBxmnd7zjHa6tXNfKTqvXNbseFbur57Jts3HGrC3mEvPVyvNOrWH8TlGy
LxTPa2vs5dnR6mvf36TvsFOkb9rriOQPpj70f/7nf9bM/U7ovmqv5hC4AWtj
s802KyWOtFvkY3/SZ7CpGFPi3nSenVe+vpq1PrL0R9lhVpcXlslcpfYaNmW9
+GCLl+hv3lXPaiCp09bpvgp4SfvrCb2c8UE+Cm+fitmsxomccsqX4l13fWNF
ju4Qb7nla1wuzpw5a1TW3yxX45XPHIPe8IbdXB0TMBbJa2RzpSfi//qv/0rn
gb4DCyfmnvsTQ4UsFv6pnBTO+elPf+ownY022sjVFZbvXvgB7+xbHSX+Gr4H
d4EfK58YfwfPi85AjAX2LL4a7g3uKnyHNYa8peY9mIm1mfVOTgvPhX7AdSym
odyNvPUnn8q73vWudB/CgaTOuuI+3vKWt7i1p1wQ4RgaI/qMZ7H1jhQHmzXO
Nt6VtY+cp94YuJD0E7Wb/kZHystFJaaPdp5++umpDaqaF7q/YmKtbPFtXMlD
xoc4T3xjNpa06DzO0wO4BvoS/fv5z3/e3UttKLJftPpb19bcld4nHuxjRIwJ
Ogv3ZK6pH+UzKxqv2oikIxJzKMyrGT3C9/PZsbLtE2/X/CAPi2djPfmYSSfl
MM9CnDPPuOWWW6ZzU2ui0b18eVcvrqQM/ivMlM9a32CRjCt6VLvXl66uNSrd
1MaSiJ9Q3xH7CN10JrAS6Yz17mV1PdmUndGTXf2SiZHRRSvBTMBLfvbTqyYT
vOSLiO2BTu8nHF5tvQYGZxu8ZLgn8BKrp4AHCO9AVxavsvEcqg3CeaxxyX4R
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
v85XvVYbZ6V1zmfsNHQudAPsNXR85fCzX4uVk7qn1hRxGnoG/CacS8yiZJ3V
FazPXjVdqUElHiI5yzVV/xI5gm6hHFly/a3dZf3eRcaANpCHwLXJVZQvSzyV
c8AXqPmkmD78+/j+2Z+IY7SF9oF3NbM/D/z6E5/4RGoPWx6tthFvw3OCJykX
XOfY2JMsucQ5NhZa1+T5tK8zdXjRBZWHQd65+Dc8XvokcYW+fZtnP/pznD4h
1lVjpnaojVlytJEPRXKea6PzKbeC2jlgfcpLJSeZ89CdJEOEseEztLiJfEp2
burZrAz1n1f+PNaX5q1iMP1cEdkNvoyyOIP6BH2GHL0o0aUYJ+Yof1OTmXtw
Dv5O4riZQ9j5ihuvN/fsmrf+L/tcip/mWnavW/iB5R3WPyn9qYiMtZiNxRek
v9n4I4t3Wf3MxrlZnlqU//r4hsYfPqQ9vHwfsu0n3wb1x1J9JByGZ5Kfhzom
5Emq5gP2m90nwR+PRromJExZtTZbJbCSSl+sTOTIRHXeLp64+uqfVPGSoaGv
z7gQL/LqUbzEzhXmQZTo0sqzrM7vZQ4vGR6uYifk2HBsu+12cPsJKx9HeInF
TKr4SnVtEGfOtZGNtnaJz2fhJ8g1zoV/UtNU7SL33t8r1+rj5OFHCa4Bdsp1
ZSvDe4Vd+LVT4JHMddaX+Kn4JddULixyXvF1yvXn/rLXsnR9kc0xka7CfeiP
KPEJKFZU8ZHwOHin9vBDVpGDSbwHdo72/CEWQPHstg5Wnr2n48pRVt0WK0Pg
DdRJ0V5nPl7CeDbCS3Qt7b0lLIH+xKej3CPiZzRPyD/C14xdjAxthI/4GLf0
BJ6F/qMvsa80hyxf9Mli8ZI1We/iyTwTeV9cF3sTfYSxUA07YQrMD/oTe5V6
bFYXamaNWh+G7G3l0YGXWPwia0x03OIlVs5ZjEJ1ellLyHDWBmsIWYtOqWcQ
HiOfXFZORSNSPLXkvu8P4rmkV5I/attuY5Wt/LNzIqstzeAlnbLJrOz1fSk6
h7nCXt7yCfvj3kqbbLyVeCtynnw05io4JnifrX1QT39u9pn1bjHqd7/73Sn+
wZyCz/m+QTuP+K3OZz23Ms9qKeAl/fbqRbxEc9DGmGIX4++hZoFtXxZfUX02
YgOsra11L6xbn8nPQxehhrd0dx87pS3kMWpvPdUkl6yAyEm1Nde1PnlXLSlq
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
hmxlxS9YuUyMueI8uIbsRqtraF3b8dH9fJ2kSP/rOtZWk+6TZctm+ZmKkr2W
jVfR56x5Z/ECrWPhUKxzGxejMVPfy9du611tuOGGjmcQgyw9iftwPeUA48cW
nyAXCjkD7pwnA5vxJdh5XmSNZdm9NqdWORngxugiXE+4oO1P7aUGpqI6GN1Y
49YX1eycsG1FplPfI0rig5HbGi8b/8D9WDe77767O5e6t2AMzcbEFmmn5l3R
+CA7bppnlp/Y9mmeW1+W/ta4a65L77A6h5XtNoa2ES+wOoKVjT7v60T/0V7k
vPLoseN0H/WF9jBDpssOQs4zB3hXDo3tez/nTs+suWTnC/eRfqBxIYZP+Th+
rD54jrBjraH21o4/J2vxEjDcgJf07mtwoLfxEq1/dBlsI+TCwQcfPI0H2Llr
bQt7Ta0rH9+XrLW/9208+Le1162/x17D6gG+3W79N7qGbH5rz4gf2Hw/3UN8
VLqdeKq/fq1PSDypWZu3LLKxHJIJNk5Izyv9yGLjnKscThvzITknDMmfJ/wG
WUssJzoVmIGNHxD/1djKV4OOpbpTRbF8z06p2TetE3gJ1yQeC7sDOcC6UT9a
XY3P6P7s0aQ8efk5pKc3O1d8/c7vk07MPWSpYkvwIdgYXvaB4VnJnyOWlRxg
Yio32WQTF4ffiXxtO0etT6bT60p2pOUbar+N8dB8lm6g/Grxhk7hJCI/Vtf3
yRS5l/ib+o/4J9YeOY2sJ9kDfI9+Qx1iciXIeeA76mirPiO6svW3amyEuVis
NeAlvYeXWKyTcSIWrNJiV0+ies4UTmJpxYrHYsWTKLbEx0tEYCbVuq9TskPz
wsb3Wf+vjxVrjtt4eB23MRmQr1dbeSz+avmxzvX1fdsm22dWf+EaquvQbBy9
P9aSRxYXsfpSK9i9zrO/sbqM+sq/h+aGxVPUX+o7YcbSA9R29bP6h2N2Xxzi
Ti3+wvfEM2GXkRuFXYdfG5nB/tNqmy/Lmulv6TP+czZaH1YX5V17IXL8jW98
o3se8nFU79zye6szMS85VzX0u7HO8zC9RvNPn9WnxHCpLie8X3szaK7ondgB
7QfJXgz0gXwIdp6180xcQ35Q384o2neKIReGb39v9TEbXyU+IVtBWJHaZNeM
rkk7bSxLo+e388Piu53qO/t8vFOLmDWG79vq8Xpmau2hB5x55pmpvUZOeZRg
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
FV+SYJqTgVonzRH04AoPmzA6cenzud9J9ofiOpK/C41J1jpuhcBHd9hhh8m5
c+dOMq4Q678iyyYXLlxY+byUvS3ARiYXLx52+1wsXbo8PY4dBGkPjGapfLyi
XGqE7RbFfbuNjfhU9tpZFanZGL1mYvZaGTfxG/GFeuMvuWBJa3xE+wkHvKRn
X7V4ySVVvGR0ag50h5x+OYl+6VO5tkiwd3qFfF4TfKH9RRorYkioT6I4E3xx
CR4yWflusvK30zt32WWXyaGhoUkwFL5rnR+00+6Zw0valfm9SrY/jZ1TY8N0
Kt+gkV7TyLbNGvuRkSWTkMVBIP0t2SUyf8fjS4d7Fi+piPk1oqGhk4bmrhHP
u/jSeBQ7ZHzZ5Bh+8KXL+dvpa8MjYxM1NDoyURm/QDnkzy3mesWGXlmxoZ9a
vHjxygQ7mXZOs1Q2HlQygaNPJjWweFc/ThTtz6L2rU/iI8is7bfffqKyjtIx
ZIwfeuih/1eNNavaOuAlUIJxCC+ZbBcvqfx2YnUl+jBHXiS6wvhkEXlUJrUz
/8tue6/QTOksWXyjyLjC66FpfHu8cu7Siv5bea/I03jJyDByFnnr8NVFi5Yk
snfp5OIlYxMPPbx4IhqYPVmhn5atN4TX9Nfg4OwvDkSzJ+fPv2Li/7P3HeBx
XNe5UxYAi7pc45rmOLGdOIoSS7Yl9/Ls5/glduKWWLaKZdkSJfYqUr1QoiSL
6oXqLGJvIkH0xk6AAEESRMf2DoCUZBXunnfOuTO7s4sFSKIQLOfn93MXu7NT
7tyZe88/p1jX5wjTmm+Gff0yGPIem445bJq57jkDjUWD13zknnfSmOzv/jba
9qHwxMckIj3fpjEExw9+1v3VK69Iop2ZjMZjOL6o+wPZn8fFPrrrUPa1r4Y7
vOzTLifhfnty6DzXQYdW4rQt8Xu2PZw+RCdKWo9tN2U/w89u22Pdi2kOEwj5
U/QHcb1BD/ZJL/6txpkA/u0cd3KNVfQaiQZAZ71EKxztMT0b9FhEM825mmEm
lyxfAV0+P2slyIRTL8nJ0Kjby6c8c9nl1Oexn75PxL56dLT38XQmtS1d816v
l1+zdatctsow6Sb29hNf//rXk3gpJdra2hK4H4n29vZER0fHUdofp15i6yK2
VmJ/N1itRPxLIuyLimMGjzP2uXTc//sdk0a73x6rTx8vT4E5+KhyoHM8VFrr
Bme/sunoXxn745jnpO4P9j0o+z6UOS+hOuRp/RTvF4mAP5L0+8IJZDIUjOF4
3J3Q9PwkstgevEd39nCWg9pfV1AfuObqWv47y1esOYpzp0QkGk9az55SGrni
cM2rg8xQxI+2kS8naa56/PTnYPAEmWsdgyPNuX0Bb4KI7+1X+g7n5wHhCTIU
CRKT9IrtCB6f2/5MeHpSxQNEI8oWC4eSX7r8smT+mALSUBJ4nSRIM6H7AN4j
4PiYvY3wIHhyjt85dlo1FJKnO+1aEM4chxb7zP2tz2AwzP6t/Xfab5tzCGTY
Kv1vP0i6nUMv8QJpJZZekgyESSfB90E3MxhIM4pjVxiXIYZweSQE/F3JPJcG
pksrG90Bvi9wqB9n5OXdoRnm0eWr1yS8wVAiGI0lQ7E4aSbsbzIQR3u+fCoz
mOWPQNe2rQcGM/WTQfmWCAMpnxLySUTbOYHtTPprto1i67LH9AM6QbuWfz9h
woQEXkpH161bx3oJ0fIfSjhtIOc9b6D7kPiXHJvpdszUPuzznW33nqkc7etv
NJirHUZKL7HbmO4z9rXt8/kS9n4M8BzQ1vD4XoC/OerzeN/3e31HHcdhjQs8
N+J7gqWRJIP4GvRFE15PKOH3RRJdnf5ER7s3oWtjkpo2phIHbpdGzzoEo4e0
XmIgTZdr7F2GPva9V15e+o7bEzwaCMYSoTBpJjaVdpI5Rw4Pmmib4Pw6xAxH
AymSfuJkf1pKMNsfxeEf3ZfH6etyghxo33C+ncimre04bTw8ZmEW7bbBdoRs
XYzsGB/aKkTbphnoPJzaDJy1JE0xGo8kyS+R9JJILJq44KILE5/89KcSXR63
Qy8JHIdecix94tTRSZRWktJL1H00FD8TCcFAFGhOQK9IeqU5QsKm/dlgSevO
Jn1O24+Eu5PRSM+ApByMin72kSUdlmjfX7z+LqY/4E4EQ95EKOhNRML+JDEc
wjHH52a621uS8XAgUVVelNyyaV3yEx/9EOTn6YdHe4jPBo7z+brLNUPPyz/y
4quvJVo6OhOeQBB8IY7BEb1kaHTOuTnm0GZA1Uy3bOrBcyTshNOFOewl1kuw
bckmoZino06tZITaLzFt2jTSSxIrVqzg7ZNtROdW7WMff5AMDodmcjYy+1mt
U8PqTwc7Hrt7FPSOPhre8XK09/1soFOXdfqWZN8H+vMJDjo02qAf1+XzM/1e
HzMWiUI4iPcBf0hpJEonSfrcoYSnM5DwuXE+7I0mN24oTry+bO1RXRvzfp45
vsgau8W/ZDShp0B6iZ7nGneXoY1P/tdP/+f9ibfMeH/ixJmJqVPmJKdOmcWc
NmWmxenMGZMHySlTmdOI06ZZnNKHU6dOTnHKlEnHwSkWJzles7/rj8ez/hyc
eku/nDzl5sRNE244OnHSTUdnzZ529J5770gsfOzhxAsvPpt8ffliWL1mufAY
XLzkZVixcim9T+JrcsnSV5IrVy1LVlaVJg8cbEj4/F0JsmXIV154mjFg60Uh
1kt6DvcmNF07+sVL/vlop7uLcibwGNZfjqMR4/HG/wyWqXwsyu8i4Asz/d7Q
GcdYpCfp6fJD7e56KNxUnFy5fE1y+bJViVUr1iZWr1yXWLNyQ3L1ivWD4srX
1zLp/fo1m2Dtqo3w6ktLk48seCw5Z+a85C034TgyeVb/xLHs1jm3JWfOnA03
3zwRrr72Gvjpf/8XfP8H34MrvnklfPmrX0pecuk/JS/78r8mv/6Nrya+8c0r
EpddfmniM3/7l4mLLjw34TK1pKFrSZzEpDimwISxY1yAnxMDoz3E54Rp3kr+
JT/52c+T02fPOTpt1uwkEqbMwLF9+kwYiNOnTxcOwMmTJ8Ott94KCxYsgEWL
FsGyZcuSq1evTq5atUo4DNy0aVNy586dnFs1Eokk0G7J8CPB90dz0dZWbA7m
+R7FgZDtNHHiRMpfknjhhRcSuB+8/q6uLmsbkT4aif0seTjYX63is4WUV5di
sWw/I6edS5/Z8Zn9cbR9JWwfKPJZGAwDVq7js5WUW5NIWuVw0V4nccOGDcml
S5cmFy5cmJw3bx7bhpMmTSKNNIn3d2baZu1LvDckr7nmmuSPf/zjxBVXXJH4
0r/+W/Kyf/tS8utXfi35nW99O3n5l76cvOIrVya/+uWvJf/hs19IXnDuB5KU
A8PQxthknxLk27o2Dlz6OUfzjHPKdMu3YbSnDmc1MvUSw9DHzDS1cw/nGxck
TP2c9zVt3HuaNjapaQXIPD6vuuZKmkxjSHRpJtMwXANS181BUB8ktRGhYfRh
wnoF/J6JZ0PooNUmSQf5c5fLIOJ8RXvPYqr97PfCU5+p82UalBfzfcOF9wKk
Kz8vgX+/jaTXo+q6NOH4qQ+BJ7MNdN5fQ8uzmH9GEseMo2rcyAMHcV6QT0wM
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
PkvVkHF+l2O542U44mce87fW+iNhPzMc8iGHPucbmj0VStUTGOwcNH3uT2Tf
B7uNoR5zrm0PZV3DeU6Gfi7PHA50jk6H4z2R/evv+AZrFw7ezgxbHHF79hj3
ypNR4+ukHatwFHji16ydBzaVDzaEY04kDP5wCLzBALjGFIBm5m0etjwmjjle
hlaiG9/X9Lyjmm5G8aPzTkrstUAgEAgEpxuy8pc4xslzkDEk4J8/serljJh/
Ca5p3rixeYlNb2xIBvzeRDgcTvh8PvYtGSj+1+ej+W64D526SNBiwPo8HI5C
JBSGcDBz/jKYeQ/5u4TDQWa2DmJrJYFQej7Oy0b8x9RM1By+rz1i6yW8jhy/
s/fFXkbpJcEMzST33H1wttqJtNvx1yLuf1uK/oxlg+FM9jlHOY+377Z47sr9
J0jP+vh9INWfcu1Tf9pb9jGkz2mu+pO5ftdXUwqp8xjK3Bfqf8c6P/3lGkz3
39zr4N9ktOnw9JmTQfu4crHv8o7rZxB2UWrdwZE9puOlOl+RY/SzrPvGcdqF
fdd5onZl5jazt0tt2Lcdh2DL4v01GPKmmOs+m9k+A+/3YOqp28ep7sNBxzrT
11Y46/NhOXbhSeDgr1O7Zo4/yHoJaybheIw1E9JLXAUF24asl+i5YX33N5pu
+lWOV+OHVs4S28dYE81EIBAIBAILmTqJkTFeatq3ke9pKpfJv9jLZ/iYDNtu
aHMNXYM1q1eSPpKwa+3lnqM7tBCHRhIIhKz3mfaBrZf4QkovIZszGo5AdyQK
Xh/N0XFdgTD4vCGI4+fEaFC9p/VFIjH8OwBe/IxyqNj2Ec11OU4ooua7wXCA
9Zs2a15NOok/6ANPwM/7FoiE+RkSbd8fCaTW4fb7IBYNs43unCfz97ieCK6/
y+fF5QLw5pE4xONRiMUiuO6AZf8FeNsRSyuh/aH1xkLq7x5cJkbHHggqWwRf
FVU7jLT9Rm1C7dmGx0n7HPAFwe9VvkIqb68PeqKWHhDJYf8Fg6xxBfwR8HiD
fJ7onB2Od6v2jEWZ1H5s31uaGJ1r2k7Er44/iO2n2kzZJqlzadlodK4p1stP
54reB9S60v0qrPoK9Sd/CPrT6aLhGLetx+PjGLJuagPSX0J+Pla2sSxby2kv
hkNpnUz5Ufn5XFLfiFl9NhZRWp+TA2kmqRh5PG4f9sNoVPU5pbuo+X7u3yt7
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
0lK+ACuWiDQTslVJbyD7+wjOtd8O9UAY7aAdLT72b9AmFsHru9o4FwDpQeMo
z8PNRXz8lCeT6tp2kq5DcfG+KMS9UZWjgmtqDGXe19f/3vZTp9dmnPtT7Ev+
0zVsT8bjFJcfYXvgrZDyQ+f4lnC6PgvFMjxd1YK2fCn8esletomJoaCqOeTU
S9gnhPwE/BEY/0Alx0d53QHWYSgXLvmXGH8sglhniHUZu7aMeg3BI5RzYFIl
/OKlen6uTXV+OXcn5UglveTebdCB7UlxUQfRztLuLed2fX1nB9dWovqx5z9Y
DX+OKftHewjt8pvL2O6ifaK8MRc+XAnG1GJ+Nk+xRaQJ2bVlbF8Tyg9xd/kB
3v//t7wWesLW83Bsp5cor4Gll3AeVivXL5H1JaqzEehbM5pq9HB9nwnFyFLQ
5uC+31UBJsUP3VfF8UbajUVsz33/+d2cy5Z0Eupj1LfIv4Rye1JOXsq5yj4j
lKeEakRZeXebOigvrup/09c1sq2p+pgz//LQ7ApbLyE7l2wJ0pVcVM9kXiks
2d3GbfZJ7O/kR0J9mfzBvvLSTtY3l9R1QKPHD2NnlcIFeJ4OWxoT9RnyhyFf
g8U7OrAdyuGPG5s4HoNy+/C5vK0S8qZWZPTtjP0Kpu1x0ks4HmdBGesldF2x
JngS8r3+n1fr4ULcz6e3tnH+FfIfojyqZJOTVkqaaUunHya/cRBck8rYH4jO
ix/P8dVL6sE1pZRj/rimLfYh0kns+CzSjyi3CPWxOGsJqnbXmIXV7Hei4o0G
1krCdkwN9td8ileaVgLv0L2I7n/dUV6G6vWQ/xDFtTjjyYaavyNi+QzSe6rb
bedT+e/lu2HMzBJ4Fa8tyjEUxeMMheM8Tnix/1cd8LJecskTu+FwN16fyGiM
Ys18rJFQjqOg9b4j6oNuvDef+wTd5zdB4YF2vMeF+LPrNu5lTXF+0SHo6gop
TcbyBeOc0djWlGOn0W3Vw76tlGuesX4kuV7PaA5WL7HeG465GM2lPqcZeq2l
ldTh33+bMcdyvgoEAoFAIBh+5IiXdcbMOnxP8jTDnKiZLtJMQDPNJ209JFsr
cfxG5Y+19JLVI+BfQroAaSRE0ktoTqxRfRC0E7i+wTH0Eprnm/RcdOJm2Nbc
yc9AyTayc0mkaxeH0abdx/Eu91c38TPmt9E2+yDZFmi7vbjzkKpZ7Fc5DI/0
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
aVtDP22o7qQtR3vozaO9NONAK31vewPdsK2Jbt3ZSn+y4RBduqqKnj/UR0NR
hXl1eMK0cG873bGthe7a3ky3bGmmv1p7mHJWllPOI4U0aUU5XbK6gu470G7v
jYbPAitIr321TWnMBP9v8YToDVxjfR9taeqlgnYv7Wjup9freuX/z9f00M92
NNN/8nX/lG3uuk2NdO3KavrztbXUBu4J91+L10fXvVJHBR194kMa30P5WmHu
mzgdG4rToV4ffWF1Le1u7bOxkgT3Y0F3kO7ezffNNvkzfv3hpmb6k2eP0tQn
a2jyo5V04WNldPVTlfSTrU2Kw8P3DH8R4wG+zTnFNDj2hcEveKGqi774fC11
8f/9jnFg8BKMLfT3MNvAmrJu+vM1hyl/dQ3lsM1due4I/Wh3G61v8FBdCGMj
JfZhxdXYEy5KfFDGTGt/mO7e0Uo372mhW3c10427W+hzLx6m3FXldPHaarqA
beN/sO3hb2Yf21yH8DQsxal4qKCD2/QwNfSFxD+HP4lrdOKuZ8JM8Dn8XPxO
7eHz77UPZcZFn8+i+/a10e+vqqZLniqjS58up6+/dpT2NnsEL/Lx7zBHwce1
uRx8/k08Bu58q4V+75UjdMFz1ZS3uorvr1Jex6+uphy254ncdl94topKOrw0
Mpyy8TqDmyAGIBDwCU6CeUpegW2wrzjI34Htravpp9eO9tPuFh9VdIVpf0uA
Nh4doE31Xnquqk/sBvX2XW30Ux7TV3FffW5Vrcx/Pp4jWwe8dMv2RtrX0k+e
SEjOY3xdwwMYTEZlLvnGS0dpd1u/4LSw3xT7voe5r2ft76Tb9rXTjVxvYRv4
0qtN9Cm2jUlLK+mCp0vpqlUVdMOORjkOjns8mhT8N26Nbbsyz4TBbQnLK7Cf
fu6vf3u5ga59toYufqKcJi0ro+u2NdDsglbaXtdHPm/IHh+DfC5gGMOavwV8
6lG+zrthe5sb6ca32+gfNzXQ1Wxvk3mcfWoV2zOPuT/8+WHyxNMcJNgFsJ6Y
5i48WthJ/8Dz2NTVlXQR92X+igr68a4m2tzZT5Y/rOw1oTiN3X6L+6SPXjnM
80pjP9X0hGgT9xls5FXMPXUDNLe4g27jPrppZwv9gO3+715soMtXHqKni7sF
k8IzB8+5EL//3uuN9JO3GgWzSMewjN5+Tf0B+uzKGp5/PII7CHcDuAkwp1BA
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
0DWS5bNtba3qc8IvWnCbHJc/fyR54GWnl4Rrs3i9xK9xinZrsjlRv3vfuuST
P3wp+S/SZv/1zhfV9/34/S9p/bGmwbNbu9z6MHa/cDJ+ZqrTlZ2/gXE8cpdC
v5grbbaj0jdEP6jVS+ADL8f8qD99XPskjp+ulQFNTXyunq5uPS6v7dyePLCx
Tf1S1OkNu3879yvO5/7D+zbqGiO45/zRO9aJT7pR+9En7l2f/Le71iUPrmtN
Xh/odfP3xxFTk/qD0LzEF4Q/ePm/rNH5MLgHPKqeKbZRfCOsL4U1cP+XnCdt
naXkt+95Wf2nFZsqaR7iejkarkIuVPnc/evbVCvBvDrkYYg+/3jyyXtfTn7v
3o2qx/w+1jiResKwjszH7lqfbOgsac7f8zDfSc4b+Os49p02xynsByin5t0U
/2lrT161FZy733/hVe1zWEPZ98Hu7k6N2cF5h76HOW6oK+Yg4HzE9eKZLd3J
vK/K9QDrzH76oeRE8SN/9f71atd853nVJbEe1s3fXav5MhFDgmsKtoF5CEff
tlpzhPo5Vd4mm3en1rQOJafLad/rLSdz5Tpx8N+tHJMug+9o3qRbH9d10+H3
+zwRec39WtD8ntBLvvv0Vs23+/v3bUj6ut0aVQfDH5d2/h25Hv7aHS8mvy7n
7MekH99y5/rkFvFd//i+9ckfSh/+ofVfHxuFcvvYk9H6r+YHKbtrE8qD+MHo
C48ni7+xJj1/Q9M8reLH37W2Tdf6vvhf1yTdrT3Jps5u6W/r9Hy7+HvPJR+9
fW3ysTtfSj7+o1eS35Uyw/7g3g3JH9//cvLtNa1JS3dBrwmIN9E5H3K9uu2x
V5K50Ig+/XBy2JefSH7lOy8kv3X7uuR0xIkhB7f0i7999FX14etpQjon066Z
uv7an/0kueOFzZarx11XEBey6pVWnVd1xl89mWwtuDXE0TcrwTXJz2OFIRbz
7+X3CDk5jvybp5IN27qTX2zvTY5AfiS5nmF+YO92178xhxO5zxGD0wmN/+FN
yZzPrdQ8NEd97T81RxHuDWAeWV9lu95P2CK/q7+NnDDIb4R10z+3KjnjH9fI
sZVr1l0vJZf/27PJEYi/kfof8ldPJKtbul1+c7E/vnND+rvk7JFkDtZakmvf
/L9Zldwiv2+/J/1lrVzbX5Pz/TVcg//kYV1X/mP3vFTX0GdhqHu/5gIvJx+X
fqnrXyMn06cfSY76ypPJTXJ8bpHjg9+QRfL7jd9yrJt9wBdXJvduaE3SuWNV
esnYdDzoI52dnWn+ku7u7sF77rknkTER9RJCCCGEKF4viRtyn4/ihuQHt985
2N7RhTk5ic9hMl69pNYnxZj8FwMDyX3rtiVz/+FJzaup+SUw1+YPZUwlY/WD
/25V8uyrXZqXr3+7u9996GdXJYd99Skd/4R+Su3YOr03WR5Ifv37G9W3Q+4N
vN7SUUrO/MYzSQ733+A3feonOncCvjH8C/i+0Z+v1LEe7q1hbNhjMej//lyL
3r/KfeoRjZtQ++SPk9znH00efGmb3pP0seVu/FVI74O1y/j8a0+94jSHz7m5
NzBoJZ/40QadC4P7wuoj5vNaP9xfx33XW3/ySvIbMjY8/utP61qezX/t1umF
n4M5CvAVkI/kFdx/lPqd8bdPq8+A+GrEnyO2Hz4ncqBifg/G/Rhj/7Rvu47p
35T93Ir8fZ9aoffyEMeucRkVd/8Y8dTI6XLmPz2pcTCrW/G6u0ov8flGXb4K
2VdnwWkwH39ENRbNP4oYHWhVsL9YoXHpuS8+kXxZfJHWTjfnHPdhJ6uXFGwN
ytd2vK4+1uNbOqS9VibH/v2a1I8eqX9iGx/+3ou63suKjR2a3xDH8I2BHcnr
yPFpviziO+59vjWZ9Zknk4/9x4tJvi2v+sVhiGv6xGPJrM+v1BgO7Vt/8pMk
97knrZ89pjl8PvvABj0Wbq6++UtjGNsXg7LCD0If+6T4Fdd9e6321+yzw+sl
0AC//Wy75v45/Wtr1Jfa3F1OPvfgpmRrZ5ZPwK8JkuZokPJ95VHx4W59IvnS
I6/oXJw2rN+CPLKY8/QX4l99Qo71H0kdkbv1D37i8g19Utrh4yuTv7v/VfWv
oZvB7/GxIdBFdD5Tr9PxxE9J86D4cwoxKbP+cmWy9BtP6xrWyBtclH6HuUSa
l9Py+Lp80ZWkratb76O/sf11p52JX/qU+G8f+9H6pOFLKzRWpPHWFS7/sVwL
cuLL/tYD6/VzXbZWl4v3d2uNHPnV1Uksxw3l07ggjWcrpv7/2NaCHtM9bo3J
0riEvj6nJdz6cBL/9WPaV0b7/pbO7uQ3/2N9Mu8vVyUr1rcnFfmO93PlWq7H
H3OdcC3H/xtvXZX8jvir5faixmvM/6L0099/RPNAI/8F8iAhX0b0icfdccQa
s194Qv3qbXKcUE6sQYO6p3mWR+jD6TGVY9LV0616CWJf/mHlluTpzV02d6K6
z+Kchpa2tSuv2hzW/Opo79E4nD+5f71qyfj9gJaM69ihX1id5P58lZY3lr4a
/cGK5PgvP510tRdczmXpG11dXVp2zBV58uW25EzMYfr0w9LWj7jHTz6gmj7i
KrDeFmKj8D2fL9dpZG7OD67TmMfzKeRG/czjyQPrW7SPeB0J9X16S3sy/+9X
J//7J5s0TrDS53JPo8/7GAidfyXtofM2bb2ec/5pjV7r73h+W7Ktq5QcKP0w
+u9PaJwgNBO0H9a+QY6hHlt/GP33t+7ckMz93BPJ5d9cq3Pq/HrG+B3E+jLo
09AFH9rYmVzw9efdteqzqzTvrv6uIB+tnNML/ufq5FvPbk3e/OkOFwco/X5N
S5eum/Puf34mmSW/PdCIZ2GOn/weNn/2CZd3Vo7FD+R7uPeA31DkTW9GrnbZ
ttqnVw6x3J+tSu5ZuzmNzYGuh/sX1337+eTgL610eYg+4/KXq74pvyOzvrAi
+bj8hq5r69T4vVqtZFxaZaEwKH05zfWK53fffTfn4xBCCCEkJZyPA73kgQcf
0vgSzXVp8z8mrpVk8zxwrx6x+8Vt+eS+lvbkMzL2wpyGP/rxxuQfn9yc5DuQ
B7Vb/YWKxfZ2yNgSsfMa/25zb8JcH0P0EvF7nt7ck/zp/Rtl/Nom5e+z+fBu
bIp7jS/JPh7a3J58X/7/L89tTT798CvqK696ucu24+ZiILfC6/1uzs6jLW3J
vz23OfnBi1uSx15t0zE3xv06D6HQY/kl3FwJP2eg02I0NrZ1JPe/1JrcJ+Np
rHOKe6x6T93GdnlbT0HjGeD7at1LST/yO/RUkteLNr9BvrNBfJPvvNSSPPhS
e7Ji7TYdY772xnad11/Z7tbHxDahl/TYnH3oJxprLXXBGo8F8yPRHt9dsyV5
uT2v9/bgr7q1CFx+lv6+kubWe2hDS/Jyd0X1E81bUnb5FOG3Zmu2uHvZD2/e
ltzzwtbkwU3tye3PtSTfeaEl+eYzm1V3umddW/I9GUujHXAvHf7GVNyn97E5
iP8I71Pfv7YtWb25exStz20DmgfG+N9/Zou2888Gtqsf2VVw65giThyG+U3w
TZ58uUNzgCAfQbf4QPD57n6hLfmB+Dffe7ZVH3Gf/3Z5D49o53teaFV/Hvdd
0d7oY2m+ihHG+PA1NReozWXAI3Q2zE+DL1nP16wb8yXH/M3e7Zp/Gflzdkgd
ka+ibH1B75sH8SU+tgTvY22Yf35qi+ZK0Hl08r2Vr3Ql33qmRe2bz2xN/u3Z
FrXvPNea/OualuSOF9s017JbU7ukGoDLK1RIY7GcVlZI51Gg7X1/8H3jW2te
Tbb0dKg+h74HnxP5bv36yl6fVN3R1tqCRgjtEW28a+dPna4px22LXGP+/fmt
OsfugfWtmscS693g2KNe8CfLyAmh+Zf7k+daupOVmzrMZyylc1Hq5cGZbB92
moPTNXGtXLVxW/LY5tYxfX/njoFks/j3d8r5hvr7eW5oU9WapT30HLEcS1ib
61WsKVR2uXrWtncn97/YmtyxsT357vMter5+S/rr3c9J/5Vr5LfkvLhX/r+5
y60Zhvimis2383rJiPUL1u3W9V2wHruVT/W/YrAuip3DBfssNKw1r7QlP97Y
ovPfcJ1p6+lJ7pHr8XfXbkm+9fSm5D+eaU3uer4t+b742TCs/fPwuna3vli+
knR2drs4QCkrNBNcY6GZYO2kV1q7kjvkuvz/Vm9K7n5+i8uFJG3zmrSZavQ+
h2mwpovmM1VduZg8JuX6ofwuoG5hnCH6OfLpdNl7mqcUcT+25ra/9qtm3Ddg
1wO33+e3yvXz2c3aDtstHvCHz21Ldu7c6eZJFUuqk+h6ashVZGvdtMlxf0p+
WzEXEHl48L4aYlEwF836dr/8tiMXOZ4j39U3121N/l2uC7eva022yu/Bto6i
5lVxuUQKqV6LdX0Rb5e3mB3kd9oC7Umu93dJ37td2tHlNC9puX8s27zj+dbk
+3ItGM5uf7Hd8p1UsnlORRcXhT7yfFtX8t2nNyf3rdkq/bY1Wd3akbRIO73a
3uV+22ydu4loJV4v8ZoJ9BLpk4N33XUX18chhBBCSEptfMkdd96d5i+ZGr2k
kvpiGN/AR0JOC+SCwPsYe/dZnhO31m6PW/NEHvtK1XElPmeHz0VbDh/luzsG
duq4sLey3XKB9DrfB3qDjEM1V16/y1OCusF/hM/ajlyTiAmGXyxjydBXVP+g
4uZZb+vs0Vh55CPB/dG+PjdXHuO93oqNv0ou1wnGzj73JfYF31bj2IM5RRgv
I94A5cd+UVfcZwzH0t5P7rAyouxoQ+gNOld/YEAf0ba6bmuXi6fAGBx+BbaB
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
QgghhBBCCCGEEEIIIYQQQvYI/x+DJ/NL
    "], {{0, 455.5}, {550., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{550., 455.5},
  PlotRange->{{0, 550.}, {0, 455.5}}]], "Input",ExpressionUUID->"1cf1ca17-\
e222-4e28-b74f-606ac4a5b907"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.2 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"dcb6d2c2-072c-46c1-aff2-916ba3ddd176"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 404, 6, 115, "Title",ExpressionUUID->"bf3f62ff-071c-40e8-957e-6654073ad6aa"],
Cell[CellGroupData[{
Cell[1009, 32, 169, 3, 83, "Section",ExpressionUUID->"b65f5c97-4158-416a-a0be-4bce61759dcf"],
Cell[CellGroupData[{
Cell[1203, 39, 181, 3, 40, "Subsection",ExpressionUUID->"53799b5a-5086-4e9c-8cc4-79e82b55cf3e"],
Cell[1387, 44, 1077, 22, 321, "Text",ExpressionUUID->"f502a67b-09c5-40b6-b62c-5ca89b4a9932"]
}, Closed]],
Cell[CellGroupData[{
Cell[2501, 71, 318, 5, 39, "Subsection",ExpressionUUID->"a2fb99b7-2871-4af1-905d-59cbf9324dc4"],
Cell[CellGroupData[{
Cell[2844, 80, 555, 8, 39, "Subsubsection",ExpressionUUID->"6bd20e71-e811-4f4f-a3d1-0f88562c974f"],
Cell[3402, 90, 500, 10, 66, "Text",ExpressionUUID->"a2148367-7004-4ddb-a93c-63ab6250b961"],
Cell[CellGroupData[{
Cell[3927, 104, 303, 8, 47, "Input",ExpressionUUID->"4889bbe2-b297-4470-8dad-60ff90f99d41"],
Cell[4233, 114, 226, 5, 47, "Output",ExpressionUUID->"36badadc-bed7-4cc0-8aee-652d8770812c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4496, 124, 639, 16, 48, "Input",ExpressionUUID->"37b13f3b-2653-4c76-9c9f-3aba21db1958"],
Cell[5138, 142, 329, 9, 63, "Output",ExpressionUUID->"865ac248-26ec-4628-b5c7-f9cf88d62516"]
}, Open  ]],
Cell[5482, 154, 200, 3, 39, "Text",ExpressionUUID->"26d10100-bf78-485f-9034-26ef4efc0488"],
Cell[CellGroupData[{
Cell[5707, 161, 513, 12, 66, "Input",ExpressionUUID->"2f31cd20-6c76-4230-9a2d-a8250cec8cca"],
Cell[6223, 175, 280, 7, 61, "Output",ExpressionUUID->"c14848d3-7a4d-41f6-a3d9-51d026ba36b9"]
}, Open  ]],
Cell[6518, 185, 204, 3, 39, "Text",ExpressionUUID->"5a213a4d-44bf-42b4-a039-4480750c67ac"],
Cell[CellGroupData[{
Cell[6747, 192, 838, 27, 76, "Input",ExpressionUUID->"bfad1bc8-c4b5-42f5-a4a2-103bd048e31d"],
Cell[7588, 221, 235, 4, 47, "Output",ExpressionUUID->"49c18b8c-c8e7-4643-a679-25e9b9e81b98"],
Cell[7826, 227, 433, 11, 50, "Output",ExpressionUUID->"b96b8e7c-e603-47db-a1fd-0bddcc14eb07"]
}, Open  ]],
Cell[8274, 241, 189, 3, 39, "Text",ExpressionUUID->"e272b757-66fc-4767-81b0-1efdaeaa5be2"],
Cell[CellGroupData[{
Cell[8488, 248, 611, 19, 82, "Input",ExpressionUUID->"755ab690-15de-49a6-80fd-0c85408e4bf6"],
Cell[9102, 269, 224, 5, 61, "Output",ExpressionUUID->"bfbf2cc0-ffed-43bd-a188-43d50a11ab50"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9375, 280, 211, 4, 38, "Subsubsection",ExpressionUUID->"88419862-3a76-4db8-aa92-3bb964f892bc"],
Cell[9589, 286, 283, 8, 96, "Text",ExpressionUUID->"69eb115a-9b3c-44ea-b9d5-4c2f66b7971f"],
Cell[CellGroupData[{
Cell[9897, 298, 277, 6, 49, "Input",ExpressionUUID->"de99d67a-5bb7-44e6-8ffc-6d4e2b91aef0"],
Cell[10177, 306, 669, 18, 79, "Output",ExpressionUUID->"a1f6f2d0-9339-41e7-94ac-90afd091a514"]
}, Open  ]],
Cell[10861, 327, 148, 2, 39, "Text",ExpressionUUID->"03deee98-44fb-421f-a03c-ab313fc20c28"],
Cell[CellGroupData[{
Cell[11034, 333, 301, 7, 49, "Input",ExpressionUUID->"6e4ebbdd-ce4d-43bb-a9d5-94b5f41f758d"],
Cell[11338, 342, 226, 5, 45, "Output",ExpressionUUID->"7503754f-df29-42b0-96a5-c0fd48ea2f2f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11613, 353, 403, 6, 38, "Subsubsection",ExpressionUUID->"a92087f8-8549-4e46-8947-7fc7a07013de"],
Cell[12019, 361, 434, 9, 66, "Text",ExpressionUUID->"2f5d9e8b-893e-49ff-97ee-ca7ed0b2a54c"],
Cell[CellGroupData[{
Cell[12478, 374, 476, 14, 66, "Input",ExpressionUUID->"10332cf6-3a8b-4cda-b639-da409c53aca9"],
Cell[12957, 390, 301, 8, 65, "Output",ExpressionUUID->"5bedd143-b18c-4423-98f1-6401c708e7a0"]
}, Open  ]],
Cell[13273, 401, 378, 9, 66, "Text",ExpressionUUID->"db944fb9-dddd-496a-b1b0-4de89267cabc"],
Cell[CellGroupData[{
Cell[13676, 414, 482, 14, 66, "Input",ExpressionUUID->"0c7dc6b5-9d73-4a11-bcb5-22daf5530082"],
Cell[14161, 430, 341, 10, 65, "Output",ExpressionUUID->"a19541b3-8fdd-4544-bd7c-b1a57a8ff17e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14551, 446, 286, 5, 38, "Subsubsection",ExpressionUUID->"824687f3-d4db-4b68-b5bb-0b83850c9393"],
Cell[14840, 453, 330, 8, 66, "Text",ExpressionUUID->"25286814-ef1c-4e33-ab2b-fb2f8a328ac5"],
Cell[CellGroupData[{
Cell[15195, 465, 476, 14, 66, "Input",ExpressionUUID->"5624c4f0-4e2c-44a6-afe8-b8a68cb5ca68"],
Cell[15674, 481, 275, 7, 67, "Output",ExpressionUUID->"ce094a95-aa6c-4d9e-aa15-6fb982f04088"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15998, 494, 283, 5, 38, "Subsubsection",ExpressionUUID->"0e49ae3f-5e45-4d5e-9f34-b731761f05c8"],
Cell[16284, 501, 339, 8, 66, "Text",ExpressionUUID->"0c5023ed-bb40-45ba-a874-a65ebca74bf3"],
Cell[CellGroupData[{
Cell[16648, 513, 273, 6, 45, "Input",ExpressionUUID->"a7897161-4516-4a38-a5a0-5c0d4bce2f61"],
Cell[16924, 521, 196, 3, 45, "Output",ExpressionUUID->"11fa8841-4a1c-47c6-9468-b8b853f21b53"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[17169, 530, 282, 5, 38, "Subsubsection",ExpressionUUID->"40213687-5c14-43f3-817c-c950d1f9a08a"],
Cell[17454, 537, 362, 9, 68, "Text",ExpressionUUID->"33a18c5d-3fff-4ca1-b23a-8676ef2dde51"],
Cell[CellGroupData[{
Cell[17841, 550, 195, 3, 46, "Input",ExpressionUUID->"48d69986-423e-4fdc-ae07-23b17f15d569"],
Cell[18039, 555, 148, 2, 46, "Output",ExpressionUUID->"7a97b750-116d-4e59-8490-9543fac89884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18224, 562, 175, 2, 46, "Input",ExpressionUUID->"56feb70d-e61a-47fa-9a0a-6a1f0ff0046c"],
Cell[18402, 566, 150, 2, 46, "Output",ExpressionUUID->"5ade36a2-ab30-4f64-9f78-fce3a001e9c9"]
}, Open  ]],
Cell[18567, 571, 204, 3, 46, "Input",ExpressionUUID->"1d546958-3bac-4ab0-8319-ed33b1d0b798"],
Cell[CellGroupData[{
Cell[18796, 578, 174, 2, 46, "Input",ExpressionUUID->"a22fd709-0172-40e4-a082-626a6c55c1b5"],
Cell[18973, 582, 151, 2, 46, "Output",ExpressionUUID->"6afbd1bb-8df3-47ad-aba2-7ed52526b117"]
}, Open  ]],
Cell[19139, 587, 422, 8, 70, "Input",ExpressionUUID->"10cdaa4a-18fc-46fd-8ee5-d50954965471"]
}, Closed]],
Cell[CellGroupData[{
Cell[19598, 600, 319, 5, 38, "Subsubsection",ExpressionUUID->"3ace38f1-632a-4bb1-a979-63fa05e24636"],
Cell[19920, 607, 392, 8, 39, "Text",ExpressionUUID->"1bd66e65-8316-4f18-8efd-19572abb2a26"],
Cell[20315, 617, 321, 7, 45, "Input",ExpressionUUID->"ea648de7-ff3f-439c-b3f3-609c88547246"],
Cell[CellGroupData[{
Cell[20661, 628, 203, 3, 45, "Input",ExpressionUUID->"e5c97a6e-ed33-461b-80c1-95f906c94e9b"],
Cell[20867, 633, 168, 3, 45, "Output",ExpressionUUID->"9a5cea25-75b4-4a70-ac18-08406512e16e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21072, 641, 221, 4, 45, "Input",ExpressionUUID->"fa8f79e6-3878-4182-b1d2-22a781b033f5"],
Cell[21296, 647, 214, 5, 45, "Output",ExpressionUUID->"b0b9f00f-2eaa-452d-8301-1241391b32f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21547, 657, 283, 6, 45, "Input",ExpressionUUID->"4b38ca4d-a1a1-4d47-860e-48f7ceb15401"],
Cell[21833, 665, 247, 6, 65, "Output",ExpressionUUID->"d18eca52-30fc-4fb3-9f5a-5a8531882087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22117, 676, 459, 12, 45, "Input",ExpressionUUID->"f6e672a8-d56f-41a6-b3e4-122243c55d8c"],
Cell[22579, 690, 2366, 56, 294, "Output",ExpressionUUID->"b1bd3338-3365-40ad-9ab6-88cb53864be2"]
}, Open  ]],
Cell[24960, 749, 209, 4, 45, "Input",ExpressionUUID->"3aa05163-c967-4bba-8114-fc1f9960c711"]
}, Closed]],
Cell[CellGroupData[{
Cell[25206, 758, 228, 4, 38, "Subsubsection",ExpressionUUID->"3e592ed0-8933-42e6-8b7b-818ce0ee30a8"],
Cell[25437, 764, 180, 3, 38, "Text",ExpressionUUID->"c1c74f16-947f-4a84-bbaa-eb57942cbb53"],
Cell[CellGroupData[{
Cell[25642, 771, 325, 8, 69, "Input",ExpressionUUID->"d4850ffb-3487-4009-8302-5de59e8c45b4"],
Cell[25970, 781, 298, 8, 62, "Output",ExpressionUUID->"da963a4b-df03-482f-8e9a-0a1f630b0a0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26305, 794, 359, 10, 69, "Input",ExpressionUUID->"24d28d5e-cc5b-4f27-84f6-b0551c910e84"],
Cell[26667, 806, 325, 9, 62, "Output",ExpressionUUID->"7cf97288-86fd-4af1-8ec9-7fd3a06bb66a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[27053, 822, 167, 3, 39, "Subsection",ExpressionUUID->"be3916cd-60b3-424f-9ddd-f0a839a00bc8"],
Cell[CellGroupData[{
Cell[27245, 829, 411, 6, 37, "Subsubsection",ExpressionUUID->"f082f1de-2211-4269-a373-96d3154c4b8a"],
Cell[27659, 837, 701, 14, 66, "Text",ExpressionUUID->"f0076813-9c3c-409d-ae1b-5439806662c1"],
Cell[CellGroupData[{
Cell[28385, 855, 336, 8, 49, "Input",ExpressionUUID->"e015b7d4-e35a-4bf0-912a-c8f83ee9b290"],
Cell[28724, 865, 7610, 144, 295, "Output",ExpressionUUID->"9e6a867e-7d9b-4e8d-8764-fdda61edc0e5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36383, 1015, 335, 5, 37, "Subsubsection",ExpressionUUID->"33b6dd24-a380-4a4d-b60b-073cb04e4c68"],
Cell[36721, 1022, 353, 8, 66, "Text",ExpressionUUID->"4208e532-b513-4856-b2a4-d3fd21af3913"],
Cell[CellGroupData[{
Cell[37099, 1034, 508, 13, 49, "Input",ExpressionUUID->"cc4e39f5-ac22-4c51-8b59-eaa67dc6e1ed"],
Cell[37610, 1049, 6555, 125, 305, "Output",ExpressionUUID->"c35695ff-1957-44fb-bcba-f051745e2c43"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44214, 1180, 342, 5, 37, "Subsubsection",ExpressionUUID->"731c5577-0794-4eea-a005-f0567f83b0c8"],
Cell[44559, 1187, 405, 9, 66, "Text",ExpressionUUID->"da041977-6295-4580-86cf-26767c222327"],
Cell[CellGroupData[{
Cell[44989, 1200, 601, 16, 49, "Input",ExpressionUUID->"a259022c-bf2b-4a21-9ba2-be047eb4f99b"],
Cell[45593, 1218, 3838, 80, 459, "Output",ExpressionUUID->"fad4144e-167c-433b-9565-c24e352c2ade"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[49480, 1304, 242, 4, 37, "Subsubsection",ExpressionUUID->"c45b2c15-3604-43c5-80d4-24219fb41269"],
Cell[49725, 1310, 249, 7, 66, "Text",ExpressionUUID->"ac3802b5-0d8a-4cdf-b870-62cd46e7ef37"],
Cell[CellGroupData[{
Cell[49999, 1321, 510, 15, 56, "Input",ExpressionUUID->"14343b19-e5ff-43bd-9dbb-0977a19ece4d"],
Cell[50512, 1338, 9886, 180, 478, "Output",ExpressionUUID->"1744e616-12aa-4121-976b-c0d6fface474"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60447, 1524, 366, 6, 37, "Subsubsection",ExpressionUUID->"0274ff43-971c-4222-bd4a-b7569051ee4c"],
Cell[60816, 1532, 402, 8, 66, "Text",ExpressionUUID->"1a9a9b75-1ca8-45e2-94e2-f71b75f0e1ca"],
Cell[CellGroupData[{
Cell[61243, 1544, 676, 21, 66, "Input",ExpressionUUID->"c60aeda9-75aa-4b75-b45a-887e329afcdd"],
Cell[61922, 1567, 1710, 35, 385, "Output",ExpressionUUID->"578c8b16-8314-4c17-9c4b-59b280d6a3f9"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[63693, 1609, 174, 3, 39, "Subsection",ExpressionUUID->"78b28e05-6202-44bc-9fa4-e5a70079d865"],
Cell[CellGroupData[{
Cell[63892, 1616, 317, 5, 38, "Subsubsection",ExpressionUUID->"8c072f80-99a9-47a7-b07f-2fa2f6022b80"],
Cell[64212, 1623, 346, 5, 40, "Text",ExpressionUUID->"21bb1156-2598-471e-8361-bbca3e711cdf"],
Cell[CellGroupData[{
Cell[64583, 1632, 228, 4, 46, "Input",ExpressionUUID->"e7c11274-f3a5-49e2-9e5a-66dd80e63495"],
Cell[64814, 1638, 194, 3, 62, "Output",ExpressionUUID->"132ce75c-070e-4fa9-ad6a-fb1c18578201"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65045, 1646, 277, 6, 77, "Input",ExpressionUUID->"1046680b-8400-4e9f-a316-ee8c84030f0d"],
Cell[65325, 1654, 229, 3, 44, "Output",ExpressionUUID->"408f08c3-1c66-48dc-82ed-1039a92ec0f7"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[65593, 1662, 168, 3, 39, "Subsection",ExpressionUUID->"64a937f6-8431-4960-8c80-9a19af657591"],
Cell[CellGroupData[{
Cell[65786, 1669, 166, 3, 39, "Subsection",ExpressionUUID->"61b7a619-1e40-4df3-acdf-2c4d9242cd1e"],
Cell[CellGroupData[{
Cell[65977, 1676, 158, 3, 38, "Subsubsection",ExpressionUUID->"235f15b5-c5e7-4460-ae6b-55f7faa66de2"],
Cell[66138, 1681, 353, 7, 68, "Text",ExpressionUUID->"d2e69137-55d4-4899-a47f-b862978af3cd"],
Cell[CellGroupData[{
Cell[66516, 1692, 231, 4, 46, "Input",ExpressionUUID->"1e1920bd-c1ca-44e1-9160-eb247deced1b"],
Cell[66750, 1698, 154, 2, 46, "Output",ExpressionUUID->"4db37fb0-8c76-4472-b864-5b189ade26ec"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[66965, 1707, 163, 3, 39, "Subsection",ExpressionUUID->"bce946fc-9e9b-4bbb-ad61-b48654ec5d15"],
Cell[67131, 1712, 477, 10, 122, "Text",ExpressionUUID->"6ac6ea03-81f2-4271-a813-6b6f7d1deddc"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[67657, 1728, 288, 4, 66, "Section",ExpressionUUID->"66755660-2680-40cb-8735-685f87c94546"],
Cell[CellGroupData[{
Cell[67970, 1736, 158, 3, 40, "Subsection",ExpressionUUID->"4a45307d-a464-44ca-b439-fe348bd84060"],
Cell[68131, 1741, 243, 7, 66, "Text",ExpressionUUID->"b0423dbd-323c-4c67-a870-7cd356f32425"],
Cell[CellGroupData[{
Cell[68399, 1752, 274, 6, 47, "Input",ExpressionUUID->"b74af34b-684d-4875-8cdc-2370649d6834"],
Cell[68676, 1760, 175, 2, 47, "Output",ExpressionUUID->"a1ed4c63-7bb1-4cf2-9490-515811293428"]
}, Open  ]],
Cell[68866, 1765, 194, 6, 66, "Text",ExpressionUUID->"4ba5075f-9310-4fee-8998-2c8db7ab7da8"],
Cell[CellGroupData[{
Cell[69085, 1775, 295, 7, 47, "Input",ExpressionUUID->"89114db3-ab92-4dd2-9ceb-785313363a8d"],
Cell[69383, 1784, 178, 2, 47, "Output",ExpressionUUID->"84a57820-70f0-46b1-aaa8-289cfb077d8b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69610, 1792, 229, 4, 39, "Subsection",ExpressionUUID->"eece97fb-0070-4a2d-8f6c-a2bed64fba53"],
Cell[69842, 1798, 2996, 59, 454, "Text",ExpressionUUID->"e29f4661-1986-4439-ba6e-9500ec383bd2"],
Cell[72841, 1859, 178, 3, 40, "Text",ExpressionUUID->"01f4f8cb-5c7e-48e0-bb19-1e39fc43f63e"],
Cell[CellGroupData[{
Cell[73044, 1866, 261, 5, 49, "Input",ExpressionUUID->"ed9d4dbb-361d-482d-8e19-7bdc9a20cdbc"],
Cell[73308, 1873, 153, 2, 46, "Output",ExpressionUUID->"c22bfb9c-3a5d-4dfd-8bd3-72a9098f5b6a"]
}, Open  ]],
Cell[73476, 1878, 177, 3, 40, "Text",ExpressionUUID->"1ee71ace-9bb3-4b6e-9eed-92090307e5cd"],
Cell[CellGroupData[{
Cell[73678, 1885, 319, 6, 49, "Input",ExpressionUUID->"57fac4c7-8fd7-40d7-8f89-471917092b79"],
Cell[74000, 1893, 238, 4, 46, "Output",ExpressionUUID->"4e583664-f571-45da-bcdb-394a8f7eb691"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74287, 1903, 219, 4, 39, "Subsection",ExpressionUUID->"6cc06257-d0ae-477c-b086-df13d9e0c766"],
Cell[CellGroupData[{
Cell[74531, 1911, 469, 7, 38, "Subsubsection",ExpressionUUID->"06bca0f8-7530-4121-9f50-46d7f15f3c5d"],
Cell[75003, 1920, 591, 10, 66, "Text",ExpressionUUID->"5d1e7c3a-4bad-4dec-a644-1bd76a962015"]
}, Closed]],
Cell[CellGroupData[{
Cell[75631, 1935, 479, 7, 38, "Subsubsection",ExpressionUUID->"b20b7adc-068e-47d0-9037-a70e73666d55"],
Cell[76113, 1944, 572, 10, 39, "Text",ExpressionUUID->"73b765d6-ca05-4f0b-ad05-1e043facd2ed"],
Cell[CellGroupData[{
Cell[76710, 1958, 380, 10, 44, "Input",ExpressionUUID->"2833080d-8509-4e62-864e-ddf5145c89f7"],
Cell[77093, 1970, 3045, 69, 293, "Output",ExpressionUUID->"c32e1f6e-2482-40fc-aec7-c041eb0bf627"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80187, 2045, 528, 8, 38, "Subsubsection",ExpressionUUID->"36f8d0d5-c046-4d76-8894-7c4d765f4976"],
Cell[80718, 2055, 534, 10, 39, "Text",ExpressionUUID->"ff193de8-1dc0-422f-89b6-a91f742ece4e"],
Cell[CellGroupData[{
Cell[81277, 2069, 486, 13, 49, "Input",ExpressionUUID->"a97971ce-5b37-4b0f-95a6-80002c828f25"],
Cell[81766, 2084, 6311, 121, 305, "Output",ExpressionUUID->"d11bcead-f4b1-4de0-aced-582953f43cea"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88126, 2211, 159, 3, 38, "Subsubsection",ExpressionUUID->"96951eb2-8c78-424a-83d5-03d3d9c57901"],
Cell[88288, 2216, 268, 6, 39, "Text",ExpressionUUID->"7df5b235-5861-496c-b4b6-ad0d932f58ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[88593, 2227, 326, 5, 38, "Subsubsection",ExpressionUUID->"f55870cc-0aef-4d26-b654-a092b7313e54"],
Cell[88922, 2234, 287, 4, 39, "Text",ExpressionUUID->"c7aa27af-36c4-4b73-b99b-db0d58b76091"],
Cell[CellGroupData[{
Cell[89234, 2242, 550, 14, 49, "Input",ExpressionUUID->"d99b4ba3-67db-489f-803e-1ab15f5b1a90"],
Cell[89787, 2258, 4738, 94, 458, "Output",ExpressionUUID->"845c5391-75cd-480f-8c3d-37e77998e68b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94574, 2358, 276, 4, 38, "Subsubsection",ExpressionUUID->"12863c79-7a0b-4ec9-89af-592ca358a9b9"],
Cell[94853, 2364, 248, 4, 39, "Text",ExpressionUUID->"6adf873b-faec-49b9-bac6-42e1d04676af"],
Cell[CellGroupData[{
Cell[95126, 2372, 603, 16, 49, "Input",ExpressionUUID->"f8baf995-aba7-4fbd-b52f-559798bebf2e"],
Cell[95732, 2390, 3840, 80, 459, "Output",ExpressionUUID->"a2cfce26-8963-4de3-86c5-f08335f40f98"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[99633, 2477, 308, 5, 39, "Subsection",ExpressionUUID->"d10c7423-4f56-4bab-b175-d85da7be5e01"],
Cell[99944, 2484, 1174, 21, 208, "Text",ExpressionUUID->"393e8fef-36ba-4ecb-bd1d-130c2f7c1868"],
Cell[CellGroupData[{
Cell[101143, 2509, 518, 8, 38, "Subsubsection",ExpressionUUID->"a6f37ad9-217f-44a5-95be-553c7602378c"],
Cell[101664, 2519, 729, 16, 42, "Text",ExpressionUUID->"6da22638-d303-4c1d-9421-7b3a9c01090a"],
Cell[CellGroupData[{
Cell[102418, 2539, 456, 12, 65, "Input",ExpressionUUID->"da923616-9138-4519-a5a2-128c9b4e324d"],
Cell[102877, 2553, 10791, 195, 305, "Output",ExpressionUUID->"116362e5-3fbb-420d-8622-b6989cc76713"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[113717, 2754, 367, 6, 38, "Subsubsection",ExpressionUUID->"d2cc13ef-e398-4e7b-b382-1ac4e76803a5"],
Cell[114087, 2762, 680, 18, 48, "Text",ExpressionUUID->"15edd3bc-8bba-4cc9-a83d-3540c258ed12"],
Cell[CellGroupData[{
Cell[114792, 2784, 479, 13, 66, "Input",ExpressionUUID->"9d0b763e-de73-4a01-a365-248c6695749c"],
Cell[115274, 2799, 13316, 236, 300, "Output",ExpressionUUID->"749fd72a-6d51-445c-a828-f6e7bc24c396"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[128639, 3041, 519, 8, 38, "Subsubsection",ExpressionUUID->"b93b15ea-2d1a-4717-92fd-40d236687c18"],
Cell[129161, 3051, 772, 18, 42, "Text",ExpressionUUID->"97cef482-f24c-41e0-978d-7749496390d4"],
Cell[CellGroupData[{
Cell[129958, 3073, 455, 12, 49, "Input",ExpressionUUID->"068cabae-a6fb-44d6-a0e4-98ee236620e9"],
Cell[130416, 3087, 4065, 84, 294, "Output",ExpressionUUID->"60c190f5-2341-423c-b9e9-285942a3aa1b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134530, 3177, 419, 6, 38, "Subsubsection",ExpressionUUID->"5476705e-45f9-40d5-85a4-03eeaac4d5b5"],
Cell[134952, 3185, 1366, 39, 66, "Text",ExpressionUUID->"8cd24ed3-2ecd-4fb1-b34e-3a9be1ebcc93"],
Cell[CellGroupData[{
Cell[136343, 3228, 533, 15, 49, "Input",ExpressionUUID->"021a84fb-6cde-4023-8c64-d181777af7ba"],
Cell[136879, 3245, 3840, 80, 459, "Output",ExpressionUUID->"879de085-254d-43e0-8b91-4c063587e111"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[140768, 3331, 621, 9, 38, "Subsubsection",ExpressionUUID->"dcdf27fb-8e71-4c67-887d-d703da74d200"],
Cell[141392, 3342, 914, 21, 48, "Text",ExpressionUUID->"4b73a7e8-2a99-4880-8d8d-015c2ca32672"],
Cell[CellGroupData[{
Cell[142331, 3367, 861, 19, 56, "Input",ExpressionUUID->"938ca171-c86b-47e5-b092-cc4034a59f17"],
Cell[143195, 3388, 10016, 183, 478, "Output",ExpressionUUID->"a0295b2c-0c68-4754-b03f-03377b5693c1"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153284, 3579, 175, 3, 66, "Section",ExpressionUUID->"891d6cd2-77d6-48ae-85c8-1de616df17e4"],
Cell[153462, 3584, 248, 7, 68, "Text",ExpressionUUID->"95f937b5-bd67-414c-b9c8-eef8c00a4d8c"],
Cell[CellGroupData[{
Cell[153735, 3595, 165, 3, 40, "Subsection",ExpressionUUID->"6d6c9bd9-7c42-40d6-97dd-4709de432bee"],
Cell[153903, 3600, 27103, 468, 345, "Text",ExpressionUUID->"ed19e867-480d-4e2c-8aba-13ec07933d70"],
Cell[CellGroupData[{
Cell[181031, 4072, 167, 3, 38, "Subsubsection",ExpressionUUID->"88305daf-f105-486f-9dd3-1d6abd818a77"],
Cell[181201, 4077, 325, 9, 37, "Text",ExpressionUUID->"8a04927b-de26-4716-85fe-599f643d6659"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181563, 4091, 170, 3, 38, "Subsubsection",ExpressionUUID->"e1a1237e-7892-4c8f-9508-0fa305991d5b"],
Cell[181736, 4096, 369, 11, 37, "Text",ExpressionUUID->"7284293f-7c08-40d7-857e-1d404b9d9973"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[182166, 4114, 181, 3, 66, "Section",ExpressionUUID->"b7a553ba-c4f2-4ca1-94ef-8e0032c26152"],
Cell[CellGroupData[{
Cell[182372, 4121, 182, 3, 40, "Subsection",ExpressionUUID->"f89873ca-d831-4a18-a00f-a677189d2537"],
Cell[CellGroupData[{
Cell[182579, 4128, 227, 4, 38, "Subsubsection",ExpressionUUID->"55ed0a99-dc35-4f4a-a4e5-ebeef7213a75"],
Cell[182809, 4134, 67473, 1113, 312, "Text",ExpressionUUID->"4c7fcc96-32f0-4eab-83d6-e3b8e473c8cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[250319, 5252, 173, 3, 38, "Subsubsection",ExpressionUUID->"6e19ab5f-33d2-4135-a307-b1dfed1fd66e"],
Cell[250495, 5257, 91542, 1507, 197, "Text",ExpressionUUID->"8efb0619-afdc-4494-9df4-d87a1af57341"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[342086, 6770, 163, 3, 39, "Subsection",ExpressionUUID->"391307df-353b-403b-902c-06c8d0c2e933"],
Cell[342252, 6775, 4145, 101, 656, "Text",ExpressionUUID->"003e99ca-2d1f-419a-86c0-11ddbeb0f66b"]
}, Closed]],
Cell[CellGroupData[{
Cell[346434, 6881, 220, 4, 39, "Subsection",ExpressionUUID->"87c7f327-80ad-4abb-9d98-fef5957b055f"],
Cell[346657, 6887, 81260, 1412, 930, "Text",ExpressionUUID->"1bfd3f8e-b555-411c-a00f-59c07342e368"],
Cell[427920, 8301, 1041, 35, 124, "Text",ExpressionUUID->"403500ac-c354-4fc1-80e4-d72e25d1375e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[429010, 8342, 362, 6, 66, "Section",ExpressionUUID->"d431406b-ed18-415f-acc3-90d0abd6758b"],
Cell[CellGroupData[{
Cell[429397, 8352, 225, 4, 40, "Subsection",ExpressionUUID->"a86b051e-81e9-49a5-aade-893420f0d77e"],
Cell[429625, 8358, 1148, 21, 398, "Text",ExpressionUUID->"9844d18a-c8e1-4ae3-95da-8b42cb3557e3"],
Cell[CellGroupData[{
Cell[430798, 8383, 657, 18, 90, "Input",ExpressionUUID->"526144ef-75f0-49ec-929b-3fb5da11cda1"],
Cell[431458, 8403, 250, 6, 62, "Output",ExpressionUUID->"a2dd0c77-4714-4b8f-8db0-4487e728765c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431745, 8414, 677, 18, 90, "Input",ExpressionUUID->"7c304de8-2d22-4216-bcc1-73955aca88ca"],
Cell[432425, 8434, 224, 5, 62, "Output",ExpressionUUID->"d8ffe999-2da6-4461-bcad-e8d6991f4e69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432686, 8444, 433, 12, 69, "Input",ExpressionUUID->"d06a6942-1d26-4325-9fe1-2743a05c51f1"],
Cell[433122, 8458, 213, 5, 63, "Output",ExpressionUUID->"b86b964c-d143-4651-b839-01b8e057c1d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433372, 8468, 305, 7, 49, "Input",ExpressionUUID->"e3635f8d-8c14-495a-90f5-ae19d490dc07"],
Cell[433680, 8477, 279, 6, 46, "Output",ExpressionUUID->"65770c35-e1df-471c-a7b0-df86175821c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433996, 8488, 374, 10, 49, "Input",ExpressionUUID->"be0d3390-26f5-4067-b806-dddc08767527"],
Cell[434373, 8500, 334, 9, 59, "Output",ExpressionUUID->"8415b44f-51eb-438d-99fc-1b8b59b4dd52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434744, 8514, 283, 6, 49, "Input",ExpressionUUID->"460e2685-0e9e-44fe-80b6-66405025d206"],
Cell[435030, 8522, 245, 5, 46, "Output",ExpressionUUID->"7287bfdb-3156-40d8-83b3-79acc7c851ce"]
}, Open  ]],
Cell[435290, 8530, 200, 3, 41, "Text",ExpressionUUID->"21a2ce49-dd1f-4f59-8163-a2b2e81f59dc"],
Cell[CellGroupData[{
Cell[435515, 8537, 669, 20, 75, "Input",ExpressionUUID->"465954e1-9ab9-4af9-9c05-3160c298e13f"],
Cell[436187, 8559, 13434, 274, 473, "Output",ExpressionUUID->"99e20772-0484-4e8f-81f8-8a23addac10d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[449670, 8839, 174, 3, 39, "Subsection",ExpressionUUID->"ed7b4262-7164-4676-8736-5e83d0b03638"],
Cell[449847, 8844, 870, 20, 152, "Text",ExpressionUUID->"ba1bd007-ff4e-48e8-88c5-ee6b2b7adb75"],
Cell[CellGroupData[{
Cell[450742, 8868, 471, 12, 72, "Input",ExpressionUUID->"ed3cf368-03bc-4b39-a078-95138de332a7"],
Cell[451216, 8882, 169, 3, 46, "Output",ExpressionUUID->"4bcd451d-03cb-48b8-b409-e65c83895191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451422, 8890, 1158, 28, 164, "Input",ExpressionUUID->"ff0b53e5-eab8-4cfb-b559-85730e4ef7ec"],
Cell[452583, 8920, 265, 6, 46, "Output",ExpressionUUID->"c5de3ac5-76ee-4539-a268-b3df2e90898c"]
}, Open  ]],
Cell[452863, 8929, 239, 4, 40, "Text",ExpressionUUID->"f76991a3-f494-4837-989b-c14f7e711bca"],
Cell[CellGroupData[{
Cell[453127, 8937, 344, 9, 66, "Input",ExpressionUUID->"0c9c657c-1bf9-451b-be8e-983caf1a9345"],
Cell[453474, 8948, 269, 7, 62, "Output",ExpressionUUID->"28210e8a-8b0b-42b9-8099-423dc26e06d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453780, 8960, 388, 10, 46, "Input",ExpressionUUID->"b997f89a-cd5d-47da-93a8-c617f2b590d0"],
Cell[454171, 8972, 323, 9, 63, "Output",ExpressionUUID->"4b92f074-c978-4dd2-852f-ff0a7067c59c"]
}, Open  ]],
Cell[454509, 8984, 1000, 21, 205, "Text",ExpressionUUID->"3fa7c095-bead-46ae-81f7-c30e1ba88bcf"],
Cell[CellGroupData[{
Cell[455534, 9009, 265, 6, 46, "Input",ExpressionUUID->"61b2dcaf-bff4-4e4d-a43a-e856a08ace7b"],
Cell[455802, 9017, 147, 2, 46, "Output",ExpressionUUID->"0912f8b2-0d31-4913-9823-ef9514b55f62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455986, 9024, 322, 7, 70, "Input",ExpressionUUID->"2aad29d8-a869-498c-8961-75df8b9d3584"],
Cell[456311, 9033, 151, 2, 46, "Output",ExpressionUUID->"f9cb115b-0675-436f-b301-7c2a80909967"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[456511, 9041, 274, 4, 39, "Subsection",ExpressionUUID->"3781ba73-7a99-4a44-bcf9-ea71b4ebc8c0"],
Cell[456788, 9047, 920, 22, 233, "Text",ExpressionUUID->"c460f7aa-7024-4bcd-91dc-89b73598ecff"],
Cell[457711, 9071, 492, 9, 96, "Text",ExpressionUUID->"fd7cfa82-4e38-4aeb-995f-3404ccce2b6d"],
Cell[CellGroupData[{
Cell[458228, 9084, 335, 8, 49, "Input",ExpressionUUID->"9457a79d-4008-48ae-82af-fe431d7b0774"],
Cell[458566, 9094, 290, 7, 46, "Output",ExpressionUUID->"655dfaa2-359a-4c33-a931-627f8c369604"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458893, 9106, 420, 12, 66, "Input",ExpressionUUID->"9f3ab0a7-0f11-488c-8900-743705c105e8"],
Cell[459316, 9120, 318, 8, 62, "Output",ExpressionUUID->"cab46975-f43c-4acb-a405-5d415fe3b5d3"]
}, Open  ]],
Cell[459649, 9131, 1011, 28, 79, "Text",ExpressionUUID->"3b7a8803-0b17-4bde-926e-7ec01997ff29"],
Cell[CellGroupData[{
Cell[460685, 9163, 529, 16, 93, "Input",ExpressionUUID->"0fca5a28-6219-4582-9fdd-f411dfd6bfa3"],
Cell[461217, 9181, 169, 3, 62, "Output",ExpressionUUID->"819560b4-c0a8-4d0d-8ca3-1a36f7d5f41e"]
}, Open  ]],
Cell[461401, 9187, 338, 9, 67, "Input",ExpressionUUID->"a88aa8ea-d030-408b-9373-5400889735a8"],
Cell[461742, 9198, 491, 13, 96, "Input",ExpressionUUID->"f024c159-afef-4f0a-bf61-cc755e5fd9c4"],
Cell[462236, 9213, 254, 4, 41, "Text",ExpressionUUID->"e7b850b7-fd5d-4ed4-b0e6-375ba926c4c5"],
Cell[CellGroupData[{
Cell[462515, 9221, 589, 18, 72, "Input",ExpressionUUID->"3efb4e90-e3ad-4fc1-a82d-46d6200cf1b6"],
Cell[463107, 9241, 559, 18, 62, "Output",ExpressionUUID->"0aeea161-317d-4c39-a4d3-9ab0e01dd602"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463703, 9264, 491, 15, 78, "Input",ExpressionUUID->"37f4f375-5ed6-4a65-89fd-45ede59d079f"],
Cell[464197, 9281, 196, 3, 62, "Output",ExpressionUUID->"c79396f5-ceb9-44d4-82bc-773f907e0b10"]
}, Open  ]],
Cell[464408, 9287, 339, 9, 67, "Input",ExpressionUUID->"fb95814e-35a9-4206-bd74-fb953bf2bb2e"],
Cell[464750, 9298, 480, 14, 96, "Input",ExpressionUUID->"0dc22b36-c497-436a-8f08-a6c9c61c1312"],
Cell[465233, 9314, 175, 3, 40, "Text",ExpressionUUID->"2b99b458-7657-44c7-ad37-51e52f937550"],
Cell[465411, 9319, 830, 25, 95, "Input",ExpressionUUID->"0915ae92-3816-4004-8cd3-29a598030121"],
Cell[CellGroupData[{
Cell[466266, 9348, 243, 5, 46, "Input",ExpressionUUID->"78a41290-f95b-4c75-b8de-37dd016b084d"],
Cell[466512, 9355, 355, 11, 59, "Output",ExpressionUUID->"7cf99966-0dc7-4830-94ba-2ceb8472ac97"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[466916, 9372, 174, 3, 39, "Subsection",ExpressionUUID->"4c854834-a900-4e23-a4cb-9d2d131a71d1"],
Cell[467093, 9377, 569, 12, 205, "Text",ExpressionUUID->"f0836b6f-7352-43db-8dcb-8ec772ae7d3f"],
Cell[CellGroupData[{
Cell[467687, 9393, 552, 17, 49, "Input",ExpressionUUID->"31cb9373-bea6-4d02-9dd8-6974fe4b0427"],
Cell[468242, 9412, 966, 32, 62, "Output",ExpressionUUID->"76aeb419-850e-4f00-b58b-240b80b4ac2f"]
}, Open  ]],
Cell[469223, 9447, 1296, 42, 74, "Text",ExpressionUUID->"0b4ccf13-66b2-4c46-a27e-f9bdb091c3f6"],
Cell[CellGroupData[{
Cell[470544, 9493, 669, 20, 75, "Input",ExpressionUUID->"2934c7b6-9997-41f3-989c-d66a5cd8da19"],
Cell[471216, 9515, 13437, 274, 473, "Output",ExpressionUUID->"a74890ab-e0fa-41f2-889c-19aac4443b77"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[484702, 9795, 189, 3, 39, "Subsection",ExpressionUUID->"1c6845db-1adc-4b3f-a5f2-3b58625713f5"],
Cell[484894, 9800, 256, 7, 68, "Text",ExpressionUUID->"ed8dcb46-a392-4ca9-b897-8eec06c2797c"],
Cell[CellGroupData[{
Cell[485175, 9811, 878, 24, 93, "Input",ExpressionUUID->"68f8cef0-bc8e-49c0-b250-fa4466889de3"],
Cell[486056, 9837, 368, 9, 46, "Output",ExpressionUUID->"facc0ba2-9cd3-4b89-bb76-a395929dc200"]
}, Open  ]],
Cell[486439, 9849, 296, 7, 68, "Text",ExpressionUUID->"9b323f36-837e-48b8-8cf3-6368ee1bdbc9"],
Cell[CellGroupData[{
Cell[486760, 9860, 1054, 25, 116, "Input",ExpressionUUID->"1302b5a8-38c9-4a59-9a6d-f2cc14d73fe5"],
Cell[487817, 9887, 271, 6, 62, "Output",ExpressionUUID->"f95ee249-247a-4d6c-83b1-7c7409349743"]
}, Open  ]],
Cell[488103, 9896, 489, 16, 45, "Text",ExpressionUUID->"717deaa4-30a4-4aed-a42e-64ffccf9439f"]
}, Closed]],
Cell[CellGroupData[{
Cell[488629, 9917, 164, 3, 39, "Subsection",ExpressionUUID->"cdf82907-7a39-4261-ab44-4817fb2cbccb"],
Cell[488796, 9922, 163, 3, 40, "Text",ExpressionUUID->"8a7cdd36-5406-4561-baa1-c56a4b4c2488"],
Cell[CellGroupData[{
Cell[488984, 9929, 269, 7, 46, "Input",ExpressionUUID->"e6279769-5f73-4d82-8d76-993e445247e2"],
Cell[489256, 9938, 162, 3, 48, "Output",ExpressionUUID->"ff086ef3-d711-45aa-aec3-5c8e516eefe2"]
}, Open  ]],
Cell[489433, 9944, 560, 18, 68, "Text",ExpressionUUID->"f6f9bb86-93ff-43e8-aac7-1deabeed759d"],
Cell[CellGroupData[{
Cell[490018, 9966, 715, 20, 98, "Input",ExpressionUUID->"a2698e7d-c0fc-4629-87e3-0c28ee927136"],
Cell[490736, 9988, 783, 24, 69, "Output",ExpressionUUID->"edd144fe-e137-435d-80cc-2ca26ff78e77"],
Cell[491522, 10014, 369, 11, 48, "Output",ExpressionUUID->"7c5b3dc2-8366-4b19-a086-8da9c2ce087c"]
}, Open  ]],
Cell[491906, 10028, 818, 28, 41, "Text",ExpressionUUID->"ba99cc50-ed30-41d7-b02f-02e950078cee"],
Cell[CellGroupData[{
Cell[492749, 10060, 797, 24, 102, "Input",ExpressionUUID->"ff46eebd-2dac-4032-8de8-2432f0a96cc2"],
Cell[493549, 10086, 165, 2, 46, "Output",ExpressionUUID->"17528669-9c6a-4d75-8784-3d56279c07b9"],
Cell[493717, 10090, 1771, 34, 380, "Output",ExpressionUUID->"22c1bc52-a85c-489d-ae3d-49751c2bb451"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[495549, 10131, 164, 3, 66, "Section",ExpressionUUID->"f5ce02db-af3a-4a97-a119-5aab62e2f581"],
Cell[CellGroupData[{
Cell[495738, 10138, 168, 3, 40, "Subsection",ExpressionUUID->"f8e81e89-7ebf-408c-b0aa-ad1018ebd0d8"],
Cell[495909, 10143, 445, 8, 68, "Text",ExpressionUUID->"67e83fd9-f52e-4b46-a853-2822fc027c67"],
Cell[CellGroupData[{
Cell[496379, 10155, 422, 11, 46, "Input",ExpressionUUID->"12502d0a-b697-416f-9160-442f3509fc5d"],
Cell[496804, 10168, 319, 10, 49, "Output",ExpressionUUID->"86fb64f7-903e-4f91-9a9c-fb63ca8fea63"]
}, Open  ]],
Cell[497138, 10181, 299, 7, 40, "Text",ExpressionUUID->"d24518ed-1baf-4ea7-b797-8df776b97713"],
Cell[CellGroupData[{
Cell[497462, 10192, 365, 10, 46, "Input",ExpressionUUID->"5610ea00-3397-4e55-a1bb-d55b4186105f"],
Cell[497830, 10204, 200, 5, 46, "Output",ExpressionUUID->"0ad6453f-7f03-4ff2-b1c5-825a2e92ae97"]
}, Open  ]],
Cell[498045, 10212, 282, 6, 40, "Text",ExpressionUUID->"0dff5f96-92aa-427e-b3cf-e461d3c151d7"],
Cell[CellGroupData[{
Cell[498352, 10222, 364, 10, 46, "Input",ExpressionUUID->"ce4d5eea-4fb5-41f2-abc6-9e95bce619e4"],
Cell[498719, 10234, 219, 6, 46, "Output",ExpressionUUID->"dc621201-8cb6-4513-b0ec-86abbd0666ba"]
}, Open  ]],
Cell[498953, 10243, 363, 8, 68, "Text",ExpressionUUID->"8919e327-622c-4024-8dd6-bb5f77f56fab"],
Cell[CellGroupData[{
Cell[499341, 10255, 615, 20, 46, "Input",ExpressionUUID->"fa657af9-962f-4bde-a21c-461ecf02f00f"],
Cell[499959, 10277, 271, 8, 46, "Output",ExpressionUUID->"bcaaba07-cdb1-4933-a860-32c55b4a47a5"]
}, Open  ]],
Cell[500245, 10288, 240, 4, 40, "Text",ExpressionUUID->"09741766-bf27-4d11-a90a-43e7429780b5"],
Cell[CellGroupData[{
Cell[500510, 10296, 668, 21, 46, "Input",ExpressionUUID->"2351169b-9e64-4ea2-baf3-d1d351984856"],
Cell[501181, 10319, 433, 13, 46, "Output",ExpressionUUID->"5f37f107-9445-4838-a0c8-4ffb8fbf4ffb"]
}, Open  ]],
Cell[501629, 10335, 169, 3, 40, "Text",ExpressionUUID->"ab591c0e-0e40-4601-88b6-6cd493b21dea"],
Cell[CellGroupData[{
Cell[501823, 10342, 295, 9, 46, "Input",ExpressionUUID->"91b20ef1-8ab8-4eb2-9e2f-392c5e7473b7"],
Cell[502121, 10353, 284, 9, 66, "Output",ExpressionUUID->"9abe7b62-d0b6-49a7-bf20-f060f1a36621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502442, 10367, 208, 4, 46, "Input",ExpressionUUID->"86bcfaf6-110a-4747-9f14-b1d8b87284ba"],
Cell[502653, 10373, 175, 4, 46, "Output",ExpressionUUID->"8b233120-b15a-43c8-acfe-6581ceed674f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502865, 10382, 359, 10, 46, "Input",ExpressionUUID->"f5231bdd-4232-4437-b86a-60e9d76a4422"],
Cell[503227, 10394, 175, 4, 46, "Output",ExpressionUUID->"68a723a4-9518-4c8e-a274-0fe55db4697c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[503451, 10404, 223, 4, 39, "Subsection",ExpressionUUID->"cf83b068-105f-44e7-a194-5571a67509a9"],
Cell[CellGroupData[{
Cell[503699, 10412, 633, 19, 49, "Input",ExpressionUUID->"77f36110-e8ae-4d07-bdf0-bfd0648569dc"],
Cell[504335, 10433, 362, 10, 46, "Output",ExpressionUUID->"684d32bb-4894-4470-936d-6a4a6d1a1f8e"]
}, Open  ]],
Cell[504712, 10446, 227, 5, 40, "Text",ExpressionUUID->"18bf33b9-1233-4591-8848-75024f25d0b6"],
Cell[CellGroupData[{
Cell[504964, 10455, 343, 8, 49, "Input",ExpressionUUID->"51119fb5-b32b-403a-984c-2b97e67eaf52"],
Cell[505310, 10465, 243, 4, 46, "Output",ExpressionUUID->"a942e61b-f330-4576-b8d0-bb7e6a9eee86"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[505602, 10475, 157, 3, 39, "Subsection",ExpressionUUID->"27298394-c5e8-40a8-8572-a8d9ed8d0f47"],
Cell[505762, 10480, 179, 3, 40, "Text",ExpressionUUID->"4987dc61-a319-4077-912b-dc3b8f41fbdb"],
Cell[CellGroupData[{
Cell[505966, 10487, 579, 17, 46, "Input",ExpressionUUID->"df86d032-cb29-4ffa-8a25-5cdbc5447421"],
Cell[506548, 10506, 7123, 135, 302, "Output",ExpressionUUID->"84793247-4abd-4b02-bca8-7ca1fce3965c"]
}, Open  ]],
Cell[513686, 10644, 299, 7, 40, "Text",ExpressionUUID->"37bc4c64-4e46-4230-a130-abff9e2ee44a"],
Cell[CellGroupData[{
Cell[514010, 10655, 721, 23, 46, "Input",ExpressionUUID->"2c1b8a25-a5c9-46d1-bebf-6d61be0bd27f"],
Cell[514734, 10680, 7078, 133, 291, "Output",ExpressionUUID->"21c1c12f-bc19-413c-9ffa-17cbdba05e4f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[521861, 10819, 171, 3, 39, "Subsection",ExpressionUUID->"ae2679df-35ba-4967-9896-208c9941dc1a"],
Cell[522035, 10824, 290, 4, 40, "Text",ExpressionUUID->"7a24d4ad-58e6-4374-970f-01a148ec8f58"],
Cell[CellGroupData[{
Cell[522350, 10832, 600, 14, 49, "Input",ExpressionUUID->"03fb0fc0-4689-42be-b67b-10895c75ce87"],
Cell[522953, 10848, 336, 7, 46, "Output",ExpressionUUID->"e4e35bc8-aa01-499e-8fe6-046c20d1f808"]
}, Open  ]],
Cell[523304, 10858, 234, 4, 40, "Text",ExpressionUUID->"feaf1e9d-097f-4cd0-9d06-a6a387c539d9"],
Cell[CellGroupData[{
Cell[523563, 10866, 541, 14, 49, "Input",ExpressionUUID->"8e506cb1-d3d2-41a4-aeaa-a153421ba11d"],
Cell[524107, 10882, 363, 8, 46, "Output",ExpressionUUID->"957667b4-2be1-40b4-8fe4-95a2dbeac088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524507, 10895, 665, 18, 49, "Input",ExpressionUUID->"ea65b9b1-671a-4f01-b0a8-78821ac22416"],
Cell[525175, 10915, 7130, 135, 302, "Output",ExpressionUUID->"d3fe0851-0b27-481b-9548-a05cf6a0f318"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[532354, 11056, 162, 3, 39, "Subsection",ExpressionUUID->"53dd8be2-017d-4482-8cb4-653cb7afcdf8"],
Cell[532519, 11061, 254, 7, 68, "Text",ExpressionUUID->"84874eea-56d6-460b-870d-a0f773e7baae"],
Cell[532776, 11070, 1662, 52, 152, "Text",ExpressionUUID->"91a07faf-aee2-43c0-b179-db452a463d79"],
Cell[534441, 11124, 155, 3, 40, "Text",ExpressionUUID->"e08a730b-9ddd-49d3-9609-22191b93759a"],
Cell[534599, 11129, 440, 14, 40, "Text",ExpressionUUID->"ccac6a55-1f29-4404-a1df-89f1f0aabf7a"],
Cell[535042, 11145, 1127, 37, 71, "Text",ExpressionUUID->"9261fac5-41ff-41cb-b667-996e836d4438"]
}, Closed]],
Cell[CellGroupData[{
Cell[536206, 11187, 176, 3, 39, "Subsection",ExpressionUUID->"7915f749-a773-4290-aebf-b6dc8ff54bd8"],
Cell[536385, 11192, 155, 3, 39, "Text",ExpressionUUID->"d31ae610-fbc4-43f1-bb14-7879c2f8ac65"],
Cell[CellGroupData[{
Cell[536565, 11199, 993, 31, 116, "Input",ExpressionUUID->"29f3e934-7aca-479c-b0da-5a3d78015a7b"],
Cell[537561, 11232, 350, 9, 63, "Output",ExpressionUUID->"fe959d4d-579d-4977-8b9b-185ea8f78d7b"],
Cell[537914, 11243, 938, 28, 89, "Output",ExpressionUUID->"8e5e0566-e81e-4142-bab9-0618ff8c3cb8"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[538913, 11278, 166, 3, 66, "Section",ExpressionUUID->"f6cd9d47-3fe7-48b7-8432-dab5e1e6a0ca"],
Cell[CellGroupData[{
Cell[539104, 11285, 200, 3, 40, "Subsection",ExpressionUUID->"7703d0c0-e28f-42aa-b6dd-ef0bbac4df2d"],
Cell[539307, 11290, 270, 6, 40, "Text",ExpressionUUID->"91dcef87-0764-4fb3-8549-155299dc8dfe"],
Cell[CellGroupData[{
Cell[539602, 11300, 452, 12, 49, "Input",ExpressionUUID->"63d7b82f-c152-49b4-8704-119939ceb0cb"],
Cell[540057, 11314, 569, 16, 49, "Output",ExpressionUUID->"92f25bfe-e15d-4150-9117-118eaed10904"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540663, 11335, 441, 12, 49, "Input",ExpressionUUID->"f012d704-0778-4ff8-86be-712ec4b01fcf"],
Cell[541107, 11349, 444, 13, 62, "Output",ExpressionUUID->"74dea701-ead8-4120-a516-2aad36ba8cdc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[541600, 11368, 176, 3, 39, "Subsection",ExpressionUUID->"b23bdd34-0aa5-4034-9670-270224c5e2b0"],
Cell[541779, 11373, 453, 13, 68, "Text",ExpressionUUID->"8af3dab6-5377-4dbe-aee1-eed29a62ce28"],
Cell[CellGroupData[{
Cell[542257, 11390, 334, 8, 70, "Input",ExpressionUUID->"0adf8a2f-59f4-4dc9-abd2-0cb9166a2f66"],
Cell[542594, 11400, 301, 7, 46, "Output",ExpressionUUID->"308578a2-6bad-47b2-a577-4414bd1eb543"]
}, Open  ]],
Cell[542910, 11410, 196, 3, 40, "Text",ExpressionUUID->"6912e0b3-90ec-4831-b4fc-b9f11a502b2b"],
Cell[543109, 11415, 269, 6, 67, "Input",ExpressionUUID->"37fd7ab3-21b6-4564-82ee-126a7f5f9de7"],
Cell[CellGroupData[{
Cell[543403, 11425, 239, 4, 46, "Input",ExpressionUUID->"10ee7250-1daa-40ea-a465-3d854f9e035a"],
Cell[543645, 11431, 218, 5, 62, "Output",ExpressionUUID->"7ba29fad-19af-400f-9344-acd504e4fb50"]
}, Open  ]],
Cell[543878, 11439, 188, 3, 40, "Text",ExpressionUUID->"e82a6a86-7992-4f57-ba3d-e3baacae75d9"],
Cell[CellGroupData[{
Cell[544091, 11446, 468, 13, 93, "Input",ExpressionUUID->"3b481e94-289f-460a-9340-338476574ae8"],
Cell[544562, 11461, 440, 11, 74, "Output",ExpressionUUID->"3b8a08bb-831f-4dc7-bf8f-975a1f47b5bf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[545051, 11478, 253, 4, 39, "Subsection",ExpressionUUID->"9c27a164-2dfd-4b07-831d-87772195918f"],
Cell[545307, 11484, 382, 8, 95, "Text",ExpressionUUID->"023f5b42-fae9-4089-8d06-3f73a5a6984d"],
Cell[CellGroupData[{
Cell[545714, 11496, 597, 18, 67, "Input",ExpressionUUID->"16bfb872-4a8e-432c-bdf2-3842b9dc8110"],
Cell[546314, 11516, 10643, 196, 307, "Output",ExpressionUUID->"7b22ef8b-2354-4311-9442-a9092e828790"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[557018, 11719, 219, 4, 66, "Section",ExpressionUUID->"725ba91f-08ac-4669-a56a-581b41638ca7"],
Cell[557240, 11725, 220, 5, 40, "Text",ExpressionUUID->"ec615760-1b3c-469f-8f44-1fd6f425b6d7"],
Cell[CellGroupData[{
Cell[557485, 11734, 222, 4, 40, "Subsection",ExpressionUUID->"3fb71a6f-22bc-4c75-a8fa-f2739a6fd39b"],
Cell[557710, 11740, 1643, 49, 95, "Text",ExpressionUUID->"890073e6-f29a-434d-8df1-d931ffc83eff"],
Cell[559356, 11791, 303, 8, 46, "Input",ExpressionUUID->"12c4f5f7-d70f-4fab-aab5-76b1a3e6c337"],
Cell[559662, 11801, 245, 4, 40, "Text",ExpressionUUID->"f126b09b-cbed-4373-b94e-f0f1f35ba814"]
}, Closed]],
Cell[CellGroupData[{
Cell[559944, 11810, 171, 3, 39, "Subsection",ExpressionUUID->"a56e7dc5-4ed7-49bb-bcbf-d365945a4949"],
Cell[560118, 11815, 510, 10, 68, "Text",ExpressionUUID->"405e1422-fa72-46a5-a1c3-5dc30ee26cd3"],
Cell[560631, 11827, 379, 10, 66, "Input",ExpressionUUID->"04eef557-2ddd-4196-834d-0f284e9dfa88"],
Cell[561013, 11839, 402, 12, 38, "WolframAlphaShort",ExpressionUUID->"5ddd7e90-a172-4179-99e4-3ba12b0a0a1c"],
Cell[561418, 11853, 230, 4, 36, "WolframAlphaShort",ExpressionUUID->"3d051426-9a83-4eb6-af56-ad1ac6e40495"],
Cell[561651, 11859, 176, 3, 36, "WolframAlphaShort",ExpressionUUID->"d5ea913f-b1cf-4f67-8cad-ea92a8e0dd37"],
Cell[561830, 11864, 158, 3, 40, "Text",ExpressionUUID->"be607d1f-069d-4b3c-b5bf-c43821d2b245"],
Cell[CellGroupData[{
Cell[562013, 11871, 227, 4, 46, "Input",ExpressionUUID->"6a2c0bb8-dc04-4fb7-9d13-2360313faf0e"],
Cell[562243, 11877, 151, 2, 46, "Output",ExpressionUUID->"a89ee955-4b49-494e-b763-fed95bf54263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562431, 11884, 308, 7, 46, "Input",ExpressionUUID->"0b2cc864-40bd-4263-a6ae-81d3c9a88fcd"],
Cell[562742, 11893, 227, 5, 46, "Output",ExpressionUUID->"6b1c211a-f71a-4bdf-9246-b48072e68c0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563006, 11903, 312, 7, 46, "Input",ExpressionUUID->"7ada2720-d5e4-44b7-838e-c698b7d53634"],
Cell[563321, 11912, 226, 5, 46, "Output",ExpressionUUID->"6c58623e-6ba2-4ce5-ace7-4501cff9d8c5"]
}, Open  ]],
Cell[563562, 11920, 177, 3, 40, "Text",ExpressionUUID->"678346b6-c16f-4ce3-a20f-be1a75db6b73"],
Cell[CellGroupData[{
Cell[563764, 11927, 701, 21, 49, "Input",ExpressionUUID->"fab9251f-7b56-4aa1-bc01-80c6131d69a0"],
Cell[564468, 11950, 151, 2, 46, "Output",ExpressionUUID->"27f4a7b7-0de6-41a3-97f7-a3a8d8f45603"]
}, Open  ]],
Cell[564634, 11955, 144, 3, 40, "Text",ExpressionUUID->"b1686846-d2ec-4d3a-8c41-05b9378cfa7d"],
Cell[CellGroupData[{
Cell[564803, 11962, 689, 21, 49, "Input",ExpressionUUID->"8da0a28c-a2da-4f42-8da6-514b94dab723"],
Cell[565495, 11985, 149, 2, 46, "Output",ExpressionUUID->"4f4e93d5-4aa2-44a0-96e7-c41a063c3bf0"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[565705, 11994, 170, 3, 66, "Section",ExpressionUUID->"69cc2540-418b-4119-8016-bd44759351ae"],
Cell[565878, 11999, 930, 25, 240, "Text",ExpressionUUID->"5443c897-94a1-4e31-b816-585bc4b266f7"],
Cell[CellGroupData[{
Cell[566833, 12028, 180, 3, 40, "Subsection",ExpressionUUID->"fa7ac1d9-36be-45da-9b27-c103e079a221"],
Cell[567016, 12033, 272, 7, 68, "Text",ExpressionUUID->"022562d6-49c4-4193-b8cc-1fc3e4273bd8"],
Cell[CellGroupData[{
Cell[567313, 12044, 387, 10, 66, "Input",ExpressionUUID->"7752045a-22e9-4b94-b1ac-643d93f4acf0"],
Cell[567703, 12056, 629, 19, 62, "Output",ExpressionUUID->"0ad65673-e2d7-4cc9-a1c8-4bb0bf3aee89"]
}, Open  ]],
Cell[568347, 12078, 369, 10, 66, "Input",ExpressionUUID->"24bf226e-965c-455e-869a-3abdad568938"],
Cell[568719, 12090, 162, 3, 40, "Text",ExpressionUUID->"ce891770-91f1-4fa3-ade1-804c4a296bfb"],
Cell[CellGroupData[{
Cell[568906, 12097, 435, 11, 46, "Input",ExpressionUUID->"1dcd30b5-b35c-408b-8277-54922fb756e4"],
Cell[569344, 12110, 455, 10, 56, "Message",ExpressionUUID->"c8f80323-e57f-425c-813f-13ce2c7dabdb"],
Cell[569802, 12122, 297, 6, 46, "Output",ExpressionUUID->"c4a808ae-b39b-4f85-934b-af6e1f6710aa"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[570148, 12134, 153, 3, 39, "Subsection",ExpressionUUID->"7234e6f8-fd86-4acb-9bb4-a0a311a4f0e1"],
Cell[570304, 12139, 180, 3, 40, "Text",ExpressionUUID->"cdb29106-43e1-479e-ba11-a75fb9ad87d8"],
Cell[570487, 12144, 309, 8, 63, "Input",ExpressionUUID->"123142b4-6241-451f-94b0-8fa012aa4058"],
Cell[570799, 12154, 148, 3, 40, "Text",ExpressionUUID->"048aac65-6388-40dc-8542-0f07c526b2cc"],
Cell[CellGroupData[{
Cell[570972, 12161, 203, 3, 46, "Input",ExpressionUUID->"688ef06e-cd22-456e-b8c5-71eff5403695"],
Cell[571178, 12166, 149, 2, 46, "Output",ExpressionUUID->"eb512866-fc9c-455e-85fd-f4fe99c83820"]
}, Open  ]],
Cell[571342, 12171, 158, 3, 40, "Text",ExpressionUUID->"5fa186d4-fea9-4a36-824c-0b72fbf62f58"],
Cell[CellGroupData[{
Cell[571525, 12178, 353, 10, 46, "Input",ExpressionUUID->"66de6a50-d443-4a0c-b283-8594cd50a70f"],
Cell[571881, 12190, 400, 11, 46, "Output",ExpressionUUID->"33aa439a-af9c-49e7-9750-dafba174bab2"]
}, Open  ]],
Cell[572296, 12204, 166, 3, 40, "Text",ExpressionUUID->"a79ab09e-8bb2-4c7d-bad3-5e4237f1626c"],
Cell[CellGroupData[{
Cell[572487, 12211, 264, 5, 46, "Input",ExpressionUUID->"8d3fd99c-4f81-4467-b4b0-8c7df71b35dd"],
Cell[572754, 12218, 155, 2, 46, "Output",ExpressionUUID->"25c5c890-fc7e-49f8-9e50-be09736952f9"]
}, Open  ]],
Cell[572924, 12223, 160, 3, 40, "Text",ExpressionUUID->"e9b38b90-dddb-493d-85c3-62c320a7a930"],
Cell[CellGroupData[{
Cell[573109, 12230, 318, 6, 46, "Input",ExpressionUUID->"4c1df50c-3ffa-4757-b676-f889f4ea5a40"],
Cell[573430, 12238, 363, 10, 70, "Output",ExpressionUUID->"4a9d22a3-de28-4379-b899-6fd70b33d765"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573830, 12253, 426, 7, 46, "Input",ExpressionUUID->"e103c1ca-e1f2-49d9-97be-019da0a5737a"],
Cell[574259, 12262, 281, 4, 46, "Output",ExpressionUUID->"6e009477-c6f1-454a-8664-d9160dbf2303"]
}, Open  ]],
Cell[574555, 12269, 564, 16, 44, "Text",ExpressionUUID->"767099b6-e531-4e9a-a726-010fe927d66b"],
Cell[CellGroupData[{
Cell[575144, 12289, 309, 8, 63, "Input",ExpressionUUID->"57328953-2227-48db-9373-8f0152cdf6c7"],
Cell[575456, 12299, 279, 7, 62, "Output",ExpressionUUID->"78ae9ad0-1d7f-4865-9667-329c5478ea69"]
}, Open  ]],
Cell[575750, 12309, 326, 7, 68, "Text",ExpressionUUID->"86e5a28f-86d6-46eb-abe8-bc5c031fa242"],
Cell[CellGroupData[{
Cell[576101, 12320, 1155, 35, 145, "Input",ExpressionUUID->"d370b985-de70-4eb3-a897-37af3a101a89"],
Cell[577259, 12357, 11372, 220, 295, "Output",ExpressionUUID->"05b96d3c-421b-4aef-90b8-5f3d7d241c51"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[588680, 12583, 241, 4, 39, "Subsection",ExpressionUUID->"a8f23039-92c5-4f02-849c-cb123c33ef21"],
Cell[588924, 12589, 1247, 41, 190, "Text",ExpressionUUID->"655e0a46-fad3-471c-8571-43c48864d1f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[590208, 12635, 182, 3, 39, "Subsection",ExpressionUUID->"031e296d-56d8-4671-8c4f-389574273a2f"],
Cell[CellGroupData[{
Cell[590415, 12642, 441, 14, 56, "Input",ExpressionUUID->"c6fba2a6-cdd9-4287-8d77-e2616a125db5"],
Cell[590859, 12658, 1266, 42, 103, "Output",ExpressionUUID->"d5547d76-5a6c-45c1-834f-e5476e4c0b95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592162, 12705, 510, 15, 56, "Input",ExpressionUUID->"e8aa9f83-a1ec-4a20-ac2d-e4c41f5388e7"],
Cell[592675, 12722, 680, 21, 62, "Output",ExpressionUUID->"e6583be8-26db-458f-aa2b-84e65cce064b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[593404, 12749, 162, 3, 39, "Subsection",ExpressionUUID->"85bc5fec-ea19-4d5a-a962-05965204f280"],
Cell[593569, 12754, 158347, 2602, 394, "Input",ExpressionUUID->"c08b2d37-bf14-4f9d-8431-530f1774e0c3"],
Cell[CellGroupData[{
Cell[751941, 15360, 2002, 55, 206, "Input",ExpressionUUID->"5de96598-a284-4878-b349-089feb9a9e3f"],
Cell[753946, 15417, 5916, 184, 226, "Output",ExpressionUUID->"91812c83-b595-472e-92b1-140269b417b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[759911, 15607, 172, 3, 39, "Subsection",ExpressionUUID->"e15893ce-fa40-4e6c-88dc-bc81f1c5c5ce"],
Cell[760086, 15612, 2182, 77, 180, "Text",ExpressionUUID->"1501b3ed-36a9-4795-baa2-dec8c187ddf7"],
Cell[CellGroupData[{
Cell[762293, 15693, 347, 11, 93, "Input",ExpressionUUID->"03af8edd-344b-4d78-bb59-b22b810e5f60"],
Cell[762643, 15706, 175, 4, 77, "Output",ExpressionUUID->"9c4f2893-ec1a-4a04-96b8-42932a86950a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[762879, 15717, 168, 3, 66, "Section",ExpressionUUID->"58a808cb-f45c-482d-a2e7-caf309f5faf3"],
Cell[763050, 15722, 211, 4, 40, "Text",ExpressionUUID->"141d61b2-9af4-4574-b140-317575305700"],
Cell[CellGroupData[{
Cell[763286, 15730, 449, 12, 90, "Input",ExpressionUUID->"62a70693-24f9-4882-849a-551057898e83"],
Cell[763738, 15744, 244, 5, 62, "Output",ExpressionUUID->"7bea09bc-c484-4e33-86ee-3200bc89254d"]
}, Open  ]],
Cell[763997, 15752, 372, 10, 44, "Text",ExpressionUUID->"ada15a42-252e-4385-82cf-898976510292"],
Cell[CellGroupData[{
Cell[764394, 15766, 413, 11, 66, "Input",ExpressionUUID->"2c5ddbd5-f29f-4a54-8e6f-e2c2903306e8"],
Cell[764810, 15779, 1045, 40, 360, "Output",ExpressionUUID->"11e8d159-e08e-4a2c-8a75-c1590fa41593"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[765904, 15825, 229, 4, 66, "Section",ExpressionUUID->"2fa8f9fd-fc18-4296-a525-2d86c0dde325"],
Cell[CellGroupData[{
Cell[766158, 15833, 154, 3, 40, "Subsection",ExpressionUUID->"5d5f7a59-769d-47e1-a5a9-bc3fa4c0c9b6"],
Cell[766315, 15838, 354, 9, 122, "Text",ExpressionUUID->"abfdec1d-e97e-4a53-8adf-420a63f0aa63"],
Cell[766672, 15849, 231, 4, 40, "Text",ExpressionUUID->"97451ccf-9a01-4e46-8e90-7f25cb1e7adc"],
Cell[CellGroupData[{
Cell[766928, 15857, 304, 7, 49, "Input",ExpressionUUID->"a520876a-859c-4372-bc69-cde5863209f4"],
Cell[767235, 15866, 150, 2, 46, "Output",ExpressionUUID->"8540e5f8-adf0-477b-a819-31218b9236b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767422, 15873, 276, 6, 66, "Input",ExpressionUUID->"bfc68625-c2d8-49c9-a78c-b28763ebdf55"],
Cell[767701, 15881, 160, 2, 46, "Output",ExpressionUUID->"9b49e64b-b93a-43c8-818a-519e349f2adb"]
}, Open  ]],
Cell[767876, 15886, 226, 5, 40, "Text",ExpressionUUID->"9a7891c4-0f0b-42ef-a800-e4de985c4b86"],
Cell[CellGroupData[{
Cell[768127, 15895, 335, 7, 66, "Input",ExpressionUUID->"d3f7ecff-5dae-4954-bd4e-c64690e38810"],
Cell[768465, 15904, 158, 2, 46, "Output",ExpressionUUID->"d9f97604-e814-4cfa-a616-ea255e51b792"]
}, Open  ]],
Cell[768638, 15909, 290, 7, 46, "Input",ExpressionUUID->"0aa180ce-1c0c-4e43-9a19-68adb2df9069"],
Cell[CellGroupData[{
Cell[768953, 15920, 389, 10, 67, "Input",ExpressionUUID->"c5a167ea-326f-413f-8677-bbfd09558c92"],
Cell[769345, 15932, 238, 5, 46, "Output",ExpressionUUID->"57ff74d0-8128-4d57-930c-6555ec0259f5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[769632, 15943, 161, 3, 39, "Subsection",ExpressionUUID->"b5829438-6fa5-4308-98c2-5e09f214eb3e"],
Cell[769796, 15948, 181, 3, 40, "Text",ExpressionUUID->"7bdda29d-feb9-4283-a37f-5545f7b5f2c6"],
Cell[769980, 15953, 160, 3, 40, "Text",ExpressionUUID->"227ca1a4-470b-45f6-a27d-bda41400e604"],
Cell[CellGroupData[{
Cell[770165, 15960, 249, 5, 49, "Input",ExpressionUUID->"db707a54-3e92-42b0-8b4c-5d43db1c3e57"],
Cell[770417, 15967, 173, 3, 46, "Output",ExpressionUUID->"6347732c-75c4-439e-8ca4-45d339b64af5"]
}, Open  ]],
Cell[770605, 15973, 264, 6, 40, "Text",ExpressionUUID->"e8ea4cc4-54d0-4182-9ad7-cbf6af6e87da"],
Cell[770872, 15981, 256, 6, 40, "Text",ExpressionUUID->"9574a2ba-4414-4690-99e6-97a4ca1c05f6"],
Cell[771131, 15989, 424, 8, 46, "Input",ExpressionUUID->"bc3e7645-45a5-4df5-9b71-0fb7640b41a9"],
Cell[CellGroupData[{
Cell[771580, 16001, 572, 14, 46, "Input",ExpressionUUID->"0d2e3e92-ad25-4fdb-af90-11a6e833bb5a"],
Cell[772155, 16017, 370, 7, 60, "Output",ExpressionUUID->"f89716dc-a849-485a-8f45-cfbe1afffd57"]
}, Open  ]],
Cell[772540, 16027, 196, 3, 40, "Text",ExpressionUUID->"60e75e81-8f1b-44da-96f2-77295b22c4db"]
}, Closed]],
Cell[CellGroupData[{
Cell[772773, 16035, 211, 4, 39, "Subsection",ExpressionUUID->"12a3b430-0ecf-4e14-8b99-447013817353"],
Cell[772987, 16041, 1831, 55, 165, "Text",ExpressionUUID->"454407f5-fe21-4154-86be-1c3760790a4b"],
Cell[774821, 16098, 912, 28, 74, "Text",ExpressionUUID->"9f70baaa-4f1e-4422-815f-447029885f5a",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[775770, 16131, 315, 5, 39, "Subsection",ExpressionUUID->"d5a35c87-f56c-4467-a22d-9229457323f4"],
Cell[776088, 16138, 266, 7, 68, "Text",ExpressionUUID->"2ccb7275-6a61-4939-8f2e-4b4eeeb5e5ce"],
Cell[776357, 16147, 231, 6, 40, "Text",ExpressionUUID->"21e7c24a-a022-4b98-bb28-83ed11cb2a35"],
Cell[776591, 16155, 729, 22, 70, "Input",ExpressionUUID->"12b0b390-41e0-4d73-a908-38fb7bfbd2fe"],
Cell[CellGroupData[{
Cell[777345, 16181, 259, 5, 49, "Input",ExpressionUUID->"931e13d7-9e67-4e3a-8909-3334dca69e07"],
Cell[777607, 16188, 296, 8, 46, "Output",ExpressionUUID->"1ee8c401-13d1-4a5f-92c0-33332db7e08b"]
}, Open  ]],
Cell[777918, 16199, 588, 18, 74, "Text",ExpressionUUID->"700134cf-783d-4aeb-b7c2-79a95f528b88"],
Cell[778509, 16219, 744, 23, 70, "Input",ExpressionUUID->"18965a02-5281-4119-a199-e62341d83c99"],
Cell[CellGroupData[{
Cell[779278, 16246, 260, 5, 49, "Input",ExpressionUUID->"2ac53bfc-152f-4aa8-a495-6ae4c4add77f"],
Cell[779541, 16253, 297, 8, 62, "Output",ExpressionUUID->"3bcc01eb-d8a6-45cd-a00f-25fb3de0fd3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779875, 16266, 1747, 56, 164, "Input",ExpressionUUID->"a2c499dc-82a6-4423-b628-3c9b849cc01e"],
Cell[781625, 16324, 1894, 38, 531, "Output",ExpressionUUID->"d26d4860-7cd9-49bf-a377-41b8b8d898fd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[783568, 16368, 236, 4, 39, "Subsection",ExpressionUUID->"35f3d191-83f3-4617-8afa-d690117997c8"],
Cell[783807, 16374, 159, 3, 40, "Text",ExpressionUUID->"252512fb-162c-4798-b40a-9057af572f58"],
Cell[783969, 16379, 1112, 30, 93, "Input",ExpressionUUID->"153fee3c-3a34-4fb7-97b7-61fa30175c3d"],
Cell[CellGroupData[{
Cell[785106, 16413, 452, 10, 49, "Input",ExpressionUUID->"5ac6b075-59b3-4537-9a72-fb0c7517f1cf"],
Cell[785561, 16425, 23414, 436, 310, "Output",ExpressionUUID->"fb3a8513-8883-445a-909f-13447ae9fc95"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[809024, 16867, 172, 3, 39, "Subsection",ExpressionUUID->"053f0519-a39b-482e-a62a-8b04c6f61804"],
Cell[809199, 16872, 367, 8, 68, "Text",ExpressionUUID->"4590b176-1621-417f-8e97-57902c919ae7"],
Cell[809569, 16882, 235, 4, 40, "Text",ExpressionUUID->"a658b784-3164-4599-8a5f-5f9952e55c1a"],
Cell[809807, 16888, 276, 6, 46, "Input",ExpressionUUID->"2b1aba01-072e-4b03-a59f-823c63e9ee31"],
Cell[CellGroupData[{
Cell[810108, 16898, 360, 11, 46, "Input",ExpressionUUID->"908912b8-de7a-4207-9ed5-d41c9d8ea77d"],
Cell[810471, 16911, 244, 5, 60, "Output",ExpressionUUID->"92d22b3d-f437-4f45-bdc5-42eac997b842"]
}, Open  ]],
Cell[810730, 16919, 172, 3, 40, "Text",ExpressionUUID->"5f03939f-91e0-425d-a0ae-234ea7c93abf"],
Cell[810905, 16924, 154, 3, 40, "Text",ExpressionUUID->"72f446ac-b9c0-4635-9352-f95e71eb3e90"],
Cell[811062, 16929, 403, 10, 46, "Input",ExpressionUUID->"6b727f6c-6115-431e-8a6c-143de8e71455"],
Cell[CellGroupData[{
Cell[811490, 16943, 427, 11, 67, "Input",ExpressionUUID->"7b852792-2f21-4511-98f0-799c77269c3e"],
Cell[811920, 16956, 298, 6, 60, "Output",ExpressionUUID->"6dc729ee-75ff-48ad-a914-136ad3adca0e"]
}, Open  ]],
Cell[812233, 16965, 159, 3, 40, "Text",ExpressionUUID->"a500b708-95c2-4bf7-91fa-991fff984383"],
Cell[CellGroupData[{
Cell[812417, 16972, 675, 19, 67, "Input",ExpressionUUID->"dea4e6ff-1ab8-4dfb-bff1-3ea1bb0a7adb"],
Cell[813095, 16993, 962, 28, 88, "Output",ExpressionUUID->"2bfee1eb-6af4-40ce-9d34-19a88ddb0eb8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[814106, 17027, 163, 3, 39, "Subsection",ExpressionUUID->"4feb735d-216a-474b-95a2-e447bcc29a8e"],
Cell[814272, 17032, 632, 20, 49, "Text",ExpressionUUID->"2a39ccba-c4cf-485a-a664-e0729ea3cc51"],
Cell[814907, 17054, 1410, 49, 107, "Text",ExpressionUUID->"e461d839-b7b5-46b2-9f21-b156519e1c68"]
}, Closed]],
Cell[CellGroupData[{
Cell[816354, 17108, 180, 3, 39, "Subsection",ExpressionUUID->"e596de73-29b1-4e06-bee6-c76d769c609f"],
Cell[816537, 17113, 735, 17, 130, "Text",ExpressionUUID->"5c1dd1c6-e231-4945-bfb5-adddc1e7e533"],
Cell[817275, 17132, 600, 16, 84, "Input",ExpressionUUID->"ef60cb47-1b71-4997-b370-ff66db34fdc3"],
Cell[CellGroupData[{
Cell[817900, 17152, 508, 12, 84, "Input",ExpressionUUID->"3ec85671-e156-43ce-9b9f-df875b9be600"],
Cell[818411, 17166, 199, 4, 77, "Output",ExpressionUUID->"17ee81ee-8724-4015-9b56-64ace66a9bce"]
}, Open  ]],
Cell[818625, 17173, 173, 6, 68, "Text",ExpressionUUID->"785ce05d-1396-446c-b65a-76b686f5e597"],
Cell[818801, 17181, 1266, 34, 176, "Input",ExpressionUUID->"fbeb9494-600b-40f0-abc6-f68a77570673"],
Cell[820070, 17217, 153, 3, 40, "Text",ExpressionUUID->"55960974-b45e-4932-912a-fa87adf7be3b"],
Cell[CellGroupData[{
Cell[820248, 17224, 2885, 83, 267, "Input",ExpressionUUID->"6e773cbe-8ed6-4a3b-add8-0f787fa44fb3"],
Cell[823136, 17309, 571, 16, 60, "Output",ExpressionUUID->"8b64c615-4d1f-4655-9338-74d2b71b7c69"],
Cell[823710, 17327, 622, 14, 167, "Output",ExpressionUUID->"7e87744b-d0ca-4ff8-88d1-bcb84b2c00de"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[824393, 17348, 158, 3, 66, "Section",ExpressionUUID->"ee0ed6bb-de6a-4801-a075-26d2f2b23a0f"],
Cell[824554, 17353, 247, 4, 39, "Text",ExpressionUUID->"f0b63f11-65eb-45c9-9694-fcc1d605ec20"],
Cell[CellGroupData[{
Cell[824826, 17361, 170, 3, 40, "Subsection",ExpressionUUID->"aec024a6-29c1-4cfa-82dc-8246eab5bbaa"],
Cell[824999, 17366, 247, 7, 66, "Text",ExpressionUUID->"d46f1ed0-1b4c-45ec-a50f-3bd61f178039"],
Cell[CellGroupData[{
Cell[825271, 17377, 281, 7, 52, "Input",ExpressionUUID->"8baf6a37-85f7-47fc-b8a9-67d53df21fbe"],
Cell[825555, 17386, 263, 6, 68, "Output",ExpressionUUID->"63d86f14-e4af-4c80-9e3e-8b3599b56452"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[825867, 17398, 168, 3, 39, "Subsection",ExpressionUUID->"27e05726-1fb8-4ec1-b9ed-af43870fa93d"],
Cell[826038, 17403, 333, 8, 93, "Text",ExpressionUUID->"94e1b776-1c1d-453e-9a69-1d1144de82e9"],
Cell[CellGroupData[{
Cell[826396, 17415, 508, 14, 52, "Input",ExpressionUUID->"b12a398e-91cf-4254-ab6e-fc1b6c10b04b"],
Cell[826907, 17431, 448, 12, 68, "Output",ExpressionUUID->"2c249cc3-5cb3-4ae3-b79e-0f57fbcd473d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827392, 17448, 417, 13, 52, "Input",ExpressionUUID->"f8c0e658-f9ad-4d04-9695-7b012c2ce84f"],
Cell[827812, 17463, 341, 9, 69, "Output",ExpressionUUID->"4bf91f7a-df38-4340-9e1b-008d16491100"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[828202, 17478, 179, 3, 39, "Subsection",ExpressionUUID->"30a2144b-3b46-4288-ab50-fdf6b6b79ad1"],
Cell[828384, 17483, 153, 3, 39, "Text",ExpressionUUID->"0d552b4b-8e88-4644-87e9-ed107471483c"],
Cell[828540, 17488, 433, 13, 77, "Input",ExpressionUUID->"6a9fd571-6b5f-4523-9e0e-0f6cc6a49a2c"],
Cell[828976, 17503, 156, 3, 39, "Text",ExpressionUUID->"0a9724ba-54c2-4ac5-a3ee-bb6ffbad8ada"],
Cell[829135, 17508, 362, 11, 67, "Input",ExpressionUUID->"d7608195-faea-4939-b59a-d7af835ab801"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[829546, 17525, 164, 3, 66, "Section",ExpressionUUID->"4ce47866-355d-4f18-b6cb-04dc5a3961c5"],
Cell[CellGroupData[{
Cell[829735, 17532, 167, 3, 40, "Subsection",ExpressionUUID->"69afad34-eece-4318-b1af-35b67f17c417"],
Cell[829905, 17537, 373, 12, 44, "Text",ExpressionUUID->"c24ce7fc-e6c4-4404-8305-512fc0a659e5"],
Cell[CellGroupData[{
Cell[830303, 17553, 590, 15, 69, "Input",ExpressionUUID->"5c766461-333b-4232-aa0b-86f6aaca4ee7"],
Cell[830896, 17570, 149, 2, 46, "Output",ExpressionUUID->"dfe80a3d-390f-4caf-b605-255bf309ef06"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[831106, 17579, 268, 4, 66, "Section",ExpressionUUID->"5dcb10f0-bfcf-4543-933a-fdab3f42f925"],
Cell[831377, 17585, 214, 4, 40, "Text",ExpressionUUID->"01b03795-c13b-4880-85dd-3f7ee22592c2"],
Cell[831594, 17591, 226, 5, 40, "Text",ExpressionUUID->"0c5a950f-911b-4dd3-8a0c-867753f442d4"],
Cell[CellGroupData[{
Cell[831845, 17600, 1018, 30, 72, "Input",ExpressionUUID->"0abe7862-8d39-4b44-bf83-e4a828465270"],
Cell[832866, 17632, 4884, 98, 317, "Output",ExpressionUUID->"e83edd9d-70a9-4d5e-b8f0-1a0f9a10e8c7"]
}, Open  ]],
Cell[837765, 17733, 183, 3, 40, "Text",ExpressionUUID->"9228385f-95b3-4967-92e2-b1b5cceed024"],
Cell[CellGroupData[{
Cell[837973, 17740, 1960, 56, 69, "Input",ExpressionUUID->"82f84a76-2a42-43a3-a7c3-f6290773a8c4"],
Cell[839936, 17798, 8372, 157, 294, "Output",ExpressionUUID->"78eb78fc-8f9c-4468-b6e0-97452522fdae"]
}, Open  ]],
Cell[848323, 17958, 150, 3, 40, "Text",ExpressionUUID->"56269205-65ff-411f-8eda-3babc32d406a"],
Cell[CellGroupData[{
Cell[848498, 17965, 592, 14, 70, "Input",ExpressionUUID->"1486972d-5f3a-4ba2-a9ae-479f447e98b5"],
Cell[849093, 17981, 203, 3, 46, "Output",ExpressionUUID->"febf7d56-fbd2-4beb-b8ae-5f64aa243d21"],
Cell[849299, 17986, 203, 3, 46, "Output",ExpressionUUID->"af038e62-8411-468e-8af1-68095eb95d86"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[849551, 17995, 364, 6, 66, "Section",ExpressionUUID->"8e946f0c-4a99-43df-9caf-ec4caaffe258"],
Cell[849918, 18003, 4379, 89, 787, "Text",ExpressionUUID->"88dfd089-e917-4e11-8c62-31a8bdf98839"],
Cell[CellGroupData[{
Cell[854322, 18096, 160, 3, 40, "Subsection",ExpressionUUID->"2349c7cc-d807-4570-9dd8-1d7d32ea5206"],
Cell[CellGroupData[{
Cell[854507, 18103, 2092, 56, 192, "Input",ExpressionUUID->"2a45c67a-4c7a-4620-9b44-9facbb1e60b7"],
Cell[856602, 18161, 5915, 184, 226, "Output",ExpressionUUID->"6e345b95-faeb-4dbc-984f-8ab50bb6d11a"]
}, Open  ]],
Cell[862532, 18348, 147, 2, 47, "Input",ExpressionUUID->"900c8458-a4ba-4cc4-b18e-42da0fb1ad4e"],
Cell[862682, 18352, 52246, 1191, 5994, "Input",ExpressionUUID->"737342e9-18f2-4912-8b34-07bfb95fbcfc"],
Cell[914931, 19545, 663, 20, 48, "Input",ExpressionUUID->"0c3983e4-9847-45e3-a1bc-5cc93cb3aee5"],
Cell[915597, 19567, 720, 22, 48, "Input",ExpressionUUID->"06b8f74e-0d7f-427e-8563-76eca513743f"],
Cell[916320, 19591, 474, 15, 71, "Input",ExpressionUUID->"832e49a7-e751-4d83-a458-a54c02122c60"],
Cell[916797, 19608, 422, 12, 69, "Input",ExpressionUUID->"340a0248-090b-4a62-8ee2-20a9ee4eb027"],
Cell[917222, 19622, 1020, 29, 94, "Input",ExpressionUUID->"2ff878ae-46eb-4830-9aba-8987da345e8a"],
Cell[918245, 19653, 600, 16, 71, "Input",ExpressionUUID->"1d12a3bb-2c8d-4862-8d85-6481ffffe226"],
Cell[918848, 19671, 972, 32, 116, "Input",ExpressionUUID->"c9beda45-734e-4161-8c7a-19a899f60b27"],
Cell[919823, 19705, 453149, 7434, 575, "Input",ExpressionUUID->"1cf1ca17-e222-4e28-b74f-606ac4a5b907"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

