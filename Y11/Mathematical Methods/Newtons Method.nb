(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49127,        915]
NotebookOptionsPosition[     47945,        889]
NotebookOutlinePosition[     48350,        905]
CellTagsIndexPosition[     48307,        902]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Running Newton\[CloseCurlyQuote]s method",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.8631431806201096`*^9, 3.863143194838686*^9}, {
  3.8631437449864945`*^9, 3.8631437476223445`*^9}},
 TextAlignment->Center,ExpressionUUID->"0f04145c-faa6-4611-a2d8-5b12d20cce42"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvU1u5ECQZhnTPYteto7Q0BW0aORuVsJse9DQugpdWdCia4DqAQqjG6hW
WuoGOoHyArqA9oJuoDuwLfllWJrMf0hGMBQh6b2FECKd/k+nfXR343/5x//3
v/38D5vN5n/9J/vz3/7h3/6vf/3Xf/j//5//bP/893/5X9f//C//9D/+73/5
//7pn//pX//rP/5HO/g//4/N5p//z83m9+8BAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADgm3F5ebkJXFxcvL29+dnb29t41v49UDaenp5Wj9wKotLZ31iomWzec35+
Xg32/Py8KZifiuUt/l69qlMLzglvJVXg6+vrHertEOxWM4+Pj2dnZ1ac19fX
g2bvO5DuUKtSq1irXqvkI+YKAAAA4MMw+8e0khulZirHs2Y2X11dWYDDWZ6W
hBlgq4smM/O8UDc3NzvEYAZhVBwWYRnGqstMRw9jGmp+/Pf390nIeEOsWBux
FP2QVhYJZ686y+Fa2diTHWrGpdbhxP43obxDXYxH1Q8AAADwtUnzEclUNqv7
oGanjNtDzDTJ0jZ7b2fTzi50TZTkpLAk3DhflIoLk5Tc6nZ+FI+dYD5lZnkw
gXw2skgDHpQdaoaZprUo71BmmgAAAOAbYuaQCaU4YxJnVQ6xdk5oGuvQ0wE3
NzeWym7Xmrlol3u1pOVqDw8PVm87iCbZ8yclmk587oBpo6PwMXcoAAAAwKfA
zCEzrU0CuHVtJr0LhKpo8s0vFxcXetscjXNXXunIEKzff/u3f4vLApPFbqn7
yjdPwvMTL7Fs+4xSOTNi8aT34RZeOTc1NDmJpmkXTyvNwelsRzRZ/J43T0ir
8sq6ipVjefPil2sLrZhuytqPstSWrspof6Po6xSzmp9hSUMoY5qAqE7uuAWu
lrLY5hcqiqY0Merlipkvt0HN7zYWsuyZ1fZ1ona2CGMtxdxatH7jzNlqV+0/
5VmrcGsjK4X99WCpBmI2UkFamU8Ld/3aVlSr3LPqrmlzJQAAAMApINE0bC0W
N/B0thRN2vyi6RuZW7o8bp+RLRSPuCFtMbsQqM4g+Mo6M+e0n0KGlgeI0dpx
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
V1pr6X6MR/zyziiR2n3m8yX2rmqGnVZ/8+7qQ3q5RCSOId6BE63xYeYTp9N1
LR7dy4lYtOrNHp8aZelaFRJpPReG7rg6p1pWH8TSMKVtL3PGqOpTOxbcQ5bX
pudaf+SP7ZgCz3wSxTpXVvuiyZKIw2a6d2L1WqJx2JeXGBXTn1YWgw8O5Z3i
nS0WIWWvKpqqrVztnKUribXuoEh1jJr5sJusc2vTWOcxn52+ZMVUh7SzFqdb
lWodvyQ+GZM5dIj+vAOLRJPlX13OW8RPqRpVtzoV90nZWTuigVpbZctmSumm
XFnteQN5f47VXiWlUu7W92199sNisxS1yDZepVdMhuXBk+5UWpnusK1nqwcr
mm7MNFb0KzChzXEKHKPyTcEaCuyUjwxuzPcDWAH9iP1Q31On7TdBrBkdUUP7
bsd+5VuJLKScdahu45EoItRAGorVr2JVlz3H0rVRSNmwvxqrW0+uTg+f0wPT
nZtuLvnBiHGm3MbKj9F69/Pi278+LGtwU2s+jqjGOk/n8gWpakZ3qCWkdum8
l+i3Qsmh74h+K+t1n57mZUdVy8YKSZsu3YGJLi83AqfSeaPE4nRqOLZ7p0Jm
IsEReS8+uoLktze9H3EmSe4ZfpTzQKupJq0hrImmeWn4k91qzA177yrqqEZ6
7ks4VyMsDbn0lqw1SpTtPvP5IivCfnjH6D/ayrtJRywz1n/cuIpd1CL0POvW
axV/qI0PrSfOzK4bJxTcAIjDS+tmj0+NTukmx5+qodsZV2dWy+qDmNWM2sUf
FhrT+mNU66ntY13a2S0LXyXVgKY8axQtb5aUqDqncusPmplPIuVNDeH3ZmeU
kwGg8Eo9ugWIfozVr7yXpp6jBvIcpiOqc0tL/0plKFiZw7Iv9Vs5dc7kSmKt
OyjRGqMmH3aTdW55K+8aner3JT8l9eQpSicqQtkSZc14/Ov2591YJJqiDTyM
leBlOXvvglu9Qlm12ihHkv4oV3bLy9HrXQwzx4VdNZVNzcyObxvS2KjbPN74
k0l3TMRqmH4F9uO3a1Nyyp6n5beJxz8Z4DL4tHkdGeY1gVsIw/ic7czFCFV+
tBDS3NZQrKxIrZOWTFR7ThL+HYOh1cNnFr9aupSZfm5bYeILtDSiajiNL6Ym
1w+kJNT9Yp3rnu0or34rlBz6jui3srVUKW9jhktzKGYmrSGR/InJlaVLl8yp
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
6yyJuyi7VJC4t8hObcI6wDI5xSkr1LeGKXzctG5HVMOqt1ItJg1i8bi527Hq
LV2laD8s25YZS0gpWlrxSPQ2Zhnz+FU/mzBnV84B6YglYZnXSsJUD5ZJWbxv
Iypj7A9KUdviPMCmK5rUVVSxFszVVqw097+nAEasRkvFakBZkpntYsGu9VPq
8NU8WGw6a5fbD8uSJVS6xZjMSdltEpYZv6TsIUk0eW14EmVPHsYupCawg3ZK
7yLUEJ5/b4t0rbq94pfYl5ZRo1RbzaPy20fpbt6v9ZWK9Jx3qi5Wvt4beORp
pkmRRJ2uHns6mwQBAADgy+CiaXj//ll2VxJNUgpuPrlEcrulKppkWkdLWAHc
Wls00zSMVln55j+JpuSrWUm4FScD0pOzHCZbS5rF/03WrzIQ1YFiiJN0qkyp
tmokJXJ64DHI5m8Fln0Y86AyxiNpxZ1dEiNUa3qpW6IpRpisVvvXzOOYq+Qc
T3NMsVn73vNUjbHhZK57ttV5op1cBogpSgW4crQfsUWqzhgdXegzIKWE6edk
mNHiMYCyGsOXy/PUxLEIVp/JC7ffR+lyNbf/qz6crpXLPv22H/H+st+tVlPO
Y2VG5etHllad9xO7L1Si2P00+1lO3VoR+sMIAAAAwA5E0eSviF0KJdHkS32S
aHJDqyqafNleuirafnOIskj6Ippe5dn4zj/NkujfaLap4G4hW6nj2WTRycZL
+ZdCSSugYoBULSWSDFGkJL8ckZbG6RwxCzlG6HU4P0IVShWr3KalUKoZ9QfZ
0mmFYblzKiJRkNYrxsrX5ckqjlNmVyPxrE/AKWTU5p3qHYpGV7+dn5MyhhIL
HytwUjSpyUpdHN9a+FltqvJeWsam9o39XHOUHnOcG7IfnflBjQzecGq1KKjj
MtSdq87vKcuzZgxb+QEAAABYlyiahq2h5cLHrMpoZfmpJH82tY0GfpVLrcQO
336KWZV97nZdPBu3aEXcikvvxn3PTpyKikknE666MSfpsh1E07C1J313Uoel
okl2bBVZs/NFk294KRsxCjG1QgrQdwQhyzkdjLVa/VJP/J5RVP0R1af3GQs8
aXJvuqJpMidlDB0sY+Wi06ojiDRJmlaWWv8pfaRovahqJsamySa/KTQj7Gd9
KKjuGkukzUTyCbkJ+joq2Z2rTnGqC6GYAAAA4CNJomkoFEd189Ei0ZQ2p+9M
6eoh7suIZ+eYVfHduHblnI8MNY92yYSL2sFJRvVuoml4v/u+893bpaJJ2evM
7i0VTeXetFTMaoC+aKpWUazVaoCY0GbKD4AlLfmQlupVM9MRTZM5KWOoouaW
2JkjmuIkqf21Iugu0K6xJPbd0YRmTsvY4kSVnUpV525J5ty8UX/J78pmOylW
ztvuVnXuFGLT+M41AAAAwIEoRdPw3inEKYsmj9yMtHhWhmXfJPYtHvpyrpda
iimplapoSou7VHZXWzuLpmE7NbB5v6cmsVQ0ySbvCIrdRFO56X6zndE7nGhK
rROXmVmNzTGn3W9Gp5PMEU2dnJQxlKQlcHNEU9z6pL/eky3d5CpQXjiqW5xE
XEfnbh8S7gSjr0b99nkYGcZJMe0vK+dtd6s6v6ek9fCSBwAAAB9GVTQNYU3d
nD1NaZ9+Mn2jk+d9sloVTXEfVtrTVNrzac2b3o37Dne/qrS6U+YlylL8sl3j
HqudRVNMpaU0d9vTVLpq9wwvFU2qruRJIO5jUoWkyuyLJhnnScjEylcPTHI1
7oRSgGSQ26kyxXJmJ9EXTZM5KWNIlN4S5oimmLSfUssm9/VSFl4Vrdjc52FH
bPpd1gowhP1W7p9BHfh6pJr/eHBO1fk95c4AJ1exAgAAAKxCyymWmyWlK7NS
NPW95/k+l2gUPY14HjZLvOclfPNFPCsbT+vuPPPV70NF28z9eKckYjCtg1KK
yUZNO9+Xiqan0a13uqQvmqK+mFQ9Mo/lAFxH9KmpMnBrl1Nalxi/oSPUQ3S5
11IM4PMRnULFnpB8yqmDlS773Cz3XUvRvYmb8Unndpy6D1OiaTInQ9FtqoX1
Fp/jPU9IjUYngarVsnRRNCXveU7pU0XEe8dzO3TR1JJPAKlEpYadWXWliIv3
lHZgJR/veM8DAACAQyC50fJDpbPJyoobz/W79MXt+siv9Q/0yB62U+kFu+is
37NLzKxqfYGl/I6MKyn7K8/YpSiTuRhtRb0bL+1bSTCzx8wgjF+ucQGinSml
H0IXNW6adrYpyZi0qJRPfeyptTyv/EhWOmKR6Eg0YqUK1WoycT0/7vjO8qyG
KC9P399RJacP7iRH096y8sSoDEQvbRHPof19HFHPia4bfGbEPw6Vps9iZ0uy
bhPcGvQ3efk8mtd/+VGkyZyU3SaiDGhrldzB+b/KlVKsvkxIHu/LnjwEBaqa
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
tVpWt9lPNMVmjcSVcvq37yClTCVRzWdZvZaK7+VZKpqinFd+/LMCrc5TLVQ1
bzHFeHtGlIGqDNErEZ8AsjJa27mssAtdJfVz628hEq5xVhFN83NbrvYUqQUB
AADgszB/T5ObH74FRvi75clPI+0smuRgQbM5ZRIriqY0AeQbfDoaoVUbfZ9+
Mws+KXkm63zPGA7qmTAanE7skCld11nDWO1lljQ9JDFV7Q/zRZP96OyxUmbK
RizZXzQpISu1dc7q8ryOaIpbooQVym9kXT5/peWkaNp0pyCrMiTmUO4adA9K
Z8npxJzcKhud7UKriKaluS27aJrpAwAAgM/CfO950X7wXd4ivkkWVetlN9Hk
H97VTvnSwl9RNA01RxBxIVaVam18RtFUttoi0ZT0zqarJob3sx6OGaKXgWSE
ayrQ8vwwEk+lJXPV/jBfNCmhyT377rqhJRYmjeRqPv2IprRc9Sxdnjdsp8yk
NWThu+6QBJi/0rIjmtQWltWO0mx5fZd21opNOazYBB99HqyfW92qHQG4imia
n1td3noncIjPNwAAAMBBiX7bOt9pSi65RLnGzK3lqvWym2iKO24+QDQN7z3O
Ta6/atVG1dNdmcSeosnnwlqW+Zw9TZ1W65diHywnMnQ7ngmrV23GV/3JC5nk
QIyq2h8W7Wmq5q3cx+d3UDXDqv841zNs/Qd28ulHtI0rxbZINMklvnJolZaa
WJt00q3d+pJ1VTSpJ+sekdJMKthOdfY0DaGqk2K1Sks56eRWkqp0YeExrCWa
FuW2rI040wcAAACfC9/VUhokrjKirRVfJic3vC4comXl1+4gmpKRX7Xh1xVN
ck0wv/Y6teFyz60pzV7FgqRJhJQZnwe8bLsc931Y0TKfWZ+i32qdUuyM/L0r
chm61glnilPZ/0mGqJjRTVy1P5SiKbqV2IQ1qL6DJvnTlv2fPlal1Ku59Xhi
7bkb6mFKNG3ez1YsXZ6X0ipR08cw+tRRNXApmuSOz2d/JF2j10FNwrpvPc+b
PIF7GF3lXc6d8i3KrXcMj1kOxvV7H9G0W25LvazO0NKkAAAAcPrIV7AMEt8k
3vpc5mb74Ui9Y4/evdynsVubcRmV7/1J7qzjEZ+CkRiJbgosk/FfN2NcCCjz
Si7qi/jZlJhcSmvYWjUto7FKpzZ8h5SWjel7MX6hrDid8q/AJKPUTW5NrMTN
U9HaT7rGat7zkMpYrZZ+q/VLsQh9HUnfBlXq/nGl+XFKSKYX+L4aygpoGfZP
8errRUPtKzk64t8U9pqxGlPkXnBr1svRT7gbwNrx5HdKctyXcN1ql6jRvW7L
zzYpV/76QuEl1jS/phzehs+WXQaX4yp4cqFv/95ueRrxvMVOpUJ1FqP63acv
gqnTpik/F+BlYX1LmsoSY9ZcWDwSa3tmbqPveu0Cix94kqRKSxPLjuSsmFvd
U6quRWMLAAAAnCCaPojbUvQdyXJVnszFy61r63I1js99xOVAacPL7fjJlXTE
zcsoH2T2+2crFSa+3x62HgA2WzUU51NEmYGE0koZEJoNab2u79eG5VmGk8yq
WJnudltlSd+xdeR0ejOavsmXnYfR+3YdtB+eh2pxqjG0Wm2yFIuQOou1VH77
Zk4k1Y0z/r0qCQrJHNmrqeldNfjHXn1LjkUSG1ofsVWYKOusrjzO9BmmKpYN
j8frNrVOeUcM4ROul6Njdp/riW4ovFBl4/o3fBNR6Xg/TJ2nSnTil+rEud1+
SbbsSCryZeFk3oKlucuWa8R+bv1OjB011czl+DmnVPPVwq6V2351AQAAAHw6
Oh68D70T4aB+6uDbolkqzaYJE4bWmfdcYAkAAAAA35nWl4k2a3tCSCCaYHVM
MVVdspRzJQAAAAAAM4lfXXG0GaHc6L0uiCZYF02bVkXTPmssAQAAAOCbo+0S
0c242Zb6UNShfV5Fjw0YtLA/vqHJ+vP9/b0v0it33gEAAAAAzKf0hnF+fi4H
awdN94OXAsI3QX4b/ENs8vKHJAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACYydvb28PDw/n5+e3t7bHz8nHom7nVj+acIE9PT9fX13wx
CgAAAADgKJh8uLi4MAWBaDpNnp+f9dEoRBMAAAAAwLEwufS1RZO+93TsXOwF
ogkAAAAA4Ih8edF0O3LsXOwFogkAAAAA4Ih8bdH08PDwBUqHaAIAAAAAEGbh
m21sFv7b29v19bWZymdnZ3ZQZzdbXAL4kaenJx15fHz0GG5ubs5G7McwrlIr
4xyCaLJItL/J/nqEQtfaheVZz/Pz8/P5+bmFsR/DuG/Iw19dXaUIy4IrabvE
ErLk4lmL3GK2s3JYEc/2a0xFc6Q7tFrPovIsRU8LdomyrUoz7Hi8PB5JWswq
P5bi9fV1UQydGovXliVSEfxgp54BAAAAAD41ZnKbqSxz3UzuxxGpHpcJ8gkQ
LW1dIgM7xmA/TDu4GW+/0xFJm2GrLMz8tuP22+15D2Cp69Qw+iWQftHZmOLl
iP0249+OWzCpBs31dESTFdbiV2C5aLB//ezFSDqrCplTY1ITSZuoBpSl6GnB
flhuXTxGKZrmepSTGK0kqi6xv8qG1+FkDP0ai9daGGXPyp76j8WQ9CYAAAAA
wBdDFr6Zx276StHEOZFkq1cDuKwYtuZ6PJJWrCmGaIEnd21SUn5WEXp4peg6
RTmxsz5TowhbokmX+1mLxKIy4z/mzadshlFhxczvUGNlmGFUJZauJ1RelSRP
CqB/4/ydKjle0o+hX2PVa5Nosks+u78LAAAAAIBJWpooGeeToikGmDxS3dOk
dWJSIvY7WuPPz89xGVhVlWgtn8+z2I+WaDLL3yVSiZ2Ks07DOM8igdOvkE6N
DQ3RVKqS+ZJHUi7N8sQpuTkxdGpsU+xp0qRelJNxfg0AAAAA4KtyOqJJNrmF
lEipIou9qkrM5pfsilt7qpRyIEZSPauYfSHcKYgmZSnlU0sH4wa0Tgz9Givr
QZdbYP2r5ZcDAAAAAMBX5wRFkwJ3vgNbVSXDOCXUcpgQ6YimUrmkvFVTP4po
ilNvrZz0Yxi6NVatB81kSWHZ2U/xrV4AAAAAgD05NdFkBrmme+J2m8k8p7Py
WtCKoSo3Ysy+Eq/MWzX1I4omX1wXU4nOD/uiyY+XNVYVTdo2pZmpzhJHAAAA
AICvxOmIJrPb3Q6XZ4a0X8a1QF80DaNvB82JVM9KAUUXCopTAkQr1pIYiXk7
EdGklXjJD4P8afhau5miaajVWGs+TsFMN3VULQAAAADAV2KmBIgWssz1JGFi
gB1EU1qSJy8H7vd7GDfgJO95yWhP31pSEtUia7ok+UBw5w+60HfuDFtHEB3J
1hFNbyPDrqIpuqSQw3DPmMKn6R77N+a8H0O/xlqiSZFs3nuE8Cz1d5MBAAAA
AHxGZANHB9rSRHGPvz4ApC8u3YzIGtc0R/qSUfXI7fbDTDqiABanVJK+MRSt
fX2nSca5PucUNY5i828MCQVTGC0e60yFxG+/psg9aZVOnyiKtTFZYxJZ+pSt
F0ph/F8tQYwuxxVtnF9zrw4Wj5x765Lb7cd2JS2lffSl3TQ914+hU2PurrAU
QfLQ3lq5x5o9AAAAAPhiuHYQmryIKJgd16IsM8LNZtZHlDTzUsYwecTjlEkv
eVW6FJAKUAAL6aKmjF/HLYyfki7oFNwi15dhJX/SYjwlrbNW8BjVzBpzkaiY
YwA7qLPObfi8byyUe2mQtFErmPBJ00NqGqnOtKCxH0OrxsrspdrTN4vTQfni
i8oXAAAAAADge1JuNwMAAAAAAADx8PDAdBIAAAAAAEDCNzddXl7i7QEAAAAA
ACDibisuLi7wNA4AAAAAAJCQb71J9xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw
yry+vt7c3JydnfmRt7e3+/v78/Pzp6enI2YMVsda1pr14uLi2BmZwLrfZrN5
fHw8dkb+Ut4mp8DDw8Pl5eXt7e2xM/K9sIHx+vraav7YGfk4PsvQAQD7YIPb
Zh7HyqEZBvYgtuHIHsqHiD8N7PZ4tcJ+q9EeOtij0LqE9cB4C5jJag9HO4Jo
+mJ8Fsvn1ESTDc7lbXJ0TDFdXV1ZlhBNH4mNiiafv9tj9LMMHQCwDza+2ZPO
Hi52yw9byRBVkj0N9dw5Vg5t4FV+DvHgk+0Rj3jxsYfBUSeMR3Sn0ElarH63
Yvfuz6HrsLxNPp6nkfjv6s+Oz9UVU4VU2b9EmnyPR76baAKA74ANp3GsK0WT
OD8///Cs/eFwM00+yxYPMtMEJYimRZgFte4yLatnbsk9Wb1RSk5BNFkeDiqa
Pl1XTBVSskrHuB2JR3iMAsCXpyWavh7SYt+hpLA/iKb5mA2mtYtrRfj8/Gy3
KgbYPqzeKFWOLpqur6/TXbmuaPp0XbGskMQqHePh4aGsZEQTAHx55ogmG2Zt
KJbiuLq6sudIea1GSxtLLZhW+foqO+Pm5sYXwJ+fn5t+iXFaSK0VTFdpTE6b
sCwJjfkWj+dE2L8Wpx1XSPvt0WpVXiLFrAdNzMD1iDJpRUh1ok3Q1WirdahF
j8p2WghtR3TWIozZLuvfLrTas0rwqcDUCqlQS9vR4rd/VYexXcpS21/7HQP0
S7GIWArVZzziwV5fX9VelqIlbYkOoQX9CV5d8GkRqiOp1KnV+qIpdpIYrN8H
hqIprR1TACtRautULarh2IJzyuvbtC0DOquk7bja2v5agI6p2Wp6y7Dfcf2y
y5OGZ741jxxfbngpUlX7ES9ydEqg7RXqge6+w+pKBU/jRtrAPueSIaxhTlTL
HitfNq3ls6xqK7g6pG6fWD+lH5JYXrsw3bDzGyVm0gOrNuLlXj8pQr9NyjxU
yxVHjFaf7FySSLdhfF7Y71jb6UZLt2Grcsqu6DlvDR3uhqKfevXZ4V2ilb3J
zlmtkEinY/jovRlvz06Hifdj6hv67c/69NDUKR9w0uq+khWHO7VFWeryyMy+
N9R8X6hlPXsdCZlayvEBPzWHjwbVgc5T7z9cAGB/JkWTv5iyIU7T+oaPJHGI
sDHEbvkYlT9Z7JLnEf9X44BrGb/x41U+Bnq0m/HBaqnrd1xDqGelRWtnPaGo
TapWt0cVh834QIzDYByFXLjpQaYAnaeAvwD0h6mf0stMO2I/lMk0Dist1UY0
1TxMbIVUXUvbUS3lMcR2iTnxevMA/VLsgD/vos2gB66HkcQbturJU1T+YwbU
Rt6j1EOUeeU81sYwJZq8EdUBYp5VA9USWSZdTnoMsYaVE/UiL6w/RvVGQhlQ
/u1fPUz75bXAvk1b0nKzfRB7hFJPHdFk4dU3hm1njoEnZxyUH91Bek3d7x4p
gLKa7hoPE3132A9ZDqpJ7/N2UCuTY8yxZjyf/UuG7eomDTWWMYWP7Rhx1wTq
nzcjaXwbxhswtoXy7x0p+SGJ5bX47bfst6WNklBJY5dWzu1vLHscCV3stPKg
d1wqiAqu2Fp9snNJlXL+V4OPXWhxPo6ku1vjmN8austa9+xQdMXO0GFpqcY6
qavStPg8DiOxhlvZm9M550yIlx1DA4hGHu/SHau7Op2nnFjZ7ULXlTEnlmfd
NT62d56Yqw93uq02hTeVqC/m971y6NAlXkCdbZXOUolvRTQkelpqd+VThdVd
2RrohhkPFwBYhUnRpHvfl0BrrPM3SH65b0GyAC5VyldAnpYGBBcy8alRfXGU
Mun/ppdsPq6WAaqiaai9a0oZ8DL6mKYhzgNYivq3s1BcA50nEcurh4tHHutn
2Bqom/CSsyxFevFeDTOzHVMMsUQeRgaAMuYx9EuxG6UBEB/3epJGWyg+vzbv
H2fpKZ9iVuW0Eqpe4sIzhpHV1CqOjKV4RBZR7Hil/aMHupJLJnG0q/vlHbYt
4kaIxH58q2CZ74imGL8s55jcpH2eAkwuENoUqqpMopoHvyU1DqgO4xvvyXgm
L1FvSQNLZxOoxofYWDKE3JZWDNFGLXVl616It9jSRilRu/g9pZzHLq23EymJ
mPPUT9zujfHHTpv65OQliZZo0vuuahj7NxZBbdG5bfsNkYYOf1/USj3KE68i
O+ImdD97k51zB9GkPEQD23tsa56lJZpiJ09hpFnicN15Yh5iuBu2z6x4y8Sn
xtK+V2bDLo+RdxzrxRaU3omVc/neZ776mPeZ6kA3+XABgFWYFE2+gk7/6ob1
0cAvr45+HdHUWXO1SDT5mKAXU67dygD7iyavBJ/uKcvVqmevpfT6zifFUlQa
VF2OedI7i6aZ7TgZQ7WM/VLsTF80qXLisz6+t9x0n6rqLdFQ6STUChNFjbCO
0dKJym2qkPiCUXXYerurV6kd1yj98pYBPPWYYufFr91ZMfObhfa5NVM0ISbD
l7mdKZpSPK2WjUc28+RJGh9STpYWR/aYeotsuWSgphmQOV00ZWMH0RQnBGM2
4p0Sz1bz4M8Ciy09F5I/8LJaJi9JtERTDK8w3rd9Mlf42FWNv8xkf+hopd56
XTMUvaufvcnLdxBNGgfSwKU+2RoQOjNNKYzLvauRGD69SIwcYrgbtoNwmqLy
/ry075WpyAN53BTQujCS3n6oxaNSS/OJ5U03+XABgLXoiyYfsUvS5dXFNh8p
mpyn0dlRGeC4oimuqU52frV6L7d7xFLSu4mmpe3Yj6EsXb8UOzNpKPrillJr
bKaeqiLuIVoqmvRm0t/v6YVhqyxpfaCIFlHf2lmqMuZYEb7e8nLK3VbENxXu
NqkR9ynML041iTl5OJxoihbdpjvLXC1OtKXTykORDLaPEU16/+/y1jfOuPmX
Xp7385A2kjg+AJbVMnlJYr5oSqsCSlomemscqw4dM0VTKTxlJE9m7xCiST0t
XVIu/IvMF01+JO2lcqqviQ4x3MWYva1jf17a98pU9LzWHNnMLb2q56h3/KGf
8AdNWTmTDxcAWIu+aGoJjfLyUxBN7mwhbuo5hGhKy/N8g09HI7iBKtJyi9a1
5dndRNPSdlwaQ78UOzPHUNTrwc1o6cW3c5upp6oWGklw7bA8T+g5q+e+BejM
rCXbKeZzcyTRNLzfuazV+J0kVNVW5LifaGb2hu22KQtpt+ennmlK0zG6/fvb
B8rixP5Qva1mzlCkVDb7iaZha0LLqtQWifORYbvzPQbu5+EyLNWuUm3lRV8L
XSqadHbRsuEyk52hY1I0xS1Rwsrr9vBk9g4hmso7YigkT2IH0bRZsvDgcKJJ
z27V/9P4Td6Y6NIv1ZapPG1d66SlelX0ni1tjFULdobi1rOp83ABgLX4MqLJ
/QJpPCwDrCiahpojiLjiuorvfhVuaXcq8DRFUzmeLxJNscv1r5pjKA7bffGb
sKNtmHqqage3my67Lc8btm+GZfP0vyymy8vFEn5568EX89OxhfrlLQOkUshU
7tgMeqne2lMwaeSkpYCfWjTpBYh7LVPN9D8qVxYnzjjoLkijR5qS+DDRpDdO
lpxmUoawbUd6OQbu50GdqmP+ldUyeUliqWiSZlm0bDhlsj90TIqm4f3OmrQ0
bjJ7hxNNaS2ZCtJ6FbCDaDrbutWdw0GHO99AlHxULu17nVS0hnMzJc+rxZQ5
0bmw9WzqPFwAYC36oqnqXK56+dFFk6/50ZEywLqiaXjvcS4Nvx18DYAir3q6
c/zsnqJpaTtWU/Ej5XjeL8XOzBRNIi1R2HSfqvYoKX1c7CCahm2Dpj07Je4A
Kh6MkxRPDX8CMmaUerJh7HI3qvvlLQOUVFfpCJl2nS1jffu89CfwqUXTsF23
dlZ4759fHI0eGjRU88lqjQE6uUqpbPYWTcNoVWoL21PwXWaZLHt4Pw+6Jcud
Ha1OO+eSxFLR5KVLtnHHU1zKZH/omCOatCJCr/jKzwr0s3cI0aQ6Tya3hvRW
tewgmtTJS9f9nefRgYY7b5E9+14/lXI6vpWN6oWlAuq8cZp8uADAWvRF0xDE
SLz70qKR1uDwkaIpHqlqhHVFk77HMV2/W6K94W5j9a87WIgLftzvtE6l9Rup
FL6lSFmqSphF7VhNxeVeLLg/8Tul2BnlypNwL9yyJJ9Gj7sxfOppsc5VRXEz
RXzE7Lw8bwhLxye/i3FZuBqTGHHDOE6VCvut8L7ZIVZv9FvbL28ZQCVKXyyq
FtDLHl1+bdqCpXx78PR+S/iw0Hueu4fahPfAqvbS62ayNg8hmsrvrE1SVr5W
Kup3VS/ry1mTuUqpbBqiSXXYslETpS/lNGTNzIN32nihfGV74FQtk5ckYrX4
sLDpyhaNY/He0TdxWrWRumJ/6JhMPd22Jf3sLRJNrVRSxyg9+CkbnUmKWEz5
PBymRJPv94kztpfFV708V6sPd53I0/GZfa8scupFlyPVCzV8pRw+jQzhQeCV
I6/+Hm050E0+XCy8TKNWWQBgEt8EVI4Vjn9/x29JC+Z3os+2RKcxju/i0XqD
qGXiNwiEX56uKoOV8QzBaLfsPQVfENHk9jCWfx/wy6hSBmIZFaB8cz7JZvtl
HFn+cT2P75DS8ictNvMLXc7oA1Vxs6qH8dFerRA3T0Ujc2Y7ttolVqC6ysPI
nFLshj9Z9D1fvRtUTdoRPZT12SlVVKxV30evheu+hPJ23KKrePRA1CTRZvsJ
5iGos+QZb9N4cadJh8nnkX/Vxd8YJE9ZrlVlUSc/wN4TLLflI7JfXo85GgCq
MXV7DQUtM0OXK7B/eEj/Rv9vt6NrtVI8es+xXMkru1dvS1b7N6qsLGpTfx9u
mbGEvItaAKtYX52bep1/N8dzomCermve1HM6l7iz/dsRDTj9ySYlobZ4236D
Mtmom62ZpABpuiF1v7fiM15eEM9J2Shlr65SOnKsejObkwcfFsouXe2T/UtK
3EWYO8x3DwZee+lrU3GEvBy3sfRXVqeu2B86JlP3DN9ucVN5TvYmO2dZISVl
x9BVrkq0e7EjFnxZ8tN2m1v6lJJXRezG/vCqjmCJ1Ye7iL46Vx5f1PfKoUMd
I4r31iq70pm57nqf2z3bfkb8ctw95/ZVa6CbfLjw5SaAPYlzTJHqu/Tyw9zV
GOJVLltEGbh6eXlVnPXoZFiriP3jDv4x97i9/Wm7SdMfamVUKQMJvTiqVt3Z
9ou91dqWm4LLraPv9IyOXyGP75e8nr0s0bVODOOLqC1M8mW3QzsmPAbf/LKp
LSzpl2I39Pg+Gz/OPozdw58sT+P3E90pk52KtermjWpbTe8Ky78aqav8pahe
xZct3qoQz+TMh1FsgrICvVCbrQFQJqRs+6cP55Q3tW+cXvQ1Zpv3LzZL/Dtf
ulwX+kNZj/JqnoX3T6WiLFmcrRR1/6ZiJmeJ6hWtJhtqd3cKlmqmHGqqMcdX
CpG+ly1rl+rd51hmfAt5aouUh8mC3G49xaVGSRvTOqQ35Lrx45E5lelN6Z22
nNqOGXaql3Syutn2qzR6tzpGfPs0uboydcXO0NFPfTOOG/6Z5kR869jKXrqk
VbpYIdUSVe9WH73n1MmwbUFVQtmaqSriVe63Z9JPwrrDXUQSuJrozL5X7e1S
NzpS5jmWq+wAMZ4hOK6Mo0Grxf2SzsOl/MAEAMDH0PHgfeh9l61FhnBENP1x
7FzAB+HvhPUyX/T1SGnhwLdFnUcTpsIMeNn8x84aAADA+nReFh00XUTTqaHX
tsfOBXwQWj1VfYevhYLVqxBNIEwxVScg7CCiCQAAvh7VmW4znrX+/KBJI5pO
BN/+rK0Bx84OfBB6W1KKJk0/VS8p/WbA90RLFKqiaa31zAAAACeF76mMrmm0
9P3Q9nPcTzHTyTkcAq3Mv1z+PUT41OgG1HYqu9m1SM9+t/yADbUd8fA98Q1N
9uyQ/xAt0it3uQIAAHwN5Ew77nU1i+gDNraUTirYSnMsJndbw1fFbjp53/I9
152FVaVzgI/MKpwa+mSwu6/R97AYQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjX/G+zAYIg=
    "], {{0, 182.5}, {563.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{563.5, 182.5},
  PlotRange->{{0, 563.5}, {
    0, 182.5}}]], \
"Input",ExpressionUUID->"dd4c2d03-d352-499a-b706-a97216540a66"]], "Text",
 CellChangeTimes->{
  3.8631433949410844`*^9, {3.863143553106326*^9, 
   3.8631435540272737`*^9}},ExpressionUUID->"833ae18b-9291-483a-849e-\
80ff978876f0"],

Cell[TextData[StyleBox["Input:",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.8631437901278334`*^9, 3.863143792284128*^9}, {
  3.8631443041283894`*^9, 
  3.8631443078454704`*^9}},ExpressionUUID->"436c3aaf-041d-48e7-a042-\
5877fc788204"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"f", ",", "x", ",", "nit"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "3"}], "-", 
    RowBox[{"2", "x"}], "+", "2"}]}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{"Insert", " ", "the", " ", "function", " ", "f", 
    RowBox[{"(", "x", ")"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], ":=", 
   RowBox[{"-", "10"}]}], "                ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Insert", " ", "the", " ", "value", " ", "of", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "initial", 
     " ", "guess", " ", 
     SubscriptBox["x", "0"], " ", "for", " ", "the", " ", "solution", " ", 
     "to", " ", "f", 
     RowBox[{"(", "x", ")"}]}], "=", "0"}], " ", "*)"}]}], "\n", 
 RowBox[{"nit", ":=", "10", "                 ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "nit", " ", "is", " ", "the", " ", "number", " ", "of", " ", 
    "iterations"}], " ", "*)"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWHj+7SYE28c78yTygPRfYaKC0H0pBVKi0C0nbHg
GhDNclcZTM+IstsCojX+R4BprtWXdoLoLad/HAPRfjpPToNo345D50D0v0Pn
7oHFNZyegmiZ26UvwXTx0fcgWoLX9y+I5jjn8g9E88R5n4gD0v8/PTsHov9c
+30ZRDf5BFwD0dscr8ZfYH7r+K3nCZhumD7v3D8gLSL9A0xrnD55CUQXzDa4
CqJPb5v9CETnn1r3DKxuZ9VHEL1qcg+Y3vLDl4uB5a1j3vdCMN236KEGiN55
0EgbRDe0fTEA0U9kRA1BNACG06aA
  "],
 CellLabel->
  "In[973]:=",ExpressionUUID->"3f5b94d0-6191-41fe-8a53-18449177508a"],

Cell[TextData[StyleBox["Algorithm:",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.843241099997352*^9, 
  3.843241103812645*^9}},ExpressionUUID->"bdfb90ed-ca5f-4e39-a7d7-\
66e18c4b853e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "=", 
     RowBox[{
      RowBox[{"x", "[", "n", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x", "[", "n", "]"}]}]}], ")"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nit"}], "}"}]}], "]"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
     RowBox[{"x", "[", "n", "]"}], " ", "represents", " ", 
     RowBox[{
      SubscriptBox["x", "n"], ".", " ", 
      RowBox[{"x", "[", "0", "]"}]}], " ", "is", " ", "the", " ", "value", 
     " ", "of", " ", 
     SubscriptBox["x", "0"]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Approximate solution to \>\"", ",", 
       RowBox[{"f", "[", "x", "]"}], ",", "\"\<= 0 after \>\"", ",", " ", 
       "nit", " ", ",", "\"\< iterations is \>\"", ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"x", "[", "nit", "]"}], ",", "5"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"FontColor", "\[Rule]", "Blue"}]}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Value", " ", "of", " ", 
     SubscriptBox["x", 
      RowBox[{"n", "+", "1"}]], " ", "after", " ", "n"}], "=", 
    RowBox[{"nit", " ", "iterations"}]}], " ", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8314029144332685`*^9, 3.8314030318180394`*^9}, {
   3.842997643701959*^9, 3.842997644488454*^9}, {3.8432410535487213`*^9, 
   3.843241053908012*^9}, {3.8454170760925875`*^9, 3.845417145899104*^9}, {
   3.845417469842822*^9, 3.8454174815495176`*^9}, {3.8631438477987614`*^9, 
   3.8631438655589323`*^9}, {3.863144010696789*^9, 3.863144028741016*^9}, {
   3.863144063120412*^9, 3.8631441194876733`*^9}, {3.8631441739593344`*^9, 
   3.8631441780351763`*^9}, 3.8631442185015807`*^9, {3.863144338670644*^9, 
   3.8631444068852396`*^9}, {3.863144451938775*^9, 3.8631444684282427`*^9}, {
   3.863144499901482*^9, 3.86314450089062*^9}, {3.863144533755191*^9, 
   3.863144595050063*^9}, {3.8631446280753975`*^9, 3.863144746398164*^9}, {
   3.8631448216701617`*^9, 3.8631448532644043`*^9}, {3.86314490447285*^9, 
   3.863144904735837*^9}, {3.8631450946110306`*^9, 3.8631451130224905`*^9}, {
   3.8631451480553665`*^9, 3.863145157388832*^9}, {3.8631452079077506`*^9, 
   3.8631452595539074`*^9}, {3.8631459152977705`*^9, 3.863145916094901*^9}, {
   3.8631460375124836`*^9, 3.8631461187969356`*^9}, {3.8631462043685455`*^9, 
   3.863146225397582*^9}, {3.863146277738947*^9, 3.863146279164466*^9}, {
   3.863146325776998*^9, 3.863146328816246*^9}, {3.86314636142603*^9, 
   3.863146367817752*^9}, {3.8631464040363703`*^9, 3.863146406996805*^9}, {
   3.8631468037504826`*^9, 3.8631468046072598`*^9}, {3.863148143541494*^9, 
   3.8631481695893984`*^9}, {3.8631482287361507`*^9, 
   3.8631482717174206`*^9}, {3.863148597449272*^9, 3.8631486037164617`*^9}, {
   3.8727231001992393`*^9, 3.872723125266147*^9}},
 CellLabel->
  "In[977]:=",ExpressionUUID->"d97ce894-06b1-4016-ba27-9b5480537171"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"Approximate solution to \"", 
    RowBox[{"2", "-", 
      RowBox[{"2", " ", "x"}], "+", 
      SuperscriptBox["x", "3"]}], "\"= 0 after \"", "10", 
    "\" iterations is \"", 
    RowBox[{"-", "1.7692923542386314152`5."}]},
   "RowDefault"],
  StripOnInput->False,
  FontColor->RGBColor[0, 0, 1]]], "Output",
 CellChangeTimes->{
  3.8631463688942127`*^9, 3.8631464082089486`*^9, 3.8631468072745967`*^9, {
   3.8631481040205383`*^9, 3.8631481989001265`*^9}, 3.8631482754686246`*^9, {
   3.863148606089651*^9, 3.8631486125780716`*^9}, {3.8727231096154356`*^9, 
   3.872723126529812*^9}, {3.894313717638199*^9, 3.894313733661558*^9}, {
   3.8944088352048807`*^9, 3.894408878759595*^9}, {3.8944089852154574`*^9, 
   3.894409018807704*^9}, 3.8944091050612764`*^9, 3.894411010088255*^9, 
   3.894411357979415*^9, {3.8944115958520985`*^9, 3.8944116132125072`*^9}, 
   3.8944116668933277`*^9, 3.8944253429004383`*^9},
 CellLabel->
  "Out[978]=",ExpressionUUID->"5a756199-c5f5-4e33-9737-2b275cb52495"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Dist1", "]"}], "\n", 
 RowBox[{
  RowBox[{"Dist1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"x", "[", "n", "]"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "n", "]"}], "-", 
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"x", "[", "n", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "nit"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Difference", " ", "between", " ", "successive", " ", "solutions", " ", 
     "is", " ", 
     RowBox[{"x", "[", "n", "]"}]}], "-", 
    RowBox[{"x", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}], " ", "*)"}], "\n", 
  RowBox[{"Grid", "[", 
   RowBox[{"Prepend", "[", 
    RowBox[{"Dist1", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Iteration\>\"", ",", "\"\<   Approximate solution\>\"", ",", 
       "\"\<   Difference between successive solutions\>\"", ",", 
       "\"\<  f(x)\>\""}], "}"}]}], "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.8890314395384617`*^9, 3.88903158265167*^9}, {
   3.889031618881836*^9, 3.8890316235683775`*^9}, 3.8890316551553416`*^9, {
   3.889031797769678*^9, 3.8890317981634226`*^9}, {3.8890318453349934`*^9, 
   3.8890318459582577`*^9}, {3.889031882185519*^9, 3.8890319457151213`*^9}, {
   3.889032452785136*^9, 3.8890324545687375`*^9}, {3.894394671783004*^9, 
   3.894394767531091*^9}, {3.8944253078787746`*^9, 3.894425359678769*^9}, {
   3.8944254493578753`*^9, 3.8944254762955046`*^9}},
 CellLabel->
  "In[985]:=",ExpressionUUID->"01fe750b-acfa-45f3-984d-56ac2f93023b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Iteration\"\>", "\<\"   Approximate solution\"\>", "\<\"   \
Difference between successive solutions\"\>", "\<\"  f(x)\"\>"},
    {"1.`", 
     RowBox[{"-", "6.718120805369128`"}], "3.2818791946308723`", 
     RowBox[{"-", "287.77369330663805`"}]},
    {"2.`", 
     RowBox[{"-", "4.560887685478679`"}], "2.157233119890448`", 
     RowBox[{"-", "83.75242593969229`"}]},
    {"3.`", 
     RowBox[{"-", "3.1743749475950542`"}], "1.386512737883625`", 
     RowBox[{"-", "23.638335444193967`"}]},
    {"4.`", 
     RowBox[{"-", "2.3370259760805725`"}], "0.8373489715144818`", 
     RowBox[{"-", "6.090060416038779`"}]},
    {"5.`", 
     RowBox[{"-", "1.9136662085122296`"}], "0.42335976756834276`", 
     RowBox[{"-", "1.1807397354899754`"}]},
    {"6.`", 
     RowBox[{"-", "1.7822736999896998`"}], "0.1313925085225301`", 
     RowBox[{"-", "0.09684419117724088`"}]},
    {"7.`", 
     RowBox[{"-", "1.7694117292264175`"}], "0.012861970763281777`", 
     RowBox[{"-", "0.0008823984158099459`"}]},
    {"8.`", 
     RowBox[{"-", "1.7692923644710539`"}], "0.00011936475536389324`", 
     RowBox[{"-", "7.562974135954849`*^-8"}]},
    {"9.`", 
     RowBox[{"-", "1.7692923542386314`"}], "1.0232422392604907`*^-8", 
     RowBox[{"-", "5.557478305594442`*^-16"}]},
    {"10.`", 
     RowBox[{"-", "1.7692923542386314`"}], "7.519061320859769`*^-17", 
     RowBox[{"-", "3.0008764052637347`*^-32"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.894313717665373*^9, 3.894313733672529*^9}, {
   3.89439470363474*^9, 3.8943947324344883`*^9}, 3.8943947693274155`*^9, {
   3.894408835273902*^9, 3.894408878784074*^9}, {3.894408985247011*^9, 
   3.8944090188272166`*^9}, 3.894409105082367*^9, 3.8944110101618967`*^9, 
   3.8944113580101805`*^9, {3.894411595924035*^9, 3.894411613244341*^9}, 
   3.8944116669540954`*^9, {3.8944253429471374`*^9, 3.894425363315383*^9}, 
   3.89442548308315*^9},
 CellLabel->
  "Out[986]=",ExpressionUUID->"473edeba-574e-430a-b286-de193fcf1db9"]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1a483d6e-5b40-4df7-beed-b27347f58947"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 343, 6, 38, "Text",ExpressionUUID->"0f04145c-faa6-4611-a2d8-5b12d20cce42"],
Cell[904, 28, 36631, 607, 197, "Text",ExpressionUUID->"833ae18b-9291-483a-849e-80ff978876f0"],
Cell[37538, 637, 254, 5, 35, "Text",ExpressionUUID->"436c3aaf-041d-48e7-a042-5877fc788204"],
Cell[37795, 644, 1582, 40, 103, "Code",ExpressionUUID->"3f5b94d0-6191-41fe-8a53-18449177508a"],
Cell[39380, 686, 203, 4, 35, "Text",ExpressionUUID->"bdfb90ed-ca5f-4e39-a7d7-66e18c4b853e"],
Cell[CellGroupData[{
Cell[39608, 694, 3394, 73, 86, "Code",ExpressionUUID->"d97ce894-06b1-4016-ba27-9b5480537171"],
Cell[43005, 769, 1036, 21, 32, "Output",ExpressionUUID->"5a756199-c5f5-4e33-9737-2b275cb52495"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44078, 795, 1743, 43, 86, "Code",ExpressionUUID->"01fe750b-acfa-45f3-984d-56ac2f93023b"],
Cell[45824, 840, 2105, 46, 208, "Output",ExpressionUUID->"473edeba-574e-430a-b286-de193fcf1db9"]
}, Open  ]]
}
]
*)

